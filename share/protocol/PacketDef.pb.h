// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PacketDef.proto

#ifndef PROTOBUF_PacketDef_2eproto__INCLUDED
#define PROTOBUF_PacketDef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace TgsProtocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PacketDef_2eproto();
void protobuf_AssignDesc_PacketDef_2eproto();
void protobuf_ShutdownFile_PacketDef_2eproto();

class NotFinQuest;
class DbQuest;
class CoinInfo;
class ItemInfo;
class SeedSource;
class DBGodEquip;
class DbBagInfo;
class DBEvaluation;
class DBEvaluationList;
class DBChapterRewardList;
class DBHeroEquip;
class DBEquipNew;
class DBEquipNewList;
class DBHeroInfo;
class DBHeroList;
class DBEssenceItem;
class DBEssenceList;
class ItemUseRestrict;
class DBShopGoods;
class DBGoodsList;
class DBShopList;
class DBShopRefresh;
class DBShopRefreshList;
class DBFestivityInfo;
class DBFestivityList;
class ClientSource;
class DBMailInfo;
class DBArenaHero;
class DBArenaPlayer;
class DBArenaRank;
class DBArenaLog;
class DBArenaLogList;
class DBFriendInfo;
class DBFriendList;
class ShopInfo;
class GoodsData;
class GoodsDataList;
class ClientQuest;
class TEvaluation;
class HeroEquipInfo;
class HeroEquipNew;
class Property;
class WakeAttr;
class Diagram;
class DiagramChapter;
class DiagramChapterMap;
class DiagramMap;
class GhostDetail;
class Ghost;
class GhostList;
class EpicBoss;
class EpicBossList;
class OnlineRewards;
class TreeState;
class RetrieveState;
class PassWordState;
class ClientHeroInfo;
class ClientInstanceEvaluation;
class ClientFestivityInfo;
class OtherUserInfo;
class OtherUserInfoClient;
class DBPlayerActivity;
class DBPlayerActivityList;
class ChapterMapBox;
class DBChapterBox;
class DBChapterBoxList;
class ClientFriendInfo;
class ClientBattleHero;
class GuildSkill;
class ClientBattlePlayer;
class ClientRaidTeamHeroInfo;
class ClientRaidTeamInfo;
class TodayTime;
class SourceList;
class ClientMonthCard;
class ClientItemLimit;
class LString;
class IntList;
class ClientActivity;
class HalfBuyElement;
class HalfBuy;
class AchieveElement;
class Achieve;
class ClientRank;
class ClientRankList;
class ClientHeroRank;
class ClientAchieve;
class ActionRecord;
class GuildInfo;
class ClientGuildInfo;
class ClientGuildMember;
class ClientGuildRitual;
class ClientGuildTechnology;
class ClientGuildState;
class ClientGuildWarMsg;
class ClientGuildWarEndMsg;
class MonthCardEle;
class DbMonthCard;
class PrizeInfo;
class PrizeInfoList;
class GuildMapInfo;
class GuildMapMonster;
class GuildMapItem;
class GuildMapReward;
class DBGuildMap;
class GuildNewMapInfo;
class GuildChapterMap;
class GuildChapterInfo;
class GuildTerritoryEvent;
class GuildTerritoryEventUpdate;
class GuildTerritoryChapter;
class GuildTerritoryInfo;
class GuildMemberTerritoryInfo;
class PlayerTerritoryEvent;
class PlayerTerritoryChapter;
class TerritorySkill;
class PlayerTerritoryInfo;
class FriendTerritoryInfo;
class ClientNoticeInfo;
class DbTreasureInfo;
class DbDropEle;
class DbDrop;
class RobotEffect;
class ClientChargeShopConf;
class ClientSevenDayRankEle;
class ClientSevenDayRank;
class DbNoticeEle;
class OptGlobal;
class ClientContinueCharge;
class DbHandBookEle;
class DbHandBook;
class ClientHandBook;
class PlayerTurntableData;
class GlobalGoodsConf;
class ServerWarConf;
class STeamWinProperty;
class ServerTeamConf;
class ClientServerWarPlayer;
class TombImp;
class ServerTeamBattle;
class ClientServerTeamPlayer;
class ServerTeamPos;
class ClientServerTeamFightTurn;
class ClientServerTeamBattleResult;
class SecretHole;
class DBSecretHole;
class AuctionInfo;
class AuctionConfig;
class AuctionRecords;
class AuctionRoleInfo;
class AuctionRoleMap;
class AuctionSerialize;
class ReturnTask;
class DBReturnTask;
class RefineEquipImp;
class PlayerRankData;
class ServerCompareInfo;
class ServerCompareGot;
class CenterRankInfo;
class SeedInfo;
class GroundInfo;
class FarmNoticeInfo;
class FarmWell;
class FarmInfo;
class MonthCardPrize;
class FarmDB;
class SeedBag;

enum PacketDef {
  CLIENT2DIR_LOGIN_REQ = 1234567,
  DIR2CLIENT_LOGIN_RET = 7654321,
  CLIENT2LOBBY_LOGIN_REQ = 100000,
  CLIENT2LOBBY_LOGIN_TOKEN_REQ = 100001,
  CLIENT2LOBBY_CREATE_CHAR_REQ = 100002,
  CLIENT2LOBBY_CHANGEFO_RMATION_REQ = 100005,
  CLIENT2LOBBY_CHANGENAME_REQ = 100006,
  CLIENT2LOBBY_BUY_COPPER_REQ = 100007,
  CLIENT2LOBBY_CHANGEPHOTO_REQ = 100008,
  CLIENT2LOBBY_SYN_ITEM_REQ = 100009,
  CLIENT2LOBBY_SALE_ITEM_REQ = 100010,
  CLIENT2LOBBY_TICK = 100011,
  CLIENT2LOBBY_SIGNIN_REQ = 100013,
  CLIENT2LOBBY_GET_VIPSIGNIN_REWARD_REQ = 100014,
  CLIENT2LOBBY_AUTH_TOEKN_REQ = 100015,
  CLIENT2LOBBY_CHANGEFO_RAISE_REQ = 100016,
  CLIENT2LOBBY_PROGRESS_REQ = 100017,
  CLIENT2LOBBY_AUTH_TOEKN2_REQ = 100018,
  CLIENT2LOBBY_RESOLVEREQ = 100019,
  CLIENT2LOBBY_RESOLVELOOK_REQ = 100020,
  CLIENT2LOBBY_MONTHSIGNIN_REQ = 100023,
  LOBBY2CLIENT_MONTHSIGNIN_RET = 100024,
  CLIENT2LOBBY_AUTH_QUEUE_REQ = 100025,
  LOBBY2CLIENT_AUTH_QUEUE_RET = 100026,
  CLIENT2LOBBY_CHAT_INFO_NTF = 100100,
  CLIENT2LOBBY_GETCHATRECORD_REQ = 100021,
  CLIENT2LOBBY_HERO_DEIFICATION_REQ = 100022,
  CLIENT2LOBBY_HERO_FORCE_REQ = 100101,
  CLIENT2LOBBY_HERO_EVOLUTION_REQ = 100102,
  CLIENT2LOBBY_EQUIP_FORCE_REQ = 100103,
  CLIENT2LOBBY_SACRIFICE_REQ = 100104,
  CLIENT2LOBBY_SALEHERO_REQ = 100105,
  CLIENT2LOBBY_OPEN_BOX_REQ = 100106,
  CLIENT2LOBBY_HEROSKILLUPGRADE_REQ = 100107,
  CLIENT2LOBBY_GETOPENBOXINFO_REQ = 100108,
  CLIENT2LOBBY_SKILLINFO_REQ = 100109,
  CLIENT2LOBBY_BUY_SKILLPOINT_REQ = 100110,
  CLIENT2LOBBY_USE_EXPITEM_REQ = 100111,
  CLIENT2LOBBY_HERO_AWAKE_REQ = 100112,
  CLIENT2LOBBY_HEROUPWINGS_REQ = 100113,
  LOBBY2CLIENT_HEROUPWINGS_RET = 100114,
  CLIENT2LOBBY_GETASTROLOGYHERO_REQ = 100115,
  LOBBY2CLIENT_GETASTROLOGYHERO_RET = 100116,
  CLIENT2LOBBY_MOVE_ITEM_REQ = 100200,
  CLIENT2LOBBY_LOAD_BAG_REQ = 100201,
  CLIENT2LOBBY_OPEN_BAG_REQ = 100202,
  CLIENT2LOBBY_USE_PROP_REQ = 100203,
  CLIENT2LOBBY_GETSHOPINFO_REQ = 100204,
  CLIENT2LOBBY_BUYGOODS_REQ = 100205,
  CLIENT2LOBBY_REFRESHSHOP_REQ = 100206,
  CLIENT2LOBBY_COMMIT_QUEST_REQ = 100300,
  CLIENT2LOBBY_ACCEPT_QUEST_NTF = 100301,
  CLIENT2LOBBY_NPC_TALK_REQ = 100302,
  CLIENT2LOBBY_GIVEUP_QUEST_REQ = 100303,
  CLIENT2LOBBY_COMMIT_QUEST_ALL_REQ = 100304,
  CLIENT2LOBBY_CHALLENGE_INSTANCE_REQ = 100500,
  CLIENT2LOBBY_CHALLENGE_RESULT = 100501,
  CLIENT2LOBBY_KILL_MONSTER_NTF = 100502,
  CLIENT2LOBBY_FLOP_REQ = 100503,
  CLIENT2LOBBY_GET_CHAPTERREWARD_REQ = 100504,
  CLIENT2LOBBY_REVIVE_REQ = 100505,
  CLIENT2LOBBY_RESETEVALUATIONTIMES_REQ = 100506,
  CLIENT2LOBBY_READMAIL_REQ = 100600,
  CLIENT2LOBBY_DELMAIL_REQ = 100601,
  LOBBY2CLIENT_DELMAIL_RET = 100602,
  CLIENT2LOBBY_EXPEDITION_RESULT = 100611,
  CLIENT2LOBBY_RESET_EXPEDITION_REQ = 100613,
  CLIENT2LOBBY_GET_ARENAINFO_REQ = 100614,
  CLIENT2LOBBY_CHALLENGE_ARENA_REQ = 100615,
  CLIENT2LOBBY_CHALLENGE_ARENA_RESULT = 100616,
  CLIENT2LOBBY_RESET_ARENA_REQ = 100617,
  CLIENT2LOBBY_CHANGE_ARENA_DEFENCE_REQ = 100618,
  CLIENT2LOBBY_ARENAFASTFIGHT_REQ = 100608,
  CLIENT2LOBBY_GET_FRIENDINFO_REQ = 100620,
  CLIENT2LOBBY_ADD_FRIEND_REQ = 100621,
  CLIENT2LOBBY_DEL_FRIEND_REQ = 100622,
  CLIENT2LOBBY_OP_APPLYLIST_REQ = 100623,
  CLIENT2LOBBY_ADD_BLACKLIST_REQ = 100624,
  CLIENT2LOBBY_ENERGYONCE_REQ = 100625,
  CLIENT2LOBBY_ENERGYALL_REQ = 100626,
  CLIENT2LOBBY_GET_TARGET_FRIENDINFO_REQ = 100627,
  CLIENT2LOBBY_EQUIP_REQ = 100631,
  CLIENT2LOBBY_UNEQUIP_REQ = 100632,
  CLIENT2LOBBY_STRENG_EQUIP_REQ = 100633,
  CLIENT2LOBBY_REFINE_EQUIP_REQ = 100634,
  CLIENT2LOBBY_SALE_EQUIP_REQ = 100635,
  CLIENT2LOBBY_SHOP_BUY_GOODS_REQ = 100636,
  CLIENT2LOBBY_STRENG_TREASURE_REQ = 100637,
  CLIENT2LOBBY_REFINE_TREASURE_REQ = 100638,
  CLIENT2LOBBY_CHANGEEQUIP_REQ = 100639,
  CLIENT2LOBBY_GETACTIVITYDATA_REQ = 100640,
  CLIENT2LOBBY_GETACTIVITYREWARD_REQ = 100641,
  CLIENT2LOBBY_BUYREBATE_REQ = 100643,
  CLIENT2LOBBY_GETRANKDATA_REQ = 100650,
  CLIENT2LOBBY_GETRANKFIVEHERO_REQ = 100651,
  CLIENT2LOBBY_GETRANKWEAPON_REQ = 100652,
  CLIENT2LOBBY_GETRANKHERO_REQ = 100653,
  CLIENT2LOBBY_GETACHIEVE_REQ = 100660,
  CLIENT2LOBBY_GETACHIEVEREWARD_REQ = 100661,
  CLIENT2LOBBY_GETNEARBYPLAYERS_REQ = 100666,
  CLIENT2LOBBY_PUTFASHION_REQ = 100670,
  CLIENT2LOBBY_EVOLVEEQUIP_REQ = 100680,
  LOBBY2CLIENT_EVOLVEEQUIP_RET = 100681,
  CLIENT2LOBBY_AWAKEEQUIP_REQ = 100682,
  LOBBY2CLIENT_AWAKEEQUIP_RET = 100683,
  LOBBY2CLIENT_LOGIN_FAILED = 200000,
  LOBBY2CLIENT_CREATE_CHARACTER_CMD = 200001,
  LOBBY2CLIENT_CREATE_CHAR_FAILED = 200002,
  LOBBY2CLIENT_CHARACTER_INFO_NTF = 200003,
  LOBBY2CLIENT_CHAR_BASEINFO_UPDATE = 200004,
  LOBBY2CLIENT_CHANGE_FORMATION_RET = 200005,
  LOBBY2CLIENT_CHANGENAME_RET = 200006,
  LOBBY2CLIENT_BUY_COPPER_RET = 200007,
  LOBBY2CLIENT_CHANGEPHOTO_RET = 200008,
  LOBBY2CLIENT_SYN_ITEM_RET = 200009,
  LOBBY2CLIENT_SALE_ITEM_RET = 200010,
  LOBBY2CLIENT_HEROINFO_UPDATE = 200011,
  LOBBY2CLIENT_KICK_NTF = 200012,
  LOBBY2CLIENT_SIGNIN_INFO_NTF = 200013,
  LOBBY2CLIENT_SIGNIN_RET = 200014,
  LOBBY2CLIENT_GET_VIPSIGNIN_REWARD_RET = 200015,
  LOBBY2CLIENT_CHANGE_RAISE_RET = 200016,
  LOBBY2CLIENT_PROGRESS_RET = 200017,
  LOBBY2CLIENT_LOGINDATACOMPLETE_NTF = 200018,
  LOBBY2CLIENT_RESOLVERET = 200019,
  LOBBY2CLIENT_HERODELETE_NTF = 200020,
  LOBBY2CLIENT_RESOLVELOOK_RET = 200021,
  LOBBY2CLIENT_CHAT_RECORD_NTF = 200099,
  LOBBY2CLIENT_CHAT_INFO_NTF = 200100,
  LOBBY2CLIENT_HERO_EVOLUTION_RET = 200101,
  LOBBY2CLIENT_HERO_FORCE_RET = 200102,
  LOBBY2CLIENT_HERO_DEIFICATION_RET = 200098,
  LOBBY2CLIENT_EQUIP_FORCE_RET = 200103,
  LOBBY2CLIENT_SALEHERO_RET = 200104,
  LOBBY2CLIENT_OPEN_BOX_RET = 200105,
  LOBBY2CLIENT_SUPREMEHOTBOX_NTF = 200106,
  LOBBY2CLIENT_HEROSKILLUPGRADE_RET = 200107,
  LOBBY2CLIENT_GRTOPENBOXINFO_RET = 200108,
  LOBBY2CLIENT_SKILLINFO_RET = 200109,
  LOBBY2CLIENT_BUY_SKILLPOINT_RET = 200110,
  LOBBY2CLIENT_USE_EXPITEM_RET = 200111,
  LOBBY2CLIENT_ANNOUNCEMENT_NTF = 200112,
  LOBBY2CLIENT_HERO_AWAKE_RET = 200113,
  LOBBY2CLIENT_SEND_THINGS_NTF = 200200,
  LOBBY2CLIENT_REDUCE_THINGS_NTF = 200201,
  LOBBY2CLIENT_MOVE_ITEM_NTF = 200202,
  LOBBY2CLIENT_SWAP_ITEM_NTF = 200203,
  LOBBY2CLIENT_OVERLAP_ITEM_NTF = 200204,
  LOBBY2CLIENT_LOAD_BAG_RET = 200205,
  LOBBY2CLIENT_GETSHOPINFO_RET = 200206,
  LOBBY2CLIENT_BUYGOODS_RET = 200207,
  LOBBY2CLIENT_REFRESHSHOP_RET = 200208,
  LOBBY2CLIENT_SHOPACTIVITY_NTF = 200209,
  LOBBY2CLIENT_COMMIT_QUEST_RET = 200300,
  LOBBY2CLIENT_NEW_QUEST_NTF = 200301,
  LOBBY2CLIENT_QUEST_FIN_STATUS = 200302,
  LOBBY2CLIENT_QUEST_OBJ_NTF = 200303,
  LOBBY2CLIENT_REMOVE_QUEST = 200304,
  LOBBY2CLIENT_NEW_SIDE_QUEST_NTF = 200305,
  LOBBY2CLIENT_COMMIT_QUEST_ALL_RET = 200306,
  LOBBY2CLIENT_FESTIVITY_NTF = 200310,
  LOBBY2CLIENT_NEWDAYUPDATE_NTF = 200320,
  LOBBY2CLIENT_CHALLENGE_INSTANCE_RET = 200500,
  LOBBY2CLIENT_CHALLENGE_RESULT = 200501,
  LOBBY2CLIENT_FLOP_RET = 200502,
  LOBBY2CLIENT_GET_CHAPTERREWARD_RET = 200503,
  LOBBY2CLIENT_GET_ARCHAEOLOGYINFO_RET = 200504,
  LOBBY2CLIENT_REVIVE_RET = 200505,
  LOBBY2CLIENT_SACRIFICE_RET = 200506,
  LOBBY2CLIENT_RESETEVALUATIONTIMES_RET = 200507,
  LOBBY2CLIENT_MAIL_LIST = 200600,
  LOBBY2CLIENT_NEW_MAIL_NTF = 200601,
  LOBBY2CLIENT_READMAIL_RET = 200602,
  LOBBY2CLIENT_DELMAIL_NTF = 200603,
  LOBBY2CLIENT_EXPEDITIONRESULT_RET = 200604,
  LOBBY2CLIENT_GETEXPEDITIONREWARD_RET = 200605,
  LOBBY2CLIENT_RESET_EXPEDITION_RET = 200606,
  LOBBY2CLIENT_GET_ARENAINFO_RET = 200613,
  LOBBY2CLIENT_CHALLENGE_ARENA_RET = 200614,
  LOBBY2CLIENT_CHALLENGE_ARENA_REWARD = 200615,
  LOBBY2CLIENT_RESET_ARENA_RET = 200616,
  LOBBY2CLIENT_CHANGE_ARENA_DEFENCE_RET = 200617,
  LOBBY2CLIENT_ARENAFASTFIGHT_RET = 200608,
  LOBBY2CLIENT_FRIENDLIST_RET = 200620,
  LOBBY2CLIENT_ADD_FRIEND_RET = 200621,
  LOBBY2CLIENT_DEL_FRIEND_RET = 200622,
  LOBBY2CLIENT_OP_APPLYLIST_RET = 200623,
  LOBBY2CLIENT_ADD_BLACKLIST_RET = 200624,
  LOBBY2CLIENT_ENERGYONCE_RET = 200625,
  LOBBY2CLIENT_ENERGYALL_RET = 200626,
  LOBBY2CLIENT_NEW_APPLY_NTF = 200627,
  LOBBY2CLIENT_NEW_FRIEND_NTF = 200628,
  LOBBY2CLIENT_DEL_FRIEND_NTF = 200629,
  LOBBY2CLIENT_GET_TARGET_FRIENDINFO_RET = 200630,
  LOBBY2CLIENT_EQUIP_RET = 200631,
  LOBBY2CLIENT_UNEQUIP_RET = 200632,
  LOBBY2CLIENT_STRENG_EQUIP_RET = 200633,
  LOBBY2CLIENT_REFINE_EQUIP_RET = 200634,
  LOBBY2CLIENT_SALE_EQUIP_RET = 200635,
  LOBBY2CLIENT_SHOP_BUY_GOODS_RET = 200636,
  LOBBY2CLIENT_STRENG_TREASURE_RET = 200637,
  LOBBY2CLIENT_REFINE_TREASURE_RET = 200638,
  LOBBY2CLIENT_CHANGEEQUIP_RET = 200639,
  LOBBY2CLIENT_GETACTIVITYDATA_RET = 220640,
  LOBBY2CLIENT_GETACTIVITYREWARD_RET = 220641,
  LOBBY2CLIENT_UPDATEACTIVITYDATA_NTF = 220642,
  LOBBY2CLIENT_BUYREBATE_RET = 220643,
  LOBBY2CLIENT_GETRANKDATA_RET = 220650,
  LOBBY2CLIENT_GETRANKFIVEHERO_RET = 220651,
  LOBBY2CLIENT_GETRANKWEAPON_RET = 220652,
  LOBBY2CLIENT_GETRANKHERO_RET = 220653,
  LOBBY2CLIENT_GETACHIEVE_RET = 220660,
  LOBBY2CLIENT_GETACHIEVEREWARD_RET = 220661,
  LOBBY2CLIENT_GETNEARBYPLAYERS_RET = 220666,
  LOBBY2CLIENT_PUTFASHION_RET = 220670,
  CLIENT2LOBBY_GET_TARGET_USERINFO_REQ = 210000,
  LOBBY2CLIENT_GET_TARGET_USERINFO_RET = 210001,
  LOBBY2CLIENT_GLOBAL_NTF = 210002,
  CLIENT2LOBBY_GET_SEVEN_REWARD_REQ = 210003,
  LOBBY2CLIENT_GET_SEVEN_REWARD_RET = 210004,
  LOBBY2CLIENT_SEVEN_NTF = 210005,
  LOBBY2CLIENT_HEART_NTF = 210006,
  CLIENT2LOBBY_HEART_REP = 210007,
  CLIENT2LOBBY_SEVEN_HALF_BUY_REQ = 210008,
  LOBBY2CLIENT_SEVEN_HALF_BUY_RET = 210009,
  CLIENT2LOBBY_BUYMAPTIMES_REQ = 210011,
  LOBBY2CLIENT_BUYMAPTIMES_RET = 210012,
  CLIENT2LOBBY_REBEL_ARMY_BATTLE_START_REQ = 210013,
  LOBBY2CLIENT_REBEL_ARMY_BATTLE_START_RET = 210014,
  CLIENT2LOBBY_REBEL_ARMY_BATTLE_END_REQ = 210015,
  LOBBY2CLIENT_REBEL_ARMY_BATTLE_END_RET = 210016,
  CLIENT2LOBBY_REBEL_ARMY_BOSS_REQ = 210017,
  LOBBY2CLIENT_REBEL_ARMY_BOSS_RET = 210018,
  CLIENT2LOBBY_REBEL_ARMY_BOSS_SHARE_REQ = 210019,
  LOBBY2CLIENT_REBEL_ARMY_BOSS_SHARE_RET = 210020,
  LOBBY2CLIENT_GET_TARGET_USERINFO_REQ = 210021,
  CLIENT2LOBBY_GET_TARGET_USERINFO_RET = 210022,
  LOBBY2CLIENT_RECOMMAND_FRIENDLIST_RET = 210023,
  CLIENT2LOBBY_RECOMMAND_FRIENDLIST_REQ = 210024,
  LOBBY2CLIENT_FRIENDINFO_NTF = 210025,
  CLIENT2LOBBY_GET_RAID_TEAM_REQ = 210026,
  LOBBY2CLIENT_GET_RAID_TEAM_RET = 210027,
  CLIENT2LOBBY_OPT_RAID_TEAM_REQ = 210028,
  LOBBY2CLIENT_OPT_RAID_TEAM_RET = 210029,
  LOBBY2CLIENT_ACTION_RECORD_NTF = 210030,
  LOBBY2CLIENT_RECHARGE_NTF = 210031,
  CLIENT2LOBBY_CREATE_RAID_TEAM_REQ = 210032,
  LOBBY2CLIENT_CREATE_RAID_TEAM_RET = 210033,
  LOBBY2CLIENT_SHARE_NTF = 210034,
  LOBBY2CLIENT_RAID_TEAM_NTF = 210035,
  CLIENT2LOBBY_FRIEND_APPLY_INFO_REQ = 210036,
  CLIENT2LOBBY_GETGUILDLIST_REQ = 210040,
  LOBBY2CLIENT_GETGUILDLIST_RET = 210041,
  CLIENT2LOBBY_CREATEGUILD_REQ = 210042,
  LOBBY2CLIENT_CREATEGUILD_RET = 210043,
  CLIENT2LOBBY_APPLYGUILD_REQ = 210044,
  LOBBY2CLIENT_APPLYGUILD_RET = 210045,
  CLIENT2LOBBY_APPLyGUILDRESPOND_REQ = 210046,
  LOBBY2CLIENT_APPLYGUILDRESPOND_RET = 210047,
  CLIENT2LOBBY_GETGUILDAPPLYLIST_REQ = 210048,
  LOBBY2CLIENT_GETGUILDAPPLYLIST_RET = 210049,
  CLIENT2LOBBY_QUITGUILD_REQ = 210050,
  LOBBY2CLIENT_QUITGUILD_RET = 210051,
  CLIENT2LOBBY_OPERATEGUILDMEMBER_REQ = 210052,
  LOBBY2CLIENT_OPERATEGUILDMEMBER_RET = 210053,
  CLIENT2LOBBY_MODIFYGUILDTEXT_REQ = 210054,
  LOBBY2CLIENT_MODIFYGUILDTEXT_RET = 210055,
  CLIENT2LOBBY_GETGUILDMEMBERLIST_REQ = 210056,
  LOBBY2CLIENT_GETGUILDMEMBERLIST_RET = 210057,
  LOBBY2CLIENT_GUILDINFO_NTF = 210059,
  LOBBY2CLIENT_GUILDMEMBER_NTF = 210060,
  LOBBY2CLIENT_GUILDAPPLY_NTF = 210061,
  CLIENT2LOBBY_GUILDRITUAL_REQ = 210062,
  LOBBY2CLIENT_GUILDRITUAL_RET = 210063,
  CLIENT2LOBBY_GETGUILDRITUALRATEREWARD_REQ = 210064,
  LOBBY2CLIENT_GETGUILDRITUALRATEREWARD_RET = 210065,
  CLIENT2LOBBY_GETGUILDRITUAL7DAYREWARD_REQ = 210066,
  LOBBY2CLIENT_GETGUILDRITUAL7DAYREWARD_RET = 210067,
  LOBBY2CLIENT_GUILDRITUAL_NTF = 210068,
  CLIENT2LOBBY_GETGUILDSTATE_REQ = 210069,
  LOBBY2CLIENT_GETGUILDSTATE_RET = 210070,
  LOBBY2CLIENT_GUILDSTATE_NTF = 210071,
  CLIENT2LOBBY_GET_PRIZE_REQ = 210072,
  LOBBY2CLIENT_GET_PRIZE_RET = 210073,
  LOBBY2CLIENT_PRIZEINFO_NTF = 210074,
  LOBBY2CLIENT_GUILDMAPINFO_NTF = 210080,
  CLIENT2LOBBY_SELECTGUILDCHAPTER_REQ = 210081,
  LOBBY2CLIENT_SELECTGUILDCHAPTER_RET = 210082,
  CLIENT2LOBBY_ATTACKGUILDMAP_REQ = 210083,
  LOBBY2CLIENT_ATTACKGUILDMAP_RET = 210084,
  CLIENT2LOBBY_GETGUILDMAPREWARDLIST_REQ = 210085,
  LOBBY2CLIENT_GETGUILDMAPREWARDLIST_RET = 210086,
  CLIENT2LOBBY_ATTACKGUILDMAPRESULT_REQ = 210087,
  LOBBY2CLIENT_ATTACKGUILDMAPRESULT_RET = 210088,
  CLIENT2LOBBY_SHOWGUILDMAPREWARDLIST_REQ = 210089,
  LOBBY2CLIENT_SHOWGUILDMAPREWARDLIST_RET = 210090,
  CLIENT2LOBBY_RESETGUILDMAPTYPE_REQ = 210091,
  LOBBY2CLIENT_RESETGUILDMAPTYPE_RET = 210092,
  CLIENT2LOBBY_GETGUILDTERRITORYBATTLEPLAYER_REQ = 210128,
  LOBBY2CLIENT_GETGUILDTERRITORYBATTLEPLAYER_RET = 210129,
  CLIENT2LOBBY_GETGUILDTERRITORYINFO_REQ = 210130,
  LOBBY2CLIENT_GETGUILDTERRITORYINFO_RET = 210131,
  CLIENT2LOBBY_ATTACKGUILDTERRITORYRESULT_REQ = 210132,
  LOBBY2CLIENT_ATTACKGUILDTERRITORYRESULT_RET = 210133,
  CLIENT2LOBBY_PATROLGUILDTERRITORY_REQ = 210134,
  LOBBY2CLIENT_PATROLGUILDTERRITORY_RET = 210135,
  CLIENT2LOBBY_GETGUILDTERRITORYREWARD_REQ = 210136,
  LOBBY2CLIENT_GETGUILDTERRITORYREWARD_RET = 210137,
  CLIENT2LOBBY_GETGUILDMEMBERSTERRITORYLIST_REQ = 210138,
  LOBBY2CLIENT_GETGUILDMEMBERSTERRITORYLIST_RET = 210139,
  CLIENT2LOBBY_GETGUILDMEMBERTERRITORYINFO_REQ = 210140,
  LOBBY2CLIENT_GETGUILDMEMBERTERRITORYINFO_RET = 210141,
  CLIENT2LOBBY_SUPPRESSGUILDMEMBERTERRITORY_REQ = 210142,
  LOBBY2CLIENT_SUPPRESSGUILDMEMBERTERRITORY_RET = 210143,
  LOBBY2CLIENT_GUILDTERRITORYRRIOTDONE_NTF = 210144,
  CLIENT2LOBBY_UNLOCKGUILDSKILL_REQ = 210150,
  LOBBY2CLIENT_UNLOCKGUILDSKILL_RET = 210151,
  CLIENT2LOBBY_UPGUILDSKILL_REQ = 210152,
  LOBBY2CLIENT_UPGUILDSKILL_RET = 210153,
  CLIENT2LOBBY_GETGUILDWARENEMYLIST_REQ = 210154,
  LOBBY2CLIENT_GETGUILDWARENEMYLIST_RET = 210155,
  CLIENT2LOBBY_SELECTGUILDWARENEMY_REQ = 210156,
  LOBBY2CLIENT_SELECTGUILDWARENEMY_RET = 210157,
  CLIENT2LOBBY_GETGUILDWARINFO_REQ = 210158,
  LOBBY2CLIENT_GETGUILDWARINFO_RET = 210159,
  CLIENT2LOBBY_SHOWGUILDWARENEMYMEMBERS_REQ = 210160,
  LOBBY2CLIENT_SHOWGUILDWARENEMYMEMBERS_RET = 210161,
  CLIENT2LOBBY_ATTACKGUILDWARENEMY_REQ = 210162,
  LOBBY2CLIENT_ATTACKGUILDWARENEMY_RET = 210163,
  CLIENT2LOBBY_ATTACKGUILDWARENEMYRESULT_REQ = 210164,
  LOBBY2CLIENT_ATTACKGUILDWARENEMYRESULT_RET = 210165,
  LOBBY2CLIENT_GUILDWARMSG_NTF = 210166,
  LOBBY2CLIENT_GUILDWARENDMSG_NTF = 210167,
  LOBBY2CLIENT_GUILDWARENDPLAYERMSG_NTF = 210168,
  LOBBY2CLIENT_GUILDTECHNOLOGY_NTF = 210169,
  LOBBY2CLIENT_GUILDCITYINFO_NTF = 210171,
  LOBBY2CLIENT_GUILDCITYTASKINFO_NTF = 210172,
  LOBBY2CLIENT_GUILDCITYTASKUPDATE_NTF = 210173,
  CLIENT2LOBBY_GETGUILDCITYTASKREWARD_REQ = 210174,
  LOBBY2CLIENT_GETGUILDCITYTASKREWARD_RET = 210175,
  CLIENT2LOBBY_REFRESHGUILDCITYTASK_REQ = 210176,
  LOBBY2CLIENT_REFRESHGUILDCITYTASK_RET = 210177,
  CLIENT2LOBBY_USE_ITEM_SPECAIL_REQ = 210099,
  LOBBY2CLIENT_USE_ITEM_SPECAIL_RET = 210100,
  CLIENT2LOBBY_ROBPLAYER_REQ = 210101,
  CLIENT2LOBBY_ROB_TREASURE_BATTLE_START_REQ = 210102,
  CLIENT2LOBBY_ROB_TREASURE_BATTLE_END_REQ = 210103,
  CLIENT2LOBBY_TREASURE_COMBINE_REQ = 210104,
  CLIENT2LOBBY_ROB_OPEN_BOX_REQ = 210105,
  LOBBY2CLIENT_ROBPLAYER_RET = 210106,
  LOBBY2CLIENT_ROB_TREASURE_BATTLE_START_RET = 210107,
  LOBBY2CLIENT_ROB_TREASURE_BATTLE_END_RET = 210108,
  LOBBY2CLIENT_TREASURE_COMBINE_RET = 210109,
  LOBBY2CLIENT_ROB_OPEN_BOX_RET = 210110,
  CLIENT2LOBBY_ONEKEYROB_REQ = 210111,
  LOBBY2CLIENT_ONEKEYROB_RET = 210112,
  CLIENT2LOBBY_ONEKEYROBEND_REQ = 210113,
  LOBBY2CLIENT_ONEKEYROBEND_RET = 210114,
  LOBBY2CLIENT_NOTICE_NTF = 210120,
  CLIENT2LOBBY_GETNOTICEITEM_REQ = 210121,
  LOBBY2CLIENT_GETNOTICEITEM_RET = 210122,
  LOBBY2CLIENT_NOTICEBYTASK_NTF = 210123,
  LOBBY2CLIENT_REFERSHTIMES_NTF = 210200,
  CLIENT2LOBBY_BUYPRICETIMES_REQ = 210201,
  LOBBY2CLIENT_BUYPRICETIMES_RET = 210202,
  CLIENT2LOBBY_UPPOSITION_REQ = 210203,
  LOBBY2CLIENT_UPPOSITION_RET = 210204,
  LOBBY2CLIENT_GETFIRSTWEAPON_NTF = 210205,
  CLIENT2LOBBY_GETROBOTEFFECT_REQ = 200210,
  LOBBY2CLIENT_GetRobotEffect_RET = 200211,
  CLIENT2LOBBY_FIRSTCHARGECHOOSE_REQ = 200220,
  LOBBY2CLIENT_FIRSTCHARGECHOOSE_RET = 200221,
  CLIENT2LOBBY_CONTINUE_CHARGE_CHOOSE_REQ = 200230,
  LOBBY2CLIENT_CONTINUE_CHARGE_CHOOSE_RET = 200231,
  CLIENT2LOBBY_REBEL_ARMY_BOSS_TIP_REQ = 210300,
  LOBBY2CLIENT_REBEL_ARMY_BOSS_TIP_RET = 210301,
  CLIENT2LOBBY_GETEXPEDITIONROBOT_REQ = 210310,
  LOBBY2CLIENT_GETEXPEDITIONROBOT_RET = 210311,
  CLIENT2LOBBY_GETEXPEDITIONBATTLEPLAYER_REQ = 210312,
  LOBBY2CLIENT_GETEXPEDITIONBATTLEPLAYER_RET = 210313,
  CLIENT2LOBBY_GETSEVENDAYRANK_REQ = 210314,
  LOBBY2CLIENT_GETSEVENDAYRANK_RET = 210315,
  CLIENT2LOBBY_GETPKBATTLEPLAYER_REQ = 210316,
  LOBBY2CLIENT_GETPKBATTLEPLAYER_RET = 210317,
  LOBBY2CLIENT_TEAMEFFECT_NTF = 210318,
  LOBBY2CLIENT_CONTINUE_CHARGE_NTF = 210320,
  LOBBY2CLIENT_TURNTABLERESULT_NTF = 210330,
  CLIENT2LOBBY_GETTURNTABLERANK_REQ = 210331,
  LOBBY2CLIENT_GETTURNTABLERANK_RET = 210332,
  LOBBY2CENTER_CLOSETURNTABLERANK_NTF = 210333,
  CENTER2LOBBY_TURNTABLERANKREWARD_NTF = 210334,
  CENTER2LOBBY_GETARENALIST_REQ = 310335,
  LOBBY2CENTER_GETARENALIST_RET = 310336,
  CLIENT2LOBBY_INVITEFRIENDTEAM_REQ = 310337,
  CLIENT2LOBBY_SERVERWARGETSCOREINFO_REQ = 210350,
  LOBBY2CLIENT_SERVERWARGETSCOREINFO_RET = 210351,
  CLIENT2LOBBY_SERVERWARSETCOUNTRY_REQ = 210352,
  LOBBY2CLIENT_SERVERWARSETCOUNTRY_RET = 210353,
  CLIENT2LOBBY_SERVERWARREFRESHENEMY_REQ = 210354,
  LOBBY2CLIENT_SERVERWARREFRESHENEMY_RET = 210355,
  CLIENT2LOBBY_SERVERWARATTACKRESULT_REQ = 210356,
  LOBBY2CLIENT_SERVERWARATTACKRESULT_RET = 210357,
  CLIENT2LOBBY_SERVERWARGETSCORERANK_REQ = 210358,
  LOBBY2CLIENT_SERVERWARGETSCORERANK_RET = 210359,
  CLIENT2LOBBY_SERVERWARGETFIGHTRANK_REQ = 210360,
  LOBBY2CLIENT_SERVERWARGETFIGHTRANK_RET = 210361,
  CLIENT2LOBBY_SERVERWARATTACK_REQ = 210362,
  LOBBY2CLIENT_SERVERWARATTACK_RET = 210363,
  CLIENT2LOBBY_SERVERWARGETFIGHTINFO_REQ = 210364,
  LOBBY2CLIENT_SERVERWARGETFIGHTINFO_RET = 210365,
  CENTER2LOBBY_SERVERWARRANKREWARD_NTF = 210366,
  LOBBY2CENTER_CLOSESWAR_NTF = 210367,
  LOBBY2CENTER_UPDATETEAMHONOR_NTF = 210368,
  CENTER2LOBBY_SERVERTEAMRANKREWARD_NTF = 210369,
  CLIENT2LOBBY_SERVERTEAMOP_REQ = 210370,
  LOBBY2CLIENT_SERVERTEAMOP_RET = 210371,
  CLIENT2LOBBY_SERVERTEAMCLOSE_REQ = 210372,
  LOBBY2CLIENT_SERVERTEAMCLOSE_NTF = 210373,
  LOBBY2CLIENT_SERVERTEAMPLAYERS_NTF = 210374,
  CLIENT2LOBBY_SERVERTEAMINVITEFRIEND_REQ = 210375,
  LOBBY2CLIENT_SERVERTEAMINVITEFRIEND_RET = 210376,
  LOBBY2CLIENT_SERVERTEAMINVITED_NTF = 210377,
  CLIENT2LOBBY_SERVERTEAMCHANGEPOS_REQ = 210378,
  LOBBY2CLIENT_SERVERTEAMCHANGEPOS_NTF = 210379,
  LOBBY2CLIENT_SERVERTEAMWAITFIGHT_NTF = 210380,
  LOBBY2CLIENT_SERVERTEAMFIGHTRESULT_NTF = 210381,
  LOBBY2CLIENT_SERVERTEAMQUIT_NTF = 210382,
  LOBBY2CLIENT_SERVERTEAMDOREADY_NTF = 210383,
  CLIENT2LOBBY_SERVERTEAMGETHONORRANK_REQ = 210384,
  LOBBY2CLIENT_SERVERTEAMGETHONORRANK_RET = 210385,
  LOBBY2CENTER_REDUCEGLOBALGOODSNUM_NTF = 210386,
  CENTER2LOBBY_UPDATEGLOBALGOODS_NTF = 210387,
  LOBBY2CLIENT_CLEARSERVERTEAMHONORRANK_NTF = 210388,
  LOBBY2CLIENT_HANDBOOK_STRENGTH_RET = 210400,
  CLIENT2LOBBY_HANDBOOK_STRENGTH_REQ = 210401,
  CLIENT2LOBBY_GETSEARCHTOMBINFO_REQ = 210500,
  CLIENT2LOBBY_SEARCHTOMBGO_REQ = 210501,
  LOBBY2CLIENT_GETSEARCHTOMBINFO_NTF = 210502,
  CLIENT2LOBBY_SEARCHTOMBEVENTDONE_REQ = 210503,
  LOBBY2CLIENT_SEARCHTOMBGO_RET = 210504,
  LOBBY2CLIENT_SEARCHTOMBEVENTDONE_RET = 210505,
  CLIENT2LOBBY_GETSECRETHOLEROBOT_REQ = 210508,
  LOBBY2CLIENT_GETSECRETHOLEROBOT_RET = 210509,
  CLIENT2LOBBY_GETSECRETHOLEINFO_REQ = 210510,
  LOBBY2CLIENT_GETSECRETHOLEINFO_RET = 210511,
  CLIENT2LOBBY_ATTACKSECRETHOLE_REQ = 210512,
  LOBBY2CLIENT_ATTACKSECRETHOLE_RET = 210513,
  CLIENT2LOBBY_ATTACKSECRETHOLERESULT_REQ = 210514,
  LOBBY2CLIENT_ATTACKSECRETHOLERESULT_RET = 210515,
  CLIENT2LOBBY_OPENSECRETHOLEBOX_REQ = 210516,
  LOBBY2CLIENT_OPENSECRETHOLEBOX_RET = 210517,
  CLIENT2LOBBY_BUYSECRETHOLEBUFF_REQ = 210518,
  LOBBY2CLIENT_BUYSECRETHOLEBUFF_RET = 210519,
  CLIENT2LOBBY_CHOOSESECRETHOLE_REQ = 210520,
  LOBBY2CLIENT_CHOOSESECRETHOLE_RET = 210521,
  CLIENT2LOBBY_SWEEPSECRETHOLE_REQ = 210522,
  LOBBY2CLIENT_SWEEPSECRETHOLE_RET = 210523,
  CLIENT2LOBBY_BUYSECRETHOLEGOODS_REQ = 210524,
  LOBBY2CLIENT_BUYSECRETHOLEGOODS_RET = 210525,
  CLIENT2LOBBY_BUYSEVENONEINFOUR = 210526,
  LOBBY2CLIENT_BUYSEVENONEINFOUR = 210527,
  CLIENT2LOBBY_BUYSEVENONEINFOUR_SELF = 210528,
  LOBBY2CLIENT_BUYSEVENONEINFOUR_SELF = 210529,
  LOBBY2CENTER_AUCTION_SELF = 210530,
  LOBBY2CENTER_BUY_AUCTION_SELF = 210531,
  CENTER2LOBBY_BUY_AUCTION_SELF = 210532,
  LOBBY2CENTER_GET_LIST_SELF = 210534,
  CENTER2LOBBY_GET_LIST_SELF = 210535,
  CLIENT2LOBBY_BUY_AUCTION_SELF = 210536,
  CLIENT2LOBBY_GET_LIST_SELF = 210537,
  LOBBY2CLIENT_BUY_AUCTION_SELF = 210538,
  LOBBY2CLIENT_GET_LIST_SELF = 210539,
  CENTER2LOBBY_AUCTION_END_SELF = 210540,
  LOBBY2CENTER_CLEAN_AUCTION = 210541,
  LOBBY2CENTER_GETGLOBALSERVERRANK_REQ = 210542,
  CENTER2LOBBY_GETGLOBALSERVERRANK_RET = 210543,
  CLIENT2LOBBY_GETGLOBALSERVERRANK_REQ = 210544,
  LOBBY2CLIENT_GETGLOBALSERVERRANK_RET = 210545,
  LOBBY2CENTER_PLAYERGLOBALSERVERRANK_NTF = 210546,
  CLIENT2LOBBY_UPDATETITLE_REQ = 210547,
  LOBBY2CLIENT_UPDATETITLE_RET = 210548,
  CLIENT2LOBBY_GETHERORANK_REQ = 210550,
  LOBBY2CLIENT_GETHERORANK_RET = 210551,
  LOBBY2CLIENT_FRIENDONLINE_NTF = 210552,
  LOBBY2CLIENT_RETURNSYSTEM_NTF = 210560,
  CLIENT2LOBBY_GETRETURNTASKREWARD_REQ = 210561,
  LOBBY2CLIENT_GETRETURNTASKREWARD_RET = 210562,
  LOBBY2CLIENT_UPDATERETURNTASK_RET = 210563,
  CLIENT2LOBBY_DOACTIVITYOPT_REQ = 210570,
  LOBBY2CLIENT_DOACTIVITYOPT_RET = 210571,
  CLIENT2LOBBY_GETPLAYERTERRITORYINFO_REQ = 210580,
  CLIENT2LOBBY_GETPLAYERTERRITORYBATTLEPLAYER_REQ = 210581,
  CLIENT2LOBBY_ATTACKPLAYERTERRITORYRESULT_REQ = 210582,
  CLIENT2LOBBY_PATROLPLAYERTERRITORY_REQ = 210583,
  CLIENT2LOBBY_GETPLAYERTERRITORYREWARD_REQ = 210584,
  CLIENT2LOBBY_GETFRIENDTERRITORYLIST_REQ = 210585,
  CLIENT2LOBBY_GETFRIENDTERRITORYINFO_REQ = 210586,
  CLIENT2LOBBY_SUPPRESSFRIENDTERRITORY_REQ = 210587,
  CLIENT2LOBBY_UPTERRITORYSKILL_REQ = 210588,
  LOBBY2CLIENT_UPTERRITORYSKILL_RET = 210589,
  LOBBY2CLIENT_GETPLAYERTERRITORYINFO_RET = 210590,
  LOBBY2CLIENT_GETPLAYERTERRITORYBATTLEPLAYER_RET = 210591,
  LOBBY2CLIENT_ATTACKPLAYERTERRITORYRESULT_RET = 210592,
  LOBBY2CLIENT_PATROLPLAYERTERRITORY_RET = 210593,
  LOBBY2CLIENT_GETPLAYERTERRITORYREWARD_RET = 210594,
  LOBBY2CLIENT_GETFRIENDTERRITORYLIST_RET = 210595,
  LOBBY2CLIENT_GETFRIENDTERRITORYINFO_RET = 210596,
  LOBBY2CLIENT_SUPPRESSRRIENDTERRITORY_RET = 210597,
  LOBBY2CLIENT_PLAYERTERRITORYRRIOTDONE_NTF = 210598,
  LOBBY2CLIENT_PLAYERTERRITORYRNEWEVENT_NTF = 210599,
  CLIENT2LOBBY_ATTACKSECRETHOLEELITE_REQ = 210600,
  LOBBY2CLIENT_ATTACKSECRETHOLEELITE_RET = 210601,
  CLIENT2LOBBY_ATTACKSECRETHOLERESULTELITE_REQ = 210602,
  LOBBY2CLIENT_ATTACKSECRETHOLERESULTELITE_RET = 210603,
  CLIENT2LOBBY_HERO_WAKE_REQ = 210604,
  LOBBY2CLIENT_HERO_WAKE_RET = 210605,
  CLIENT2LOBBY_SYN_WAKEEQUIP_REQ = 210606,
  LOBBY2CLIENT_SYN_WAKEEQUIP_RET = 210607,
  CLIENT2LOBBY_MARKITEM_REQ = 210608,
  LOBBY2CLIENT_MARKITEM_RET = 210609,
  CLIENT2LOBBY_WEAR_WAKE_EQUIP_REQ = 210610,
  LOBBY2CLIENT_WEAR_WAKE_EQUIP_RET = 210611,
  LOBBY2CLIENT_HEROWAKENOTICE_NTF = 210612,
  CLIENT2LOBBY_UPGRADEDIAGRAM_REQ = 210613,
  LOBBY2CLIENT_UPGRADEDIAGRAM_RET = 210614,
  CLIENT2LOBBY_DIAGRAMACHIEVEACTIVATE_REQ = 210615,
  LOBBY2CLIENT_DIAGRAMACHIEVEACTIVATE_RET = 210616,
  CLIENT2LOBBY_GENERALEXERCISE_REQ = 210617,
  LOBBY2CLIENT_GENERALEXERCISE_RET = 210618,
  CLIENT2LOBBY_GENERALEXERCISERESULT_REQ = 210619,
  LOBBY2CLIENT_GENERALEXERCISERESULT_RET = 210620,
  CLIENT2LOBBY_DIAGRAMLIST_REQ = 210621,
  LOBBY2CLIENT_DIAGRAMLIST_RET = 210622,
  CLIENT2LOBBY_ENTERGHOST_REQ = 210623,
  LOBBY2CLIENT_ENTERGHOST_RET = 210624,
  CLIENT2LOBBY_REFRESHEXERCISEBOSS_REQ = 210625,
  LOBBY2CLIENT_REFRESHEXERCISEBOSS_RET = 210626,
  LOBBY2CLIENT_GHOSTACTIVE_NTF = 210627,
  LOBBY2CLIENT_REFRESHEPICBOSS_NTF = 210628,
  CLIENT2LOBBY_VIEWGHOST_REQ = 210633,
  LOBBY2CLIENT_VIEWGHOST_RET = 210634,
  CLIENT2LOBBY_BATCHRESOLVE_REQ = 210635,
  LOBBY2CLIENT_BATCHRESOLVE_RET = 210636,
  CLIENT2LOBBY_CANRESOLVELIST_REQ = 210637,
  LOBBY2CLIENT_CANRESOLVELIST_RET = 210638,
  LOBBY2CLIENT_NEWHANDPROGRESS_RET = 210700,
  CLIENT2LOBBY_SEVENGIFTS_REQ = 210704,
  LOBBY2CLIENT_SEVENGIFTS_RET = 210705,
  LOBBY2CLIENT_SEVENGIFTS_NTF = 210706,
  CLIENT2LOBBY_ONLINEREWARD_REQ = 210707,
  LOBBY2CLIENT_ONLINEREWARD_RET = 210708,
  LOBBY2CLIENT_ONLINEREWARD_NTF = 210709,
  CLIENT2LOBBY_ONLINEACCCOIN_REQ = 210710,
  LOBBY2CLIENT_ONLINEACCCOIN_RET = 210711,
  CLIENT2LOBBY_GETOFFLINEEXP_REQ = 210717,
  LOBBY2CLIENT_GETOFFLINEEXP_RET = 210718,
  LOBBY2CLIENT_OFFLINESTATE_NTF = 210719,
  CLIENT2LOBBY_GETRETRIEVEREWARD_REQ = 210720,
  LOBBY2CLIENT_GETRETRIEVEREWARD_RET = 210721,
  CLIENT2LOBBY_GETALLRETRIEVEREWARD_REQ = 210722,
  LOBBY2CLIENT_GETALLRETRIEVEREWARD_RET = 210723,
  LOBBY2CLIENT_RETRIEVESTATE_NTF = 210724,
  LOBBY2CLIENT_CHATPASSWORD_NTF = 210725,
  CLIENT2LOBBY_CHATPASSWORDACT_REQ = 210726,
  LOBBY2CLIENT_CHATPASSWORDACT_RET = 210727,
  CLIENT2LOBBY_DEBUG_REQ = 210730,
  LOBBY2CLIENT_DEBUG_RET = 210731,
  CLIENT2LOBBY_ONEKEYRESETSWEEP_REQ = 210732,
  LOBBY2CLIENT_ONEKEYRESETSWEEP_RET = 210733,
  LOBBY2CLIENT_MERGESERVERCOMPARE_NTF = 210734,
  CLIENT2LOBBY_GETMERGESERVERCOMPAREINFO_REQ = 210735,
  LOBBY2CLIENT_GETMERGESERVERCOMPAREINFO_RET = 210736,
  CLIENT2LOBBY_GETMERGESERVERCOMPAREREWARD_REQ = 210737,
  LOBBY2CLIENT_GETMERGESERVERCOMPAREREWARD_RET = 210738,
  CLIENT2LOBBY_CONSUMERANK_REQ = 210739,
  LOBBY2CLIENT_CONSUMERANK_RET = 210740,
  CLIENT2LOBBY_REPLACEEQUIP_REQ = 210741,
  LOBBY2CLIENT_REPLACEEQUIP_RET = 210742,
  CLIENT2LOBBY_RECLAIMGROUND_REQ = 210743,
  LOBBY2CLIENT_RECLAIMGROUND_RET = 210744,
  CLIENT2LOBBY_PLANTGROUND_REQ = 210745,
  LOBBY2CLIENT_PLANTGROUND_RET = 210746,
  CLIENT2LOBBY_WATERGROUND_REQ = 210747,
  LOBBY2CLIENT_WATERGROUND_RET = 210748,
  CLIENT2LOBBY_HARVESTGROUND_REQ = 210749,
  LOBBY2CLIENT_HARVESTGROUND_RET = 210750,
  LOBBY2CLIENT_FARMINFO_NTF = 210751,
  CLIENT2LOBBY_ONEKEYHARVEST_REQ = 210752,
  LOBBY2CLIENT_ONEKEYHARVEST_RET = 210753,
  CLIENT2LOBBY_OTHERPLAYERFARM_REQ = 210754,
  LOBBY2CLIENT_OTHERPLAYERFARM_RET = 210755,
  CLIENT2LOBBY_ADDWATER_REQ = 210756,
  LOBBY2CLIENT_ADDWATER_RET = 210757,
  CLIENT2LOBBY_THINKTO_REQ = 210758,
  LOBBY2CLIENT_THINKTO_RET = 210759,
  LOBBY2CLIENT_FARMNOTICE_NTF = 210760,
  CLIENT2LOBBY_RIPEIMMEDIATELY_REQ = 210761,
  LOBBY2CLIENT_RIPEIMMEDIATELY_RET = 210762,
  CLIENT2LOBBY_ALLRIPEIMMEDIATELY_REQ = 210763,
  LOBBY2CLIENT_ALLRIPEIMMEDIATELY_RET = 210764,
  CLIENT2LOBBY_ONEKEYPLANT_REQ = 210765,
  LOBBY2CLIENT_ONEKEYPLANT_RET = 210766,
  CLIENT2LOBBY_AUTOPLANT_REQ = 210767,
  LOBBY2CLIENT_AUTOPLANT_RET = 210768,
  CLIENT2LOBBY_UPWATER_REQ = 210769,
  LOBBY2CLIENT_UPWATER_RET = 210770,
  LOBBY2CLIENT_FARMWELL_NTF = 210771,
  CLIENT2LOBBY_UPDATENATIONAL_REQ = 210772,
  LOBBY2CLIENT_UPDATENATIONAL_RET = 210773,
  CLIENT2LOBBY_CANCELAUTOPLANT_REQ = 210774,
  LOBBY2CLIENT_CANCELAUTOPLANT_RET = 210775,
  CLIENT2LOBBY_CANADDWATER_REQ = 210776,
  LOBBY2CLIENT_CANADDWATER_RET = 210777,
  CLIENT2LOBBY_UPDATESIGNATURE_REQ = 210778,
  LOBBY2CLIENT_UPDATESIGNATURE_RET = 210779,
  LOBBY2DB_LOAD_CHARACTER_REQ = 300000,
  LOBBY2DB_CREATE_CHARACTER_REQ = 300001,
  LOBBY2DB_SAVE_CHARACTER_REQ = 300002,
  LOBBY2DB_SAVE_BAG_REQ = 300003,
  LOBBY2DB_LOAD_BAG_REQ = 300004,
  LOBBY2DB_ADDDIAMOND_REQ = 300005,
  LOBBY2DB_LOAD_CHARLIST_REQ = 300006,
  LOBBY2DB_CHANGE_NAME_CHECK_REQ = 300007,
  LOBBY2DB_UPDATE_SUPREMEHOTBOX = 300008,
  LOBBY2DB_GET_ADVANCED_CHARINFO_REQ = 300009,
  LOBBY2DB_SAVE_ADVANCED_CHARACTER_REQ = 300010,
  LOBBY2DB_UPDATE_ARENA_RANK = 300012,
  LOBBY2DB_UPDATE_ARENA_LOG = 300013,
  LOBBY2DB_OFFLINE_MAIL = 300014,
  LOBBY2DB_CHECKTOKEN_REQ = 300015,
  LOBBY2DB_SERVER = 300016,
  LOBBY2DB_APPLY_FRIEND = 300017,
  LOBBY2DB_ADD_FRIEND = 300018,
  LOBBY2DB_DEL_FRIEND = 300019,
  LOBBY2DB_SENDENERGY = 300020,
  LOBBY2DB_PURCHASEINFO = 300021,
  LOBBY2DB_GET_TARGET_FRIENDINFO = 300022,
  LOBBY2DB_LOADACTIVITYREQ = 300050,
  LOBBY2DB_UPDATEACTIVITYREQ = 300051,
  LOBBY2DB_LOADRANKREQ = 300060,
  LOBBY2DB_UPDATERANKREQ = 300061,
  LOBBY2DB_CLEARRANKREQ = 300062,
  LOBBY2DB_LOADARENAREQ = 300070,
  LOBBY2DB_UPDATEARENAREQ = 300071,
  LOBBY2DB_LOADSERVERCOMPARE_REQ = 300072,
  LOBBY2DB_UPDATESERVERCOMPARE_REQ = 300073,
  LOBBY2DB_CLEARSERVERCOMPARE_REQ = 300074,
  LOBBY2DB_CLEARPLAYERRANK_REQ = 300075,
  DB2LOBBY_LOAD_CHARACTER_RET = 350000,
  DB2LOBBY_CREATE_CHARACTER_RET = 350001,
  DB2LOBBY_SAVE_CHARACTER_RET = 350002,
  DB2LOBBY_SAVE_BAG_RET = 350003,
  DB2LOBBY_LOAD_BAG_RET = 350004,
  DB2LOBBY_LOAD_CHARLIST_RET = 350005,
  DB2LOBBY_CHANGE_NAME_CHECK_RET = 350006,
  DB2LOBBY_SUPREMEHOTBOX_NTF = 350007,
  DB2LOBBY_GET_ADVANCED_CHARINFO_RET = 350008,
  DB2LOBBY_SAVE_ADVANCED_CHARACTER_RET = 350009,
  DB2LOBBY_CHECKTOKEN_RET = 350010,
  DB2LOBBY_SERVER = 350011,
  DB2LOBBY_APPLY_FRIEND = 350012,
  DB2LOBBY_ADD_FRIEND = 350013,
  DB2LOBBY_DEL_FRIEND = 350014,
  DB2LOBBY_SHOP = 350015,
  DB2LOBBY_GET_TARGET_FRIENDINFO_RET = 350016,
  DB2LOBBY_LOADACTIVITYRET = 350050,
  DB2LOBBY_LOADRANKRET = 350060,
  DB2LOBBY_LOADARENARET = 350070,
  DB2LOBBY_LOADSERVERCOMPARE_RET = 350071,
  LOBBY2DB_LOADGUILD_REQ = 350080,
  DB2LOBBY_GUILDINFO_RET = 350081,
  DB2LOBBY_GUILDPlAYERS_RET = 350082,
  DB2LOBBY_GUILDAPPLYS_RET = 350083,
  LOBBY2DB_UPDATEGUILDINFO_REQ = 350085,
  LOBBY2DB_UPDATEGUILDPLAYER_REQ = 350086,
  LOBBY2DB_UPDATEGUILDAPPLY_REQ = 350087,
  LOBBY2DB_UPDATEGUILDRITUAL_REQ = 350088,
  LOBBY2DB_UPDATEGUILDNEWDAY_REQ = 350089,
  LOBBY2DB_LOAD_WORLD_REQ = 350090,
  DB2LOBBY_LOAD_WORLD_RET = 350091,
  LOBBY2DB_LOAD_ROBOT_REQ = 350092,
  DB2LOBBY_LOAD_ROBOT_RET = 350093,
  LOBBY2DB_CREATE_ROBOT_REQ = 350094,
  DB2LOBBY_CREATE_ROBOT_RET = 350095,
  LOBBY2DB_SAVE_ROBOT_REQ = 350096,
  DB2LOBBY_SAVE_ROBOT_RET = 350097,
  LOBBY2DB_GET_RECOMMAND_FRIEND_REQ = 360000,
  DB2LOBBY_GET_RECOMMAND_FRIEND_RET = 360001,
  LOBBY2DB_SAVE_GLOBAL_REQ = 360002,
  DB2LOBBY_GLOBAL_NTF = 360003,
  LOBBY2DB_LOAD_TREASURE_REQ = 360004,
  DB2LOBBY_LOAD_TREASURE_RET = 360005,
  LOBBY2DB_LOADOFFLINE_MAIL = 360006,
  DB2LOBBY_LOADOFFLINE_MAIL = 360007,
  LOBBY2DB_GET_TARGET_USERINFO_REQ = 380000,
  DB2LOBBY_GET_TARGET_USERINFO_RET = 380001,
  LOBBY2DIR_LASTLOGINSERVERID_NTF = 390000,
  LOBBY2DIR_UPDATE_STATE = 390001,
  S2N_READY = 400001,
  S2N_STARTED = 400002,
  S2N_STOPPED = 400003,
  S2N_SHELL_COMMAND_OVER = 400004,
  N2S_UPDATE_CONFIG = 400005,
  N2S_START = 400006,
  N2S_STOP = 400007,
  N2S_SHELL_COMMAND = 400008,
  HNET_TRANSFER_PACKET = 500000,
  H2NET_SETUP_LISTENERS = 500001,
  H2NET_CLOSE_NETWORK = 500002,
  H2NET_CONNECT = 500003,
  NET2H_ACCEPTED = 500004,
  NET2H_CONNECTED = 500005,
  NET2H_LOST = 500006,
  NET2H_CONNECTFAIL = 500007,
  NET2H_LISTEN_FAILED = 500008,
  KEEP_ALIVE = 600001,
  KEEP_ALIVE_ACK = 600002,
  PACKET_PACK = 600003,
  MONITOR_CMD = 600005,
  MONITOR_CMD_RESULT = 600006,
  RS_CMD = 600008,
  RS_PROMPT = 600009,
  ALL2LOG_ALLOC_LOG = 700001,
  ALL2LOG_BEGIN_LOG = 700002,
  ALL2LOG_WRITE_LOG = 700003,
  ALL2LOG_END_LOG = 700004,
  LOBBY2REPORT_LOGIN = 700005,
  LOBBY2REPORT_REGISTER = 700006,
  LOBBY2REPORT_ACCEPT = 700007,
  LOBBY2REPORT_INVITE = 700008,
  LOBBY2REPORT_CONSUME = 700009,
  LOBBY2REPORT_RECHARGE = 700010,
  LOBBY2REPORT_QUIT = 700011,
  LOG2ALL_ALLOC_LOG = 700012,
  LOG2ALL_BEGIN_LOG = 700013,
  LOG2ALL_WRITE_LOG = 700014,
  LOG2ALL_END_LOG = 700015,
  CLIENT2LOBBY_GM_CMD = 800000,
  LOBBY2CLIENT_GM_CMD = 800001,
  LOBBY2CENTER_SERVERINFO_NTF = 900000,
  LOBBY2CENTER_PLAYERTURNTABLE_NTF = 900001,
  LOBBY2CENTER_GETTURNTABLERANK_REQ = 900002,
  CENTER2LOBBY_GETTURNTABLERANK_RET = 900003,
  LOBBY2CENTER_SERVERWARCONF_NTF = 900004,
  LOBBY2CENTER_SETTIME_NTF = 900005,
  LOBBY2CENTER_SERVERCONF_NTF = 900006,
  LOBBY2CENTER_UPDATERANK_NTF = 900007,
  LOBBY2CENTER_GETRANK_REQ = 900008,
  CENTER2LOBBY_GETRANK_RET = 900009,
  LOBBY2CENTER_CLOSECONSUMERANK_NTF = 900010,
  CENTER2LOBBY_CONSUMERANKREWARD_NTF = 900011
};
bool PacketDef_IsValid(int value);
const PacketDef PacketDef_MIN = CLIENT2LOBBY_LOGIN_REQ;
const PacketDef PacketDef_MAX = DIR2CLIENT_LOGIN_RET;
const int PacketDef_ARRAYSIZE = PacketDef_MAX + 1;

const ::google::protobuf::EnumDescriptor* PacketDef_descriptor();
inline const ::std::string& PacketDef_Name(PacketDef value) {
  return ::google::protobuf::internal::NameOfEnum(
    PacketDef_descriptor(), value);
}
inline bool PacketDef_Parse(
    const ::std::string& name, PacketDef* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PacketDef>(
    PacketDef_descriptor(), name, value);
}
enum ChatType {
  CHAT_TYPE_PRIVATE = 1,
  CHAT_TYPE_SYSTEM = 2,
  CHAT_TYPE_PLAYERROOM = 3,
  CHAT_TYPE_COMMONCHAT = 4,
  CHAT_TYPE_FAMILY = 5,
  CHAT_TYPE_MARRY = 6,
  CHAT_TYPE_BIGHORN = 7
};
bool ChatType_IsValid(int value);
const ChatType ChatType_MIN = CHAT_TYPE_PRIVATE;
const ChatType ChatType_MAX = CHAT_TYPE_BIGHORN;
const int ChatType_ARRAYSIZE = ChatType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatType_descriptor();
inline const ::std::string& ChatType_Name(ChatType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatType_descriptor(), value);
}
inline bool ChatType_Parse(
    const ::std::string& name, ChatType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatType>(
    ChatType_descriptor(), name, value);
}
enum eItemUseRestrict {
  eItemUseRestrict_None = 0,
  eItemUseRestrict_Level = 1,
  eItemUseRestrict_Effect = 2,
  eItemUseRestrict_Vip = 3,
  eItemUseRestrict_Gender = 4,
  eItemUseRestrict_GuildLevel = 5,
  eItemUseRestrict_ArenaRank = 6,
  eItemUseRestrict_CrusadeMax = 7,
  eItemUseRestrict_SecretHole = 8,
  eItemUseRestrict_Diagram = 9,
  eItemUseRestrict_MapStar = 10,
  eItemUseRestrict_DiamonCost = 11,
  eItemUseRestrict_Recharge = 12,
  eItemUseRestrict_Max = 13
};
bool eItemUseRestrict_IsValid(int value);
const eItemUseRestrict eItemUseRestrict_MIN = eItemUseRestrict_None;
const eItemUseRestrict eItemUseRestrict_MAX = eItemUseRestrict_Max;
const int eItemUseRestrict_ARRAYSIZE = eItemUseRestrict_MAX + 1;

const ::google::protobuf::EnumDescriptor* eItemUseRestrict_descriptor();
inline const ::std::string& eItemUseRestrict_Name(eItemUseRestrict value) {
  return ::google::protobuf::internal::NameOfEnum(
    eItemUseRestrict_descriptor(), value);
}
inline bool eItemUseRestrict_Parse(
    const ::std::string& name, eItemUseRestrict* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eItemUseRestrict>(
    eItemUseRestrict_descriptor(), name, value);
}
enum RetrieveActivity {
  RetrieveActivity_None = 0,
  RetrieveActivity_RebelBoss = 1,
  RetrieveActivity_Crusade = 2,
  RetrieveActivity_Rob = 3,
  RetrieveActivity_Arena = 4,
  RetrieveActivity_Ghost = 5,
  RetrieveActivity_Daily = 6,
  RetrieveActivity_Max = 7
};
bool RetrieveActivity_IsValid(int value);
const RetrieveActivity RetrieveActivity_MIN = RetrieveActivity_None;
const RetrieveActivity RetrieveActivity_MAX = RetrieveActivity_Max;
const int RetrieveActivity_ARRAYSIZE = RetrieveActivity_MAX + 1;

const ::google::protobuf::EnumDescriptor* RetrieveActivity_descriptor();
inline const ::std::string& RetrieveActivity_Name(RetrieveActivity value) {
  return ::google::protobuf::internal::NameOfEnum(
    RetrieveActivity_descriptor(), value);
}
inline bool RetrieveActivity_Parse(
    const ::std::string& name, RetrieveActivity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RetrieveActivity>(
    RetrieveActivity_descriptor(), name, value);
}
enum eRefershType {
  ePriceType_GeneralShop = 0,
  ePriceType_RebelShop = 1,
  ePriceType_BlackShop = 2,
  ePriceType_SportsShop = 3,
  ePriceType_GuildShop = 4,
  ePriceType_CrusadeShop = 5,
  ePriceType_InterplanetaryShop = 6,
  ePriceType_Treasure = 7,
  ePriceType_Conquer = 8,
  ePriceType_Elite = 9,
  ePriceType_ChangeName = 10,
  ePriceType_ChangePhoto = 11,
  ePriceType_GainTreasures = 12,
  ePriceType_BuyToken = 13,
  ePriceType_BuySkill = 14,
  ePriceType_ArenaTimes = 15,
  ePriceType_ResetArena = 16,
  ePriceType_Signin = 17,
  ePriceType_FriendEnergy = 18,
  ePriceType_SourceMapTimes = 19,
  ePriceType_AttackGuildMapTimes = 20,
  ePriceType_NoticeTimes = 21,
  ePriceType_SuppressTerritoryTimes = 22,
  ePriceType_DailyDiamonBoxTimes = 23,
  ePriceType_FirstCharge = 24,
  ePriceType_FailTimes = 25,
  ePriceType_DailyCopperBoxTimes = 26,
  ePriceType_GuildWarTimes = 27,
  ePriceType_ResetCrusadeTimes = 28,
  ePriceType_ArenaContinueWin = 29,
  ePriceType_EpicMapTimes = 30,
  ePriceType_GodMapTimes = 31,
  ePriceType_TurnTableTimes = 32,
  ePriceType_ServerWarTimes = 33,
  ePriceType_ServerWarWinTimes = 34,
  ePriceType_ServerWarFreeRefreshTimes = 35,
  ePriceType_ServerWarShop = 36,
  ePriceType_GlobalMailTime = 37,
  ePriceType_Charge = 40,
  ePriceType_TombMoveRefreshTime = 41,
  ePriceType_TombItemRefreshTime = 42,
  ePriceType_TombMoveBuyedTimes = 43,
  ePriceType_TombItemBuyedTimes = 44,
  ePriceType_STeamSourceTimes = 45,
  ePriceType_STeamWinTimes = 46,
  ePriceType_ServerGlobalShop = 47,
  ePriceType_TombShop = 48,
  ePriceType_SecretHoleTimes = 49,
  ePriceType_SecretHoleBox = 50,
  ePriceType_SecretHoleShop = 51,
  ePriceType_LegendMapTimes = 52,
  ePriceType_ReturnShop = 53,
  ePriceType_DailyAstrologyTimes = 54,
  ePriceType_AttackGuildMapRecoveryTime = 55,
  ePriceType_SecretHoleEliteTimes = 56,
  ePriceType_SuppressFriendTerritoryTimes = 57,
  ePriceType_WakeShop = 58,
  ePriceType_GeneralShopRecoveryTime = 59,
  ePriceType_Ghost = 60,
  ePriceType_Adventure = 61,
  ePriceType_Exercise = 62,
  ePriceType_AttackExercise = 63,
  ePriceType_WakeShopRecoveryTime = 64,
  ePriceType_NormalMapReset = 65,
  ePriceType_MonthSignInFill = 66,
  ePriceType_HelpWater = 67,
  ePriceType_BeHelpedWater = 68,
  ePriceType_AutoPlant = 69,
  ePriceType_WaterRecoveryTime = 70,
  ePriceType_Max = 128
};
bool eRefershType_IsValid(int value);
const eRefershType eRefershType_MIN = ePriceType_GeneralShop;
const eRefershType eRefershType_MAX = ePriceType_Max;
const int eRefershType_ARRAYSIZE = eRefershType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eRefershType_descriptor();
inline const ::std::string& eRefershType_Name(eRefershType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eRefershType_descriptor(), value);
}
inline bool eRefershType_Parse(
    const ::std::string& name, eRefershType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eRefershType>(
    eRefershType_descriptor(), name, value);
}
enum SourceType {
  SourceType_Invalid = 0,
  SourceType_Coin = 1,
  SourceType_Item = 2,
  SourceType_Hero = 3,
  SourceType_Equip = 4,
  SourceType_Card = 5,
  SourceType_Seed = 6,
  SourceType_Max = 7
};
bool SourceType_IsValid(int value);
const SourceType SourceType_MIN = SourceType_Invalid;
const SourceType SourceType_MAX = SourceType_Max;
const int SourceType_ARRAYSIZE = SourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SourceType_descriptor();
inline const ::std::string& SourceType_Name(SourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SourceType_descriptor(), value);
}
inline bool SourceType_Parse(
    const ::std::string& name, SourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SourceType>(
    SourceType_descriptor(), name, value);
}
enum CoinType {
  CoinType_Exp = 101,
  CoinType_TiLi = 102,
  CoinType_Copper = 103,
  CoinType_Diamonds = 104,
  CoinType_Conquer = 105,
  CoinType_Sports = 106,
  CoinType_Guild = 107,
  CoinType_Level = 108,
  CoinType_VipExp = 109,
  CoinType_VipLevel = 110,
  CoinType_TiLiMax = 111,
  CoinType_AvatarId = 112,
  CoinType_SkillPoint = 113,
  CoinType_Item = 114,
  CoinType_Energy = 115,
  CoinType_SkillPointMAX = 116,
  CoinType_PlayerGender = 117,
  CoinType_JingliMax = 118,
  CoinType_HeroExp = 119,
  CoinType_HeroSoul = 120,
  CoinType_Recharge = 121,
  CoinType_BattleValue = 122,
  CoinType_Exploits = 123,
  CoinType_RebelArmyFree = 124,
  CoinType_RebelArmyMax = 125,
  CoinType_DailyDiamondsConsume = 126,
  CoinType_GuildDevote = 127,
  CoinType_GuildDailyDevote = 128,
  CoinType_GuildTotalDevote = 129,
  CoinType_DailyRecharge = 130,
  CoinType_RaidTeamCount = 131,
  CoinType_TaskScore = 132,
  CoinType_GuildExp = 133,
  CoinType_GuildTechnologyExp = 134,
  CoinType_Crystal = 135,
  CoinType_ServerWarHonor = 136,
  CoinType_ServerWarScore = 137,
  CoinType_Charge = 138,
  CoinType_TeamScore = 139,
  CoinType_TeamHonor = 140,
  CoinType_Courage = 141,
  CoinType_TombMovePoint = 142,
  CoinType_TombItemPoint = 143,
  CoinType_Souljade = 144,
  CoinType_ArenaScore = 145,
  CoinType_ReturnScore = 146,
  CoinType_PatrolMinutes = 147,
  CoinType_Wake = 148,
  CoinType_GuildMapHarm = 149,
  CoinType_Achievement = 150,
  CoinType_Ghost = 151,
  CoinType_Adventures = 152,
  CoinType_Diagram = 153,
  CoinType_GuildFame = 154,
  CoinType_Max = 155
};
bool CoinType_IsValid(int value);
const CoinType CoinType_MIN = CoinType_Exp;
const CoinType CoinType_MAX = CoinType_Max;
const int CoinType_ARRAYSIZE = CoinType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoinType_descriptor();
inline const ::std::string& CoinType_Name(CoinType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoinType_descriptor(), value);
}
inline bool CoinType_Parse(
    const ::std::string& name, CoinType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoinType>(
    CoinType_descriptor(), name, value);
}
enum ShopType {
  ShopType_GeneralShop = 0,
  ShopType_RebelShop = 1,
  ShopType_BlackShop = 2,
  ShopType_SportsShop = 3,
  ShopType_GuildShop = 4,
  ShopType_CrusadeShop = 5,
  ShopType_StarShop = 6,
  ShopType_ArenaRank = 7,
  ShopType_GuildLevel = 8,
  ShopType_CrusadeMax = 9,
  ShopType_Crusade2 = 10,
  ShopType_Crusade3 = 11,
  ShopType_ServerWar = 12,
  ShopType_ServerTeam = 13,
  ShopType_ServerWarGlobal = 14,
  ShopType_Tomb = 15,
  ShopType_SecretHole = 16,
  ShopType_Return = 17,
  ShopType_SecretHole2 = 18,
  ShopType_SecretHole3 = 19,
  ShopType_SecretHole4 = 20,
  ShopType_HeroWake = 21,
  ShopType_Activity47Shop = 22,
  ShopType_Ghost = 23,
  ShopType_Adventures = 24,
  ShopType_Adventures2 = 25,
  ShopType_Adventures3 = 26,
  ShopType_BlackShop2 = 27,
  ShopType_Max = 28
};
bool ShopType_IsValid(int value);
const ShopType ShopType_MIN = ShopType_GeneralShop;
const ShopType ShopType_MAX = ShopType_Max;
const int ShopType_ARRAYSIZE = ShopType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ShopType_descriptor();
inline const ::std::string& ShopType_Name(ShopType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ShopType_descriptor(), value);
}
inline bool ShopType_Parse(
    const ::std::string& name, ShopType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ShopType>(
    ShopType_descriptor(), name, value);
}
enum emLobby2ClientErr {
  L2C_SUCCESS = 0,
  L2C_DB_LOST = 1,
  L2C_DB_TIMEDOUT = 2,
  L2C_DB_EXECERR = 3,
  L2C_DB_DATA = 4,
  L2C_GOLD_NOT_ENOUGH = 5,
  L2C_CASH_NOT_ENOUGH = 6,
  L2C_ITEM_NOT_FIND = 7,
  L2C_STAMINA_NOT_ENOUGH = 8,
  L2C_VIP_NOT_ENOUGH = 9,
  L2C_VERSION_NOT_MATCH = 10,
  L2C_AUTHERN_ERR = 11,
  L2C_LOBBYCREATECHAR_ERR = 12,
  L2C_DBCREATECHAR_ERR = 13,
  L2C_PLAYERLOCK_ERR = 14,
  L2C_ROLE_LOGINING = 15,
  L2C_CDING = 16,
  L2C_QUEUE = 17,
  L2C_HIRE_LIMIT = 18,
  L2C_BATTLE_ERROR = 19,
  L2C_NOT_MAIN_HERO = 20,
  L2C_HERO_STAR_MAX = 21,
  L2C_HERO_EXIST = 22,
  L2C_HERO_LEVEL_MAX = 23,
  L2C_HERO_NOT_EXIST = 24,
  L2C_HERO_IN_FORMATION = 25,
  L2C_HERO_FORCE_NOT_ENOUGH = 26,
  L2C_HERO_DEIFICATION_MAX = 27,
  L2C_HERO_ALREADY_AWAKE = 28,
  L2C_LEVEL_LIMIT = 29,
  L2C_DBLOADBAG_ERR = 30,
  L2C_BAG_NOT_LOAD = 31,
  L2C_BAG_NOT_ENOUGH = 32,
  L2C_LOBBYCREATEBAG_ERR = 33,
  L2C_NAME_REPEATED = 34,
  L2C_PHOTO_REPEATED = 35,
  L2C_SKILL_LV_MAX = 36,
  L2C_SKILL_NOT_ENOUGH = 37,
  L2C_NAME_LEN_ERROR = 38,
  L2C_ENTERCOUNT_MAX = 40,
  L2C_ENTERMAP_CD = 41,
  L2C_STAR_NOT_ENOUGH = 42,
  L2C_LEVEL_NOT_ENOUGH = 43,
  L2C_BUYMAPTIMES_LIMIT = 44,
  L2C_MAP_NOT_PASSED = 45,
  L2C_TODAY_NOT_OPEN = 46,
  L2C_MAP_PASSED = 47,
  L2C_QUEST_NOT_FINISH = 50,
  L2C_QUEST_NOT_FIND = 51,
  L2C_QUEST_REWARD_GOT = 52,
  L2C_NOT_ONLINE = 55,
  L2C_DIRTY_WORD = 56,
  L2C_NAME_LENGTH = 57,
  L2C_OPPONENT_FIGHTING = 60,
  L2C_ENERY_NOT_ENOUGH = 61,
  L2C_ARENA_CANTPKBOSS = 62,
  L2C_ARENA_TIMES_LIMIT = 63,
  L2C_ARENA_RANK_NOT_ENOUGH = 64,
  L2C_ENERGY_ALL_SEND = 69,
  L2C_FRIEND_MYSELF = 70,
  L2C_ALREADY_FRIEND = 71,
  L2C_FRIEND_NUM_MAX = 72,
  L2C_BLACK_LIST = 73,
  L2C_BLACK_LIST_MAX = 74,
  L2C_FRIEND_NOT_EXISTS = 75,
  L2C_FRIEND_IS_NOT_APPLY = 76,
  L2C_FRIEND_PARA_UNVALID = 77,
  L2C_BLACK_USER_IS_NOT_FRIEND = 78,
  L2C_ALREADY_ENERGY_LIMIT = 79,
  L2C_NO_FRIEND = 80,
  L2C_STRENG_MAX = 81,
  L2C_REFINE_MAX = 82,
  L2C_EQUIP_NOT_FOUND = 83,
  L2C_STRENG_DO_NOT_UPEQUIP = 84,
  L2C_EQUIP_ON_HERO = 85,
  L2C_REFINE_DO_NOT_UPEQUIP = 86,
  L2C_GOODS_NOT = 91,
  L2C_LIMIT_ERROR = 92,
  L2C_OTHER_FRIEND_NUM_MAX = 93,
  L2C_ITEM_NOT_ENOUGH = 100,
  L2C_ITEM_USE_RESTRICT = 101,
  L2C_EFFECT_NOT_ENOUGH = 102,
  L2C_GENDER_ERROR = 103,
  L2C_ITEM_CANNOT_USE = 104,
  L2C_CRUSADE_SWEEP_OVER = 106,
  L2C_CRUSADE_MAX_NOT_ENOUGH = 107,
  L2C_CRUSADE_ALL_PASSED = 108,
  L2C_CRUSADE_ERROR = 109,
  L2C_PLAYER_LEVEL_NOT_ENOUGH = 110,
  L2C_REWARD_ALREADY_GOT = 111,
  L2C_EXPEDITION_CHAPTER_ERROR = 112,
  L2C_EXPEDITION_SWEEP_CDING = 113,
  L2C_PASSWORD_TIMEOUT = 114,
  L2C_PASSWORD_LIMIT = 115,
  L2C_PASSWORD_USED = 116,
  L2C_PASSWORD_ERROR = 117,
  L2C_CHANNEL_ERROR = 118,
  L2C_GIFTCODE_GOT_LIMIT = 119,
  L2C_ACTIVITY_NOT_EXIST = 120,
  L2C_ACTIVITY_NOT_INTIME = 121,
  L2C_ACTIVITY_REWARD_GOT = 122,
  L2C_ACTIVITY_VALUE_NOT_ENOUGH = 123,
  L2C_ACTIVITY_CODE_NOT_EXIST = 124,
  L2C_ACTIVITY_REBATE_BUYED = 125,
  L2C_ACTIVITY_RECOMMID_ERROR = 126,
  L2C_ACTIVITY_RECOMMID_NOTSELF = 127,
  L2C_ACTIVITY_DEVICE_SAME = 128,
  L2C_ACTIVITY_CODE_GOT = 129,
  L2C_CHAPTER_STAR_NOT_ENOUGH = 130,
  L2C_CHAPTER_BOX_GOT = 131,
  L2C_SEVENDAY_NOT_COMPELETE = 132,
  L2C_SEVENDAY_NOT_TIME = 133,
  L2C_SEVENDAY_NOT_REMAIN = 134,
  L2C_SEVENDAY_USER_ALREADY = 135,
  L2C_REBELARMY_BOSS_NOT_ALIVE = 136,
  L2C_REBELARMY_BOSS_ATTACKING = 137,
  L2C_REBELARMY_BOSS_NO_SHARE = 138,
  L2C_REBELARMY_FREE_NOT_ENOUGH = 139,
  L2C_TARGET_USER_NOT_EXISTS = 140,
  L2C_RANK_OUT = 150,
  L2C_ACHIEVE_NOT_COMPLETE = 155,
  L2C_ACHIEVE_NOT_SELF = 156,
  L2C_ACHIEVE_GOT = 157,
  L2C_CHAT_LOCK = 160,
  L2C_CHAT_TIMEING = 161,
  L2C_CHAT_LEVEL_NOT_ENOUGH = 162,
  L2C_GUILD_MAP_NOT_ATTACK = 163,
  L2C_GUILD_MAP_TIME_ERROR = 164,
  L2C_GUILD_LEVEL_NOT_ENOUGH = 165,
  L2C_GUILD_MAP_ATTACK_LIMIT = 166,
  L2C_GUILD_MAP_REWARD_JOINNEW = 167,
  L2C_GUILD_MAP_REWARD_OTHER = 168,
  L2C_GUILD_MAP_ATTACK_TIMEOUT = 169,
  L2C_GUILD_NOT_EXIST = 170,
  L2C_GUILD_JOB_NOT_ENOUGH = 171,
  L2C_GUILD_ALREADY_EXIST = 172,
  L2C_GUILD_MEMBER_FULL = 173,
  L2C_GUILD_CANT_QUIT = 174,
  L2C_GUILD_MEMBER_NOT_EXIST = 175,
  L2C_GUILD_DEPUTY_FULL = 176,
  L2C_GUILD_APPLY_FULL = 177,
  L2C_GUILD_RITUAL_DONE = 178,
  L2C_GUILD_REWARD_GOT = 179,
  L2C_GUILD_REWARD_NOT_ENOUGH = 180,
  L2C_GUILD_MAP_SELECT_ERROR = 181,
  L2C_GUILD_MAP_SELECT_DONE = 182,
  L2C_GUILD_MAP_PASSED = 183,
  L2C_GUILD_MAP_ERROR = 184,
  L2C_GUILD_MAP_ATTACKING = 185,
  L2C_RAID_TEAM_ALREADY_APPLY = 186,
  L2C_RAID_TEAM_IN_REQUEST = 187,
  L2C_RAID_TEAM_ALREADY_JOIN = 188,
  L2C_RAID_TEAM_NOT_ONLINE = 189,
  L2C_RAID_TEAM_LV_NOT_ENOUGH = 190,
  L2C_RAID_TEAM_OPEN_TIME = 191,
  L2C_RAID_TEAM_ALREADY_CREATE = 192,
  L2C_RAID_TEAM_ALREADY_TEAM = 193,
  L2C_RAID_TEAM_NOT_CREATE = 194,
  L2C_RAID_TEAM_NOT_TEAM = 195,
  L2C_RAID_TEAM_NOT_LEADER = 196,
  L2C_RAID_TEAM_KICKED_NOT_TEAM = 197,
  L2C_RAID_TEAM_NOT_ENOUGH_NUMBER = 198,
  L2C_RAID_TEAM_APPLY_UNVALID = 199,
  L2C_MONTHCARD_END = 200,
  L2C_MONTHCARD_ALREADY = 201,
  L2C_ONLINETIME_NOT_ARRIVE = 202,
  L2C_ONLINEPRIZE_ALREADY = 203,
  L2C_GETREWARD_NOT_ENOUGH = 204,
  L2C_ROB_BOX_ERR = 210,
  L2C_ROB_AVOID_TIME = 211,
  L2C_ROB_DST_AVOID_TIME = 212,
  L2C_ROB_ONEKEY_ERROR = 213,
  L2C_NOTICE_TIMEOUT = 220,
  L2C_NOTICE_NO_ITEM = 221,
  L2C_NOTICE_ITEM_OVER = 222,
  L2C_NOTICE_ITEM_GOT = 223,
  L2C_NOTICE_ITEM_LIMIT = 224,
  L2C_GUILD_TERRITORY_PATROLED = 230,
  L2C_GUILD_TERRITORY_HERO_PATROLING = 231,
  L2C_GUILD_TERRITORY_NOT_EXIST = 232,
  L2C_GUILD_TERRITORY_NOT_FINISHED = 233,
  L2C_GUILD_TERRITORY_NOT_RIOTING = 234,
  L2C_GUILD_TERRITORY_SUPPRESS_LIMIT = 235,
  L2C_GUILD_TERRITORY_FINISHED = 236,
  L2C_ITEM_GLOBAL_LIMIT = 240,
  L2C_ITEM_PLAYER_LIMIT = 241,
  L2C_ITEM_USED_LIMIT = 242,
  L2C_GUILD_TECHNOLOGY_LEVEL_NOT_ENOUGH = 250,
  L2C_GUILD_TECHNOLOGY_EXP_NOT_ENOUGH = 251,
  L2C_GUILD_SKILL_UNLOCKED = 252,
  L2C_GUILD_SKILL_LOCKED = 253,
  L2C_GUILD_WAR_NOT_OPENING = 254,
  L2C_GUILD_WAR_ENEMY_SELECTED = 255,
  L2C_GUILD_WAR_ENEMY_CANT_SELECT = 256,
  L2C_GUILD_WAR_ENEMY_NOT_SELECT = 257,
  L2C_GUILD_WAR_OPPONENT_ERROR = 258,
  L2C_GUILD_WAR_ATTACK_TIMEOUT = 259,
  L2C_GUILD_WAR_JOIN_ERROR = 260,
  L2C_GUILD_WAR_ATTACK_LIMIT = 261,
  L2C_GUILD_EXP_NOT_ENOUGH = 262,
  L2C_MAIL_ITEM_NOTGOT = 270,
  L2C_TOMB_EVENT_NOT_DONE = 271,
  L2C_TOMB_MOVE_LIMIT = 272,
  L2C_RAID_TEAM_FULL = 300,
  L2C_BATTLE_NOT_SKIP = 301,
  L2C_HANDBOOK_MAX_LV = 320,
  L2C_SWAR_TIME_ERROR = 330,
  L2C_SWAR_REG_DONE = 331,
  L2C_SWAR_NOT_REG = 332,
  L2C_SWAR_FIGHTING = 333,
  L2C_SWAR_NO_ENEMY = 334,
  L2C_SWAR_ENEMY_WINED = 335,
  L2C_SWAR_REFRESH_LIMIT = 336,
  L2C_SWAR_ATTACK_LIMIT = 337,
  L2C_SWAR_ENEMY_ERROR = 338,
  L2C_FRIEND_LEVEL_NOT_ENGOUH = 339,
  L2C_STEAM_IN_TEAM = 340,
  L2C_STEAM_WAITING_EMPTY = 341,
  L2C_STEAM_FULL = 342,
  L2C_STEAM_NOT_EXIST = 343,
  L2C_STEAM_NOT_LEADER = 344,
  L2C_STEAM_NOT_ALLREADY = 345,
  L2C_STEAM_NOT_FULL = 346,
  L2C_STEAM_WAITING = 347,
  L2C_STEAM_NOT_INTIME = 348,
  L2C_STEAM_INVITE_CD = 349,
  L2C_SECRETHOLE_SELECTED = 350,
  L2C_SECRETHOLE_NOT_SELECT = 351,
  L2C_SECRETHOLE_CANT_SELECT = 352,
  L2C_SECRETHOLE_PASSED = 353,
  L2C_SECRETHOLE_ATTACK_ERROR = 354,
  L2C_SECRETHOLE_OPENBOX_ERROR = 355,
  L2C_SECRETHOLE_OPENBOX_LIMIT = 356,
  L2C_SECRETHOLE_ATTACK_LIMIT = 357,
  L2C_SECRETHOLE_STARS_NOT_ENOUGH = 358,
  L2C_SECRETHOLE_GOODS_NULL = 359,
  L2C_AUCTION_OVER = 360,
  L2C_AUCTION_TOTAL_LIMIT = 361,
  L2C_AUCTION_ONE_LIMIT = 362,
  L2C_SECRETHOLE_FLOOR_NOT_ENOUGH = 364,
  L2C_ARENASCORE_NOT_ENOUGH = 365,
  L2C_ARENASCORE_ALL_GOT = 366,
  L2C_RETURNSYSTEM_NOTTIME = 370,
  L2C_ASTROLOGYLUCKY_NOT_ENOUGH = 371,
  L2C_ASTROLOGYCOUNTRY_ERROR = 372,
  L2C_TERRITORY_NOT_PASSED = 373,
  L2C_PLAYER_TERRITORY_PATROLED = 374,
  L2C_PLAYER_TERRITORY_HERO_PATROLING = 375,
  L2C_TERRITORY_NOT_OVER = 376,
  L2C_PATROL_NOT_ENOUGH = 377,
  L2C_ATTACK_TIMES_NOT_ENOUGH = 378,
  L2C_SECRETHOLE_CANNOT_ATTACK_ID = 379,
  L2C_HEROWAKE_EQUIP_NOT_ENOUGH = 380,
  L2C_HEROWAKE_EQUIP_NOT_NEED = 381,
  L2C_HEROWAKE_EQUIP_WEARED = 382,
  L2C_HEROWAKE_GOODS_MARKED = 383,
  L2C_HEROWAKE_GOODS_NOT_MARK = 384,
  L2C_HEROWAKE_HAS_NO_OPERATE = 385,
  L2C_HEROWAKE_MAX_LEVEL = 386,
  L2C_MARKITEM_MAX_NUM = 387,
  L2C_HEROWAKE_NO_EQUIP_WEAR = 388,
  L2C_DiagramLevel_Max = 389,
  L2C_NOT_ACTIVATE_PRE_ACHIEVE = 390,
  L2C_CHAPTER_UNLOCK = 391,
  L2C_REFRESH_TIMES_NOT_ENOUGH = 392,
  L2C_NOT_ACTIVE_TITLE = 393,
  L2C_HAS_NO_BOSS = 394,
  L2C_BOSS_BE_DEFEATED = 395,
  L2C_DIAGRAMVALUE_NOT_ENOUGH = 396,
  L2C_ACTIVED_ACHIEVE = 397,
  L2C_TIMEOUT = 400,
  L2C_NO_QUEST = 401,
  L2C_REWARD_NONE = 405,
  L2C_TIME_NOT_ENOUGH = 403,
  L2C_TODAY_GOT = 404,
  L2C_NO_PRIVILEGE = 407,
  L2C_OFFLINEEXP_NONE = 408,
  L2C_SIGNIN_ALREADY = 410,
  L2C_NO_CHATPASSWORD = 411,
  L2C_SERVERCOMPARE_GOT = 412,
  L2C_SERVERCOMPARE_NOT_END = 413,
  L2C_SERVERCOMPARE_RANK = 414,
  L2C_SERVERCOMPARE_NO_COMPARE = 415,
  L2C_SERVERCOMPARE_MAP_STAR = 416,
  L2C_SERVERCOMPARE_DIAMON_COST = 417,
  L2C_SERVERCOMPARE_RECHARGE = 418,
  L2C_SERVERCOMPARE_OUTTIME = 419,
  L2C_OVERWHELM_NOT_OPEN = 420,
  L2C_PK_TARGET_SELF = 421,
  L2C_PLAYER_EXP_LIMIT = 422,
  L2C_EXPEDITION_NEEDNOT_RESET = 423,
  L2C_GROUND_NOT_EXIST = 430,
  L2C_GROUND_LOCK = 431,
  L2C_GROUND_NOT_RECLAIM = 432,
  L2C_SEED_NOT_GROW = 433,
  L2C_GROUND_NOT_IDLE = 434,
  L2C_GROUND_NOT_HARVEST = 435,
  L2C_GROUND_WATER_NOT_ENOUGH = 436,
  L2C_GROUND_WATER_MAX = 437,
  L2C_NOTICE_DO_NOT_THINK = 438,
  L2C_NOTICE_IS_THINKED = 439,
  L2C_HELP_WATER_TIMES_MAX = 440,
  L2C_BEHELPED_WATER_TIMES_MAX = 441,
  L2C_GROUND_AUTOPLANT_TIMES_MAX = 442,
  L2C_GROUND_NOT_RIPE = 443,
  L2C_FARMWELL_LEVEL_MAX = 444,
  L2C_DO_NOT_ENTER_FARM = 445,
  L2C_FARM_SIGNATURE_LEN_MAX = 446,
  L2C_FUNCTION_LIMIT = 450,
  L2C_NOT_IN_TIME_CHANGE = 451,
  L2C_CLIENT_NOT_ACTIVE = 1001,
  L2C_CLIENT_KICKED_OTHER = 1002,
  L2C_LOAD_CHARINFO_FAILED = 1003,
  L2C_LOAD_BAG_FAILED = 1004,
  L2C_LOAD_ADVANCEINFO_FAILED = 1005,
  L2C_KIECKED_BYGM = 1006,
  L2C_LOGIN_STATUS_ERROR = 1007,
  L2C_SERVER_LOADDB_ERROR = 1008,
  L2C_NOT_GM = 1010,
  L2C_AUTH_SEQUENCE = 1011,
  L2C_SYS_ERROR = 1020,
  L2C_CSV_ERROR = 1021,
  L2C_PARA_INVALID = 1022,
  L2C_INVALID_CMD = 1023,
  L2C_MAX_ERROR = 1024
};
bool emLobby2ClientErr_IsValid(int value);
const emLobby2ClientErr emLobby2ClientErr_MIN = L2C_SUCCESS;
const emLobby2ClientErr emLobby2ClientErr_MAX = L2C_MAX_ERROR;
const int emLobby2ClientErr_ARRAYSIZE = emLobby2ClientErr_MAX + 1;

const ::google::protobuf::EnumDescriptor* emLobby2ClientErr_descriptor();
inline const ::std::string& emLobby2ClientErr_Name(emLobby2ClientErr value) {
  return ::google::protobuf::internal::NameOfEnum(
    emLobby2ClientErr_descriptor(), value);
}
inline bool emLobby2ClientErr_Parse(
    const ::std::string& name, emLobby2ClientErr* value) {
  return ::google::protobuf::internal::ParseNamedEnum<emLobby2ClientErr>(
    emLobby2ClientErr_descriptor(), name, value);
}
enum EActTargetTimesType {
  EActTargetTimesType_None = 0,
  EActTargetTimesType_EquipDiamondsHire = 1,
  EActTargetTimesType_HeroDiamondsHire = 2,
  EActTargetTimesType_ArenaAttacked = 3,
  EActTargetTimesType_ArenaWin = 4,
  EActTargetTimesType_ArenaContinueWin = 5,
  EActTargetTimesType_RebelArmyAttacked = 6,
  EActTargetTimesType_RobTreasureAttacked = 7,
  EActTargetTimesType_CrusadeAttacked = 8,
  EActTargetTimesType_NormalMapWin = 9,
  EActTargetTimesType_CopyReset = 10,
  EActTargetTimesType_TreasureCombine = 11,
  EActTargetTimesType_ServerWarScoreAttack = 12,
  EActTargetTimesType_UpWings = 13,
  EActTargetTimesType_GeneralShopRefresh = 14,
  EActTargetTimesType_TeamRebel = 15,
  EActTargetTimesType_AstrologyHire = 16,
  EActTargetTimesType_RebelArmyKilled = 17,
  EActTargetTimesType_EliteCopyWin = 18,
  EActTargetTimesType_TurnTable = 19,
  EActTargetTimesType_GhostBox = 20,
  EActTargetTimesType_EpicCopyWin = 21,
  EActTargetTimesType_LegendCopyWin = 22,
  EActTargetTimesType_Collect = 23,
  EActTargetTimesType_Consume = 24,
  EActTargetTimesType_ChargeShopBuyItem = 31,
  EActTargetTimesType_Max = 32
};
bool EActTargetTimesType_IsValid(int value);
const EActTargetTimesType EActTargetTimesType_MIN = EActTargetTimesType_None;
const EActTargetTimesType EActTargetTimesType_MAX = EActTargetTimesType_Max;
const int EActTargetTimesType_ARRAYSIZE = EActTargetTimesType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EActTargetTimesType_descriptor();
inline const ::std::string& EActTargetTimesType_Name(EActTargetTimesType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EActTargetTimesType_descriptor(), value);
}
inline bool EActTargetTimesType_Parse(
    const ::std::string& name, EActTargetTimesType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EActTargetTimesType>(
    EActTargetTimesType_descriptor(), name, value);
}
enum ERankType {
  ERankType_None = 0,
  ERankType_PlayerLevel = 1,
  ERankType_AllHeroEffect = 2,
  ERankType_FiveHeroEffect = 3,
  ERankType_Weapon = 4,
  ERankType_Hero = 5,
  ERankType_CopyStars = 6,
  ERankType_NormalStars = 7,
  ERankType_EliteStars = 8,
  ERankType_Arena = 9,
  ERankType_Harm = 10,
  ERankType_Exploits = 11,
  ERankType_Guild = 12,
  ERankType_Crusade = 14,
  ERankType_Recharge = 15,
  ERankType_GuildWar = 16,
  ERankType_SecretHoleStar = 17,
  ERankType_RechargeScoreConsume = 18,
  ERankType_GoldConsume = 19,
  ERankType_GoldConsume2 = 20,
  ERankType_GuildMapHarm = 21,
  ERankType_Diagram = 22,
  ERankType_DiamonCost = 23,
  ERankType_Recharge2 = 24,
  ERankType_Max = 25
};
bool ERankType_IsValid(int value);
const ERankType ERankType_MIN = ERankType_None;
const ERankType ERankType_MAX = ERankType_Max;
const int ERankType_ARRAYSIZE = ERankType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERankType_descriptor();
inline const ::std::string& ERankType_Name(ERankType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERankType_descriptor(), value);
}
inline bool ERankType_Parse(
    const ::std::string& name, ERankType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERankType>(
    ERankType_descriptor(), name, value);
}
enum eActionType {
  RebelArmy = 1
};
bool eActionType_IsValid(int value);
const eActionType eActionType_MIN = RebelArmy;
const eActionType eActionType_MAX = RebelArmy;
const int eActionType_ARRAYSIZE = eActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eActionType_descriptor();
inline const ::std::string& eActionType_Name(eActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eActionType_descriptor(), value);
}
inline bool eActionType_Parse(
    const ::std::string& name, eActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eActionType>(
    eActionType_descriptor(), name, value);
}
enum eGuildJob {
  eGuildJob_None = 0,
  eGuildJob_Leader = 1,
  eGuildJob_Deputy = 2,
  eGuildJob_Elite = 3,
  eGuildJob_Member = 4,
  eGuildJob_Max = 5
};
bool eGuildJob_IsValid(int value);
const eGuildJob eGuildJob_MIN = eGuildJob_None;
const eGuildJob eGuildJob_MAX = eGuildJob_Max;
const int eGuildJob_ARRAYSIZE = eGuildJob_MAX + 1;

const ::google::protobuf::EnumDescriptor* eGuildJob_descriptor();
inline const ::std::string& eGuildJob_Name(eGuildJob value) {
  return ::google::protobuf::internal::NameOfEnum(
    eGuildJob_descriptor(), value);
}
inline bool eGuildJob_Parse(
    const ::std::string& name, eGuildJob* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eGuildJob>(
    eGuildJob_descriptor(), name, value);
}
enum RaidTeamOpt {
  RTO_ENTER = 0,
  RTO_CANCEL = 1,
  RTO_KICK_PERSON = 2,
  RTO_BATTLE_TIMER = 3,
  RTO_BATTLE_START = 4,
  RTO_AGREE = 5,
  RTO_REFUSE = 6
};
bool RaidTeamOpt_IsValid(int value);
const RaidTeamOpt RaidTeamOpt_MIN = RTO_ENTER;
const RaidTeamOpt RaidTeamOpt_MAX = RTO_REFUSE;
const int RaidTeamOpt_ARRAYSIZE = RaidTeamOpt_MAX + 1;

const ::google::protobuf::EnumDescriptor* RaidTeamOpt_descriptor();
inline const ::std::string& RaidTeamOpt_Name(RaidTeamOpt value) {
  return ::google::protobuf::internal::NameOfEnum(
    RaidTeamOpt_descriptor(), value);
}
inline bool RaidTeamOpt_Parse(
    const ::std::string& name, RaidTeamOpt* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RaidTeamOpt>(
    RaidTeamOpt_descriptor(), name, value);
}
enum RaidTeamNtf {
  RTN_DATA = 0,
  RTN_ENTER = 1,
  RTN_TEAM_CANCEL = 2,
  RTN_PERSON_CANCEL = 3,
  RTN_KICK_PERSON = 4,
  RTN_BATTLE_TIMER = 5,
  RTN_BATTLE_START = 6,
  RTN_BATTLE_RESTART = 7,
  RTN_REQUEST = 8,
  RTN_REFUSE = 9,
  RTN_REFUSED = 10
};
bool RaidTeamNtf_IsValid(int value);
const RaidTeamNtf RaidTeamNtf_MIN = RTN_DATA;
const RaidTeamNtf RaidTeamNtf_MAX = RTN_REFUSED;
const int RaidTeamNtf_ARRAYSIZE = RaidTeamNtf_MAX + 1;

const ::google::protobuf::EnumDescriptor* RaidTeamNtf_descriptor();
inline const ::std::string& RaidTeamNtf_Name(RaidTeamNtf value) {
  return ::google::protobuf::internal::NameOfEnum(
    RaidTeamNtf_descriptor(), value);
}
inline bool RaidTeamNtf_Parse(
    const ::std::string& name, RaidTeamNtf* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RaidTeamNtf>(
    RaidTeamNtf_descriptor(), name, value);
}
enum RaidTeamStatus {
  RTS_NONE = 0,
  RTS_READY = 1,
  RTS_BATTLEING = 2
};
bool RaidTeamStatus_IsValid(int value);
const RaidTeamStatus RaidTeamStatus_MIN = RTS_NONE;
const RaidTeamStatus RaidTeamStatus_MAX = RTS_BATTLEING;
const int RaidTeamStatus_ARRAYSIZE = RaidTeamStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* RaidTeamStatus_descriptor();
inline const ::std::string& RaidTeamStatus_Name(RaidTeamStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    RaidTeamStatus_descriptor(), value);
}
inline bool RaidTeamStatus_Parse(
    const ::std::string& name, RaidTeamStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RaidTeamStatus>(
    RaidTeamStatus_descriptor(), name, value);
}
enum eGuildMemberType {
  eGuildMemberType_None = 0,
  eGuildMemberType_New = 1,
  eGuildMemberType_Update = 2,
  eGuildMemberType_Quit = 3,
  eGuildMemberType_Apply = 4,
  eGuildMemberType_Max = 5
};
bool eGuildMemberType_IsValid(int value);
const eGuildMemberType eGuildMemberType_MIN = eGuildMemberType_None;
const eGuildMemberType eGuildMemberType_MAX = eGuildMemberType_Max;
const int eGuildMemberType_ARRAYSIZE = eGuildMemberType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eGuildMemberType_descriptor();
inline const ::std::string& eGuildMemberType_Name(eGuildMemberType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eGuildMemberType_descriptor(), value);
}
inline bool eGuildMemberType_Parse(
    const ::std::string& name, eGuildMemberType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eGuildMemberType>(
    eGuildMemberType_descriptor(), name, value);
}
enum eGuildStateType {
  eGuildStateType_None = 0,
  eGuildStateType_Ritual = 1,
  eGuildStateType_NewMember = 2,
  eGuildStateType_JobChange = 3,
  eGuildStateType_LeaderChange = 4,
  eGuildStateType_Max = 5
};
bool eGuildStateType_IsValid(int value);
const eGuildStateType eGuildStateType_MIN = eGuildStateType_None;
const eGuildStateType eGuildStateType_MAX = eGuildStateType_Max;
const int eGuildStateType_ARRAYSIZE = eGuildStateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eGuildStateType_descriptor();
inline const ::std::string& eGuildStateType_Name(eGuildStateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eGuildStateType_descriptor(), value);
}
inline bool eGuildStateType_Parse(
    const ::std::string& name, eGuildStateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eGuildStateType>(
    eGuildStateType_descriptor(), name, value);
}
enum ePrizeGet {
  ePrizeGet_None = 0,
  ePrizeGet_OnlineGift = 1,
  ePrizeGet_TaskScore = 2,
  ePrizeGet_GuildMapReward = 3,
  ePrizeGet_GuildTechnologyReward = 4,
  ePrizeGet_FunctionReward = 5,
  ePrizeGet_ArenaScore = 6,
  ePrizeGet_GuildCopyPassReward = 7,
  ePrizeGet_MonthSignIn = 8,
  ePrizeGet_Max = 9
};
bool ePrizeGet_IsValid(int value);
const ePrizeGet ePrizeGet_MIN = ePrizeGet_None;
const ePrizeGet ePrizeGet_MAX = ePrizeGet_Max;
const int ePrizeGet_ARRAYSIZE = ePrizeGet_MAX + 1;

const ::google::protobuf::EnumDescriptor* ePrizeGet_descriptor();
inline const ::std::string& ePrizeGet_Name(ePrizeGet value) {
  return ::google::protobuf::internal::NameOfEnum(
    ePrizeGet_descriptor(), value);
}
inline bool ePrizeGet_Parse(
    const ::std::string& name, ePrizeGet* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ePrizeGet>(
    ePrizeGet_descriptor(), name, value);
}
enum GuildTerritoryEventType {
  GuildTerritoryEventType_None = 0,
  GuildTerritoryEventType_Rioting = 1,
  GuildTerritoryEventType_RiotDone = 2,
  GuildTerritoryEventType_NotHappen = 3,
  GuildTerritoryEventType_Max = 4
};
bool GuildTerritoryEventType_IsValid(int value);
const GuildTerritoryEventType GuildTerritoryEventType_MIN = GuildTerritoryEventType_None;
const GuildTerritoryEventType GuildTerritoryEventType_MAX = GuildTerritoryEventType_Max;
const int GuildTerritoryEventType_ARRAYSIZE = GuildTerritoryEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildTerritoryEventType_descriptor();
inline const ::std::string& GuildTerritoryEventType_Name(GuildTerritoryEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildTerritoryEventType_descriptor(), value);
}
inline bool GuildTerritoryEventType_Parse(
    const ::std::string& name, GuildTerritoryEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildTerritoryEventType>(
    GuildTerritoryEventType_descriptor(), name, value);
}
enum PlayerTerritoryEventType {
  PlayerTerritoryEventType_None = 0,
  PlayerTerritoryEventType_Rioting = 1,
  PlayerTerritoryEventType_RiotDone = 2,
  PlayerTerritoryEventType_Max = 3
};
bool PlayerTerritoryEventType_IsValid(int value);
const PlayerTerritoryEventType PlayerTerritoryEventType_MIN = PlayerTerritoryEventType_None;
const PlayerTerritoryEventType PlayerTerritoryEventType_MAX = PlayerTerritoryEventType_Max;
const int PlayerTerritoryEventType_ARRAYSIZE = PlayerTerritoryEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerTerritoryEventType_descriptor();
inline const ::std::string& PlayerTerritoryEventType_Name(PlayerTerritoryEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerTerritoryEventType_descriptor(), value);
}
inline bool PlayerTerritoryEventType_Parse(
    const ::std::string& name, PlayerTerritoryEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerTerritoryEventType>(
    PlayerTerritoryEventType_descriptor(), name, value);
}
enum eItemType {
  eItemTypeNone = 0,
  eItemTypeHeroChip = 1,
  eItemTypeStrength = 2,
  eItemTypeMaterial = 3,
  eItemTypeScroll = 4,
  eItemTypeConsume = 5,
  eItemTypeEquipChip = 6,
  eItemTypeMaterial2 = 7,
  eItemTypeRecruit = 9,
  eItemTypeFashion = 10,
  eItemTypeTreasure = 11,
  eItemType_Max = 12
};
bool eItemType_IsValid(int value);
const eItemType eItemType_MIN = eItemTypeNone;
const eItemType eItemType_MAX = eItemType_Max;
const int eItemType_ARRAYSIZE = eItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eItemType_descriptor();
inline const ::std::string& eItemType_Name(eItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eItemType_descriptor(), value);
}
inline bool eItemType_Parse(
    const ::std::string& name, eItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eItemType>(
    eItemType_descriptor(), name, value);
}
enum eUseItem {
  eUseItemRob = 1
};
bool eUseItem_IsValid(int value);
const eUseItem eUseItem_MIN = eUseItemRob;
const eUseItem eUseItem_MAX = eUseItemRob;
const int eUseItem_ARRAYSIZE = eUseItem_MAX + 1;

const ::google::protobuf::EnumDescriptor* eUseItem_descriptor();
inline const ::std::string& eUseItem_Name(eUseItem value) {
  return ::google::protobuf::internal::NameOfEnum(
    eUseItem_descriptor(), value);
}
inline bool eUseItem_Parse(
    const ::std::string& name, eUseItem* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eUseItem>(
    eUseItem_descriptor(), name, value);
}
enum EReason {
  EReason_None = 0,
  EReason_Default = 1,
  EReason_Add_GM = 2,
  EReason_Add_NewPlayer = 3,
  EReason_Add_SaleItem = 4,
  EReason_Add_OpenBoxCopper = 5,
  EReason_Add_OpenBoxDiamons = 6,
  EReason_Add_Expedition = 7,
  EReason_Add_Map = 8,
  EReason_Add_ComposeItem = 9,
  EReason_Add_UsedItem = 10,
  EReason_Add_ShopBuy = 11,
  EReason_Add_FriendEnergy = 12,
  EReason_Add_Activity = 13,
  EReason_Add_Resolve = 14,
  EReason_Add_Task = 15,
  EReason_Add_ChapterBox = 16,
  EReason_Add_Mail = 17,
  EReason_Add_Arena = 18,
  EReason_Add_SignIn = 19,
  EReason_Add_SaleEquip = 20,
  EReason_Add_RechargeShop = 21,
  EReason_Add_RebelArmy = 22,
  EReason_Add_Achieve = 23,
  EReason_Add_Guild = 24,
  EReason_Add_GuildRitual = 25,
  EReason_Add_RaidTeam = 26,
  EReason_Add_MonthCard = 27,
  EReason_Add_OnlineGift = 28,
  EReason_Add_TaskScore = 29,
  EReason_Add_RmbRecharge = 30,
  EReason_Add_Notice = 31,
  EReason_Add_Evolution = 32,
  EReason_Add_HeroForce = 33,
  EReason_Add_Rob = 34,
  EReason_Add_SevenDay = 35,
  EReason_Add_HalfBuy = 36,
  EReason_Add_Shop1 = 41,
  EReason_Add_Shop2 = 42,
  EReason_Add_Shop3 = 43,
  EReason_Add_Shop4 = 44,
  EReason_Add_Shop5 = 45,
  EReason_Add_Shop6 = 46,
  EReason_Add_Shop7 = 47,
  EReason_Add_Shop8 = 48,
  EReason_Add_Shop9 = 49,
  EReason_Add_Shop10 = 50,
  EReason_Add_Shop11 = 51,
  EReason_Add_Shop12 = 52,
  EReason_Add_Shop13 = 53,
  EReason_Add_Shop14 = 54,
  EReason_Add_Shop15 = 55,
  EReason_Add_Shop16 = 56,
  EReason_Add_Shop17 = 57,
  EReason_Add_Shop18 = 58,
  EReason_Add_Shop19 = 59,
  EReason_Add_Shop20 = 60,
  EReason_Add_GuildTerritory = 61,
  EReason_Add_UpPosition = 62,
  EReason_Add_Opt = 63,
  EReason_Add_GuildWar = 64,
  EReason_Add_GuildTechnolog = 65,
  EReason_Add_NormalMap = 71,
  EReason_Add_EliteMap = 72,
  EReason_Add_SourceMap = 73,
  EReason_Add_EpicMap = 74,
  EReason_Add_GodMap = 75,
  EReason_Add_LegendMap = 76,
  EReason_Add_LegendChapterBox = 80,
  EReason_Add_NormalChapterBox = 81,
  EReason_Add_EliteChapterBox = 82,
  EReason_Add_EpicChapterBox = 84,
  EReason_Add_ServerWar = 85,
  EReason_Add_TurnTable = 86,
  EReason_Add_ServerTeam = 87,
  EReason_Add_HeroAwake = 88,
  EReason_Add_Tomb = 89,
  EReason_Add_FuncReward = 90,
  EReason_Add_SecretHole = 91,
  EReason_Add_SevenBuy = 92,
  EReason_Add_ArenaScore = 93,
  EReason_Add_ReturnSystem = 94,
  EReason_Add_BuyPriceTimes = 95,
  EReason_Add_OpenBoxAstrology = 96,
  EReason_Add_SaleHero = 97,
  EReason_Add_AstrologyLucky = 98,
  EReason_Add_PlayerTerritory = 99,
  EReason_Add_BatchResolve = 100,
  EReason_Add_ActivityBegin = 200,
  EReason_Add_Activity1 = 201,
  EReason_Add_Activity2 = 202,
  EReason_Add_Activity3 = 203,
  EReason_Add_Activity4 = 204,
  EReason_Add_Activity5 = 205,
  EReason_Add_Activity6 = 206,
  EReason_Add_Activity7 = 207,
  EReason_Add_Activity8 = 208,
  EReason_Add_Activity9 = 209,
  EReason_Add_Activity10 = 210,
  EReason_Add_Activity11 = 211,
  EReason_Add_Activity12 = 212,
  EReason_Add_Activity13 = 213,
  EReason_Add_Activity14 = 214,
  EReason_Add_Activity15 = 215,
  EReason_Add_Activity16 = 216,
  EReason_Add_Activity17 = 217,
  EReason_Add_Activity18 = 218,
  EReason_Add_Activity19 = 219,
  EReason_Add_Activity20 = 220,
  EReason_Add_Activity21 = 221,
  EReason_Add_Activity22 = 222,
  EReason_Add_Activity23 = 223,
  EReason_Add_Activity24 = 224,
  EReason_Add_Activity25 = 225,
  EReason_Add_Activity26 = 226,
  EReason_Add_Activity27 = 227,
  EReason_Add_Activity28 = 228,
  EReason_Add_Activity29 = 229,
  EReason_Add_Activity30 = 230,
  EReason_Add_Activity31 = 231,
  EReason_Add_Activity32 = 232,
  EReason_Add_Activity33 = 233,
  EReason_Add_Activity34 = 234,
  EReason_Add_Activity35 = 235,
  EReason_Add_Activity36 = 236,
  EReason_Add_Activity37 = 237,
  EReason_Add_Activity38 = 238,
  EReason_Add_Activity39 = 239,
  EReason_Add_Activity40 = 240,
  EReason_Add_Activity41 = 241,
  EReason_Add_Activity42 = 242,
  EReason_Add_Activity43 = 243,
  EReason_Add_Activity44 = 244,
  EReason_Add_Activity45 = 245,
  EReason_Add_Activity46 = 246,
  EReason_Add_Activity47 = 247,
  EReason_Add_Activity48 = 248,
  EReason_Add_ActivityEnd = 299,
  EReason_Add_SecretHoleElite = 300,
  EReason_Add_SynWakeEquip = 301,
  EReason_Add_UpgradeDiagram = 302,
  EReason_Add_AttackExercise = 303,
  EReason_Add_OpenBoxGhost = 304,
  EReason_Add_AttackEpicBoss = 305,
  EReason_Add_GuildCity = 306,
  EReason_Add_Sevengifts = 308,
  EReason_Add_OnlineReward = 309,
  EReason_Add_AccCoin = 310,
  EReason_Add_MonthSignIn = 311,
  EReason_Add_Retrieve = 313,
  EReason_Add_RetrieveAll = 314,
  EReason_Add_ServerCompare = 319,
  EReason_Add_FarmHarvest = 320,
  EReason_Add_FarmHelpWater = 321,
  EReason_Add_FarmThink = 322,
  EReason_Add_FarmThinked = 323,
  EReason_Add_Shop21 = 361,
  EReason_Add_Shop22 = 362,
  EReason_Add_Shop23 = 363,
  EReason_Add_Shop24 = 364,
  EReason_Add_Shop25 = 365,
  EReason_Add_Shop26 = 366,
  EReason_Add_Shop27 = 367,
  EReason_Add_Shop28 = 368,
  EReason_Add_Shop29 = 369,
  EReason_Add_Shop30 = 370,
  EReason_Add_Shop31 = 371,
  EReason_Add_Shop32 = 372,
  EReason_Add_Shop33 = 373,
  EReason_Add_Shop34 = 374,
  EReason_Add_Shop35 = 375,
  EReason_Add_Shop36 = 376,
  EReason_Add_Shop37 = 377,
  EReason_Add_Shop38 = 378,
  EReason_Add_Shop39 = 379,
  EReason_Add_Shop40 = 380,
  EReason_Add_ShopMax = 399,
  EReason_Add_Robot = 400,
  EReason_Add_Max = 999,
  EReason_Reduce_None = 1000,
  EReason_Reduce_ForceNature = 1001,
  EReason_Reduce_OpenBoxCopper = 1002,
  EReason_Reduce_OpenBoxDiamons = 1003,
  EReason_Reduce_ChangeName = 1004,
  EReason_Reduce_ChangePhoto = 1005,
  EReason_Reduce_BuySkillPoint = 1006,
  EReason_Reduce_SaleItem = 1007,
  EReason_Reduce_Map = 1008,
  EReason_Reduce_ComposeItem = 1009,
  EReason_Reduce_UsedItem = 1010,
  EReason_Reduce_ResetMapTimes = 1011,
  EReason_Reduce_HeroEvolution = 1012,
  EReason_Reduce_HeroExp = 1013,
  EReason_Reduce_HeroForce = 1014,
  EReason_Reduce_HeroNatrue = 1015,
  EReason_Reduce_EquipForce = 1016,
  EReason_Reduce_EquipRefine = 1017,
  EReason_Reduce_ShopBuy = 1018,
  EReason_Reduce_ShopRefresh = 1019,
  EReason_Reduce_Arena = 1020,
  EReason_Reduce_Activity = 1021,
  EReason_Reduce_Resolve = 1022,
  EReason_Reduce_RechargeShop = 1023,
  EReason_Reduce_RebelArmy = 1024,
  EReason_Reduce_Guild = 1025,
  EReason_Reduce_GuildRitual = 1026,
  EReason_Reduce_BuyMapTimes = 1027,
  EReason_Reduce_Rob = 1028,
  EReason_Reduce_BuyPriceTimes = 1029,
  EReason_Reduce_UpPosition = 1030,
  EReason_Reduce_RaidTeam = 1031,
  EReason_Reduce_HalfBuy = 1032,
  EReason_Reduce_GuildSkill = 1033,
  EReason_Reduce_CrusadeReset = 1034,
  EReason_Reduce_HandBook = 1035,
  EReason_Reduce_HeroDeification = 1036,
  EReason_Reduce_Shop1 = 1041,
  EReason_Reduce_Shop2 = 1042,
  EReason_Reduce_Shop3 = 1043,
  EReason_Reduce_Shop4 = 1044,
  EReason_Reduce_Shop5 = 1045,
  EReason_Reduce_Shop6 = 1046,
  EReason_Reduce_Shop7 = 1047,
  EReason_Reduce_Shop8 = 1048,
  EReason_Reduce_Shop9 = 1049,
  EReason_Reduce_Shop10 = 1050,
  EReason_Reduce_Shop11 = 1051,
  EReason_Reduce_Shop12 = 1052,
  EReason_Reduce_Shop13 = 1053,
  EReason_Reduce_Shop14 = 1054,
  EReason_Reduce_Shop15 = 1055,
  EReason_Reduce_Shop16 = 1056,
  EReason_Reduce_Shop17 = 1057,
  EReason_Reduce_Shop18 = 1058,
  EReason_Reduce_Shop19 = 1059,
  EReason_Reduce_Shop20 = 1060,
  EReason_Reduce_ServerWar = 1061,
  EReason_Reduce_TurnTable = 1062,
  EReason_Reduce_SecretHole = 1063,
  EReason_Reduce_GM = 1070,
  EReason_Reduce_Tomb = 1071,
  EReason_Reduce_HeroUpWings = 1072,
  EReason_Reduce_EquipEvolve = 1073,
  EReason_Reduce_EquipAwake = 1074,
  EReason_Reduce_SevenBuy = 1075,
  EReason_Reduce_OpenBoxAstrology = 1076,
  EReason_Reduce_SaleHero = 1077,
  EReason_Reduce_AddHeroExp = 1078,
  EReason_Reduce_TreasureStreng = 1079,
  EReason_Reduce_TreasureRefine = 1080,
  EReason_Reduce_PlayerTerritory = 1081,
  EReason_Reduce_BatchResolve = 1082,
  EReason_Reduce_MonthSignIn = 1083,
  EReason_Reduce_OneKeyResetSweep = 1084,
  EReason_Reduce_ActivityBegin = 1200,
  EReason_Reduce_Activity1 = 1201,
  EReason_Reduce_Activity2 = 1202,
  EReason_Reduce_Activity3 = 1203,
  EReason_Reduce_Activity4 = 1204,
  EReason_Reduce_Activity5 = 1205,
  EReason_Reduce_Activity6 = 1206,
  EReason_Reduce_Activity7 = 1207,
  EReason_Reduce_Activity8 = 1208,
  EReason_Reduce_Activity9 = 1209,
  EReason_Reduce_Activity10 = 1210,
  EReason_Reduce_Activity11 = 1211,
  EReason_Reduce_Activity12 = 1212,
  EReason_Reduce_Activity13 = 1213,
  EReason_Reduce_Activity14 = 1214,
  EReason_Reduce_Activity15 = 1215,
  EReason_Reduce_Activity16 = 1216,
  EReason_Reduce_Activity17 = 1217,
  EReason_Reduce_Activity18 = 1218,
  EReason_Reduce_Activity19 = 1219,
  EReason_Reduce_Activity20 = 1220,
  EReason_Reduce_Activity21 = 1221,
  EReason_Reduce_Activity22 = 1222,
  EReason_Reduce_Activity23 = 1223,
  EReason_Reduce_Activity24 = 1224,
  EReason_Reduce_Activity25 = 1225,
  EReason_Reduce_Activity26 = 1226,
  EReason_Reduce_Activity27 = 1227,
  EReason_Reduce_Activity28 = 1228,
  EReason_Reduce_Activity29 = 1229,
  EReason_Reduce_Activity30 = 1230,
  EReason_Reduce_Activity31 = 1231,
  EReason_Reduce_Activity32 = 1232,
  EReason_Reduce_Activity33 = 1233,
  EReason_Reduce_Activity34 = 1234,
  EReason_Reduce_Activity35 = 1235,
  EReason_Reduce_Activity36 = 1236,
  EReason_Reduce_Activity37 = 1237,
  EReason_Reduce_Activity38 = 1238,
  EReason_Reduce_Activity39 = 1239,
  EReason_Reduce_Activity40 = 1240,
  EReason_Reduce_Activity41 = 1241,
  EReason_Reduce_Activity42 = 1242,
  EReason_Reduce_Activity43 = 1243,
  EReason_Reduce_Activity44 = 1244,
  EReason_Reduce_Activity45 = 1245,
  EReason_Reduce_Activity46 = 1246,
  EReason_Reduce_Activity47 = 1247,
  EReason_Reduce_Activity48 = 1248,
  EReason_Reduce_Activity49 = 1249,
  EReason_Reduce_ActivityEnd = 1299,
  EReason_Reduce_UpgradeWakeLevel = 1300,
  EReason_Reduce_SynWakeEquip = 1301,
  EReason_Reduce_UpgradeDiagram = 1302,
  EReason_Reduce_OpenBoxGhost = 1303,
  EReason_Reduce_WearWakeEquip = 1304,
  EReason_Reduce_RefreshExerciseBoss = 1305,
  EReason_Reduce_AttackEpicBoss = 1306,
  EReason_Reduce_GuildCity = 1307,
  EReason_Reduce_Retrieve = 1309,
  EReason_Reduce_RetrieveAll = 1340,
  EReason_Reduce_ChatPasswd = 1341,
  EReason_Reduce_FarmRipe = 1342,
  EReason_Reduce_FarmRipeAll = 1343,
  EReason_Reduce_FarmUpWell = 1344,
  EReason_Reduce_ChangeNational = 1345,
  EReason_Reduce_FarmPlantGround = 1346,
  EReason_Reduce_FarmOneKeyPlant = 1347,
  EReason_Reduce_FarmReclaimGround = 1348,
  EReason_Reduce_Shop21 = 1361,
  EReason_Reduce_Shop22 = 1362,
  EReason_Reduce_Shop23 = 1363,
  EReason_Reduce_Shop24 = 1364,
  EReason_Reduce_Shop25 = 1365,
  EReason_Reduce_Shop26 = 1366,
  EReason_Reduce_Shop27 = 1367,
  EReason_Reduce_Shop28 = 1368,
  EReason_Reduce_Shop29 = 1369,
  EReason_Reduce_Shop30 = 1370,
  EReason_Reduce_Shop31 = 1371,
  EReason_Reduce_Shop32 = 1372,
  EReason_Reduce_Shop33 = 1373,
  EReason_Reduce_Shop34 = 1374,
  EReason_Reduce_Shop35 = 1375,
  EReason_Reduce_Shop36 = 1376,
  EReason_Reduce_Shop37 = 1377,
  EReason_Reduce_Shop38 = 1378,
  EReason_Reduce_Shop39 = 1379,
  EReason_Reduce_Shop40 = 1380,
  EReason_Reduce_ShopMax = 1399,
  EReason_Max = 1999
};
bool EReason_IsValid(int value);
const EReason EReason_MIN = EReason_None;
const EReason EReason_MAX = EReason_Max;
const int EReason_ARRAYSIZE = EReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* EReason_descriptor();
inline const ::std::string& EReason_Name(EReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    EReason_descriptor(), value);
}
inline bool EReason_Parse(
    const ::std::string& name, EReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EReason>(
    EReason_descriptor(), name, value);
}
enum eNoticeType {
  eNoticeType_None = 0,
  eNoticeType_EquipQuality = 1,
  eNoticeType_TreasureQuality = 2,
  eNoticeType_HeroStar = 3,
  eNoticeType_HeroForce = 4,
  eNoticeType_HeroEvolution = 5,
  eNoticeType_RebelArmyBoss = 6,
  eNoticeType_Recharge = 7,
  eNoticeType_UseItem = 8,
  eNoticeType_CreateGuild = 9,
  eNoticeType_Custom = 10,
  eNoticeType_OpenBox = 11,
  eNoticeType_Max = 12
};
bool eNoticeType_IsValid(int value);
const eNoticeType eNoticeType_MIN = eNoticeType_None;
const eNoticeType eNoticeType_MAX = eNoticeType_Max;
const int eNoticeType_ARRAYSIZE = eNoticeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eNoticeType_descriptor();
inline const ::std::string& eNoticeType_Name(eNoticeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eNoticeType_descriptor(), value);
}
inline bool eNoticeType_Parse(
    const ::std::string& name, eNoticeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eNoticeType>(
    eNoticeType_descriptor(), name, value);
}
enum eGameModuleType {
  eGameModuleType_None = 0,
  eGameModuleType_NomalMap = 1,
  eGameModuleType_EliteMap = 2,
  eGameModuleType_SourceMap = 3,
  eGameModuleType_Arena = 4,
  eGameModuleType_Expedition = 5,
  eGameModuleType_RebelArmy = 6,
  eGameModuleType_Treasure = 7,
  eGameModuleType_GuildWar = 8,
  eGameModuleType_EpicMap = 14,
  eGameModuleType_GodMap = 15,
  eGameModuleType_SecretHole = 16,
  eGameModuleType_ServerTeam = 17,
  eGameModuleType_LegendMap = 18,
  eGameModuleType_Max = 19
};
bool eGameModuleType_IsValid(int value);
const eGameModuleType eGameModuleType_MIN = eGameModuleType_None;
const eGameModuleType eGameModuleType_MAX = eGameModuleType_Max;
const int eGameModuleType_ARRAYSIZE = eGameModuleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eGameModuleType_descriptor();
inline const ::std::string& eGameModuleType_Name(eGameModuleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eGameModuleType_descriptor(), value);
}
inline bool eGameModuleType_Parse(
    const ::std::string& name, eGameModuleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eGameModuleType>(
    eGameModuleType_descriptor(), name, value);
}
enum eDropType {
  eDropType_None = 0,
  eDropType_Drop = 1,
  eDropType_Common = 2
};
bool eDropType_IsValid(int value);
const eDropType eDropType_MIN = eDropType_None;
const eDropType eDropType_MAX = eDropType_Common;
const int eDropType_ARRAYSIZE = eDropType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eDropType_descriptor();
inline const ::std::string& eDropType_Name(eDropType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eDropType_descriptor(), value);
}
inline bool eDropType_Parse(
    const ::std::string& name, eDropType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eDropType>(
    eDropType_descriptor(), name, value);
}
enum EServerWarStatus {
  EServerWarStatus_None = 0,
  EServerWarStatus_ScoreReg = 1,
  EServerWarStatus_Scoreing = 2,
  EServerWarStatus_ScoreEnd = 3,
  EServerWarStatus_Fighting = 4,
  EServerWarStatus_FightEnd = 5,
  EServerWarStatus_Max = 6
};
bool EServerWarStatus_IsValid(int value);
const EServerWarStatus EServerWarStatus_MIN = EServerWarStatus_None;
const EServerWarStatus EServerWarStatus_MAX = EServerWarStatus_Max;
const int EServerWarStatus_ARRAYSIZE = EServerWarStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EServerWarStatus_descriptor();
inline const ::std::string& EServerWarStatus_Name(EServerWarStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EServerWarStatus_descriptor(), value);
}
inline bool EServerWarStatus_Parse(
    const ::std::string& name, EServerWarStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EServerWarStatus>(
    EServerWarStatus_descriptor(), name, value);
}
enum ECountryType {
  ECountryType_None = 0,
  ECountryType_Wei = 1,
  ECountryType_Shu = 2,
  ECountryType_Wu = 3,
  ECountryType_Qun = 4,
  ECountryType_Max = 5
};
bool ECountryType_IsValid(int value);
const ECountryType ECountryType_MIN = ECountryType_None;
const ECountryType ECountryType_MAX = ECountryType_Max;
const int ECountryType_ARRAYSIZE = ECountryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECountryType_descriptor();
inline const ::std::string& ECountryType_Name(ECountryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECountryType_descriptor(), value);
}
inline bool ECountryType_Parse(
    const ::std::string& name, ECountryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECountryType>(
    ECountryType_descriptor(), name, value);
}
enum ETombEventType {
  ETombEventType_None = 0,
  ETombEventType_Source = 1,
  ETombEventType_Player = 2,
  ETombEventType_Jiguan = 3,
  ETombEventType_Max = 4
};
bool ETombEventType_IsValid(int value);
const ETombEventType ETombEventType_MIN = ETombEventType_None;
const ETombEventType ETombEventType_MAX = ETombEventType_Max;
const int ETombEventType_ARRAYSIZE = ETombEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETombEventType_descriptor();
inline const ::std::string& ETombEventType_Name(ETombEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETombEventType_descriptor(), value);
}
inline bool ETombEventType_Parse(
    const ::std::string& name, ETombEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETombEventType>(
    ETombEventType_descriptor(), name, value);
}
enum EServerTeamOpType {
  EServerTeamOpType_None = 0,
  EServerTeamOpType_Create = 1,
  EServerTeamOpType_Join = 2,
  EServerTeamOpType_Quit = 3,
  EServerTeamOpType_InviteAll = 4,
  EServerTeamOpType_DoReady = 5,
  EServerTeamOpType_BeginFight = 6,
  EServerTeamOpType_Kick = 7,
  EServerTeamOpType_Online = 8,
  EServerTeamOpType_Max = 9
};
bool EServerTeamOpType_IsValid(int value);
const EServerTeamOpType EServerTeamOpType_MIN = EServerTeamOpType_None;
const EServerTeamOpType EServerTeamOpType_MAX = EServerTeamOpType_Max;
const int EServerTeamOpType_ARRAYSIZE = EServerTeamOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EServerTeamOpType_descriptor();
inline const ::std::string& EServerTeamOpType_Name(EServerTeamOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EServerTeamOpType_descriptor(), value);
}
inline bool EServerTeamOpType_Parse(
    const ::std::string& name, EServerTeamOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EServerTeamOpType>(
    EServerTeamOpType_descriptor(), name, value);
}
enum ELanguage {
  ELanguage_None = 0,
  ELanguage_zh_cn = 1,
  ELanguage_zh_tw = 2,
  ELanguage_en_us = 3,
  ELanguage_th_th = 4,
  ELanguage_vi_vn = 5,
  ELanguage_ja_jp = 6,
  ELanguage_ko_kr = 7,
  ELanguage_zh_hk = 8,
  ELanguage_max = 9
};
bool ELanguage_IsValid(int value);
const ELanguage ELanguage_MIN = ELanguage_None;
const ELanguage ELanguage_MAX = ELanguage_max;
const int ELanguage_ARRAYSIZE = ELanguage_MAX + 1;

const ::google::protobuf::EnumDescriptor* ELanguage_descriptor();
inline const ::std::string& ELanguage_Name(ELanguage value) {
  return ::google::protobuf::internal::NameOfEnum(
    ELanguage_descriptor(), value);
}
inline bool ELanguage_Parse(
    const ::std::string& name, ELanguage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ELanguage>(
    ELanguage_descriptor(), name, value);
}
enum EReturnType {
  EReturnType_None = 0,
  EReturnType_Shop = 1,
  EReturnType_Exp = 2,
  EReturnType_Welfare = 3,
  EReturnType_Privilege = 4,
  EReturnType_Charge = 5,
  EReturnType_Max = 6
};
bool EReturnType_IsValid(int value);
const EReturnType EReturnType_MIN = EReturnType_None;
const EReturnType EReturnType_MAX = EReturnType_Max;
const int EReturnType_ARRAYSIZE = EReturnType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EReturnType_descriptor();
inline const ::std::string& EReturnType_Name(EReturnType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EReturnType_descriptor(), value);
}
inline bool EReturnType_Parse(
    const ::std::string& name, EReturnType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EReturnType>(
    EReturnType_descriptor(), name, value);
}
enum EReturnPrivilegeType {
  EReturnPrivilegeType_None = 0,
  EReturnPrivilegeType_Shop = 1,
  EReturnPrivilegeType_SourceMap = 2,
  EReturnPrivilegeType_ItemBuy = 3,
  EReturnPrivilegeType_Max = 10
};
bool EReturnPrivilegeType_IsValid(int value);
const EReturnPrivilegeType EReturnPrivilegeType_MIN = EReturnPrivilegeType_None;
const EReturnPrivilegeType EReturnPrivilegeType_MAX = EReturnPrivilegeType_Max;
const int EReturnPrivilegeType_ARRAYSIZE = EReturnPrivilegeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EReturnPrivilegeType_descriptor();
inline const ::std::string& EReturnPrivilegeType_Name(EReturnPrivilegeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EReturnPrivilegeType_descriptor(), value);
}
inline bool EReturnPrivilegeType_Parse(
    const ::std::string& name, EReturnPrivilegeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EReturnPrivilegeType>(
    EReturnPrivilegeType_descriptor(), name, value);
}
enum EServerRankType {
  EServerRankType_None = 0,
  EServerRankType_Diagram = 1,
  EServerRankType_Max = 2
};
bool EServerRankType_IsValid(int value);
const EServerRankType EServerRankType_MIN = EServerRankType_None;
const EServerRankType EServerRankType_MAX = EServerRankType_Max;
const int EServerRankType_ARRAYSIZE = EServerRankType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EServerRankType_descriptor();
inline const ::std::string& EServerRankType_Name(EServerRankType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EServerRankType_descriptor(), value);
}
inline bool EServerRankType_Parse(
    const ::std::string& name, EServerRankType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EServerRankType>(
    EServerRankType_descriptor(), name, value);
}
enum EModuleOldFlag {
  EModuleOldFlag_None = 0,
  EModuleOldFlag_Progess = 1,
  EModuleOldFlag_MainHeroUp = 2,
  EModuleOldFlag_CopperHire = 3,
  EModuleOldFlag_DiamondsHire = 4,
  EModuleOldFlag_ArenaDiamonds = 5,
  EModuleOldFlag_EquipUp = 6,
  EModuleOldFlag_BattleEffect = 7,
  EModuleOldFlag_Wings = 8,
  EModuleOldFlag_MapBoss = 9,
  EModuleOldFlag_SevenDayRank5 = 10,
  EModuleOldFlag_ClientSort = 11,
  EModuleOldFlag_ClientHire = 12,
  EModuleOldFlag_Max = 13
};
bool EModuleOldFlag_IsValid(int value);
const EModuleOldFlag EModuleOldFlag_MIN = EModuleOldFlag_None;
const EModuleOldFlag EModuleOldFlag_MAX = EModuleOldFlag_Max;
const int EModuleOldFlag_ARRAYSIZE = EModuleOldFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* EModuleOldFlag_descriptor();
inline const ::std::string& EModuleOldFlag_Name(EModuleOldFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    EModuleOldFlag_descriptor(), value);
}
inline bool EModuleOldFlag_Parse(
    const ::std::string& name, EModuleOldFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EModuleOldFlag>(
    EModuleOldFlag_descriptor(), name, value);
}
enum EPrivilegeCard {
  EPrivilegeCard_None = 0,
  EPrivilegeCard_Ice = 1,
  EPrivilegeCard_Purple = 2,
  EPrivilegeCard_Yellow = 3,
  EPrivilegeCard_All = 4,
  EPrivilegeCard_Max = 5
};
bool EPrivilegeCard_IsValid(int value);
const EPrivilegeCard EPrivilegeCard_MIN = EPrivilegeCard_None;
const EPrivilegeCard EPrivilegeCard_MAX = EPrivilegeCard_Max;
const int EPrivilegeCard_ARRAYSIZE = EPrivilegeCard_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPrivilegeCard_descriptor();
inline const ::std::string& EPrivilegeCard_Name(EPrivilegeCard value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPrivilegeCard_descriptor(), value);
}
inline bool EPrivilegeCard_Parse(
    const ::std::string& name, EPrivilegeCard* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPrivilegeCard>(
    EPrivilegeCard_descriptor(), name, value);
}
enum EPrivilege {
  EPrivilege_None = 0,
  EPrivilege_SigninReward = 1,
  EPrivilege_ExploitsAddPer = 2,
  EPrivilege_ArenaExpAddPer = 3,
  EPrivilege_MapExpAddPer = 4,
  EPrivilege_RobExpAddPer = 5,
  EPrivilege_OfflineExp = 6,
  EPrivilege_FreeBackSource = 7,
  EPrivilege_ArenaCashAddPer = 8,
  EPrivilege_MapCashAddPer = 9,
  EPrivilege_RobCashAddPer = 10,
  EPrivilege_StrengEquip5 = 11,
  EPrivilege_StrengEquip10 = 12,
  EPrivilege_StrengEquip20 = 13,
  EPrivilege_RaidCashAddPer = 14,
  EPrivilege_Battle = 15,
  EPrivilege_Max = 32
};
bool EPrivilege_IsValid(int value);
const EPrivilege EPrivilege_MIN = EPrivilege_None;
const EPrivilege EPrivilege_MAX = EPrivilege_Max;
const int EPrivilege_ARRAYSIZE = EPrivilege_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPrivilege_descriptor();
inline const ::std::string& EPrivilege_Name(EPrivilege value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPrivilege_descriptor(), value);
}
inline bool EPrivilege_Parse(
    const ::std::string& name, EPrivilege* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPrivilege>(
    EPrivilege_descriptor(), name, value);
}
enum ServerCompareType {
  CompareType_None = 0,
  CompareType_Level = 1,
  CompareType_MapStar = 2,
  CompareType_Crusade = 3,
  CompareType_DiamonCost = 4,
  CompareType_Recharge = 5,
  CompareType_Effect = 6,
  CompareType_ArenaRank = 7,
  CompareType_Max = 8
};
bool ServerCompareType_IsValid(int value);
const ServerCompareType ServerCompareType_MIN = CompareType_None;
const ServerCompareType ServerCompareType_MAX = CompareType_Max;
const int ServerCompareType_ARRAYSIZE = ServerCompareType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerCompareType_descriptor();
inline const ::std::string& ServerCompareType_Name(ServerCompareType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerCompareType_descriptor(), value);
}
inline bool ServerCompareType_Parse(
    const ::std::string& name, ServerCompareType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerCompareType>(
    ServerCompareType_descriptor(), name, value);
}
enum ECenterRankType {
  ECenterRankType_None = 0,
  ECenterRankType_RechargeScoreConsume = 1,
  ECenterRankType_DiamondConsume = 2,
  ECenterRankType_Max = 3
};
bool ECenterRankType_IsValid(int value);
const ECenterRankType ECenterRankType_MIN = ECenterRankType_None;
const ECenterRankType ECenterRankType_MAX = ECenterRankType_Max;
const int ECenterRankType_ARRAYSIZE = ECenterRankType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECenterRankType_descriptor();
inline const ::std::string& ECenterRankType_Name(ECenterRankType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECenterRankType_descriptor(), value);
}
inline bool ECenterRankType_Parse(
    const ::std::string& name, ECenterRankType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECenterRankType>(
    ECenterRankType_descriptor(), name, value);
}
enum FarmNoticeType {
  FarmNoticeType_None = 0,
  FarmNoticeType_AddWaterFromFriend = 1,
  FarmNoticeType_ThankToFriend = 2,
  FarmNoticeType_ThankFromFriend = 3,
  FarmNoticeType_Max = 4
};
bool FarmNoticeType_IsValid(int value);
const FarmNoticeType FarmNoticeType_MIN = FarmNoticeType_None;
const FarmNoticeType FarmNoticeType_MAX = FarmNoticeType_Max;
const int FarmNoticeType_ARRAYSIZE = FarmNoticeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FarmNoticeType_descriptor();
inline const ::std::string& FarmNoticeType_Name(FarmNoticeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FarmNoticeType_descriptor(), value);
}
inline bool FarmNoticeType_Parse(
    const ::std::string& name, FarmNoticeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FarmNoticeType>(
    FarmNoticeType_descriptor(), name, value);
}
enum FarmNoticeStatus {
  FarmNoticeStatus_None = 0,
  FarmNoticeStatus_Think = 1,
  FarmNoticeStatus_IsThinked = 2,
  FarmNoticeStatus_Max = 3
};
bool FarmNoticeStatus_IsValid(int value);
const FarmNoticeStatus FarmNoticeStatus_MIN = FarmNoticeStatus_None;
const FarmNoticeStatus FarmNoticeStatus_MAX = FarmNoticeStatus_Max;
const int FarmNoticeStatus_ARRAYSIZE = FarmNoticeStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* FarmNoticeStatus_descriptor();
inline const ::std::string& FarmNoticeStatus_Name(FarmNoticeStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    FarmNoticeStatus_descriptor(), value);
}
inline bool FarmNoticeStatus_Parse(
    const ::std::string& name, FarmNoticeStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FarmNoticeStatus>(
    FarmNoticeStatus_descriptor(), name, value);
}
// ===================================================================

class NotFinQuest : public ::google::protobuf::Message {
 public:
  NotFinQuest();
  virtual ~NotFinQuest();

  NotFinQuest(const NotFinQuest& from);

  inline NotFinQuest& operator=(const NotFinQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotFinQuest& default_instance();

  void Swap(NotFinQuest* other);

  // implements Message ----------------------------------------------

  NotFinQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotFinQuest& from);
  void MergeFrom(const NotFinQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);

  // required uint32 complete = 2;
  inline bool has_complete() const;
  inline void clear_complete();
  static const int kCompleteFieldNumber = 2;
  inline ::google::protobuf::uint32 complete() const;
  inline void set_complete(::google::protobuf::uint32 value);

  // required uint32 targetValue = 3;
  inline bool has_targetvalue() const;
  inline void clear_targetvalue();
  static const int kTargetValueFieldNumber = 3;
  inline ::google::protobuf::uint32 targetvalue() const;
  inline void set_targetvalue(::google::protobuf::uint32 value);

  // optional uint32 show = 4;
  inline bool has_show() const;
  inline void clear_show();
  static const int kShowFieldNumber = 4;
  inline ::google::protobuf::uint32 show() const;
  inline void set_show(::google::protobuf::uint32 value);

  // optional uint32 got = 5;
  inline bool has_got() const;
  inline void clear_got();
  static const int kGotFieldNumber = 5;
  inline ::google::protobuf::uint32 got() const;
  inline void set_got(::google::protobuf::uint32 value);

  // optional uint32 completeTime = 6;
  inline bool has_completetime() const;
  inline void clear_completetime();
  static const int kCompleteTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 completetime() const;
  inline void set_completetime(::google::protobuf::uint32 value);

  // optional uint64 targetValue64 = 7;
  inline bool has_targetvalue64() const;
  inline void clear_targetvalue64();
  static const int kTargetValue64FieldNumber = 7;
  inline ::google::protobuf::uint64 targetvalue64() const;
  inline void set_targetvalue64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.NotFinQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_complete();
  inline void clear_has_complete();
  inline void set_has_targetvalue();
  inline void clear_has_targetvalue();
  inline void set_has_show();
  inline void clear_has_show();
  inline void set_has_got();
  inline void clear_has_got();
  inline void set_has_completetime();
  inline void clear_has_completetime();
  inline void set_has_targetvalue64();
  inline void clear_has_targetvalue64();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 questid_;
  ::google::protobuf::uint32 complete_;
  ::google::protobuf::uint32 targetvalue_;
  ::google::protobuf::uint32 show_;
  ::google::protobuf::uint32 got_;
  ::google::protobuf::uint32 completetime_;
  ::google::protobuf::uint64 targetvalue64_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static NotFinQuest* default_instance_;
};
// -------------------------------------------------------------------

class DbQuest : public ::google::protobuf::Message {
 public:
  DbQuest();
  virtual ~DbQuest();

  DbQuest(const DbQuest& from);

  inline DbQuest& operator=(const DbQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbQuest& default_instance();

  void Swap(DbQuest* other);

  // implements Message ----------------------------------------------

  DbQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbQuest& from);
  void MergeFrom(const DbQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 commitquests = 1;
  inline int commitquests_size() const;
  inline void clear_commitquests();
  static const int kCommitquestsFieldNumber = 1;
  inline ::google::protobuf::uint32 commitquests(int index) const;
  inline void set_commitquests(int index, ::google::protobuf::uint32 value);
  inline void add_commitquests(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      commitquests() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_commitquests();

  // repeated .TgsProtocol.NotFinQuest notfinquests = 2;
  inline int notfinquests_size() const;
  inline void clear_notfinquests();
  static const int kNotfinquestsFieldNumber = 2;
  inline const ::TgsProtocol::NotFinQuest& notfinquests(int index) const;
  inline ::TgsProtocol::NotFinQuest* mutable_notfinquests(int index);
  inline ::TgsProtocol::NotFinQuest* add_notfinquests();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::NotFinQuest >&
      notfinquests() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::NotFinQuest >*
      mutable_notfinquests();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbQuest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > commitquests_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::NotFinQuest > notfinquests_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DbQuest* default_instance_;
};
// -------------------------------------------------------------------

class CoinInfo : public ::google::protobuf::Message {
 public:
  CoinInfo();
  virtual ~CoinInfo();

  CoinInfo(const CoinInfo& from);

  inline CoinInfo& operator=(const CoinInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinInfo& default_instance();

  void Swap(CoinInfo* other);

  // implements Message ----------------------------------------------

  CoinInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoinInfo& from);
  void MergeFrom(const CoinInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 coinType = 1;
  inline bool has_cointype() const;
  inline void clear_cointype();
  static const int kCoinTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 cointype() const;
  inline void set_cointype(::google::protobuf::uint32 value);

  // required uint32 coinNum = 2;
  inline bool has_coinnum() const;
  inline void clear_coinnum();
  static const int kCoinNumFieldNumber = 2;
  inline ::google::protobuf::uint32 coinnum() const;
  inline void set_coinnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.CoinInfo)
 private:
  inline void set_has_cointype();
  inline void clear_has_cointype();
  inline void set_has_coinnum();
  inline void clear_has_coinnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cointype_;
  ::google::protobuf::uint32 coinnum_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static CoinInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemInfo : public ::google::protobuf::Message {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  ItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateid = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateidFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint32 totalnum = 2;
  inline bool has_totalnum() const;
  inline void clear_totalnum();
  static const int kTotalnumFieldNumber = 2;
  inline ::google::protobuf::uint32 totalnum() const;
  inline void set_totalnum(::google::protobuf::uint32 value);

  // optional uint32 value1 = 3;
  inline bool has_value1() const;
  inline void clear_value1();
  static const int kValue1FieldNumber = 3;
  inline ::google::protobuf::uint32 value1() const;
  inline void set_value1(::google::protobuf::uint32 value);

  // optional uint32 value2 = 4;
  inline bool has_value2() const;
  inline void clear_value2();
  static const int kValue2FieldNumber = 4;
  inline ::google::protobuf::uint32 value2() const;
  inline void set_value2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ItemInfo)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_totalnum();
  inline void clear_has_totalnum();
  inline void set_has_value1();
  inline void clear_has_value1();
  inline void set_has_value2();
  inline void clear_has_value2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 totalnum_;
  ::google::protobuf::uint32 value1_;
  ::google::protobuf::uint32 value2_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class SeedSource : public ::google::protobuf::Message {
 public:
  SeedSource();
  virtual ~SeedSource();

  SeedSource(const SeedSource& from);

  inline SeedSource& operator=(const SeedSource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeedSource& default_instance();

  void Swap(SeedSource* other);

  // implements Message ----------------------------------------------

  SeedSource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeedSource& from);
  void MergeFrom(const SeedSource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seedId = 1;
  inline bool has_seedid() const;
  inline void clear_seedid();
  static const int kSeedIdFieldNumber = 1;
  inline ::google::protobuf::uint32 seedid() const;
  inline void set_seedid(::google::protobuf::uint32 value);

  // required uint32 totalnum = 2;
  inline bool has_totalnum() const;
  inline void clear_totalnum();
  static const int kTotalnumFieldNumber = 2;
  inline ::google::protobuf::uint32 totalnum() const;
  inline void set_totalnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.SeedSource)
 private:
  inline void set_has_seedid();
  inline void clear_has_seedid();
  inline void set_has_totalnum();
  inline void clear_has_totalnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seedid_;
  ::google::protobuf::uint32 totalnum_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static SeedSource* default_instance_;
};
// -------------------------------------------------------------------

class DBGodEquip : public ::google::protobuf::Message {
 public:
  DBGodEquip();
  virtual ~DBGodEquip();

  DBGodEquip(const DBGodEquip& from);

  inline DBGodEquip& operator=(const DBGodEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBGodEquip& default_instance();

  void Swap(DBGodEquip* other);

  // implements Message ----------------------------------------------

  DBGodEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBGodEquip& from);
  void MergeFrom(const DBGodEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateid = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateidFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint32 totalnum = 2;
  inline bool has_totalnum() const;
  inline void clear_totalnum();
  static const int kTotalnumFieldNumber = 2;
  inline ::google::protobuf::uint32 totalnum() const;
  inline void set_totalnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBGodEquip)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_totalnum();
  inline void clear_has_totalnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 totalnum_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBGodEquip* default_instance_;
};
// -------------------------------------------------------------------

class DbBagInfo : public ::google::protobuf::Message {
 public:
  DbBagInfo();
  virtual ~DbBagInfo();

  DbBagInfo(const DbBagInfo& from);

  inline DbBagInfo& operator=(const DbBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbBagInfo& default_instance();

  void Swap(DbBagInfo* other);

  // implements Message ----------------------------------------------

  DbBagInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbBagInfo& from);
  void MergeFrom(const DbBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.ItemInfo prop = 1;
  inline int prop_size() const;
  inline void clear_prop();
  static const int kPropFieldNumber = 1;
  inline const ::TgsProtocol::ItemInfo& prop(int index) const;
  inline ::TgsProtocol::ItemInfo* mutable_prop(int index);
  inline ::TgsProtocol::ItemInfo* add_prop();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ItemInfo >&
      prop() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ItemInfo >*
      mutable_prop();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbBagInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ItemInfo > prop_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DbBagInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBEvaluation : public ::google::protobuf::Message {
 public:
  DBEvaluation();
  virtual ~DBEvaluation();

  DBEvaluation(const DBEvaluation& from);

  inline DBEvaluation& operator=(const DBEvaluation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBEvaluation& default_instance();

  void Swap(DBEvaluation* other);

  // implements Message ----------------------------------------------

  DBEvaluation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBEvaluation& from);
  void MergeFrom(const DBEvaluation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 instanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint32 value);

  // required uint32 evaluation = 2;
  inline bool has_evaluation() const;
  inline void clear_evaluation();
  static const int kEvaluationFieldNumber = 2;
  inline ::google::protobuf::uint32 evaluation() const;
  inline void set_evaluation(::google::protobuf::uint32 value);

  // required uint32 challengeTimes = 3;
  inline bool has_challengetimes() const;
  inline void clear_challengetimes();
  static const int kChallengeTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 challengetimes() const;
  inline void set_challengetimes(::google::protobuf::uint32 value);

  // required uint32 resetTimes = 4;
  inline bool has_resettimes() const;
  inline void clear_resettimes();
  static const int kResetTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 resettimes() const;
  inline void set_resettimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBEvaluation)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_evaluation();
  inline void clear_has_evaluation();
  inline void set_has_challengetimes();
  inline void clear_has_challengetimes();
  inline void set_has_resettimes();
  inline void clear_has_resettimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 instanceid_;
  ::google::protobuf::uint32 evaluation_;
  ::google::protobuf::uint32 challengetimes_;
  ::google::protobuf::uint32 resettimes_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBEvaluation* default_instance_;
};
// -------------------------------------------------------------------

class DBEvaluationList : public ::google::protobuf::Message {
 public:
  DBEvaluationList();
  virtual ~DBEvaluationList();

  DBEvaluationList(const DBEvaluationList& from);

  inline DBEvaluationList& operator=(const DBEvaluationList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBEvaluationList& default_instance();

  void Swap(DBEvaluationList* other);

  // implements Message ----------------------------------------------

  DBEvaluationList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBEvaluationList& from);
  void MergeFrom(const DBEvaluationList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBEvaluation evaluation = 1;
  inline int evaluation_size() const;
  inline void clear_evaluation();
  static const int kEvaluationFieldNumber = 1;
  inline const ::TgsProtocol::DBEvaluation& evaluation(int index) const;
  inline ::TgsProtocol::DBEvaluation* mutable_evaluation(int index);
  inline ::TgsProtocol::DBEvaluation* add_evaluation();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEvaluation >&
      evaluation() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEvaluation >*
      mutable_evaluation();

  // optional uint32 share_count = 2;
  inline bool has_share_count() const;
  inline void clear_share_count();
  static const int kShareCountFieldNumber = 2;
  inline ::google::protobuf::uint32 share_count() const;
  inline void set_share_count(::google::protobuf::uint32 value);

  // optional uint32 share_buy = 3;
  inline bool has_share_buy() const;
  inline void clear_share_buy();
  static const int kShareBuyFieldNumber = 3;
  inline ::google::protobuf::uint32 share_buy() const;
  inline void set_share_buy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBEvaluationList)
 private:
  inline void set_has_share_count();
  inline void clear_has_share_count();
  inline void set_has_share_buy();
  inline void clear_has_share_buy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEvaluation > evaluation_;
  ::google::protobuf::uint32 share_count_;
  ::google::protobuf::uint32 share_buy_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBEvaluationList* default_instance_;
};
// -------------------------------------------------------------------

class DBChapterRewardList : public ::google::protobuf::Message {
 public:
  DBChapterRewardList();
  virtual ~DBChapterRewardList();

  DBChapterRewardList(const DBChapterRewardList& from);

  inline DBChapterRewardList& operator=(const DBChapterRewardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBChapterRewardList& default_instance();

  void Swap(DBChapterRewardList* other);

  // implements Message ----------------------------------------------

  DBChapterRewardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBChapterRewardList& from);
  void MergeFrom(const DBChapterRewardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 chapterReward = 1;
  inline int chapterreward_size() const;
  inline void clear_chapterreward();
  static const int kChapterRewardFieldNumber = 1;
  inline ::google::protobuf::uint32 chapterreward(int index) const;
  inline void set_chapterreward(int index, ::google::protobuf::uint32 value);
  inline void add_chapterreward(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      chapterreward() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_chapterreward();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBChapterRewardList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > chapterreward_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBChapterRewardList* default_instance_;
};
// -------------------------------------------------------------------

class DBHeroEquip : public ::google::protobuf::Message {
 public:
  DBHeroEquip();
  virtual ~DBHeroEquip();

  DBHeroEquip(const DBHeroEquip& from);

  inline DBHeroEquip& operator=(const DBHeroEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBHeroEquip& default_instance();

  void Swap(DBHeroEquip* other);

  // implements Message ----------------------------------------------

  DBHeroEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBHeroEquip& from);
  void MergeFrom(const DBHeroEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateId = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // repeated uint32 attrVal = 3;
  inline int attrval_size() const;
  inline void clear_attrval();
  static const int kAttrValFieldNumber = 3;
  inline ::google::protobuf::uint32 attrval(int index) const;
  inline void set_attrval(int index, ::google::protobuf::uint32 value);
  inline void add_attrval(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      attrval() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_attrval();

  // repeated uint32 scheduleVal = 4;
  inline int scheduleval_size() const;
  inline void clear_scheduleval();
  static const int kScheduleValFieldNumber = 4;
  inline ::google::protobuf::uint32 scheduleval(int index) const;
  inline void set_scheduleval(int index, ::google::protobuf::uint32 value);
  inline void add_scheduleval(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      scheduleval() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_scheduleval();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBHeroEquip)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > attrval_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > scheduleval_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBHeroEquip* default_instance_;
};
// -------------------------------------------------------------------

class DBEquipNew : public ::google::protobuf::Message {
 public:
  DBEquipNew();
  virtual ~DBEquipNew();

  DBEquipNew(const DBEquipNew& from);

  inline DBEquipNew& operator=(const DBEquipNew& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBEquipNew& default_instance();

  void Swap(DBEquipNew* other);

  // implements Message ----------------------------------------------

  DBEquipNew* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBEquipNew& from);
  void MergeFrom(const DBEquipNew& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateId = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint64 instanceId = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 2;
  inline ::google::protobuf::uint64 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint64 value);

  // required uint32 strengLevel = 3;
  inline bool has_strenglevel() const;
  inline void clear_strenglevel();
  static const int kStrengLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 strenglevel() const;
  inline void set_strenglevel(::google::protobuf::uint32 value);

  // required uint32 refineLevel = 4;
  inline bool has_refinelevel() const;
  inline void clear_refinelevel();
  static const int kRefineLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 refinelevel() const;
  inline void set_refinelevel(::google::protobuf::uint32 value);

  // optional uint32 starLevel = 5;
  inline bool has_starlevel() const;
  inline void clear_starlevel();
  static const int kStarLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 starlevel() const;
  inline void set_starlevel(::google::protobuf::uint32 value);

  // optional uint32 strengExp = 6;
  inline bool has_strengexp() const;
  inline void clear_strengexp();
  static const int kStrengExpFieldNumber = 6;
  inline ::google::protobuf::uint32 strengexp() const;
  inline void set_strengexp(::google::protobuf::uint32 value);

  // optional uint32 refineExp = 7;
  inline bool has_refineexp() const;
  inline void clear_refineexp();
  static const int kRefineExpFieldNumber = 7;
  inline ::google::protobuf::uint32 refineexp() const;
  inline void set_refineexp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBEquipNew)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_strenglevel();
  inline void clear_has_strenglevel();
  inline void set_has_refinelevel();
  inline void clear_has_refinelevel();
  inline void set_has_starlevel();
  inline void clear_has_starlevel();
  inline void set_has_strengexp();
  inline void clear_has_strengexp();
  inline void set_has_refineexp();
  inline void clear_has_refineexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 instanceid_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 strenglevel_;
  ::google::protobuf::uint32 refinelevel_;
  ::google::protobuf::uint32 starlevel_;
  ::google::protobuf::uint32 strengexp_;
  ::google::protobuf::uint32 refineexp_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBEquipNew* default_instance_;
};
// -------------------------------------------------------------------

class DBEquipNewList : public ::google::protobuf::Message {
 public:
  DBEquipNewList();
  virtual ~DBEquipNewList();

  DBEquipNewList(const DBEquipNewList& from);

  inline DBEquipNewList& operator=(const DBEquipNewList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBEquipNewList& default_instance();

  void Swap(DBEquipNewList* other);

  // implements Message ----------------------------------------------

  DBEquipNewList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBEquipNewList& from);
  void MergeFrom(const DBEquipNewList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBEquipNew equipNewList = 1;
  inline int equipnewlist_size() const;
  inline void clear_equipnewlist();
  static const int kEquipNewListFieldNumber = 1;
  inline const ::TgsProtocol::DBEquipNew& equipnewlist(int index) const;
  inline ::TgsProtocol::DBEquipNew* mutable_equipnewlist(int index);
  inline ::TgsProtocol::DBEquipNew* add_equipnewlist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew >&
      equipnewlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew >*
      mutable_equipnewlist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBEquipNewList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew > equipnewlist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBEquipNewList* default_instance_;
};
// -------------------------------------------------------------------

class DBHeroInfo : public ::google::protobuf::Message {
 public:
  DBHeroInfo();
  virtual ~DBHeroInfo();

  DBHeroInfo(const DBHeroInfo& from);

  inline DBHeroInfo& operator=(const DBHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBHeroInfo& default_instance();

  void Swap(DBHeroInfo* other);

  // implements Message ----------------------------------------------

  DBHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBHeroInfo& from);
  void MergeFrom(const DBHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateId = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint64 instanceId = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 2;
  inline ::google::protobuf::uint64 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint64 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 evolutionLevel = 5;
  inline bool has_evolutionlevel() const;
  inline void clear_evolutionlevel();
  static const int kEvolutionLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 evolutionlevel() const;
  inline void set_evolutionlevel(::google::protobuf::uint32 value);

  // required uint32 forceLevel = 6;
  inline bool has_forcelevel() const;
  inline void clear_forcelevel();
  static const int kForceLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 forcelevel() const;
  inline void set_forcelevel(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.DBHeroEquip equip = 7;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 7;
  inline const ::TgsProtocol::DBHeroEquip& equip(int index) const;
  inline ::TgsProtocol::DBHeroEquip* mutable_equip(int index);
  inline ::TgsProtocol::DBHeroEquip* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip >*
      mutable_equip();

  // repeated uint32 skill = 8;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 8;
  inline ::google::protobuf::uint32 skill(int index) const;
  inline void set_skill(int index, ::google::protobuf::uint32 value);
  inline void add_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill();

  // optional bytes heroName = 9;
  inline bool has_heroname() const;
  inline void clear_heroname();
  static const int kHeroNameFieldNumber = 9;
  inline const ::std::string& heroname() const;
  inline void set_heroname(const ::std::string& value);
  inline void set_heroname(const char* value);
  inline void set_heroname(const void* value, size_t size);
  inline ::std::string* mutable_heroname();
  inline ::std::string* release_heroname();
  inline void set_allocated_heroname(::std::string* heroname);

  // repeated uint64 equipNew = 10;
  inline int equipnew_size() const;
  inline void clear_equipnew();
  static const int kEquipNewFieldNumber = 10;
  inline ::google::protobuf::uint64 equipnew(int index) const;
  inline void set_equipnew(int index, ::google::protobuf::uint64 value);
  inline void add_equipnew(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equipnew() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equipnew();

  // optional uint32 fashionId = 11;
  inline bool has_fashionid() const;
  inline void clear_fashionid();
  static const int kFashionIdFieldNumber = 11;
  inline ::google::protobuf::uint32 fashionid() const;
  inline void set_fashionid(::google::protobuf::uint32 value);

  // optional uint32 deificationlevel = 12;
  inline bool has_deificationlevel() const;
  inline void clear_deificationlevel();
  static const int kDeificationlevelFieldNumber = 12;
  inline ::google::protobuf::uint32 deificationlevel() const;
  inline void set_deificationlevel(::google::protobuf::uint32 value);

  // optional uint32 wingslevel = 13;
  inline bool has_wingslevel() const;
  inline void clear_wingslevel();
  static const int kWingslevelFieldNumber = 13;
  inline ::google::protobuf::uint32 wingslevel() const;
  inline void set_wingslevel(::google::protobuf::uint32 value);

  // optional uint32 wingsrate = 14;
  inline bool has_wingsrate() const;
  inline void clear_wingsrate();
  static const int kWingsrateFieldNumber = 14;
  inline ::google::protobuf::uint32 wingsrate() const;
  inline void set_wingsrate(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientSource sources = 15;
  inline int sources_size() const;
  inline void clear_sources();
  static const int kSourcesFieldNumber = 15;
  inline const ::TgsProtocol::ClientSource& sources(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_sources(int index);
  inline ::TgsProtocol::ClientSource* add_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_sources();

  // optional uint32 wakeLevel = 16;
  inline bool has_wakelevel() const;
  inline void clear_wakelevel();
  static const int kWakeLevelFieldNumber = 16;
  inline ::google::protobuf::uint32 wakelevel() const;
  inline void set_wakelevel(::google::protobuf::uint32 value);

  // repeated uint32 wakeEquips = 17;
  inline int wakeequips_size() const;
  inline void clear_wakeequips();
  static const int kWakeEquipsFieldNumber = 17;
  inline ::google::protobuf::uint32 wakeequips(int index) const;
  inline void set_wakeequips(int index, ::google::protobuf::uint32 value);
  inline void add_wakeequips(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wakeequips() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wakeequips();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBHeroInfo)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_evolutionlevel();
  inline void clear_has_evolutionlevel();
  inline void set_has_forcelevel();
  inline void clear_has_forcelevel();
  inline void set_has_heroname();
  inline void clear_has_heroname();
  inline void set_has_fashionid();
  inline void clear_has_fashionid();
  inline void set_has_deificationlevel();
  inline void clear_has_deificationlevel();
  inline void set_has_wingslevel();
  inline void clear_has_wingslevel();
  inline void set_has_wingsrate();
  inline void clear_has_wingsrate();
  inline void set_has_wakelevel();
  inline void clear_has_wakelevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 instanceid_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 evolutionlevel_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip > equip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_;
  ::google::protobuf::uint32 forcelevel_;
  ::google::protobuf::uint32 fashionid_;
  ::std::string* heroname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equipnew_;
  ::google::protobuf::uint32 deificationlevel_;
  ::google::protobuf::uint32 wingslevel_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > sources_;
  ::google::protobuf::uint32 wingsrate_;
  ::google::protobuf::uint32 wakelevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wakeequips_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBHeroList : public ::google::protobuf::Message {
 public:
  DBHeroList();
  virtual ~DBHeroList();

  DBHeroList(const DBHeroList& from);

  inline DBHeroList& operator=(const DBHeroList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBHeroList& default_instance();

  void Swap(DBHeroList* other);

  // implements Message ----------------------------------------------

  DBHeroList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBHeroList& from);
  void MergeFrom(const DBHeroList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBHeroInfo heroList = 1;
  inline int herolist_size() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 1;
  inline const ::TgsProtocol::DBHeroInfo& herolist(int index) const;
  inline ::TgsProtocol::DBHeroInfo* mutable_herolist(int index);
  inline ::TgsProtocol::DBHeroInfo* add_herolist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroInfo >&
      herolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroInfo >*
      mutable_herolist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBHeroList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroInfo > herolist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBHeroList* default_instance_;
};
// -------------------------------------------------------------------

class DBEssenceItem : public ::google::protobuf::Message {
 public:
  DBEssenceItem();
  virtual ~DBEssenceItem();

  DBEssenceItem(const DBEssenceItem& from);

  inline DBEssenceItem& operator=(const DBEssenceItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBEssenceItem& default_instance();

  void Swap(DBEssenceItem* other);

  // implements Message ----------------------------------------------

  DBEssenceItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBEssenceItem& from);
  void MergeFrom(const DBEssenceItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateId = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint32 itemValue = 2;
  inline bool has_itemvalue() const;
  inline void clear_itemvalue();
  static const int kItemValueFieldNumber = 2;
  inline ::google::protobuf::uint32 itemvalue() const;
  inline void set_itemvalue(::google::protobuf::uint32 value);

  // required uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBEssenceItem)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_itemvalue();
  inline void clear_has_itemvalue();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 itemvalue_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBEssenceItem* default_instance_;
};
// -------------------------------------------------------------------

class DBEssenceList : public ::google::protobuf::Message {
 public:
  DBEssenceList();
  virtual ~DBEssenceList();

  DBEssenceList(const DBEssenceList& from);

  inline DBEssenceList& operator=(const DBEssenceList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBEssenceList& default_instance();

  void Swap(DBEssenceList* other);

  // implements Message ----------------------------------------------

  DBEssenceList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBEssenceList& from);
  void MergeFrom(const DBEssenceList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBEssenceItem essenceItem = 1;
  inline int essenceitem_size() const;
  inline void clear_essenceitem();
  static const int kEssenceItemFieldNumber = 1;
  inline const ::TgsProtocol::DBEssenceItem& essenceitem(int index) const;
  inline ::TgsProtocol::DBEssenceItem* mutable_essenceitem(int index);
  inline ::TgsProtocol::DBEssenceItem* add_essenceitem();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEssenceItem >&
      essenceitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEssenceItem >*
      mutable_essenceitem();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBEssenceList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEssenceItem > essenceitem_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBEssenceList* default_instance_;
};
// -------------------------------------------------------------------

class ItemUseRestrict : public ::google::protobuf::Message {
 public:
  ItemUseRestrict();
  virtual ~ItemUseRestrict();

  ItemUseRestrict(const ItemUseRestrict& from);

  inline ItemUseRestrict& operator=(const ItemUseRestrict& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemUseRestrict& default_instance();

  void Swap(ItemUseRestrict* other);

  // implements Message ----------------------------------------------

  ItemUseRestrict* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemUseRestrict& from);
  void MergeFrom(const ItemUseRestrict& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TgsProtocol.eItemUseRestrict type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::TgsProtocol::eItemUseRestrict type() const;
  inline void set_type(::TgsProtocol::eItemUseRestrict value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ItemUseRestrict)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ItemUseRestrict* default_instance_;
};
// -------------------------------------------------------------------

class DBShopGoods : public ::google::protobuf::Message {
 public:
  DBShopGoods();
  virtual ~DBShopGoods();

  DBShopGoods(const DBShopGoods& from);

  inline DBShopGoods& operator=(const DBShopGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBShopGoods& default_instance();

  void Swap(DBShopGoods* other);

  // implements Message ----------------------------------------------

  DBShopGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBShopGoods& from);
  void MergeFrom(const DBShopGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemType = 1;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);

  // required uint32 templateId = 2;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 2;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint32 SellVal = 3;
  inline bool has_sellval() const;
  inline void clear_sellval();
  static const int kSellValFieldNumber = 3;
  inline ::google::protobuf::uint32 sellval() const;
  inline void set_sellval(::google::protobuf::uint32 value);

  // required uint32 PriceType = 4;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 pricetype() const;
  inline void set_pricetype(::google::protobuf::uint32 value);

  // required uint32 PARA1 = 5;
  inline bool has_para1() const;
  inline void clear_para1();
  static const int kPARA1FieldNumber = 5;
  inline ::google::protobuf::uint32 para1() const;
  inline void set_para1(::google::protobuf::uint32 value);

  // required uint32 PARA2 = 6;
  inline bool has_para2() const;
  inline void clear_para2();
  static const int kPARA2FieldNumber = 6;
  inline ::google::protobuf::uint32 para2() const;
  inline void set_para2(::google::protobuf::uint32 value);

  // required bool bSale = 7;
  inline bool has_bsale() const;
  inline void clear_bsale();
  static const int kBSaleFieldNumber = 7;
  inline bool bsale() const;
  inline void set_bsale(bool value);

  // optional uint32 goodsid = 8;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsidFieldNumber = 8;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBShopGoods)
 private:
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_sellval();
  inline void clear_has_sellval();
  inline void set_has_pricetype();
  inline void clear_has_pricetype();
  inline void set_has_para1();
  inline void clear_has_para1();
  inline void set_has_para2();
  inline void clear_has_para2();
  inline void set_has_bsale();
  inline void clear_has_bsale();
  inline void set_has_goodsid();
  inline void clear_has_goodsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 itemtype_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 sellval_;
  ::google::protobuf::uint32 pricetype_;
  ::google::protobuf::uint32 para1_;
  ::google::protobuf::uint32 para2_;
  bool bsale_;
  ::google::protobuf::uint32 goodsid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBShopGoods* default_instance_;
};
// -------------------------------------------------------------------

class DBGoodsList : public ::google::protobuf::Message {
 public:
  DBGoodsList();
  virtual ~DBGoodsList();

  DBGoodsList(const DBGoodsList& from);

  inline DBGoodsList& operator=(const DBGoodsList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBGoodsList& default_instance();

  void Swap(DBGoodsList* other);

  // implements Message ----------------------------------------------

  DBGoodsList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBGoodsList& from);
  void MergeFrom(const DBGoodsList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 shopType = 1;
  inline bool has_shoptype() const;
  inline void clear_shoptype();
  static const int kShopTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 shoptype() const;
  inline void set_shoptype(::google::protobuf::uint32 value);

  // required uint32 activityTime = 2;
  inline bool has_activitytime() const;
  inline void clear_activitytime();
  static const int kActivityTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 activitytime() const;
  inline void set_activitytime(::google::protobuf::uint32 value);

  // required uint32 lastRefreshTime = 3;
  inline bool has_lastrefreshtime() const;
  inline void clear_lastrefreshtime();
  static const int kLastRefreshTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 lastrefreshtime() const;
  inline void set_lastrefreshtime(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.DBShopGoods goodsList = 4;
  inline int goodslist_size() const;
  inline void clear_goodslist();
  static const int kGoodsListFieldNumber = 4;
  inline const ::TgsProtocol::DBShopGoods& goodslist(int index) const;
  inline ::TgsProtocol::DBShopGoods* mutable_goodslist(int index);
  inline ::TgsProtocol::DBShopGoods* add_goodslist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBShopGoods >&
      goodslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBShopGoods >*
      mutable_goodslist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBGoodsList)
 private:
  inline void set_has_shoptype();
  inline void clear_has_shoptype();
  inline void set_has_activitytime();
  inline void clear_has_activitytime();
  inline void set_has_lastrefreshtime();
  inline void clear_has_lastrefreshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 shoptype_;
  ::google::protobuf::uint32 activitytime_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBShopGoods > goodslist_;
  ::google::protobuf::uint32 lastrefreshtime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBGoodsList* default_instance_;
};
// -------------------------------------------------------------------

class DBShopList : public ::google::protobuf::Message {
 public:
  DBShopList();
  virtual ~DBShopList();

  DBShopList(const DBShopList& from);

  inline DBShopList& operator=(const DBShopList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBShopList& default_instance();

  void Swap(DBShopList* other);

  // implements Message ----------------------------------------------

  DBShopList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBShopList& from);
  void MergeFrom(const DBShopList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBGoodsList shopList = 1;
  inline int shoplist_size() const;
  inline void clear_shoplist();
  static const int kShopListFieldNumber = 1;
  inline const ::TgsProtocol::DBGoodsList& shoplist(int index) const;
  inline ::TgsProtocol::DBGoodsList* mutable_shoplist(int index);
  inline ::TgsProtocol::DBGoodsList* add_shoplist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGoodsList >&
      shoplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGoodsList >*
      mutable_shoplist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBShopList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGoodsList > shoplist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBShopList* default_instance_;
};
// -------------------------------------------------------------------

class DBShopRefresh : public ::google::protobuf::Message {
 public:
  DBShopRefresh();
  virtual ~DBShopRefresh();

  DBShopRefresh(const DBShopRefresh& from);

  inline DBShopRefresh& operator=(const DBShopRefresh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBShopRefresh& default_instance();

  void Swap(DBShopRefresh* other);

  // implements Message ----------------------------------------------

  DBShopRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBShopRefresh& from);
  void MergeFrom(const DBShopRefresh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 RefreshNum = 1;
  inline bool has_refreshnum() const;
  inline void clear_refreshnum();
  static const int kRefreshNumFieldNumber = 1;
  inline ::google::protobuf::uint32 refreshnum() const;
  inline void set_refreshnum(::google::protobuf::uint32 value);

  // required uint32 LastRefreshTime = 2;
  inline bool has_lastrefreshtime() const;
  inline void clear_lastrefreshtime();
  static const int kLastRefreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 lastrefreshtime() const;
  inline void set_lastrefreshtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBShopRefresh)
 private:
  inline void set_has_refreshnum();
  inline void clear_has_refreshnum();
  inline void set_has_lastrefreshtime();
  inline void clear_has_lastrefreshtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 refreshnum_;
  ::google::protobuf::uint32 lastrefreshtime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBShopRefresh* default_instance_;
};
// -------------------------------------------------------------------

class DBShopRefreshList : public ::google::protobuf::Message {
 public:
  DBShopRefreshList();
  virtual ~DBShopRefreshList();

  DBShopRefreshList(const DBShopRefreshList& from);

  inline DBShopRefreshList& operator=(const DBShopRefreshList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBShopRefreshList& default_instance();

  void Swap(DBShopRefreshList* other);

  // implements Message ----------------------------------------------

  DBShopRefreshList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBShopRefreshList& from);
  void MergeFrom(const DBShopRefreshList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 RefreshList = 1;
  inline int refreshlist_size() const;
  inline void clear_refreshlist();
  static const int kRefreshListFieldNumber = 1;
  inline ::google::protobuf::uint32 refreshlist(int index) const;
  inline void set_refreshlist(int index, ::google::protobuf::uint32 value);
  inline void add_refreshlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      refreshlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_refreshlist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBShopRefreshList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > refreshlist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBShopRefreshList* default_instance_;
};
// -------------------------------------------------------------------

class DBFestivityInfo : public ::google::protobuf::Message {
 public:
  DBFestivityInfo();
  virtual ~DBFestivityInfo();

  DBFestivityInfo(const DBFestivityInfo& from);

  inline DBFestivityInfo& operator=(const DBFestivityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBFestivityInfo& default_instance();

  void Swap(DBFestivityInfo* other);

  // implements Message ----------------------------------------------

  DBFestivityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBFestivityInfo& from);
  void MergeFrom(const DBFestivityInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 festivityId = 1;
  inline bool has_festivityid() const;
  inline void clear_festivityid();
  static const int kFestivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 festivityid() const;
  inline void set_festivityid(::google::protobuf::uint32 value);

  // required uint32 enterCount = 2;
  inline bool has_entercount() const;
  inline void clear_entercount();
  static const int kEnterCountFieldNumber = 2;
  inline ::google::protobuf::uint32 entercount() const;
  inline void set_entercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBFestivityInfo)
 private:
  inline void set_has_festivityid();
  inline void clear_has_festivityid();
  inline void set_has_entercount();
  inline void clear_has_entercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 festivityid_;
  ::google::protobuf::uint32 entercount_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBFestivityInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBFestivityList : public ::google::protobuf::Message {
 public:
  DBFestivityList();
  virtual ~DBFestivityList();

  DBFestivityList(const DBFestivityList& from);

  inline DBFestivityList& operator=(const DBFestivityList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBFestivityList& default_instance();

  void Swap(DBFestivityList* other);

  // implements Message ----------------------------------------------

  DBFestivityList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBFestivityList& from);
  void MergeFrom(const DBFestivityList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBFestivityInfo FestivityList = 1;
  inline int festivitylist_size() const;
  inline void clear_festivitylist();
  static const int kFestivityListFieldNumber = 1;
  inline const ::TgsProtocol::DBFestivityInfo& festivitylist(int index) const;
  inline ::TgsProtocol::DBFestivityInfo* mutable_festivitylist(int index);
  inline ::TgsProtocol::DBFestivityInfo* add_festivitylist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFestivityInfo >&
      festivitylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFestivityInfo >*
      mutable_festivitylist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBFestivityList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFestivityInfo > festivitylist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBFestivityList* default_instance_;
};
// -------------------------------------------------------------------

class ClientSource : public ::google::protobuf::Message {
 public:
  ClientSource();
  virtual ~ClientSource();

  ClientSource(const ClientSource& from);

  inline ClientSource& operator=(const ClientSource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientSource& default_instance();

  void Swap(ClientSource* other);

  // implements Message ----------------------------------------------

  ClientSource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientSource& from);
  void MergeFrom(const ClientSource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sourceType = 1;
  inline bool has_sourcetype() const;
  inline void clear_sourcetype();
  static const int kSourceTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 sourcetype() const;
  inline void set_sourcetype(::google::protobuf::uint32 value);

  // required uint32 sourceId = 2;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 2;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // required uint32 sourceNum = 3;
  inline bool has_sourcenum() const;
  inline void clear_sourcenum();
  static const int kSourceNumFieldNumber = 3;
  inline ::google::protobuf::uint32 sourcenum() const;
  inline void set_sourcenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientSource)
 private:
  inline void set_has_sourcetype();
  inline void clear_has_sourcetype();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_sourcenum();
  inline void clear_has_sourcenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sourcetype_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 sourcenum_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientSource* default_instance_;
};
// -------------------------------------------------------------------

class DBMailInfo : public ::google::protobuf::Message {
 public:
  DBMailInfo();
  virtual ~DBMailInfo();

  DBMailInfo(const DBMailInfo& from);

  inline DBMailInfo& operator=(const DBMailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBMailInfo& default_instance();

  void Swap(DBMailInfo* other);

  // implements Message ----------------------------------------------

  DBMailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBMailInfo& from);
  void MergeFrom(const DBMailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 instanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint64 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint64 value);

  // required uint32 templateId = 2;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 2;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint32 mailType = 3;
  inline bool has_mailtype() const;
  inline void clear_mailtype();
  static const int kMailTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 mailtype() const;
  inline void set_mailtype(::google::protobuf::uint32 value);

  // required bytes subjectStr = 4;
  inline bool has_subjectstr() const;
  inline void clear_subjectstr();
  static const int kSubjectStrFieldNumber = 4;
  inline const ::std::string& subjectstr() const;
  inline void set_subjectstr(const ::std::string& value);
  inline void set_subjectstr(const char* value);
  inline void set_subjectstr(const void* value, size_t size);
  inline ::std::string* mutable_subjectstr();
  inline ::std::string* release_subjectstr();
  inline void set_allocated_subjectstr(::std::string* subjectstr);

  // required bytes contextStr = 5;
  inline bool has_contextstr() const;
  inline void clear_contextstr();
  static const int kContextStrFieldNumber = 5;
  inline const ::std::string& contextstr() const;
  inline void set_contextstr(const ::std::string& value);
  inline void set_contextstr(const char* value);
  inline void set_contextstr(const void* value, size_t size);
  inline ::std::string* mutable_contextstr();
  inline ::std::string* release_contextstr();
  inline void set_allocated_contextstr(::std::string* contextstr);

  // required bytes senderStr = 6;
  inline bool has_senderstr() const;
  inline void clear_senderstr();
  static const int kSenderStrFieldNumber = 6;
  inline const ::std::string& senderstr() const;
  inline void set_senderstr(const ::std::string& value);
  inline void set_senderstr(const char* value);
  inline void set_senderstr(const void* value, size_t size);
  inline ::std::string* mutable_senderstr();
  inline ::std::string* release_senderstr();
  inline void set_allocated_senderstr(::std::string* senderstr);

  // required uint32 createtime = 7;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 7;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // required bool bRead = 8;
  inline bool has_bread() const;
  inline void clear_bread();
  static const int kBReadFieldNumber = 8;
  inline bool bread() const;
  inline void set_bread(bool value);

  // repeated .TgsProtocol.ClientSource accessory = 9;
  inline int accessory_size() const;
  inline void clear_accessory();
  static const int kAccessoryFieldNumber = 9;
  inline const ::TgsProtocol::ClientSource& accessory(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_accessory(int index);
  inline ::TgsProtocol::ClientSource* add_accessory();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      accessory() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_accessory();

  // required uint32 opType = 10;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // required uint32 saveTime = 11;
  inline bool has_savetime() const;
  inline void clear_savetime();
  static const int kSaveTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 savetime() const;
  inline void set_savetime(::google::protobuf::uint32 value);

  // repeated bytes contextParam = 12;
  inline int contextparam_size() const;
  inline void clear_contextparam();
  static const int kContextParamFieldNumber = 12;
  inline const ::std::string& contextparam(int index) const;
  inline ::std::string* mutable_contextparam(int index);
  inline void set_contextparam(int index, const ::std::string& value);
  inline void set_contextparam(int index, const char* value);
  inline void set_contextparam(int index, const void* value, size_t size);
  inline ::std::string* add_contextparam();
  inline void add_contextparam(const ::std::string& value);
  inline void add_contextparam(const char* value);
  inline void add_contextparam(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& contextparam() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_contextparam();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBMailInfo)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_mailtype();
  inline void clear_has_mailtype();
  inline void set_has_subjectstr();
  inline void clear_has_subjectstr();
  inline void set_has_contextstr();
  inline void clear_has_contextstr();
  inline void set_has_senderstr();
  inline void clear_has_senderstr();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_bread();
  inline void clear_has_bread();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_savetime();
  inline void clear_has_savetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 instanceid_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 mailtype_;
  ::std::string* subjectstr_;
  ::std::string* contextstr_;
  ::std::string* senderstr_;
  ::google::protobuf::uint32 createtime_;
  bool bread_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > accessory_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 savetime_;
  ::google::protobuf::RepeatedPtrField< ::std::string> contextparam_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBMailInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBArenaHero : public ::google::protobuf::Message {
 public:
  DBArenaHero();
  virtual ~DBArenaHero();

  DBArenaHero(const DBArenaHero& from);

  inline DBArenaHero& operator=(const DBArenaHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBArenaHero& default_instance();

  void Swap(DBArenaHero* other);

  // implements Message ----------------------------------------------

  DBArenaHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBArenaHero& from);
  void MergeFrom(const DBArenaHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateId = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 evolutionLevel = 3;
  inline bool has_evolutionlevel() const;
  inline void clear_evolutionlevel();
  static const int kEvolutionLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 evolutionlevel() const;
  inline void set_evolutionlevel(::google::protobuf::uint32 value);

  // required uint32 forceLevel = 4;
  inline bool has_forcelevel() const;
  inline void clear_forcelevel();
  static const int kForceLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 forcelevel() const;
  inline void set_forcelevel(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.DBHeroEquip equip = 5;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 5;
  inline const ::TgsProtocol::DBHeroEquip& equip(int index) const;
  inline ::TgsProtocol::DBHeroEquip* mutable_equip(int index);
  inline ::TgsProtocol::DBHeroEquip* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip >*
      mutable_equip();

  // repeated uint32 skillLevel = 6;
  inline int skilllevel_size() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 skilllevel(int index) const;
  inline void set_skilllevel(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skilllevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skilllevel();

  // optional bytes heroName = 7;
  inline bool has_heroname() const;
  inline void clear_heroname();
  static const int kHeroNameFieldNumber = 7;
  inline const ::std::string& heroname() const;
  inline void set_heroname(const ::std::string& value);
  inline void set_heroname(const char* value);
  inline void set_heroname(const void* value, size_t size);
  inline ::std::string* mutable_heroname();
  inline ::std::string* release_heroname();
  inline void set_allocated_heroname(::std::string* heroname);

  // repeated .TgsProtocol.DBEquipNew newEquip = 8;
  inline int newequip_size() const;
  inline void clear_newequip();
  static const int kNewEquipFieldNumber = 8;
  inline const ::TgsProtocol::DBEquipNew& newequip(int index) const;
  inline ::TgsProtocol::DBEquipNew* mutable_newequip(int index);
  inline ::TgsProtocol::DBEquipNew* add_newequip();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew >&
      newequip() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew >*
      mutable_newequip();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBArenaHero)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_evolutionlevel();
  inline void clear_has_evolutionlevel();
  inline void set_has_forcelevel();
  inline void clear_has_forcelevel();
  inline void set_has_heroname();
  inline void clear_has_heroname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 evolutionlevel_;
  ::google::protobuf::uint32 forcelevel_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip > equip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel_;
  ::std::string* heroname_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew > newequip_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBArenaHero* default_instance_;
};
// -------------------------------------------------------------------

class DBArenaPlayer : public ::google::protobuf::Message {
 public:
  DBArenaPlayer();
  virtual ~DBArenaPlayer();

  DBArenaPlayer(const DBArenaPlayer& from);

  inline DBArenaPlayer& operator=(const DBArenaPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBArenaPlayer& default_instance();

  void Swap(DBArenaPlayer* other);

  // implements Message ----------------------------------------------

  DBArenaPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBArenaPlayer& from);
  void MergeFrom(const DBArenaPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint64 charID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes playerName = 3;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 3;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const void* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // required uint32 playerLevel = 4;
  inline bool has_playerlevel() const;
  inline void clear_playerlevel();
  static const int kPlayerLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 playerlevel() const;
  inline void set_playerlevel(::google::protobuf::uint32 value);

  // required uint32 playerPhoto = 5;
  inline bool has_playerphoto() const;
  inline void clear_playerphoto();
  static const int kPlayerPhotoFieldNumber = 5;
  inline ::google::protobuf::uint32 playerphoto() const;
  inline void set_playerphoto(::google::protobuf::uint32 value);

  // required uint32 vipLvl = 6;
  inline bool has_viplvl() const;
  inline void clear_viplvl();
  static const int kVipLvlFieldNumber = 6;
  inline ::google::protobuf::uint32 viplvl() const;
  inline void set_viplvl(::google::protobuf::uint32 value);

  // required uint32 effective = 7;
  inline bool has_effective() const;
  inline void clear_effective();
  static const int kEffectiveFieldNumber = 7;
  inline ::google::protobuf::uint32 effective() const;
  inline void set_effective(::google::protobuf::uint32 value);

  // required uint32 totalWin = 8;
  inline bool has_totalwin() const;
  inline void clear_totalwin();
  static const int kTotalWinFieldNumber = 8;
  inline ::google::protobuf::uint32 totalwin() const;
  inline void set_totalwin(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.DBArenaHero arHeroList = 9;
  inline int arherolist_size() const;
  inline void clear_arherolist();
  static const int kArHeroListFieldNumber = 9;
  inline const ::TgsProtocol::DBArenaHero& arherolist(int index) const;
  inline ::TgsProtocol::DBArenaHero* mutable_arherolist(int index);
  inline ::TgsProtocol::DBArenaHero* add_arherolist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaHero >&
      arherolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaHero >*
      mutable_arherolist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBArenaPlayer)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_playerlevel();
  inline void clear_has_playerlevel();
  inline void set_has_playerphoto();
  inline void clear_has_playerphoto();
  inline void set_has_viplvl();
  inline void clear_has_viplvl();
  inline void set_has_effective();
  inline void clear_has_effective();
  inline void set_has_totalwin();
  inline void clear_has_totalwin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 playerlevel_;
  ::std::string* playername_;
  ::google::protobuf::uint32 playerphoto_;
  ::google::protobuf::uint32 viplvl_;
  ::google::protobuf::uint32 effective_;
  ::google::protobuf::uint32 totalwin_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaHero > arherolist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBArenaPlayer* default_instance_;
};
// -------------------------------------------------------------------

class DBArenaRank : public ::google::protobuf::Message {
 public:
  DBArenaRank();
  virtual ~DBArenaRank();

  DBArenaRank(const DBArenaRank& from);

  inline DBArenaRank& operator=(const DBArenaRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBArenaRank& default_instance();

  void Swap(DBArenaRank* other);

  // implements Message ----------------------------------------------

  DBArenaRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBArenaRank& from);
  void MergeFrom(const DBArenaRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBArenaPlayer arenaPlayerList = 1;
  inline int arenaplayerlist_size() const;
  inline void clear_arenaplayerlist();
  static const int kArenaPlayerListFieldNumber = 1;
  inline const ::TgsProtocol::DBArenaPlayer& arenaplayerlist(int index) const;
  inline ::TgsProtocol::DBArenaPlayer* mutable_arenaplayerlist(int index);
  inline ::TgsProtocol::DBArenaPlayer* add_arenaplayerlist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaPlayer >&
      arenaplayerlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaPlayer >*
      mutable_arenaplayerlist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBArenaRank)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaPlayer > arenaplayerlist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBArenaRank* default_instance_;
};
// -------------------------------------------------------------------

class DBArenaLog : public ::google::protobuf::Message {
 public:
  DBArenaLog();
  virtual ~DBArenaLog();

  DBArenaLog(const DBArenaLog& from);

  inline DBArenaLog& operator=(const DBArenaLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBArenaLog& default_instance();

  void Swap(DBArenaLog* other);

  // implements Message ----------------------------------------------

  DBArenaLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBArenaLog& from);
  void MergeFrom(const DBArenaLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes charName = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 charLvl = 4;
  inline bool has_charlvl() const;
  inline void clear_charlvl();
  static const int kCharLvlFieldNumber = 4;
  inline ::google::protobuf::uint32 charlvl() const;
  inline void set_charlvl(::google::protobuf::uint32 value);

  // required uint32 charPhoto = 5;
  inline bool has_charphoto() const;
  inline void clear_charphoto();
  static const int kCharPhotoFieldNumber = 5;
  inline ::google::protobuf::uint32 charphoto() const;
  inline void set_charphoto(::google::protobuf::uint32 value);

  // required uint32 charVip = 6;
  inline bool has_charvip() const;
  inline void clear_charvip();
  static const int kCharVipFieldNumber = 6;
  inline ::google::protobuf::uint32 charvip() const;
  inline void set_charvip(::google::protobuf::uint32 value);

  // required bool bWin = 7;
  inline bool has_bwin() const;
  inline void clear_bwin();
  static const int kBWinFieldNumber = 7;
  inline bool bwin() const;
  inline void set_bwin(bool value);

  // required uint32 newRank = 8;
  inline bool has_newrank() const;
  inline void clear_newrank();
  static const int kNewRankFieldNumber = 8;
  inline ::google::protobuf::uint32 newrank() const;
  inline void set_newrank(::google::protobuf::uint32 value);

  // required bool bRobot = 9;
  inline bool has_brobot() const;
  inline void clear_brobot();
  static const int kBRobotFieldNumber = 9;
  inline bool brobot() const;
  inline void set_brobot(bool value);

  // required uint32 curTime = 10;
  inline bool has_curtime() const;
  inline void clear_curtime();
  static const int kCurTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 curtime() const;
  inline void set_curtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBArenaLog)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_charlvl();
  inline void clear_has_charlvl();
  inline void set_has_charphoto();
  inline void clear_has_charphoto();
  inline void set_has_charvip();
  inline void clear_has_charvip();
  inline void set_has_bwin();
  inline void clear_has_bwin();
  inline void set_has_newrank();
  inline void clear_has_newrank();
  inline void set_has_brobot();
  inline void clear_has_brobot();
  inline void set_has_curtime();
  inline void clear_has_curtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 charlvl_;
  ::std::string* charname_;
  ::google::protobuf::uint32 charphoto_;
  ::google::protobuf::uint32 charvip_;
  ::google::protobuf::uint32 newrank_;
  bool bwin_;
  bool brobot_;
  ::google::protobuf::uint32 curtime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBArenaLog* default_instance_;
};
// -------------------------------------------------------------------

class DBArenaLogList : public ::google::protobuf::Message {
 public:
  DBArenaLogList();
  virtual ~DBArenaLogList();

  DBArenaLogList(const DBArenaLogList& from);

  inline DBArenaLogList& operator=(const DBArenaLogList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBArenaLogList& default_instance();

  void Swap(DBArenaLogList* other);

  // implements Message ----------------------------------------------

  DBArenaLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBArenaLogList& from);
  void MergeFrom(const DBArenaLogList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBArenaLog arenaLog = 1;
  inline int arenalog_size() const;
  inline void clear_arenalog();
  static const int kArenaLogFieldNumber = 1;
  inline const ::TgsProtocol::DBArenaLog& arenalog(int index) const;
  inline ::TgsProtocol::DBArenaLog* mutable_arenalog(int index);
  inline ::TgsProtocol::DBArenaLog* add_arenalog();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaLog >&
      arenalog() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaLog >*
      mutable_arenalog();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBArenaLogList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaLog > arenalog_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBArenaLogList* default_instance_;
};
// -------------------------------------------------------------------

class DBFriendInfo : public ::google::protobuf::Message {
 public:
  DBFriendInfo();
  virtual ~DBFriendInfo();

  DBFriendInfo(const DBFriendInfo& from);

  inline DBFriendInfo& operator=(const DBFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBFriendInfo& default_instance();

  void Swap(DBFriendInfo* other);

  // implements Message ----------------------------------------------

  DBFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBFriendInfo& from);
  void MergeFrom(const DBFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes charName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 photo = 3;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 3;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 charLevel = 4;
  inline bool has_charlevel() const;
  inline void clear_charlevel();
  static const int kCharLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 charlevel() const;
  inline void set_charlevel(::google::protobuf::uint32 value);

  // required uint32 effect = 5;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 5;
  inline ::google::protobuf::uint32 effect() const;
  inline void set_effect(::google::protobuf::uint32 value);

  // required uint32 vipLevel = 6;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required bytes guildName = 7;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildNameFieldNumber = 7;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const void* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // required bool bSend = 8;
  inline bool has_bsend() const;
  inline void clear_bsend();
  static const int kBSendFieldNumber = 8;
  inline bool bsend() const;
  inline void set_bsend(bool value);

  // required uint32 receive = 9;
  inline bool has_receive() const;
  inline void clear_receive();
  static const int kReceiveFieldNumber = 9;
  inline ::google::protobuf::uint32 receive() const;
  inline void set_receive(::google::protobuf::uint32 value);

  // required uint32 loginTime = 10;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 logintime() const;
  inline void set_logintime(::google::protobuf::uint32 value);

  // optional uint64 effect64 = 11;
  inline bool has_effect64() const;
  inline void clear_effect64();
  static const int kEffect64FieldNumber = 11;
  inline ::google::protobuf::uint64 effect64() const;
  inline void set_effect64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBFriendInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_charlevel();
  inline void clear_has_charlevel();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_bsend();
  inline void clear_has_bsend();
  inline void set_has_receive();
  inline void clear_has_receive();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_effect64();
  inline void clear_has_effect64();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 charlevel_;
  ::google::protobuf::uint32 effect_;
  ::google::protobuf::uint32 viplevel_;
  ::std::string* guildname_;
  bool bsend_;
  ::google::protobuf::uint32 receive_;
  ::google::protobuf::uint64 effect64_;
  ::google::protobuf::uint32 logintime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class DBFriendList : public ::google::protobuf::Message {
 public:
  DBFriendList();
  virtual ~DBFriendList();

  DBFriendList(const DBFriendList& from);

  inline DBFriendList& operator=(const DBFriendList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBFriendList& default_instance();

  void Swap(DBFriendList* other);

  // implements Message ----------------------------------------------

  DBFriendList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBFriendList& from);
  void MergeFrom(const DBFriendList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBFriendInfo friendList = 1;
  inline int friendlist_size() const;
  inline void clear_friendlist();
  static const int kFriendListFieldNumber = 1;
  inline const ::TgsProtocol::DBFriendInfo& friendlist(int index) const;
  inline ::TgsProtocol::DBFriendInfo* mutable_friendlist(int index);
  inline ::TgsProtocol::DBFriendInfo* add_friendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >&
      friendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >*
      mutable_friendlist();

  // repeated .TgsProtocol.DBFriendInfo blackList = 2;
  inline int blacklist_size() const;
  inline void clear_blacklist();
  static const int kBlackListFieldNumber = 2;
  inline const ::TgsProtocol::DBFriendInfo& blacklist(int index) const;
  inline ::TgsProtocol::DBFriendInfo* mutable_blacklist(int index);
  inline ::TgsProtocol::DBFriendInfo* add_blacklist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >&
      blacklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >*
      mutable_blacklist();

  // repeated .TgsProtocol.DBFriendInfo applyList = 3;
  inline int applylist_size() const;
  inline void clear_applylist();
  static const int kApplyListFieldNumber = 3;
  inline const ::TgsProtocol::DBFriendInfo& applylist(int index) const;
  inline ::TgsProtocol::DBFriendInfo* mutable_applylist(int index);
  inline ::TgsProtocol::DBFriendInfo* add_applylist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >&
      applylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >*
      mutable_applylist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBFriendList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo > friendlist_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo > blacklist_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo > applylist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBFriendList* default_instance_;
};
// -------------------------------------------------------------------

class ShopInfo : public ::google::protobuf::Message {
 public:
  ShopInfo();
  virtual ~ShopInfo();

  ShopInfo(const ShopInfo& from);

  inline ShopInfo& operator=(const ShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopInfo& default_instance();

  void Swap(ShopInfo* other);

  // implements Message ----------------------------------------------

  ShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopInfo& from);
  void MergeFrom(const ShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 goodsid = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsidFieldNumber = 1;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // required uint32 shoptype = 2;
  inline bool has_shoptype() const;
  inline void clear_shoptype();
  static const int kShoptypeFieldNumber = 2;
  inline ::google::protobuf::uint32 shoptype() const;
  inline void set_shoptype(::google::protobuf::uint32 value);

  // required uint32 buytype = 3;
  inline bool has_buytype() const;
  inline void clear_buytype();
  static const int kBuytypeFieldNumber = 3;
  inline ::google::protobuf::uint32 buytype() const;
  inline void set_buytype(::google::protobuf::uint32 value);

  // required uint32 buycontentid = 4;
  inline bool has_buycontentid() const;
  inline void clear_buycontentid();
  static const int kBuycontentidFieldNumber = 4;
  inline ::google::protobuf::uint32 buycontentid() const;
  inline void set_buycontentid(::google::protobuf::uint32 value);

  // required uint32 buycount = 5;
  inline bool has_buycount() const;
  inline void clear_buycount();
  static const int kBuycountFieldNumber = 5;
  inline ::google::protobuf::uint32 buycount() const;
  inline void set_buycount(::google::protobuf::uint32 value);

  // required uint32 costtype = 6;
  inline bool has_costtype() const;
  inline void clear_costtype();
  static const int kCosttypeFieldNumber = 6;
  inline ::google::protobuf::uint32 costtype() const;
  inline void set_costtype(::google::protobuf::uint32 value);

  // required uint32 costcontentid = 7;
  inline bool has_costcontentid() const;
  inline void clear_costcontentid();
  static const int kCostcontentidFieldNumber = 7;
  inline ::google::protobuf::uint32 costcontentid() const;
  inline void set_costcontentid(::google::protobuf::uint32 value);

  // required uint32 costcount = 8;
  inline bool has_costcount() const;
  inline void clear_costcount();
  static const int kCostcountFieldNumber = 8;
  inline ::google::protobuf::uint32 costcount() const;
  inline void set_costcount(::google::protobuf::uint32 value);

  // required uint32 costcountold = 9;
  inline bool has_costcountold() const;
  inline void clear_costcountold();
  static const int kCostcountoldFieldNumber = 9;
  inline ::google::protobuf::uint32 costcountold() const;
  inline void set_costcountold(::google::protobuf::uint32 value);

  // required uint32 status = 10;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 10;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 platformtype = 11;
  inline bool has_platformtype() const;
  inline void clear_platformtype();
  static const int kPlatformtypeFieldNumber = 11;
  inline ::google::protobuf::uint32 platformtype() const;
  inline void set_platformtype(::google::protobuf::uint32 value);

  // required bytes limitnumber = 12;
  inline bool has_limitnumber() const;
  inline void clear_limitnumber();
  static const int kLimitnumberFieldNumber = 12;
  inline const ::std::string& limitnumber() const;
  inline void set_limitnumber(const ::std::string& value);
  inline void set_limitnumber(const char* value);
  inline void set_limitnumber(const void* value, size_t size);
  inline ::std::string* mutable_limitnumber();
  inline ::std::string* release_limitnumber();
  inline void set_allocated_limitnumber(::std::string* limitnumber);

  // required uint32 limittype = 13;
  inline bool has_limittype() const;
  inline void clear_limittype();
  static const int kLimittypeFieldNumber = 13;
  inline ::google::protobuf::uint32 limittype() const;
  inline void set_limittype(::google::protobuf::uint32 value);

  // required uint32 prizefloat = 14;
  inline bool has_prizefloat() const;
  inline void clear_prizefloat();
  static const int kPrizefloatFieldNumber = 14;
  inline ::google::protobuf::uint32 prizefloat() const;
  inline void set_prizefloat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ShopInfo)
 private:
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_shoptype();
  inline void clear_has_shoptype();
  inline void set_has_buytype();
  inline void clear_has_buytype();
  inline void set_has_buycontentid();
  inline void clear_has_buycontentid();
  inline void set_has_buycount();
  inline void clear_has_buycount();
  inline void set_has_costtype();
  inline void clear_has_costtype();
  inline void set_has_costcontentid();
  inline void clear_has_costcontentid();
  inline void set_has_costcount();
  inline void clear_has_costcount();
  inline void set_has_costcountold();
  inline void clear_has_costcountold();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_platformtype();
  inline void clear_has_platformtype();
  inline void set_has_limitnumber();
  inline void clear_has_limitnumber();
  inline void set_has_limittype();
  inline void clear_has_limittype();
  inline void set_has_prizefloat();
  inline void clear_has_prizefloat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 shoptype_;
  ::google::protobuf::uint32 buytype_;
  ::google::protobuf::uint32 buycontentid_;
  ::google::protobuf::uint32 buycount_;
  ::google::protobuf::uint32 costtype_;
  ::google::protobuf::uint32 costcontentid_;
  ::google::protobuf::uint32 costcount_;
  ::google::protobuf::uint32 costcountold_;
  ::google::protobuf::uint32 status_;
  ::std::string* limitnumber_;
  ::google::protobuf::uint32 platformtype_;
  ::google::protobuf::uint32 limittype_;
  ::google::protobuf::uint32 prizefloat_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class GoodsData : public ::google::protobuf::Message {
 public:
  GoodsData();
  virtual ~GoodsData();

  GoodsData(const GoodsData& from);

  inline GoodsData& operator=(const GoodsData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsData& default_instance();

  void Swap(GoodsData* other);

  // implements Message ----------------------------------------------

  GoodsData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsData& from);
  void MergeFrom(const GoodsData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 goodsid = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsidFieldNumber = 1;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // required uint32 already = 2;
  inline bool has_already() const;
  inline void clear_already();
  static const int kAlreadyFieldNumber = 2;
  inline ::google::protobuf::uint32 already() const;
  inline void set_already(::google::protobuf::uint32 value);

  // required uint32 flushtime = 3;
  inline bool has_flushtime() const;
  inline void clear_flushtime();
  static const int kFlushtimeFieldNumber = 3;
  inline ::google::protobuf::uint32 flushtime() const;
  inline void set_flushtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GoodsData)
 private:
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_already();
  inline void clear_has_already();
  inline void set_has_flushtime();
  inline void clear_has_flushtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 already_;
  ::google::protobuf::uint32 flushtime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GoodsData* default_instance_;
};
// -------------------------------------------------------------------

class GoodsDataList : public ::google::protobuf::Message {
 public:
  GoodsDataList();
  virtual ~GoodsDataList();

  GoodsDataList(const GoodsDataList& from);

  inline GoodsDataList& operator=(const GoodsDataList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsDataList& default_instance();

  void Swap(GoodsDataList* other);

  // implements Message ----------------------------------------------

  GoodsDataList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsDataList& from);
  void MergeFrom(const GoodsDataList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.GoodsData goodsdatalist = 1;
  inline int goodsdatalist_size() const;
  inline void clear_goodsdatalist();
  static const int kGoodsdatalistFieldNumber = 1;
  inline const ::TgsProtocol::GoodsData& goodsdatalist(int index) const;
  inline ::TgsProtocol::GoodsData* mutable_goodsdatalist(int index);
  inline ::TgsProtocol::GoodsData* add_goodsdatalist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GoodsData >&
      goodsdatalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GoodsData >*
      mutable_goodsdatalist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.GoodsDataList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GoodsData > goodsdatalist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GoodsDataList* default_instance_;
};
// -------------------------------------------------------------------

class ClientQuest : public ::google::protobuf::Message {
 public:
  ClientQuest();
  virtual ~ClientQuest();

  ClientQuest(const ClientQuest& from);

  inline ClientQuest& operator=(const ClientQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientQuest& default_instance();

  void Swap(ClientQuest* other);

  // implements Message ----------------------------------------------

  ClientQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientQuest& from);
  void MergeFrom(const ClientQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);

  // required uint32 complete = 2;
  inline bool has_complete() const;
  inline void clear_complete();
  static const int kCompleteFieldNumber = 2;
  inline ::google::protobuf::uint32 complete() const;
  inline void set_complete(::google::protobuf::uint32 value);

  // required uint64 targetValue = 3;
  inline bool has_targetvalue() const;
  inline void clear_targetvalue();
  static const int kTargetValueFieldNumber = 3;
  inline ::google::protobuf::uint64 targetvalue() const;
  inline void set_targetvalue(::google::protobuf::uint64 value);

  // required uint32 isShow = 4;
  inline bool has_isshow() const;
  inline void clear_isshow();
  static const int kIsShowFieldNumber = 4;
  inline ::google::protobuf::uint32 isshow() const;
  inline void set_isshow(::google::protobuf::uint32 value);

  // optional uint32 isGet = 5;
  inline bool has_isget() const;
  inline void clear_isget();
  static const int kIsGetFieldNumber = 5;
  inline ::google::protobuf::uint32 isget() const;
  inline void set_isget(::google::protobuf::uint32 value);

  // optional uint32 completeTime = 6;
  inline bool has_completetime() const;
  inline void clear_completetime();
  static const int kCompleteTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 completetime() const;
  inline void set_completetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_complete();
  inline void clear_has_complete();
  inline void set_has_targetvalue();
  inline void clear_has_targetvalue();
  inline void set_has_isshow();
  inline void clear_has_isshow();
  inline void set_has_isget();
  inline void clear_has_isget();
  inline void set_has_completetime();
  inline void clear_has_completetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 questid_;
  ::google::protobuf::uint32 complete_;
  ::google::protobuf::uint64 targetvalue_;
  ::google::protobuf::uint32 isshow_;
  ::google::protobuf::uint32 isget_;
  ::google::protobuf::uint32 completetime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientQuest* default_instance_;
};
// -------------------------------------------------------------------

class TEvaluation : public ::google::protobuf::Message {
 public:
  TEvaluation();
  virtual ~TEvaluation();

  TEvaluation(const TEvaluation& from);

  inline TEvaluation& operator=(const TEvaluation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TEvaluation& default_instance();

  void Swap(TEvaluation* other);

  // implements Message ----------------------------------------------

  TEvaluation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TEvaluation& from);
  void MergeFrom(const TEvaluation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 instanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint32 value);

  // required uint32 evaluation = 2;
  inline bool has_evaluation() const;
  inline void clear_evaluation();
  static const int kEvaluationFieldNumber = 2;
  inline ::google::protobuf::uint32 evaluation() const;
  inline void set_evaluation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.TEvaluation)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_evaluation();
  inline void clear_has_evaluation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 instanceid_;
  ::google::protobuf::uint32 evaluation_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static TEvaluation* default_instance_;
};
// -------------------------------------------------------------------

class HeroEquipInfo : public ::google::protobuf::Message {
 public:
  HeroEquipInfo();
  virtual ~HeroEquipInfo();

  HeroEquipInfo(const HeroEquipInfo& from);

  inline HeroEquipInfo& operator=(const HeroEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroEquipInfo& default_instance();

  void Swap(HeroEquipInfo* other);

  // implements Message ----------------------------------------------

  HeroEquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroEquipInfo& from);
  void MergeFrom(const HeroEquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateId = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // repeated uint32 attrVal = 3;
  inline int attrval_size() const;
  inline void clear_attrval();
  static const int kAttrValFieldNumber = 3;
  inline ::google::protobuf::uint32 attrval(int index) const;
  inline void set_attrval(int index, ::google::protobuf::uint32 value);
  inline void add_attrval(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      attrval() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_attrval();

  // repeated uint32 scheduleVal = 4;
  inline int scheduleval_size() const;
  inline void clear_scheduleval();
  static const int kScheduleValFieldNumber = 4;
  inline ::google::protobuf::uint32 scheduleval(int index) const;
  inline void set_scheduleval(int index, ::google::protobuf::uint32 value);
  inline void add_scheduleval(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      scheduleval() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_scheduleval();

  // @@protoc_insertion_point(class_scope:TgsProtocol.HeroEquipInfo)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > attrval_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > scheduleval_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static HeroEquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class HeroEquipNew : public ::google::protobuf::Message {
 public:
  HeroEquipNew();
  virtual ~HeroEquipNew();

  HeroEquipNew(const HeroEquipNew& from);

  inline HeroEquipNew& operator=(const HeroEquipNew& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroEquipNew& default_instance();

  void Swap(HeroEquipNew* other);

  // implements Message ----------------------------------------------

  HeroEquipNew* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroEquipNew& from);
  void MergeFrom(const HeroEquipNew& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateId = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint64 instanceId = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 2;
  inline ::google::protobuf::uint64 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint64 value);

  // required uint32 strengLevel = 3;
  inline bool has_strenglevel() const;
  inline void clear_strenglevel();
  static const int kStrengLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 strenglevel() const;
  inline void set_strenglevel(::google::protobuf::uint32 value);

  // required uint32 refineLevel = 4;
  inline bool has_refinelevel() const;
  inline void clear_refinelevel();
  static const int kRefineLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 refinelevel() const;
  inline void set_refinelevel(::google::protobuf::uint32 value);

  // optional uint32 starLevel = 5;
  inline bool has_starlevel() const;
  inline void clear_starlevel();
  static const int kStarLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 starlevel() const;
  inline void set_starlevel(::google::protobuf::uint32 value);

  // optional uint32 strengExp = 6;
  inline bool has_strengexp() const;
  inline void clear_strengexp();
  static const int kStrengExpFieldNumber = 6;
  inline ::google::protobuf::uint32 strengexp() const;
  inline void set_strengexp(::google::protobuf::uint32 value);

  // optional uint32 refineExp = 7;
  inline bool has_refineexp() const;
  inline void clear_refineexp();
  static const int kRefineExpFieldNumber = 7;
  inline ::google::protobuf::uint32 refineexp() const;
  inline void set_refineexp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.HeroEquipNew)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_strenglevel();
  inline void clear_has_strenglevel();
  inline void set_has_refinelevel();
  inline void clear_has_refinelevel();
  inline void set_has_starlevel();
  inline void clear_has_starlevel();
  inline void set_has_strengexp();
  inline void clear_has_strengexp();
  inline void set_has_refineexp();
  inline void clear_has_refineexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 instanceid_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 strenglevel_;
  ::google::protobuf::uint32 refinelevel_;
  ::google::protobuf::uint32 starlevel_;
  ::google::protobuf::uint32 strengexp_;
  ::google::protobuf::uint32 refineexp_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static HeroEquipNew* default_instance_;
};
// -------------------------------------------------------------------

class Property : public ::google::protobuf::Message {
 public:
  Property();
  virtual ~Property();

  Property(const Property& from);

  inline Property& operator=(const Property& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Property& default_instance();

  void Swap(Property* other);

  // implements Message ----------------------------------------------

  Property* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Property& from);
  void MergeFrom(const Property& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional float base = 2;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 2;
  inline float base() const;
  inline void set_base(float value);

  // optional float per = 3;
  inline bool has_per() const;
  inline void clear_per();
  static const int kPerFieldNumber = 3;
  inline float per() const;
  inline void set_per(float value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.Property)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_per();
  inline void clear_has_per();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  float base_;
  float per_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static Property* default_instance_;
};
// -------------------------------------------------------------------

class WakeAttr : public ::google::protobuf::Message {
 public:
  WakeAttr();
  virtual ~WakeAttr();

  WakeAttr(const WakeAttr& from);

  inline WakeAttr& operator=(const WakeAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WakeAttr& default_instance();

  void Swap(WakeAttr* other);

  // implements Message ----------------------------------------------

  WakeAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WakeAttr& from);
  void MergeFrom(const WakeAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.Property prop = 1;
  inline int prop_size() const;
  inline void clear_prop();
  static const int kPropFieldNumber = 1;
  inline const ::TgsProtocol::Property& prop(int index) const;
  inline ::TgsProtocol::Property* mutable_prop(int index);
  inline ::TgsProtocol::Property* add_prop();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Property >&
      prop() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Property >*
      mutable_prop();

  // @@protoc_insertion_point(class_scope:TgsProtocol.WakeAttr)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Property > prop_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static WakeAttr* default_instance_;
};
// -------------------------------------------------------------------

class Diagram : public ::google::protobuf::Message {
 public:
  Diagram();
  virtual ~Diagram();

  Diagram(const Diagram& from);

  inline Diagram& operator=(const Diagram& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Diagram& default_instance();

  void Swap(Diagram* other);

  // implements Message ----------------------------------------------

  Diagram* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Diagram& from);
  void MergeFrom(const Diagram& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.Diagram)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static Diagram* default_instance_;
};
// -------------------------------------------------------------------

class DiagramChapter : public ::google::protobuf::Message {
 public:
  DiagramChapter();
  virtual ~DiagramChapter();

  DiagramChapter(const DiagramChapter& from);

  inline DiagramChapter& operator=(const DiagramChapter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DiagramChapter& default_instance();

  void Swap(DiagramChapter* other);

  // implements Message ----------------------------------------------

  DiagramChapter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DiagramChapter& from);
  void MergeFrom(const DiagramChapter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DiagramChapter)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DiagramChapter* default_instance_;
};
// -------------------------------------------------------------------

class DiagramChapterMap : public ::google::protobuf::Message {
 public:
  DiagramChapterMap();
  virtual ~DiagramChapterMap();

  DiagramChapterMap(const DiagramChapterMap& from);

  inline DiagramChapterMap& operator=(const DiagramChapterMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DiagramChapterMap& default_instance();

  void Swap(DiagramChapterMap* other);

  // implements Message ----------------------------------------------

  DiagramChapterMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DiagramChapterMap& from);
  void MergeFrom(const DiagramChapterMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.Diagram diagram = 2;
  inline int diagram_size() const;
  inline void clear_diagram();
  static const int kDiagramFieldNumber = 2;
  inline const ::TgsProtocol::Diagram& diagram(int index) const;
  inline ::TgsProtocol::Diagram* mutable_diagram(int index);
  inline ::TgsProtocol::Diagram* add_diagram();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Diagram >&
      diagram() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Diagram >*
      mutable_diagram();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DiagramChapterMap)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Diagram > diagram_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DiagramChapterMap* default_instance_;
};
// -------------------------------------------------------------------

class DiagramMap : public ::google::protobuf::Message {
 public:
  DiagramMap();
  virtual ~DiagramMap();

  DiagramMap(const DiagramMap& from);

  inline DiagramMap& operator=(const DiagramMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DiagramMap& default_instance();

  void Swap(DiagramMap* other);

  // implements Message ----------------------------------------------

  DiagramMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DiagramMap& from);
  void MergeFrom(const DiagramMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DiagramChapterMap diagramChapterMap = 1;
  inline int diagramchaptermap_size() const;
  inline void clear_diagramchaptermap();
  static const int kDiagramChapterMapFieldNumber = 1;
  inline const ::TgsProtocol::DiagramChapterMap& diagramchaptermap(int index) const;
  inline ::TgsProtocol::DiagramChapterMap* mutable_diagramchaptermap(int index);
  inline ::TgsProtocol::DiagramChapterMap* add_diagramchaptermap();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DiagramChapterMap >&
      diagramchaptermap() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DiagramChapterMap >*
      mutable_diagramchaptermap();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DiagramMap)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DiagramChapterMap > diagramchaptermap_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DiagramMap* default_instance_;
};
// -------------------------------------------------------------------

class GhostDetail : public ::google::protobuf::Message {
 public:
  GhostDetail();
  virtual ~GhostDetail();

  GhostDetail(const GhostDetail& from);

  inline GhostDetail& operator=(const GhostDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostDetail& default_instance();

  void Swap(GhostDetail* other);

  // implements Message ----------------------------------------------

  GhostDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GhostDetail& from);
  void MergeFrom(const GhostDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 activeId = 2;
  inline int activeid_size() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 2;
  inline ::google::protobuf::uint32 activeid(int index) const;
  inline void set_activeid(int index, ::google::protobuf::uint32 value);
  inline void add_activeid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      activeid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_activeid();

  // @@protoc_insertion_point(class_scope:TgsProtocol.GhostDetail)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > activeid_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GhostDetail* default_instance_;
};
// -------------------------------------------------------------------

class Ghost : public ::google::protobuf::Message {
 public:
  Ghost();
  virtual ~Ghost();

  Ghost(const Ghost& from);

  inline Ghost& operator=(const Ghost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ghost& default_instance();

  void Swap(Ghost* other);

  // implements Message ----------------------------------------------

  Ghost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ghost& from);
  void MergeFrom(const Ghost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 activeId = 2;
  inline int activeid_size() const;
  inline void clear_activeid();
  static const int kActiveIdFieldNumber = 2;
  inline ::google::protobuf::uint32 activeid(int index) const;
  inline void set_activeid(int index, ::google::protobuf::uint32 value);
  inline void add_activeid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      activeid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_activeid();

  // @@protoc_insertion_point(class_scope:TgsProtocol.Ghost)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > activeid_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static Ghost* default_instance_;
};
// -------------------------------------------------------------------

class GhostList : public ::google::protobuf::Message {
 public:
  GhostList();
  virtual ~GhostList();

  GhostList(const GhostList& from);

  inline GhostList& operator=(const GhostList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostList& default_instance();

  void Swap(GhostList* other);

  // implements Message ----------------------------------------------

  GhostList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GhostList& from);
  void MergeFrom(const GhostList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.GhostDetail ghostList = 1;
  inline int ghostlist_size() const;
  inline void clear_ghostlist();
  static const int kGhostListFieldNumber = 1;
  inline const ::TgsProtocol::GhostDetail& ghostlist(int index) const;
  inline ::TgsProtocol::GhostDetail* mutable_ghostlist(int index);
  inline ::TgsProtocol::GhostDetail* add_ghostlist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GhostDetail >&
      ghostlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GhostDetail >*
      mutable_ghostlist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.GhostList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GhostDetail > ghostlist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GhostList* default_instance_;
};
// -------------------------------------------------------------------

class EpicBoss : public ::google::protobuf::Message {
 public:
  EpicBoss();
  virtual ~EpicBoss();

  EpicBoss(const EpicBoss& from);

  inline EpicBoss& operator=(const EpicBoss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EpicBoss& default_instance();

  void Swap(EpicBoss* other);

  // implements Message ----------------------------------------------

  EpicBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EpicBoss& from);
  void MergeFrom(const EpicBoss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 chapterId = 1;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chapterid() const;
  inline void set_chapterid(::google::protobuf::uint32 value);

  // required uint32 mapId = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.EpicBoss)
 private:
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapterid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static EpicBoss* default_instance_;
};
// -------------------------------------------------------------------

class EpicBossList : public ::google::protobuf::Message {
 public:
  EpicBossList();
  virtual ~EpicBossList();

  EpicBossList(const EpicBossList& from);

  inline EpicBossList& operator=(const EpicBossList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EpicBossList& default_instance();

  void Swap(EpicBossList* other);

  // implements Message ----------------------------------------------

  EpicBossList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EpicBossList& from);
  void MergeFrom(const EpicBossList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.EpicBoss list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::TgsProtocol::EpicBoss& list(int index) const;
  inline ::TgsProtocol::EpicBoss* mutable_list(int index);
  inline ::TgsProtocol::EpicBoss* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::EpicBoss >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::EpicBoss >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:TgsProtocol.EpicBossList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::EpicBoss > list_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static EpicBossList* default_instance_;
};
// -------------------------------------------------------------------

class OnlineRewards : public ::google::protobuf::Message {
 public:
  OnlineRewards();
  virtual ~OnlineRewards();

  OnlineRewards(const OnlineRewards& from);

  inline OnlineRewards& operator=(const OnlineRewards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineRewards& default_instance();

  void Swap(OnlineRewards* other);

  // implements Message ----------------------------------------------

  OnlineRewards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineRewards& from);
  void MergeFrom(const OnlineRewards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 onlinetime = 1;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlinetimeFieldNumber = 1;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientSource sources = 2;
  inline int sources_size() const;
  inline void clear_sources();
  static const int kSourcesFieldNumber = 2;
  inline const ::TgsProtocol::ClientSource& sources(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_sources(int index);
  inline ::TgsProtocol::ClientSource* add_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_sources();

  // @@protoc_insertion_point(class_scope:TgsProtocol.OnlineRewards)
 private:
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > sources_;
  ::google::protobuf::uint32 onlinetime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static OnlineRewards* default_instance_;
};
// -------------------------------------------------------------------

class TreeState : public ::google::protobuf::Message {
 public:
  TreeState();
  virtual ~TreeState();

  TreeState(const TreeState& from);

  inline TreeState& operator=(const TreeState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreeState& default_instance();

  void Swap(TreeState* other);

  // implements Message ----------------------------------------------

  TreeState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreeState& from);
  void MergeFrom(const TreeState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 acctime = 2;
  inline bool has_acctime() const;
  inline void clear_acctime();
  static const int kAcctimeFieldNumber = 2;
  inline ::google::protobuf::uint32 acctime() const;
  inline void set_acctime(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientSource sources = 3;
  inline int sources_size() const;
  inline void clear_sources();
  static const int kSourcesFieldNumber = 3;
  inline const ::TgsProtocol::ClientSource& sources(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_sources(int index);
  inline ::TgsProtocol::ClientSource* add_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_sources();

  // @@protoc_insertion_point(class_scope:TgsProtocol.TreeState)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_acctime();
  inline void clear_has_acctime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 acctime_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > sources_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static TreeState* default_instance_;
};
// -------------------------------------------------------------------

class RetrieveState : public ::google::protobuf::Message {
 public:
  RetrieveState();
  virtual ~RetrieveState();

  RetrieveState(const RetrieveState& from);

  inline RetrieveState& operator=(const RetrieveState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetrieveState& default_instance();

  void Swap(RetrieveState* other);

  // implements Message ----------------------------------------------

  RetrieveState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetrieveState& from);
  void MergeFrom(const RetrieveState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 retrieveActivity = 1;
  inline bool has_retrieveactivity() const;
  inline void clear_retrieveactivity();
  static const int kRetrieveActivityFieldNumber = 1;
  inline ::google::protobuf::uint32 retrieveactivity() const;
  inline void set_retrieveactivity(::google::protobuf::uint32 value);

  // required uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.RetrieveState)
 private:
  inline void set_has_retrieveactivity();
  inline void clear_has_retrieveactivity();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 retrieveactivity_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static RetrieveState* default_instance_;
};
// -------------------------------------------------------------------

class PassWordState : public ::google::protobuf::Message {
 public:
  PassWordState();
  virtual ~PassWordState();

  PassWordState(const PassWordState& from);

  inline PassWordState& operator=(const PassWordState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PassWordState& default_instance();

  void Swap(PassWordState* other);

  // implements Message ----------------------------------------------

  PassWordState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PassWordState& from);
  void MergeFrom(const PassWordState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.PassWordState)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static PassWordState* default_instance_;
};
// -------------------------------------------------------------------

class ClientHeroInfo : public ::google::protobuf::Message {
 public:
  ClientHeroInfo();
  virtual ~ClientHeroInfo();

  ClientHeroInfo(const ClientHeroInfo& from);

  inline ClientHeroInfo& operator=(const ClientHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientHeroInfo& default_instance();

  void Swap(ClientHeroInfo* other);

  // implements Message ----------------------------------------------

  ClientHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientHeroInfo& from);
  void MergeFrom(const ClientHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateId = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint64 instanceId = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 2;
  inline ::google::protobuf::uint64 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint64 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 evolutionLevel = 5;
  inline bool has_evolutionlevel() const;
  inline void clear_evolutionlevel();
  static const int kEvolutionLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 evolutionlevel() const;
  inline void set_evolutionlevel(::google::protobuf::uint32 value);

  // required uint32 forceLevel = 6;
  inline bool has_forcelevel() const;
  inline void clear_forcelevel();
  static const int kForceLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 forcelevel() const;
  inline void set_forcelevel(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.HeroEquipInfo equip = 7;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 7;
  inline const ::TgsProtocol::HeroEquipInfo& equip(int index) const;
  inline ::TgsProtocol::HeroEquipInfo* mutable_equip(int index);
  inline ::TgsProtocol::HeroEquipInfo* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo >*
      mutable_equip();

  // repeated uint32 skillLevel = 8;
  inline int skilllevel_size() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 skilllevel(int index) const;
  inline void set_skilllevel(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skilllevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skilllevel();

  // optional bytes heroName = 9;
  inline bool has_heroname() const;
  inline void clear_heroname();
  static const int kHeroNameFieldNumber = 9;
  inline const ::std::string& heroname() const;
  inline void set_heroname(const ::std::string& value);
  inline void set_heroname(const char* value);
  inline void set_heroname(const void* value, size_t size);
  inline ::std::string* mutable_heroname();
  inline ::std::string* release_heroname();
  inline void set_allocated_heroname(::std::string* heroname);

  // repeated uint64 equipNew = 10;
  inline int equipnew_size() const;
  inline void clear_equipnew();
  static const int kEquipNewFieldNumber = 10;
  inline ::google::protobuf::uint64 equipnew(int index) const;
  inline void set_equipnew(int index, ::google::protobuf::uint64 value);
  inline void add_equipnew(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equipnew() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equipnew();

  // optional uint32 fashionId = 11;
  inline bool has_fashionid() const;
  inline void clear_fashionid();
  static const int kFashionIdFieldNumber = 11;
  inline ::google::protobuf::uint32 fashionid() const;
  inline void set_fashionid(::google::protobuf::uint32 value);

  // repeated uint32 comboSkill = 12;
  inline int comboskill_size() const;
  inline void clear_comboskill();
  static const int kComboSkillFieldNumber = 12;
  inline ::google::protobuf::uint32 comboskill(int index) const;
  inline void set_comboskill(int index, ::google::protobuf::uint32 value);
  inline void add_comboskill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      comboskill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_comboskill();

  // repeated uint32 fateId = 13;
  inline int fateid_size() const;
  inline void clear_fateid();
  static const int kFateIdFieldNumber = 13;
  inline ::google::protobuf::uint32 fateid(int index) const;
  inline void set_fateid(int index, ::google::protobuf::uint32 value);
  inline void add_fateid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fateid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fateid();

  // repeated .TgsProtocol.HeroEquipNew equipNewList = 14;
  inline int equipnewlist_size() const;
  inline void clear_equipnewlist();
  static const int kEquipNewListFieldNumber = 14;
  inline const ::TgsProtocol::HeroEquipNew& equipnewlist(int index) const;
  inline ::TgsProtocol::HeroEquipNew* mutable_equipnewlist(int index);
  inline ::TgsProtocol::HeroEquipNew* add_equipnewlist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >&
      equipnewlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >*
      mutable_equipnewlist();

  // optional uint32 deificationlevel = 15;
  inline bool has_deificationlevel() const;
  inline void clear_deificationlevel();
  static const int kDeificationlevelFieldNumber = 15;
  inline ::google::protobuf::uint32 deificationlevel() const;
  inline void set_deificationlevel(::google::protobuf::uint32 value);

  // optional uint32 wingslevel = 16;
  inline bool has_wingslevel() const;
  inline void clear_wingslevel();
  static const int kWingslevelFieldNumber = 16;
  inline ::google::protobuf::uint32 wingslevel() const;
  inline void set_wingslevel(::google::protobuf::uint32 value);

  // optional uint32 wingsrate = 17;
  inline bool has_wingsrate() const;
  inline void clear_wingsrate();
  static const int kWingsrateFieldNumber = 17;
  inline ::google::protobuf::uint32 wingsrate() const;
  inline void set_wingsrate(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientSource sources = 18;
  inline int sources_size() const;
  inline void clear_sources();
  static const int kSourcesFieldNumber = 18;
  inline const ::TgsProtocol::ClientSource& sources(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_sources(int index);
  inline ::TgsProtocol::ClientSource* add_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_sources();

  // repeated uint32 wakeEquips = 19;
  inline int wakeequips_size() const;
  inline void clear_wakeequips();
  static const int kWakeEquipsFieldNumber = 19;
  inline ::google::protobuf::uint32 wakeequips(int index) const;
  inline void set_wakeequips(int index, ::google::protobuf::uint32 value);
  inline void add_wakeequips(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wakeequips() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wakeequips();

  // optional uint32 wakeLevel = 20;
  inline bool has_wakelevel() const;
  inline void clear_wakelevel();
  static const int kWakeLevelFieldNumber = 20;
  inline ::google::protobuf::uint32 wakelevel() const;
  inline void set_wakelevel(::google::protobuf::uint32 value);

  // optional .TgsProtocol.WakeAttr property = 21;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 21;
  inline const ::TgsProtocol::WakeAttr& property() const;
  inline ::TgsProtocol::WakeAttr* mutable_property();
  inline ::TgsProtocol::WakeAttr* release_property();
  inline void set_allocated_property(::TgsProtocol::WakeAttr* property);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientHeroInfo)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_evolutionlevel();
  inline void clear_has_evolutionlevel();
  inline void set_has_forcelevel();
  inline void clear_has_forcelevel();
  inline void set_has_heroname();
  inline void clear_has_heroname();
  inline void set_has_fashionid();
  inline void clear_has_fashionid();
  inline void set_has_deificationlevel();
  inline void clear_has_deificationlevel();
  inline void set_has_wingslevel();
  inline void clear_has_wingslevel();
  inline void set_has_wingsrate();
  inline void clear_has_wingsrate();
  inline void set_has_wakelevel();
  inline void clear_has_wakelevel();
  inline void set_has_property();
  inline void clear_has_property();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 instanceid_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 evolutionlevel_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo > equip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel_;
  ::google::protobuf::uint32 forcelevel_;
  ::google::protobuf::uint32 fashionid_;
  ::std::string* heroname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equipnew_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > comboskill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fateid_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew > equipnewlist_;
  ::google::protobuf::uint32 deificationlevel_;
  ::google::protobuf::uint32 wingslevel_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > sources_;
  ::google::protobuf::uint32 wingsrate_;
  ::google::protobuf::uint32 wakelevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wakeequips_;
  ::TgsProtocol::WakeAttr* property_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientInstanceEvaluation : public ::google::protobuf::Message {
 public:
  ClientInstanceEvaluation();
  virtual ~ClientInstanceEvaluation();

  ClientInstanceEvaluation(const ClientInstanceEvaluation& from);

  inline ClientInstanceEvaluation& operator=(const ClientInstanceEvaluation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientInstanceEvaluation& default_instance();

  void Swap(ClientInstanceEvaluation* other);

  // implements Message ----------------------------------------------

  ClientInstanceEvaluation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientInstanceEvaluation& from);
  void MergeFrom(const ClientInstanceEvaluation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 instanceId = 1;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint32 value);

  // required uint32 evaluation = 2;
  inline bool has_evaluation() const;
  inline void clear_evaluation();
  static const int kEvaluationFieldNumber = 2;
  inline ::google::protobuf::uint32 evaluation() const;
  inline void set_evaluation(::google::protobuf::uint32 value);

  // required uint32 challengeTimes = 3;
  inline bool has_challengetimes() const;
  inline void clear_challengetimes();
  static const int kChallengeTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 challengetimes() const;
  inline void set_challengetimes(::google::protobuf::uint32 value);

  // required uint32 resetTimes = 4;
  inline bool has_resettimes() const;
  inline void clear_resettimes();
  static const int kResetTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 resettimes() const;
  inline void set_resettimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientInstanceEvaluation)
 private:
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_evaluation();
  inline void clear_has_evaluation();
  inline void set_has_challengetimes();
  inline void clear_has_challengetimes();
  inline void set_has_resettimes();
  inline void clear_has_resettimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 instanceid_;
  ::google::protobuf::uint32 evaluation_;
  ::google::protobuf::uint32 challengetimes_;
  ::google::protobuf::uint32 resettimes_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientInstanceEvaluation* default_instance_;
};
// -------------------------------------------------------------------

class ClientFestivityInfo : public ::google::protobuf::Message {
 public:
  ClientFestivityInfo();
  virtual ~ClientFestivityInfo();

  ClientFestivityInfo(const ClientFestivityInfo& from);

  inline ClientFestivityInfo& operator=(const ClientFestivityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientFestivityInfo& default_instance();

  void Swap(ClientFestivityInfo* other);

  // implements Message ----------------------------------------------

  ClientFestivityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientFestivityInfo& from);
  void MergeFrom(const ClientFestivityInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 festivityId = 1;
  inline bool has_festivityid() const;
  inline void clear_festivityid();
  static const int kFestivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 festivityid() const;
  inline void set_festivityid(::google::protobuf::uint32 value);

  // required uint32 enterCount = 2;
  inline bool has_entercount() const;
  inline void clear_entercount();
  static const int kEnterCountFieldNumber = 2;
  inline ::google::protobuf::uint32 entercount() const;
  inline void set_entercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientFestivityInfo)
 private:
  inline void set_has_festivityid();
  inline void clear_has_festivityid();
  inline void set_has_entercount();
  inline void clear_has_entercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 festivityid_;
  ::google::protobuf::uint32 entercount_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientFestivityInfo* default_instance_;
};
// -------------------------------------------------------------------

class OtherUserInfo : public ::google::protobuf::Message {
 public:
  OtherUserInfo();
  virtual ~OtherUserInfo();

  OtherUserInfo(const OtherUserInfo& from);

  inline OtherUserInfo& operator=(const OtherUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherUserInfo& default_instance();

  void Swap(OtherUserInfo* other);

  // implements Message ----------------------------------------------

  OtherUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OtherUserInfo& from);
  void MergeFrom(const OtherUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes charName = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 cash = 5;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 5;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // optional uint32 gold = 6;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 6;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 8;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 8;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 curStamina = 9;
  inline bool has_curstamina() const;
  inline void clear_curstamina();
  static const int kCurStaminaFieldNumber = 9;
  inline ::google::protobuf::uint32 curstamina() const;
  inline void set_curstamina(::google::protobuf::uint32 value);

  // optional uint32 maxStamina = 10;
  inline bool has_maxstamina() const;
  inline void clear_maxstamina();
  static const int kMaxStaminaFieldNumber = 10;
  inline ::google::protobuf::uint32 maxstamina() const;
  inline void set_maxstamina(::google::protobuf::uint32 value);

  // optional uint32 createTime = 11;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // optional uint32 offlineTime = 12;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint32 value);

  // optional uint32 updateStaminaTime = 13;
  inline bool has_updatestaminatime() const;
  inline void clear_updatestaminatime();
  static const int kUpdateStaminaTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 updatestaminatime() const;
  inline void set_updatestaminatime(::google::protobuf::uint32 value);

  // optional uint32 bitFlag = 14;
  inline bool has_bitflag() const;
  inline void clear_bitflag();
  static const int kBitFlagFieldNumber = 14;
  inline ::google::protobuf::uint32 bitflag() const;
  inline void set_bitflag(::google::protobuf::uint32 value);

  // optional .TgsProtocol.DbQuest quest = 15;
  inline bool has_quest() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 15;
  inline const ::TgsProtocol::DbQuest& quest() const;
  inline ::TgsProtocol::DbQuest* mutable_quest();
  inline ::TgsProtocol::DbQuest* release_quest();
  inline void set_allocated_quest(::TgsProtocol::DbQuest* quest);

  // optional .TgsProtocol.DBEvaluationList evaluation = 16;
  inline bool has_evaluation() const;
  inline void clear_evaluation();
  static const int kEvaluationFieldNumber = 16;
  inline const ::TgsProtocol::DBEvaluationList& evaluation() const;
  inline ::TgsProtocol::DBEvaluationList* mutable_evaluation();
  inline ::TgsProtocol::DBEvaluationList* release_evaluation();
  inline void set_allocated_evaluation(::TgsProtocol::DBEvaluationList* evaluation);

  // optional uint32 vipExp = 18;
  inline bool has_vipexp() const;
  inline void clear_vipexp();
  static const int kVipExpFieldNumber = 18;
  inline ::google::protobuf::uint32 vipexp() const;
  inline void set_vipexp(::google::protobuf::uint32 value);

  // optional uint32 vipLevel = 19;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 19;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // repeated uint32 formation = 20;
  inline int formation_size() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 20;
  inline ::google::protobuf::uint32 formation(int index) const;
  inline void set_formation(int index, ::google::protobuf::uint32 value);
  inline void add_formation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      formation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_formation();

  // optional .TgsProtocol.DBHeroList heroList = 22;
  inline bool has_herolist() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 22;
  inline const ::TgsProtocol::DBHeroList& herolist() const;
  inline ::TgsProtocol::DBHeroList* mutable_herolist();
  inline ::TgsProtocol::DBHeroList* release_herolist();
  inline void set_allocated_herolist(::TgsProtocol::DBHeroList* herolist);

  // optional uint32 gender = 23;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 23;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);

  // optional uint32 photo = 24;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 24;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // optional .TgsProtocol.DBEssenceList essenceItem = 25;
  inline bool has_essenceitem() const;
  inline void clear_essenceitem();
  static const int kEssenceItemFieldNumber = 25;
  inline const ::TgsProtocol::DBEssenceList& essenceitem() const;
  inline ::TgsProtocol::DBEssenceList* mutable_essenceitem();
  inline ::TgsProtocol::DBEssenceList* release_essenceitem();
  inline void set_allocated_essenceitem(::TgsProtocol::DBEssenceList* essenceitem);

  // repeated uint32 RefreshPrice = 26;
  inline int refreshprice_size() const;
  inline void clear_refreshprice();
  static const int kRefreshPriceFieldNumber = 26;
  inline ::google::protobuf::uint32 refreshprice(int index) const;
  inline void set_refreshprice(int index, ::google::protobuf::uint32 value);
  inline void add_refreshprice(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      refreshprice() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_refreshprice();

  // optional .TgsProtocol.DBFestivityList festivity = 27;
  inline bool has_festivity() const;
  inline void clear_festivity();
  static const int kFestivityFieldNumber = 27;
  inline const ::TgsProtocol::DBFestivityList& festivity() const;
  inline ::TgsProtocol::DBFestivityList* mutable_festivity();
  inline ::TgsProtocol::DBFestivityList* release_festivity();
  inline void set_allocated_festivity(::TgsProtocol::DBFestivityList* festivity);

  // optional uint32 lockChatEndTime = 28;
  inline bool has_lockchatendtime() const;
  inline void clear_lockchatendtime();
  static const int kLockChatEndTimeFieldNumber = 28;
  inline ::google::protobuf::uint32 lockchatendtime() const;
  inline void set_lockchatendtime(::google::protobuf::uint32 value);

  // optional uint32 dayChatTimes = 29;
  inline bool has_daychattimes() const;
  inline void clear_daychattimes();
  static const int kDayChatTimesFieldNumber = 29;
  inline ::google::protobuf::uint32 daychattimes() const;
  inline void set_daychattimes(::google::protobuf::uint32 value);

  // optional uint32 skillPoint = 30;
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillPointFieldNumber = 30;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);

  // optional uint32 updateSkillPointTime = 31;
  inline bool has_updateskillpointtime() const;
  inline void clear_updateskillpointtime();
  static const int kUpdateSkillPointTimeFieldNumber = 31;
  inline ::google::protobuf::uint32 updateskillpointtime() const;
  inline void set_updateskillpointtime(::google::protobuf::uint32 value);

  // optional uint32 energy = 32;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 32;
  inline ::google::protobuf::uint32 energy() const;
  inline void set_energy(::google::protobuf::uint32 value);

  // optional uint32 updateEnergyTime = 33;
  inline bool has_updateenergytime() const;
  inline void clear_updateenergytime();
  static const int kUpdateEnergyTimeFieldNumber = 33;
  inline ::google::protobuf::uint32 updateenergytime() const;
  inline void set_updateenergytime(::google::protobuf::uint32 value);

  // optional .TgsProtocol.DBEquipNewList equipNew = 34;
  inline bool has_equipnew() const;
  inline void clear_equipnew();
  static const int kEquipNewFieldNumber = 34;
  inline const ::TgsProtocol::DBEquipNewList& equipnew() const;
  inline ::TgsProtocol::DBEquipNewList* mutable_equipnew();
  inline ::TgsProtocol::DBEquipNewList* release_equipnew();
  inline void set_allocated_equipnew(::TgsProtocol::DBEquipNewList* equipnew);

  // repeated uint32 arenaFormation = 35;
  inline int arenaformation_size() const;
  inline void clear_arenaformation();
  static const int kArenaFormationFieldNumber = 35;
  inline ::google::protobuf::uint32 arenaformation(int index) const;
  inline void set_arenaformation(int index, ::google::protobuf::uint32 value);
  inline void add_arenaformation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arenaformation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arenaformation();

  // @@protoc_insertion_point(class_scope:TgsProtocol.OtherUserInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_curstamina();
  inline void clear_has_curstamina();
  inline void set_has_maxstamina();
  inline void clear_has_maxstamina();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_updatestaminatime();
  inline void clear_has_updatestaminatime();
  inline void set_has_bitflag();
  inline void clear_has_bitflag();
  inline void set_has_quest();
  inline void clear_has_quest();
  inline void set_has_evaluation();
  inline void clear_has_evaluation();
  inline void set_has_vipexp();
  inline void clear_has_vipexp();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_herolist();
  inline void clear_has_herolist();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_essenceitem();
  inline void clear_has_essenceitem();
  inline void set_has_festivity();
  inline void clear_has_festivity();
  inline void set_has_lockchatendtime();
  inline void clear_has_lockchatendtime();
  inline void set_has_daychattimes();
  inline void clear_has_daychattimes();
  inline void set_has_skillpoint();
  inline void clear_has_skillpoint();
  inline void set_has_updateskillpointtime();
  inline void clear_has_updateskillpointtime();
  inline void set_has_energy();
  inline void clear_has_energy();
  inline void set_has_updateenergytime();
  inline void clear_has_updateenergytime();
  inline void set_has_equipnew();
  inline void clear_has_equipnew();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 curstamina_;
  ::google::protobuf::uint32 maxstamina_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 offlinetime_;
  ::google::protobuf::uint32 updatestaminatime_;
  ::google::protobuf::uint32 bitflag_;
  ::TgsProtocol::DbQuest* quest_;
  ::TgsProtocol::DBEvaluationList* evaluation_;
  ::google::protobuf::uint32 vipexp_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > formation_;
  ::TgsProtocol::DBHeroList* herolist_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 photo_;
  ::TgsProtocol::DBEssenceList* essenceitem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > refreshprice_;
  ::TgsProtocol::DBFestivityList* festivity_;
  ::google::protobuf::uint32 lockchatendtime_;
  ::google::protobuf::uint32 daychattimes_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::uint32 updateskillpointtime_;
  ::google::protobuf::uint32 energy_;
  ::google::protobuf::uint32 updateenergytime_;
  ::TgsProtocol::DBEquipNewList* equipnew_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arenaformation_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static OtherUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class OtherUserInfoClient : public ::google::protobuf::Message {
 public:
  OtherUserInfoClient();
  virtual ~OtherUserInfoClient();

  OtherUserInfoClient(const OtherUserInfoClient& from);

  inline OtherUserInfoClient& operator=(const OtherUserInfoClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherUserInfoClient& default_instance();

  void Swap(OtherUserInfoClient* other);

  // implements Message ----------------------------------------------

  OtherUserInfoClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OtherUserInfoClient& from);
  void MergeFrom(const OtherUserInfoClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes charName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 charExp = 3;
  inline bool has_charexp() const;
  inline void clear_charexp();
  static const int kCharExpFieldNumber = 3;
  inline ::google::protobuf::uint32 charexp() const;
  inline void set_charexp(::google::protobuf::uint32 value);

  // required uint32 charlevel = 4;
  inline bool has_charlevel() const;
  inline void clear_charlevel();
  static const int kCharlevelFieldNumber = 4;
  inline ::google::protobuf::uint32 charlevel() const;
  inline void set_charlevel(::google::protobuf::uint32 value);

  // required uint32 vipExp = 5;
  inline bool has_vipexp() const;
  inline void clear_vipexp();
  static const int kVipExpFieldNumber = 5;
  inline ::google::protobuf::uint32 vipexp() const;
  inline void set_vipexp(::google::protobuf::uint32 value);

  // required uint32 vipLevel = 6;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required uint32 cash = 7;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 7;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 gold = 8;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 8;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 curStamina = 9;
  inline bool has_curstamina() const;
  inline void clear_curstamina();
  static const int kCurStaminaFieldNumber = 9;
  inline ::google::protobuf::uint32 curstamina() const;
  inline void set_curstamina(::google::protobuf::uint32 value);

  // required uint32 recoveryTime = 10;
  inline bool has_recoverytime() const;
  inline void clear_recoverytime();
  static const int kRecoveryTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 recoverytime() const;
  inline void set_recoverytime(::google::protobuf::uint32 value);

  // repeated uint32 formation = 11;
  inline int formation_size() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 11;
  inline ::google::protobuf::uint32 formation(int index) const;
  inline void set_formation(int index, ::google::protobuf::uint32 value);
  inline void add_formation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      formation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_formation();

  // repeated .TgsProtocol.ClientHeroInfo heroBag = 14;
  inline int herobag_size() const;
  inline void clear_herobag();
  static const int kHeroBagFieldNumber = 14;
  inline const ::TgsProtocol::ClientHeroInfo& herobag(int index) const;
  inline ::TgsProtocol::ClientHeroInfo* mutable_herobag(int index);
  inline ::TgsProtocol::ClientHeroInfo* add_herobag();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHeroInfo >&
      herobag() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHeroInfo >*
      mutable_herobag();

  // required uint32 gender = 15;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 15;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);

  // required uint32 photo = 16;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 16;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 bitFlag = 17;
  inline bool has_bitflag() const;
  inline void clear_bitflag();
  static const int kBitFlagFieldNumber = 17;
  inline ::google::protobuf::uint32 bitflag() const;
  inline void set_bitflag(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientInstanceEvaluation instanceEvaluation = 18;
  inline int instanceevaluation_size() const;
  inline void clear_instanceevaluation();
  static const int kInstanceEvaluationFieldNumber = 18;
  inline const ::TgsProtocol::ClientInstanceEvaluation& instanceevaluation(int index) const;
  inline ::TgsProtocol::ClientInstanceEvaluation* mutable_instanceevaluation(int index);
  inline ::TgsProtocol::ClientInstanceEvaluation* add_instanceevaluation();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientInstanceEvaluation >&
      instanceevaluation() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientInstanceEvaluation >*
      mutable_instanceevaluation();

  // repeated uint32 RefreshPrice = 19;
  inline int refreshprice_size() const;
  inline void clear_refreshprice();
  static const int kRefreshPriceFieldNumber = 19;
  inline ::google::protobuf::uint32 refreshprice(int index) const;
  inline void set_refreshprice(int index, ::google::protobuf::uint32 value);
  inline void add_refreshprice(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      refreshprice() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_refreshprice();

  // repeated .TgsProtocol.ClientFestivityInfo festivityInfo = 20;
  inline int festivityinfo_size() const;
  inline void clear_festivityinfo();
  static const int kFestivityInfoFieldNumber = 20;
  inline const ::TgsProtocol::ClientFestivityInfo& festivityinfo(int index) const;
  inline ::TgsProtocol::ClientFestivityInfo* mutable_festivityinfo(int index);
  inline ::TgsProtocol::ClientFestivityInfo* add_festivityinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFestivityInfo >&
      festivityinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFestivityInfo >*
      mutable_festivityinfo();

  // required uint32 serverTime = 24;
  inline bool has_servertime() const;
  inline void clear_servertime();
  static const int kServerTimeFieldNumber = 24;
  inline ::google::protobuf::uint32 servertime() const;
  inline void set_servertime(::google::protobuf::uint32 value);

  // required uint32 skillPoint = 25;
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillPointFieldNumber = 25;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);

  // required uint32 energy = 27;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 27;
  inline ::google::protobuf::uint32 energy() const;
  inline void set_energy(::google::protobuf::uint32 value);

  // required uint32 energyReTime = 28;
  inline bool has_energyretime() const;
  inline void clear_energyretime();
  static const int kEnergyReTimeFieldNumber = 28;
  inline ::google::protobuf::uint32 energyretime() const;
  inline void set_energyretime(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.HeroEquipNew equipNewBag = 29;
  inline int equipnewbag_size() const;
  inline void clear_equipnewbag();
  static const int kEquipNewBagFieldNumber = 29;
  inline const ::TgsProtocol::HeroEquipNew& equipnewbag(int index) const;
  inline ::TgsProtocol::HeroEquipNew* mutable_equipnewbag(int index);
  inline ::TgsProtocol::HeroEquipNew* add_equipnewbag();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >&
      equipnewbag() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >*
      mutable_equipnewbag();

  // repeated uint32 heroRaise = 30;
  inline int heroraise_size() const;
  inline void clear_heroraise();
  static const int kHeroRaiseFieldNumber = 30;
  inline ::google::protobuf::uint32 heroraise(int index) const;
  inline void set_heroraise(int index, ::google::protobuf::uint32 value);
  inline void add_heroraise(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroraise() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroraise();

  // @@protoc_insertion_point(class_scope:TgsProtocol.OtherUserInfoClient)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_charexp();
  inline void clear_has_charexp();
  inline void set_has_charlevel();
  inline void clear_has_charlevel();
  inline void set_has_vipexp();
  inline void clear_has_vipexp();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_curstamina();
  inline void clear_has_curstamina();
  inline void set_has_recoverytime();
  inline void clear_has_recoverytime();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_bitflag();
  inline void clear_has_bitflag();
  inline void set_has_servertime();
  inline void clear_has_servertime();
  inline void set_has_skillpoint();
  inline void clear_has_skillpoint();
  inline void set_has_energy();
  inline void clear_has_energy();
  inline void set_has_energyretime();
  inline void clear_has_energyretime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 charexp_;
  ::google::protobuf::uint32 charlevel_;
  ::google::protobuf::uint32 vipexp_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 curstamina_;
  ::google::protobuf::uint32 recoverytime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > formation_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHeroInfo > herobag_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientInstanceEvaluation > instanceevaluation_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > refreshprice_;
  ::google::protobuf::uint32 bitflag_;
  ::google::protobuf::uint32 servertime_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFestivityInfo > festivityinfo_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::uint32 energy_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew > equipnewbag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroraise_;
  ::google::protobuf::uint32 energyretime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static OtherUserInfoClient* default_instance_;
};
// -------------------------------------------------------------------

class DBPlayerActivity : public ::google::protobuf::Message {
 public:
  DBPlayerActivity();
  virtual ~DBPlayerActivity();

  DBPlayerActivity(const DBPlayerActivity& from);

  inline DBPlayerActivity& operator=(const DBPlayerActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBPlayerActivity& default_instance();

  void Swap(DBPlayerActivity* other);

  // implements Message ----------------------------------------------

  DBPlayerActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBPlayerActivity& from);
  void MergeFrom(const DBPlayerActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // repeated uint32 got = 3;
  inline int got_size() const;
  inline void clear_got();
  static const int kGotFieldNumber = 3;
  inline ::google::protobuf::uint32 got(int index) const;
  inline void set_got(int index, ::google::protobuf::uint32 value);
  inline void add_got(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      got() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_got();

  // optional uint32 update_time = 4;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 update_time() const;
  inline void set_update_time(::google::protobuf::uint32 value);

  // repeated uint32 doneValue = 5;
  inline int donevalue_size() const;
  inline void clear_donevalue();
  static const int kDoneValueFieldNumber = 5;
  inline ::google::protobuf::uint32 donevalue(int index) const;
  inline void set_donevalue(int index, ::google::protobuf::uint32 value);
  inline void add_donevalue(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      donevalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_donevalue();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBPlayerActivity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_update_time();
  inline void clear_has_update_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > got_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > donevalue_;
  ::google::protobuf::uint32 update_time_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBPlayerActivity* default_instance_;
};
// -------------------------------------------------------------------

class DBPlayerActivityList : public ::google::protobuf::Message {
 public:
  DBPlayerActivityList();
  virtual ~DBPlayerActivityList();

  DBPlayerActivityList(const DBPlayerActivityList& from);

  inline DBPlayerActivityList& operator=(const DBPlayerActivityList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBPlayerActivityList& default_instance();

  void Swap(DBPlayerActivityList* other);

  // implements Message ----------------------------------------------

  DBPlayerActivityList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBPlayerActivityList& from);
  void MergeFrom(const DBPlayerActivityList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBPlayerActivity act = 1;
  inline int act_size() const;
  inline void clear_act();
  static const int kActFieldNumber = 1;
  inline const ::TgsProtocol::DBPlayerActivity& act(int index) const;
  inline ::TgsProtocol::DBPlayerActivity* mutable_act(int index);
  inline ::TgsProtocol::DBPlayerActivity* add_act();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBPlayerActivity >&
      act() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBPlayerActivity >*
      mutable_act();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBPlayerActivityList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBPlayerActivity > act_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBPlayerActivityList* default_instance_;
};
// -------------------------------------------------------------------

class ChapterMapBox : public ::google::protobuf::Message {
 public:
  ChapterMapBox();
  virtual ~ChapterMapBox();

  ChapterMapBox(const ChapterMapBox& from);

  inline ChapterMapBox& operator=(const ChapterMapBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChapterMapBox& default_instance();

  void Swap(ChapterMapBox* other);

  // implements Message ----------------------------------------------

  ChapterMapBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChapterMapBox& from);
  void MergeFrom(const ChapterMapBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 maptype = 1;
  inline bool has_maptype() const;
  inline void clear_maptype();
  static const int kMaptypeFieldNumber = 1;
  inline ::google::protobuf::uint32 maptype() const;
  inline void set_maptype(::google::protobuf::uint32 value);

  // repeated bool got = 2;
  inline int got_size() const;
  inline void clear_got();
  static const int kGotFieldNumber = 2;
  inline bool got(int index) const;
  inline void set_got(int index, bool value);
  inline void add_got(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      got() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_got();

  // @@protoc_insertion_point(class_scope:TgsProtocol.ChapterMapBox)
 private:
  inline void set_has_maptype();
  inline void clear_has_maptype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< bool > got_;
  ::google::protobuf::uint32 maptype_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ChapterMapBox* default_instance_;
};
// -------------------------------------------------------------------

class DBChapterBox : public ::google::protobuf::Message {
 public:
  DBChapterBox();
  virtual ~DBChapterBox();

  DBChapterBox(const DBChapterBox& from);

  inline DBChapterBox& operator=(const DBChapterBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBChapterBox& default_instance();

  void Swap(DBChapterBox* other);

  // implements Message ----------------------------------------------

  DBChapterBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBChapterBox& from);
  void MergeFrom(const DBChapterBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 got = 2;
  inline int got_size() const;
  inline void clear_got();
  static const int kGotFieldNumber = 2;
  inline ::google::protobuf::uint32 got(int index) const;
  inline void set_got(int index, ::google::protobuf::uint32 value);
  inline void add_got(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      got() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_got();

  // repeated uint32 elite_got = 3;
  inline int elite_got_size() const;
  inline void clear_elite_got();
  static const int kEliteGotFieldNumber = 3;
  inline ::google::protobuf::uint32 elite_got(int index) const;
  inline void set_elite_got(int index, ::google::protobuf::uint32 value);
  inline void add_elite_got(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      elite_got() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_elite_got();

  // repeated uint32 epic_got = 4;
  inline int epic_got_size() const;
  inline void clear_epic_got();
  static const int kEpicGotFieldNumber = 4;
  inline ::google::protobuf::uint32 epic_got(int index) const;
  inline void set_epic_got(int index, ::google::protobuf::uint32 value);
  inline void add_epic_got(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      epic_got() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_epic_got();

  // repeated uint32 legend_got = 5;
  inline int legend_got_size() const;
  inline void clear_legend_got();
  static const int kLegendGotFieldNumber = 5;
  inline ::google::protobuf::uint32 legend_got(int index) const;
  inline void set_legend_got(int index, ::google::protobuf::uint32 value);
  inline void add_legend_got(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      legend_got() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_legend_got();

  // repeated .TgsProtocol.ChapterMapBox mapbox = 6;
  inline int mapbox_size() const;
  inline void clear_mapbox();
  static const int kMapboxFieldNumber = 6;
  inline const ::TgsProtocol::ChapterMapBox& mapbox(int index) const;
  inline ::TgsProtocol::ChapterMapBox* mutable_mapbox(int index);
  inline ::TgsProtocol::ChapterMapBox* add_mapbox();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ChapterMapBox >&
      mapbox() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ChapterMapBox >*
      mutable_mapbox();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBChapterBox)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > got_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > elite_got_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > epic_got_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > legend_got_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ChapterMapBox > mapbox_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBChapterBox* default_instance_;
};
// -------------------------------------------------------------------

class DBChapterBoxList : public ::google::protobuf::Message {
 public:
  DBChapterBoxList();
  virtual ~DBChapterBoxList();

  DBChapterBoxList(const DBChapterBoxList& from);

  inline DBChapterBoxList& operator=(const DBChapterBoxList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBChapterBoxList& default_instance();

  void Swap(DBChapterBoxList* other);

  // implements Message ----------------------------------------------

  DBChapterBoxList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBChapterBoxList& from);
  void MergeFrom(const DBChapterBoxList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DBChapterBox items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::TgsProtocol::DBChapterBox& items(int index) const;
  inline ::TgsProtocol::DBChapterBox* mutable_items(int index);
  inline ::TgsProtocol::DBChapterBox* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBChapterBox >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBChapterBox >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBChapterBoxList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBChapterBox > items_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBChapterBoxList* default_instance_;
};
// -------------------------------------------------------------------

class ClientFriendInfo : public ::google::protobuf::Message {
 public:
  ClientFriendInfo();
  virtual ~ClientFriendInfo();

  ClientFriendInfo(const ClientFriendInfo& from);

  inline ClientFriendInfo& operator=(const ClientFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientFriendInfo& default_instance();

  void Swap(ClientFriendInfo* other);

  // implements Message ----------------------------------------------

  ClientFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientFriendInfo& from);
  void MergeFrom(const ClientFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes charName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 photo = 3;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 3;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 charLevel = 4;
  inline bool has_charlevel() const;
  inline void clear_charlevel();
  static const int kCharLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 charlevel() const;
  inline void set_charlevel(::google::protobuf::uint32 value);

  // required uint32 effect = 5;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 5;
  inline ::google::protobuf::uint32 effect() const;
  inline void set_effect(::google::protobuf::uint32 value);

  // required uint32 vipLevel = 6;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required bytes guildName = 7;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildNameFieldNumber = 7;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const void* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // required bool bSend = 8;
  inline bool has_bsend() const;
  inline void clear_bsend();
  static const int kBSendFieldNumber = 8;
  inline bool bsend() const;
  inline void set_bsend(bool value);

  // required uint32 receive = 9;
  inline bool has_receive() const;
  inline void clear_receive();
  static const int kReceiveFieldNumber = 9;
  inline ::google::protobuf::uint32 receive() const;
  inline void set_receive(::google::protobuf::uint32 value);

  // required uint32 loginTime = 10;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 logintime() const;
  inline void set_logintime(::google::protobuf::uint32 value);

  // optional uint64 effect64 = 11;
  inline bool has_effect64() const;
  inline void clear_effect64();
  static const int kEffect64FieldNumber = 11;
  inline ::google::protobuf::uint64 effect64() const;
  inline void set_effect64(::google::protobuf::uint64 value);

  // optional uint32 nationalId = 12;
  inline bool has_nationalid() const;
  inline void clear_nationalid();
  static const int kNationalIdFieldNumber = 12;
  inline ::google::protobuf::uint32 nationalid() const;
  inline void set_nationalid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientFriendInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_charlevel();
  inline void clear_has_charlevel();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_bsend();
  inline void clear_has_bsend();
  inline void set_has_receive();
  inline void clear_has_receive();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_effect64();
  inline void clear_has_effect64();
  inline void set_has_nationalid();
  inline void clear_has_nationalid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 charlevel_;
  ::google::protobuf::uint32 effect_;
  ::google::protobuf::uint32 viplevel_;
  ::std::string* guildname_;
  bool bsend_;
  ::google::protobuf::uint32 receive_;
  ::google::protobuf::uint64 effect64_;
  ::google::protobuf::uint32 logintime_;
  ::google::protobuf::uint32 nationalid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientBattleHero : public ::google::protobuf::Message {
 public:
  ClientBattleHero();
  virtual ~ClientBattleHero();

  ClientBattleHero(const ClientBattleHero& from);

  inline ClientBattleHero& operator=(const ClientBattleHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientBattleHero& default_instance();

  void Swap(ClientBattleHero* other);

  // implements Message ----------------------------------------------

  ClientBattleHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientBattleHero& from);
  void MergeFrom(const ClientBattleHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 templateId = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 evolutionLevel = 3;
  inline bool has_evolutionlevel() const;
  inline void clear_evolutionlevel();
  static const int kEvolutionLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 evolutionlevel() const;
  inline void set_evolutionlevel(::google::protobuf::uint32 value);

  // required uint32 forceLevel = 4;
  inline bool has_forcelevel() const;
  inline void clear_forcelevel();
  static const int kForceLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 forcelevel() const;
  inline void set_forcelevel(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.HeroEquipInfo equip = 5;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 5;
  inline const ::TgsProtocol::HeroEquipInfo& equip(int index) const;
  inline ::TgsProtocol::HeroEquipInfo* mutable_equip(int index);
  inline ::TgsProtocol::HeroEquipInfo* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo >*
      mutable_equip();

  // repeated uint32 skillLevel = 6;
  inline int skilllevel_size() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 skilllevel(int index) const;
  inline void set_skilllevel(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skilllevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skilllevel();

  // optional bytes heroName = 7;
  inline bool has_heroname() const;
  inline void clear_heroname();
  static const int kHeroNameFieldNumber = 7;
  inline const ::std::string& heroname() const;
  inline void set_heroname(const ::std::string& value);
  inline void set_heroname(const char* value);
  inline void set_heroname(const void* value, size_t size);
  inline ::std::string* mutable_heroname();
  inline ::std::string* release_heroname();
  inline void set_allocated_heroname(::std::string* heroname);

  // repeated .TgsProtocol.HeroEquipNew equipNew = 8;
  inline int equipnew_size() const;
  inline void clear_equipnew();
  static const int kEquipNewFieldNumber = 8;
  inline const ::TgsProtocol::HeroEquipNew& equipnew(int index) const;
  inline ::TgsProtocol::HeroEquipNew* mutable_equipnew(int index);
  inline ::TgsProtocol::HeroEquipNew* add_equipnew();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >&
      equipnew() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >*
      mutable_equipnew();

  // optional uint32 isFashion = 9;
  inline bool has_isfashion() const;
  inline void clear_isfashion();
  static const int kIsFashionFieldNumber = 9;
  inline ::google::protobuf::uint32 isfashion() const;
  inline void set_isfashion(::google::protobuf::uint32 value);

  // optional uint32 postion = 10;
  inline bool has_postion() const;
  inline void clear_postion();
  static const int kPostionFieldNumber = 10;
  inline ::google::protobuf::uint32 postion() const;
  inline void set_postion(::google::protobuf::uint32 value);

  // required uint32 effect = 11;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 11;
  inline ::google::protobuf::uint32 effect() const;
  inline void set_effect(::google::protobuf::uint32 value);

  // optional uint32 deificationlevel = 12;
  inline bool has_deificationlevel() const;
  inline void clear_deificationlevel();
  static const int kDeificationlevelFieldNumber = 12;
  inline ::google::protobuf::uint32 deificationlevel() const;
  inline void set_deificationlevel(::google::protobuf::uint32 value);

  // optional uint32 wingslevel = 13;
  inline bool has_wingslevel() const;
  inline void clear_wingslevel();
  static const int kWingslevelFieldNumber = 13;
  inline ::google::protobuf::uint32 wingslevel() const;
  inline void set_wingslevel(::google::protobuf::uint32 value);

  // optional string attr = 14;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 14;
  inline const ::std::string& attr() const;
  inline void set_attr(const ::std::string& value);
  inline void set_attr(const char* value);
  inline void set_attr(const char* value, size_t size);
  inline ::std::string* mutable_attr();
  inline ::std::string* release_attr();
  inline void set_allocated_attr(::std::string* attr);

  // optional uint32 wakeLevel = 15;
  inline bool has_wakelevel() const;
  inline void clear_wakelevel();
  static const int kWakeLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 wakelevel() const;
  inline void set_wakelevel(::google::protobuf::uint32 value);

  // repeated uint32 wakeEquips = 16;
  inline int wakeequips_size() const;
  inline void clear_wakeequips();
  static const int kWakeEquipsFieldNumber = 16;
  inline ::google::protobuf::uint32 wakeequips(int index) const;
  inline void set_wakeequips(int index, ::google::protobuf::uint32 value);
  inline void add_wakeequips(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wakeequips() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wakeequips();

  // optional .TgsProtocol.WakeAttr property = 17;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 17;
  inline const ::TgsProtocol::WakeAttr& property() const;
  inline ::TgsProtocol::WakeAttr* mutable_property();
  inline ::TgsProtocol::WakeAttr* release_property();
  inline void set_allocated_property(::TgsProtocol::WakeAttr* property);

  // optional uint64 effect64 = 18;
  inline bool has_effect64() const;
  inline void clear_effect64();
  static const int kEffect64FieldNumber = 18;
  inline ::google::protobuf::uint64 effect64() const;
  inline void set_effect64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientBattleHero)
 private:
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_evolutionlevel();
  inline void clear_has_evolutionlevel();
  inline void set_has_forcelevel();
  inline void clear_has_forcelevel();
  inline void set_has_heroname();
  inline void clear_has_heroname();
  inline void set_has_isfashion();
  inline void clear_has_isfashion();
  inline void set_has_postion();
  inline void clear_has_postion();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_deificationlevel();
  inline void clear_has_deificationlevel();
  inline void set_has_wingslevel();
  inline void clear_has_wingslevel();
  inline void set_has_attr();
  inline void clear_has_attr();
  inline void set_has_wakelevel();
  inline void clear_has_wakelevel();
  inline void set_has_property();
  inline void clear_has_property();
  inline void set_has_effect64();
  inline void clear_has_effect64();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 evolutionlevel_;
  ::google::protobuf::uint32 forcelevel_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo > equip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel_;
  ::std::string* heroname_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew > equipnew_;
  ::google::protobuf::uint32 isfashion_;
  ::google::protobuf::uint32 postion_;
  ::google::protobuf::uint32 effect_;
  ::google::protobuf::uint32 deificationlevel_;
  ::std::string* attr_;
  ::google::protobuf::uint32 wingslevel_;
  ::google::protobuf::uint32 wakelevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wakeequips_;
  ::TgsProtocol::WakeAttr* property_;
  ::google::protobuf::uint64 effect64_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientBattleHero* default_instance_;
};
// -------------------------------------------------------------------

class GuildSkill : public ::google::protobuf::Message {
 public:
  GuildSkill();
  virtual ~GuildSkill();

  GuildSkill(const GuildSkill& from);

  inline GuildSkill& operator=(const GuildSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildSkill& default_instance();

  void Swap(GuildSkill* other);

  // implements Message ----------------------------------------------

  GuildSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildSkill& from);
  void MergeFrom(const GuildSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildSkill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildSkill* default_instance_;
};
// -------------------------------------------------------------------

class ClientBattlePlayer : public ::google::protobuf::Message {
 public:
  ClientBattlePlayer();
  virtual ~ClientBattlePlayer();

  ClientBattlePlayer(const ClientBattlePlayer& from);

  inline ClientBattlePlayer& operator=(const ClientBattlePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientBattlePlayer& default_instance();

  void Swap(ClientBattlePlayer* other);

  // implements Message ----------------------------------------------

  ClientBattlePlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientBattlePlayer& from);
  void MergeFrom(const ClientBattlePlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string charName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 charLevel = 3;
  inline bool has_charlevel() const;
  inline void clear_charlevel();
  static const int kCharLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 charlevel() const;
  inline void set_charlevel(::google::protobuf::uint32 value);

  // required uint32 photo = 4;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 4;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 effect = 5;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 5;
  inline ::google::protobuf::uint32 effect() const;
  inline void set_effect(::google::protobuf::uint32 value);

  // required uint32 vipLevel = 6;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required uint32 position = 7;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 7;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // required uint32 isRobot = 8;
  inline bool has_isrobot() const;
  inline void clear_isrobot();
  static const int kIsRobotFieldNumber = 8;
  inline ::google::protobuf::uint32 isrobot() const;
  inline void set_isrobot(::google::protobuf::uint32 value);

  // optional uint32 guild_job = 9;
  inline bool has_guild_job() const;
  inline void clear_guild_job();
  static const int kGuildJobFieldNumber = 9;
  inline ::google::protobuf::uint32 guild_job() const;
  inline void set_guild_job(::google::protobuf::uint32 value);

  // optional bool online = 10;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 10;
  inline bool online() const;
  inline void set_online(bool value);

  // repeated .TgsProtocol.ClientBattleHero hero = 11;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 11;
  inline const ::TgsProtocol::ClientBattleHero& hero(int index) const;
  inline ::TgsProtocol::ClientBattleHero* mutable_hero(int index);
  inline ::TgsProtocol::ClientBattleHero* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero >*
      mutable_hero();

  // repeated .TgsProtocol.ClientBattleHero assist_hero = 12;
  inline int assist_hero_size() const;
  inline void clear_assist_hero();
  static const int kAssistHeroFieldNumber = 12;
  inline const ::TgsProtocol::ClientBattleHero& assist_hero(int index) const;
  inline ::TgsProtocol::ClientBattleHero* mutable_assist_hero(int index);
  inline ::TgsProtocol::ClientBattleHero* add_assist_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero >&
      assist_hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero >*
      mutable_assist_hero();

  // repeated .TgsProtocol.GuildSkill guild_skill = 13;
  inline int guild_skill_size() const;
  inline void clear_guild_skill();
  static const int kGuildSkillFieldNumber = 13;
  inline const ::TgsProtocol::GuildSkill& guild_skill(int index) const;
  inline ::TgsProtocol::GuildSkill* mutable_guild_skill(int index);
  inline ::TgsProtocol::GuildSkill* add_guild_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildSkill >&
      guild_skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildSkill >*
      mutable_guild_skill();

  // optional uint32 server_id = 14;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 14;
  inline ::google::protobuf::uint32 server_id() const;
  inline void set_server_id(::google::protobuf::uint32 value);

  // optional string server_name = 15;
  inline bool has_server_name() const;
  inline void clear_server_name();
  static const int kServerNameFieldNumber = 15;
  inline const ::std::string& server_name() const;
  inline void set_server_name(const ::std::string& value);
  inline void set_server_name(const char* value);
  inline void set_server_name(const char* value, size_t size);
  inline ::std::string* mutable_server_name();
  inline ::std::string* release_server_name();
  inline void set_allocated_server_name(::std::string* server_name);

  // repeated .TgsProtocol.ClientHandBook handbook = 16;
  inline int handbook_size() const;
  inline void clear_handbook();
  static const int kHandbookFieldNumber = 16;
  inline const ::TgsProtocol::ClientHandBook& handbook(int index) const;
  inline ::TgsProtocol::ClientHandBook* mutable_handbook(int index);
  inline ::TgsProtocol::ClientHandBook* add_handbook();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHandBook >&
      handbook() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHandBook >*
      mutable_handbook();

  // repeated uint32 fashionHero = 17;
  inline int fashionhero_size() const;
  inline void clear_fashionhero();
  static const int kFashionHeroFieldNumber = 17;
  inline ::google::protobuf::uint32 fashionhero(int index) const;
  inline void set_fashionhero(int index, ::google::protobuf::uint32 value);
  inline void add_fashionhero(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fashionhero() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fashionhero();

  // optional string guild_name = 18;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 18;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // optional uint32 steamwin = 19;
  inline bool has_steamwin() const;
  inline void clear_steamwin();
  static const int kSteamwinFieldNumber = 19;
  inline ::google::protobuf::uint32 steamwin() const;
  inline void set_steamwin(::google::protobuf::uint32 value);

  // repeated uint32 secrethole_buff = 20;
  inline int secrethole_buff_size() const;
  inline void clear_secrethole_buff();
  static const int kSecretholeBuffFieldNumber = 20;
  inline ::google::protobuf::uint32 secrethole_buff(int index) const;
  inline void set_secrethole_buff(int index, ::google::protobuf::uint32 value);
  inline void add_secrethole_buff(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      secrethole_buff() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_secrethole_buff();

  // optional uint32 cheerid = 21;
  inline bool has_cheerid() const;
  inline void clear_cheerid();
  static const int kCheeridFieldNumber = 21;
  inline ::google::protobuf::uint32 cheerid() const;
  inline void set_cheerid(::google::protobuf::uint32 value);

  // repeated uint32 activeTitleId = 22;
  inline int activetitleid_size() const;
  inline void clear_activetitleid();
  static const int kActiveTitleIdFieldNumber = 22;
  inline ::google::protobuf::uint32 activetitleid(int index) const;
  inline void set_activetitleid(int index, ::google::protobuf::uint32 value);
  inline void add_activetitleid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      activetitleid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_activetitleid();

  // repeated bool privilege = 23;
  inline int privilege_size() const;
  inline void clear_privilege();
  static const int kPrivilegeFieldNumber = 23;
  inline bool privilege(int index) const;
  inline void set_privilege(int index, bool value);
  inline void add_privilege(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      privilege() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_privilege();

  // optional uint64 effect64 = 24;
  inline bool has_effect64() const;
  inline void clear_effect64();
  static const int kEffect64FieldNumber = 24;
  inline ::google::protobuf::uint64 effect64() const;
  inline void set_effect64(::google::protobuf::uint64 value);

  // optional uint32 nationalId = 25;
  inline bool has_nationalid() const;
  inline void clear_nationalid();
  static const int kNationalIdFieldNumber = 25;
  inline ::google::protobuf::uint32 nationalid() const;
  inline void set_nationalid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientBattlePlayer)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_charlevel();
  inline void clear_has_charlevel();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_isrobot();
  inline void clear_has_isrobot();
  inline void set_has_guild_job();
  inline void clear_has_guild_job();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_server_name();
  inline void clear_has_server_name();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_steamwin();
  inline void clear_has_steamwin();
  inline void set_has_cheerid();
  inline void clear_has_cheerid();
  inline void set_has_effect64();
  inline void clear_has_effect64();
  inline void set_has_nationalid();
  inline void clear_has_nationalid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 charlevel_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 effect_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 isrobot_;
  ::google::protobuf::uint32 guild_job_;
  bool online_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero > hero_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero > assist_hero_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildSkill > guild_skill_;
  ::std::string* server_name_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHandBook > handbook_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 steamwin_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fashionhero_;
  ::std::string* guild_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > secrethole_buff_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > activetitleid_;
  ::google::protobuf::RepeatedField< bool > privilege_;
  ::google::protobuf::uint32 cheerid_;
  ::google::protobuf::uint32 nationalid_;
  ::google::protobuf::uint64 effect64_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientBattlePlayer* default_instance_;
};
// -------------------------------------------------------------------

class ClientRaidTeamHeroInfo : public ::google::protobuf::Message {
 public:
  ClientRaidTeamHeroInfo();
  virtual ~ClientRaidTeamHeroInfo();

  ClientRaidTeamHeroInfo(const ClientRaidTeamHeroInfo& from);

  inline ClientRaidTeamHeroInfo& operator=(const ClientRaidTeamHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientRaidTeamHeroInfo& default_instance();

  void Swap(ClientRaidTeamHeroInfo* other);

  // implements Message ----------------------------------------------

  ClientRaidTeamHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientRaidTeamHeroInfo& from);
  void MergeFrom(const ClientRaidTeamHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heroIndex = 1;
  inline bool has_heroindex() const;
  inline void clear_heroindex();
  static const int kHeroIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 heroindex() const;
  inline void set_heroindex(::google::protobuf::uint32 value);

  // required uint32 isFashion = 2;
  inline bool has_isfashion() const;
  inline void clear_isfashion();
  static const int kIsFashionFieldNumber = 2;
  inline ::google::protobuf::uint32 isfashion() const;
  inline void set_isfashion(::google::protobuf::uint32 value);

  // required uint32 evolutionLevel = 3;
  inline bool has_evolutionlevel() const;
  inline void clear_evolutionlevel();
  static const int kEvolutionLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 evolutionlevel() const;
  inline void set_evolutionlevel(::google::protobuf::uint32 value);

  // required uint32 forceLevel = 4;
  inline bool has_forcelevel() const;
  inline void clear_forcelevel();
  static const int kForceLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 forcelevel() const;
  inline void set_forcelevel(::google::protobuf::uint32 value);

  // required uint32 position = 5;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 5;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // optional uint32 deificationlevel = 6;
  inline bool has_deificationlevel() const;
  inline void clear_deificationlevel();
  static const int kDeificationlevelFieldNumber = 6;
  inline ::google::protobuf::uint32 deificationlevel() const;
  inline void set_deificationlevel(::google::protobuf::uint32 value);

  // optional uint32 wingslevel = 7;
  inline bool has_wingslevel() const;
  inline void clear_wingslevel();
  static const int kWingslevelFieldNumber = 7;
  inline ::google::protobuf::uint32 wingslevel() const;
  inline void set_wingslevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientRaidTeamHeroInfo)
 private:
  inline void set_has_heroindex();
  inline void clear_has_heroindex();
  inline void set_has_isfashion();
  inline void clear_has_isfashion();
  inline void set_has_evolutionlevel();
  inline void clear_has_evolutionlevel();
  inline void set_has_forcelevel();
  inline void clear_has_forcelevel();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_deificationlevel();
  inline void clear_has_deificationlevel();
  inline void set_has_wingslevel();
  inline void clear_has_wingslevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 heroindex_;
  ::google::protobuf::uint32 isfashion_;
  ::google::protobuf::uint32 evolutionlevel_;
  ::google::protobuf::uint32 forcelevel_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 deificationlevel_;
  ::google::protobuf::uint32 wingslevel_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientRaidTeamHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientRaidTeamInfo : public ::google::protobuf::Message {
 public:
  ClientRaidTeamInfo();
  virtual ~ClientRaidTeamInfo();

  ClientRaidTeamInfo(const ClientRaidTeamInfo& from);

  inline ClientRaidTeamInfo& operator=(const ClientRaidTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientRaidTeamInfo& default_instance();

  void Swap(ClientRaidTeamInfo* other);

  // implements Message ----------------------------------------------

  ClientRaidTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientRaidTeamInfo& from);
  void MergeFrom(const ClientRaidTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes charName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 photo = 3;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 3;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 charLevel = 4;
  inline bool has_charlevel() const;
  inline void clear_charlevel();
  static const int kCharLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 charlevel() const;
  inline void set_charlevel(::google::protobuf::uint32 value);

  // required uint64 effect = 5;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 5;
  inline ::google::protobuf::uint64 effect() const;
  inline void set_effect(::google::protobuf::uint64 value);

  // required uint32 vipLevel = 6;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required bytes guildName = 7;
  inline bool has_guildname() const;
  inline void clear_guildname();
  static const int kGuildNameFieldNumber = 7;
  inline const ::std::string& guildname() const;
  inline void set_guildname(const ::std::string& value);
  inline void set_guildname(const char* value);
  inline void set_guildname(const void* value, size_t size);
  inline ::std::string* mutable_guildname();
  inline ::std::string* release_guildname();
  inline void set_allocated_guildname(::std::string* guildname);

  // required bool bSend = 8;
  inline bool has_bsend() const;
  inline void clear_bsend();
  static const int kBSendFieldNumber = 8;
  inline bool bsend() const;
  inline void set_bsend(bool value);

  // required uint32 receive = 9;
  inline bool has_receive() const;
  inline void clear_receive();
  static const int kReceiveFieldNumber = 9;
  inline ::google::protobuf::uint32 receive() const;
  inline void set_receive(::google::protobuf::uint32 value);

  // required uint32 loginTime = 10;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 logintime() const;
  inline void set_logintime(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientRaidTeamHeroInfo hero = 11;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 11;
  inline const ::TgsProtocol::ClientRaidTeamHeroInfo& hero(int index) const;
  inline ::TgsProtocol::ClientRaidTeamHeroInfo* mutable_hero(int index);
  inline ::TgsProtocol::ClientRaidTeamHeroInfo* add_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRaidTeamHeroInfo >&
      hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRaidTeamHeroInfo >*
      mutable_hero();

  // optional uint32 nationalId = 12;
  inline bool has_nationalid() const;
  inline void clear_nationalid();
  static const int kNationalIdFieldNumber = 12;
  inline ::google::protobuf::uint32 nationalid() const;
  inline void set_nationalid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientRaidTeamInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_charlevel();
  inline void clear_has_charlevel();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_guildname();
  inline void clear_has_guildname();
  inline void set_has_bsend();
  inline void clear_has_bsend();
  inline void set_has_receive();
  inline void clear_has_receive();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_nationalid();
  inline void clear_has_nationalid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 charlevel_;
  ::google::protobuf::uint64 effect_;
  ::std::string* guildname_;
  ::google::protobuf::uint32 viplevel_;
  bool bsend_;
  ::google::protobuf::uint32 receive_;
  ::google::protobuf::uint32 logintime_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRaidTeamHeroInfo > hero_;
  ::google::protobuf::uint32 nationalid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientRaidTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class TodayTime : public ::google::protobuf::Message {
 public:
  TodayTime();
  virtual ~TodayTime();

  TodayTime(const TodayTime& from);

  inline TodayTime& operator=(const TodayTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TodayTime& default_instance();

  void Swap(TodayTime* other);

  // implements Message ----------------------------------------------

  TodayTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TodayTime& from);
  void MergeFrom(const TodayTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 beginTime = 1;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 begintime() const;
  inline void set_begintime(::google::protobuf::uint32 value);

  // required uint32 endTime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.TodayTime)
 private:
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 begintime_;
  ::google::protobuf::uint32 endtime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static TodayTime* default_instance_;
};
// -------------------------------------------------------------------

class SourceList : public ::google::protobuf::Message {
 public:
  SourceList();
  virtual ~SourceList();

  SourceList(const SourceList& from);

  inline SourceList& operator=(const SourceList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SourceList& default_instance();

  void Swap(SourceList* other);

  // implements Message ----------------------------------------------

  SourceList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SourceList& from);
  void MergeFrom(const SourceList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.ClientSource source = 1;
  inline int source_size() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 1;
  inline const ::TgsProtocol::ClientSource& source(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_source(int index);
  inline ::TgsProtocol::ClientSource* add_source();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      source() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_source();

  // @@protoc_insertion_point(class_scope:TgsProtocol.SourceList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > source_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static SourceList* default_instance_;
};
// -------------------------------------------------------------------

class ClientMonthCard : public ::google::protobuf::Message {
 public:
  ClientMonthCard();
  virtual ~ClientMonthCard();

  ClientMonthCard(const ClientMonthCard& from);

  inline ClientMonthCard& operator=(const ClientMonthCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientMonthCard& default_instance();

  void Swap(ClientMonthCard* other);

  // implements Message ----------------------------------------------

  ClientMonthCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientMonthCard& from);
  void MergeFrom(const ClientMonthCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 startTime = 2;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 getTime = 3;
  inline bool has_gettime() const;
  inline void clear_gettime();
  static const int kGetTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 gettime() const;
  inline void set_gettime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientMonthCard)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_gettime();
  inline void clear_has_gettime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 gettime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientMonthCard* default_instance_;
};
// -------------------------------------------------------------------

class ClientItemLimit : public ::google::protobuf::Message {
 public:
  ClientItemLimit();
  virtual ~ClientItemLimit();

  ClientItemLimit(const ClientItemLimit& from);

  inline ClientItemLimit& operator=(const ClientItemLimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientItemLimit& default_instance();

  void Swap(ClientItemLimit* other);

  // implements Message ----------------------------------------------

  ClientItemLimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientItemLimit& from);
  void MergeFrom(const ClientItemLimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 limit = 2;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 2;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // required uint32 got = 3;
  inline bool has_got() const;
  inline void clear_got();
  static const int kGotFieldNumber = 3;
  inline ::google::protobuf::uint32 got() const;
  inline void set_got(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientItemLimit)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_got();
  inline void clear_has_got();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 limit_;
  ::google::protobuf::uint32 got_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientItemLimit* default_instance_;
};
// -------------------------------------------------------------------

class LString : public ::google::protobuf::Message {
 public:
  LString();
  virtual ~LString();

  LString(const LString& from);

  inline LString& operator=(const LString& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LString& default_instance();

  void Swap(LString* other);

  // implements Message ----------------------------------------------

  LString* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LString& from);
  void MergeFrom(const LString& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LString)
 private:
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* str_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static LString* default_instance_;
};
// -------------------------------------------------------------------

class IntList : public ::google::protobuf::Message {
 public:
  IntList();
  virtual ~IntList();

  IntList(const IntList& from);

  inline IntList& operator=(const IntList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntList& default_instance();

  void Swap(IntList* other);

  // implements Message ----------------------------------------------

  IntList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntList& from);
  void MergeFrom(const IntList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 value = 1;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::uint32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::uint32 value);
  inline void add_value(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:TgsProtocol.IntList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static IntList* default_instance_;
};
// -------------------------------------------------------------------

class ClientActivity : public ::google::protobuf::Message {
 public:
  ClientActivity();
  virtual ~ClientActivity();

  ClientActivity(const ClientActivity& from);

  inline ClientActivity& operator=(const ClientActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientActivity& default_instance();

  void Swap(ClientActivity* other);

  // implements Message ----------------------------------------------

  ClientActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientActivity& from);
  void MergeFrom(const ClientActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 closed = 2;
  inline bool has_closed() const;
  inline void clear_closed();
  static const int kClosedFieldNumber = 2;
  inline ::google::protobuf::uint32 closed() const;
  inline void set_closed(::google::protobuf::uint32 value);

  // optional uint32 opentype = 3;
  inline bool has_opentype() const;
  inline void clear_opentype();
  static const int kOpentypeFieldNumber = 3;
  inline ::google::protobuf::uint32 opentype() const;
  inline void set_opentype(::google::protobuf::uint32 value);

  // optional uint32 actype = 4;
  inline bool has_actype() const;
  inline void clear_actype();
  static const int kActypeFieldNumber = 4;
  inline ::google::protobuf::uint32 actype() const;
  inline void set_actype(::google::protobuf::uint32 value);

  // optional uint32 showBeginTime = 5;
  inline bool has_showbegintime() const;
  inline void clear_showbegintime();
  static const int kShowBeginTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 showbegintime() const;
  inline void set_showbegintime(::google::protobuf::uint32 value);

  // optional uint32 showEndTime = 6;
  inline bool has_showendtime() const;
  inline void clear_showendtime();
  static const int kShowEndTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 showendtime() const;
  inline void set_showendtime(::google::protobuf::uint32 value);

  // optional uint32 beginTime = 7;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 begintime() const;
  inline void set_begintime(::google::protobuf::uint32 value);

  // optional uint32 endTime = 8;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 playerLev = 9;
  inline bool has_playerlev() const;
  inline void clear_playerlev();
  static const int kPlayerLevFieldNumber = 9;
  inline ::google::protobuf::uint32 playerlev() const;
  inline void set_playerlev(::google::protobuf::uint32 value);

  // optional string name = 10;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 10;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string desc = 11;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 11;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // repeated .TgsProtocol.TodayTime todayTimes = 12;
  inline int todaytimes_size() const;
  inline void clear_todaytimes();
  static const int kTodayTimesFieldNumber = 12;
  inline const ::TgsProtocol::TodayTime& todaytimes(int index) const;
  inline ::TgsProtocol::TodayTime* mutable_todaytimes(int index);
  inline ::TgsProtocol::TodayTime* add_todaytimes();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime >&
      todaytimes() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime >*
      mutable_todaytimes();

  // repeated uint32 values = 13;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 13;
  inline ::google::protobuf::uint32 values(int index) const;
  inline void set_values(int index, ::google::protobuf::uint32 value);
  inline void add_values(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_values();

  // repeated .TgsProtocol.SourceList rewards = 14;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 14;
  inline const ::TgsProtocol::SourceList& rewards(int index) const;
  inline ::TgsProtocol::SourceList* mutable_rewards(int index);
  inline ::TgsProtocol::SourceList* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
      mutable_rewards();

  // repeated uint32 rewardGot = 15;
  inline int rewardgot_size() const;
  inline void clear_rewardgot();
  static const int kRewardGotFieldNumber = 15;
  inline ::google::protobuf::uint32 rewardgot(int index) const;
  inline void set_rewardgot(int index, ::google::protobuf::uint32 value);
  inline void add_rewardgot(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      rewardgot() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_rewardgot();

  // optional uint32 value = 16;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 16;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // repeated string childDesc = 17;
  inline int childdesc_size() const;
  inline void clear_childdesc();
  static const int kChildDescFieldNumber = 17;
  inline const ::std::string& childdesc(int index) const;
  inline ::std::string* mutable_childdesc(int index);
  inline void set_childdesc(int index, const ::std::string& value);
  inline void set_childdesc(int index, const char* value);
  inline void set_childdesc(int index, const char* value, size_t size);
  inline ::std::string* add_childdesc();
  inline void add_childdesc(const ::std::string& value);
  inline void add_childdesc(const char* value);
  inline void add_childdesc(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& childdesc() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_childdesc();

  // repeated uint32 shareValues = 18;
  inline int sharevalues_size() const;
  inline void clear_sharevalues();
  static const int kShareValuesFieldNumber = 18;
  inline ::google::protobuf::uint32 sharevalues(int index) const;
  inline void set_sharevalues(int index, ::google::protobuf::uint32 value);
  inline void add_sharevalues(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sharevalues() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sharevalues();

  // repeated .TgsProtocol.SourceList values2 = 19;
  inline int values2_size() const;
  inline void clear_values2();
  static const int kValues2FieldNumber = 19;
  inline const ::TgsProtocol::SourceList& values2(int index) const;
  inline ::TgsProtocol::SourceList* mutable_values2(int index);
  inline ::TgsProtocol::SourceList* add_values2();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
      values2() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
      mutable_values2();

  // repeated string shareTex = 20;
  inline int sharetex_size() const;
  inline void clear_sharetex();
  static const int kShareTexFieldNumber = 20;
  inline const ::std::string& sharetex(int index) const;
  inline ::std::string* mutable_sharetex(int index);
  inline void set_sharetex(int index, const ::std::string& value);
  inline void set_sharetex(int index, const char* value);
  inline void set_sharetex(int index, const char* value, size_t size);
  inline ::std::string* add_sharetex();
  inline void add_sharetex(const ::std::string& value);
  inline void add_sharetex(const char* value);
  inline void add_sharetex(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& sharetex() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_sharetex();

  // optional string icon = 21;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 21;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  inline void set_allocated_icon(::std::string* icon);

  // optional uint32 activetime = 22;
  inline bool has_activetime() const;
  inline void clear_activetime();
  static const int kActivetimeFieldNumber = 22;
  inline ::google::protobuf::uint32 activetime() const;
  inline void set_activetime(::google::protobuf::uint32 value);

  // optional uint32 countdown = 23;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 23;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientMonthCard card = 24;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 24;
  inline const ::TgsProtocol::ClientMonthCard& card(int index) const;
  inline ::TgsProtocol::ClientMonthCard* mutable_card(int index);
  inline ::TgsProtocol::ClientMonthCard* add_card();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientMonthCard >&
      card() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientMonthCard >*
      mutable_card();

  // optional uint32 sequence = 25;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 25;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientItemLimit globalItemLimit = 26;
  inline int globalitemlimit_size() const;
  inline void clear_globalitemlimit();
  static const int kGlobalItemLimitFieldNumber = 26;
  inline const ::TgsProtocol::ClientItemLimit& globalitemlimit(int index) const;
  inline ::TgsProtocol::ClientItemLimit* mutable_globalitemlimit(int index);
  inline ::TgsProtocol::ClientItemLimit* add_globalitemlimit();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit >&
      globalitemlimit() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit >*
      mutable_globalitemlimit();

  // repeated .TgsProtocol.ClientItemLimit playerItemLimit = 27;
  inline int playeritemlimit_size() const;
  inline void clear_playeritemlimit();
  static const int kPlayerItemLimitFieldNumber = 27;
  inline const ::TgsProtocol::ClientItemLimit& playeritemlimit(int index) const;
  inline ::TgsProtocol::ClientItemLimit* mutable_playeritemlimit(int index);
  inline ::TgsProtocol::ClientItemLimit* add_playeritemlimit();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit >&
      playeritemlimit() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit >*
      mutable_playeritemlimit();

  // repeated uint32 getTimes = 28;
  inline int gettimes_size() const;
  inline void clear_gettimes();
  static const int kGetTimesFieldNumber = 28;
  inline ::google::protobuf::uint32 gettimes(int index) const;
  inline void set_gettimes(int index, ::google::protobuf::uint32 value);
  inline void add_gettimes(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gettimes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gettimes();

  // repeated uint32 everyValues = 29;
  inline int everyvalues_size() const;
  inline void clear_everyvalues();
  static const int kEveryValuesFieldNumber = 29;
  inline ::google::protobuf::uint32 everyvalues(int index) const;
  inline void set_everyvalues(int index, ::google::protobuf::uint32 value);
  inline void add_everyvalues(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      everyvalues() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_everyvalues();

  // repeated uint32 everyDoneValues = 30;
  inline int everydonevalues_size() const;
  inline void clear_everydonevalues();
  static const int kEveryDoneValuesFieldNumber = 30;
  inline ::google::protobuf::uint32 everydonevalues(int index) const;
  inline void set_everydonevalues(int index, ::google::protobuf::uint32 value);
  inline void add_everydonevalues(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      everydonevalues() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_everydonevalues();

  // optional .TgsProtocol.LString name_l = 31;
  inline bool has_name_l() const;
  inline void clear_name_l();
  static const int kNameLFieldNumber = 31;
  inline const ::TgsProtocol::LString& name_l() const;
  inline ::TgsProtocol::LString* mutable_name_l();
  inline ::TgsProtocol::LString* release_name_l();
  inline void set_allocated_name_l(::TgsProtocol::LString* name_l);

  // optional .TgsProtocol.LString desc_l = 32;
  inline bool has_desc_l() const;
  inline void clear_desc_l();
  static const int kDescLFieldNumber = 32;
  inline const ::TgsProtocol::LString& desc_l() const;
  inline ::TgsProtocol::LString* mutable_desc_l();
  inline ::TgsProtocol::LString* release_desc_l();
  inline void set_allocated_desc_l(::TgsProtocol::LString* desc_l);

  // repeated .TgsProtocol.LString childDesc_l = 33;
  inline int childdesc_l_size() const;
  inline void clear_childdesc_l();
  static const int kChildDescLFieldNumber = 33;
  inline const ::TgsProtocol::LString& childdesc_l(int index) const;
  inline ::TgsProtocol::LString* mutable_childdesc_l(int index);
  inline ::TgsProtocol::LString* add_childdesc_l();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString >&
      childdesc_l() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString >*
      mutable_childdesc_l();

  // repeated uint32 intNumber = 34;
  inline int intnumber_size() const;
  inline void clear_intnumber();
  static const int kIntNumberFieldNumber = 34;
  inline ::google::protobuf::uint32 intnumber(int index) const;
  inline void set_intnumber(int index, ::google::protobuf::uint32 value);
  inline void add_intnumber(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      intnumber() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_intnumber();

  // repeated .TgsProtocol.IntList intNumberList = 35;
  inline int intnumberlist_size() const;
  inline void clear_intnumberlist();
  static const int kIntNumberListFieldNumber = 35;
  inline const ::TgsProtocol::IntList& intnumberlist(int index) const;
  inline ::TgsProtocol::IntList* mutable_intnumberlist(int index);
  inline ::TgsProtocol::IntList* add_intnumberlist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::IntList >&
      intnumberlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::IntList >*
      mutable_intnumberlist();

  // repeated uint32 mailid = 36;
  inline int mailid_size() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 36;
  inline ::google::protobuf::uint32 mailid(int index) const;
  inline void set_mailid(int index, ::google::protobuf::uint32 value);
  inline void add_mailid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mailid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mailid();

  // repeated .TgsProtocol.LString child2Desc_l = 37;
  inline int child2desc_l_size() const;
  inline void clear_child2desc_l();
  static const int kChild2DescLFieldNumber = 37;
  inline const ::TgsProtocol::LString& child2desc_l(int index) const;
  inline ::TgsProtocol::LString* mutable_child2desc_l(int index);
  inline ::TgsProtocol::LString* add_child2desc_l();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString >&
      child2desc_l() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString >*
      mutable_child2desc_l();

  // optional uint32 iconIndex = 38;
  inline bool has_iconindex() const;
  inline void clear_iconindex();
  static const int kIconIndexFieldNumber = 38;
  inline ::google::protobuf::uint32 iconindex() const;
  inline void set_iconindex(::google::protobuf::uint32 value);

  // optional uint32 expand = 39;
  inline bool has_expand() const;
  inline void clear_expand();
  static const int kExpandFieldNumber = 39;
  inline ::google::protobuf::uint32 expand() const;
  inline void set_expand(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientActivity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_closed();
  inline void clear_has_closed();
  inline void set_has_opentype();
  inline void clear_has_opentype();
  inline void set_has_actype();
  inline void clear_has_actype();
  inline void set_has_showbegintime();
  inline void clear_has_showbegintime();
  inline void set_has_showendtime();
  inline void clear_has_showendtime();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_playerlev();
  inline void clear_has_playerlev();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_activetime();
  inline void clear_has_activetime();
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_name_l();
  inline void clear_has_name_l();
  inline void set_has_desc_l();
  inline void clear_has_desc_l();
  inline void set_has_iconindex();
  inline void clear_has_iconindex();
  inline void set_has_expand();
  inline void clear_has_expand();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 closed_;
  ::google::protobuf::uint32 opentype_;
  ::google::protobuf::uint32 actype_;
  ::google::protobuf::uint32 showbegintime_;
  ::google::protobuf::uint32 showendtime_;
  ::google::protobuf::uint32 begintime_;
  ::google::protobuf::uint32 endtime_;
  ::std::string* name_;
  ::std::string* desc_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime > todaytimes_;
  ::google::protobuf::uint32 playerlev_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > values_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList > rewards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rewardgot_;
  ::google::protobuf::RepeatedPtrField< ::std::string> childdesc_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sharevalues_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList > values2_;
  ::google::protobuf::RepeatedPtrField< ::std::string> sharetex_;
  ::std::string* icon_;
  ::google::protobuf::uint32 activetime_;
  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientMonthCard > card_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit > globalitemlimit_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit > playeritemlimit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gettimes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > everyvalues_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > everydonevalues_;
  ::TgsProtocol::LString* name_l_;
  ::google::protobuf::uint32 sequence_;
  ::google::protobuf::uint32 iconindex_;
  ::TgsProtocol::LString* desc_l_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString > childdesc_l_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > intnumber_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::IntList > intnumberlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mailid_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString > child2desc_l_;
  ::google::protobuf::uint32 expand_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientActivity* default_instance_;
};
// -------------------------------------------------------------------

class HalfBuyElement : public ::google::protobuf::Message {
 public:
  HalfBuyElement();
  virtual ~HalfBuyElement();

  HalfBuyElement(const HalfBuyElement& from);

  inline HalfBuyElement& operator=(const HalfBuyElement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HalfBuyElement& default_instance();

  void Swap(HalfBuyElement* other);

  // implements Message ----------------------------------------------

  HalfBuyElement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HalfBuyElement& from);
  void MergeFrom(const HalfBuyElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.HalfBuyElement)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 number_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static HalfBuyElement* default_instance_;
};
// -------------------------------------------------------------------

class HalfBuy : public ::google::protobuf::Message {
 public:
  HalfBuy();
  virtual ~HalfBuy();

  HalfBuy(const HalfBuy& from);

  inline HalfBuy& operator=(const HalfBuy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HalfBuy& default_instance();

  void Swap(HalfBuy* other);

  // implements Message ----------------------------------------------

  HalfBuy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HalfBuy& from);
  void MergeFrom(const HalfBuy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.HalfBuyElement halfBuyEle = 1;
  inline int halfbuyele_size() const;
  inline void clear_halfbuyele();
  static const int kHalfBuyEleFieldNumber = 1;
  inline const ::TgsProtocol::HalfBuyElement& halfbuyele(int index) const;
  inline ::TgsProtocol::HalfBuyElement* mutable_halfbuyele(int index);
  inline ::TgsProtocol::HalfBuyElement* add_halfbuyele();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HalfBuyElement >&
      halfbuyele() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HalfBuyElement >*
      mutable_halfbuyele();

  // @@protoc_insertion_point(class_scope:TgsProtocol.HalfBuy)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HalfBuyElement > halfbuyele_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static HalfBuy* default_instance_;
};
// -------------------------------------------------------------------

class AchieveElement : public ::google::protobuf::Message {
 public:
  AchieveElement();
  virtual ~AchieveElement();

  AchieveElement(const AchieveElement& from);

  inline AchieveElement& operator=(const AchieveElement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AchieveElement& default_instance();

  void Swap(AchieveElement* other);

  // implements Message ----------------------------------------------

  AchieveElement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AchieveElement& from);
  void MergeFrom(const AchieveElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 got = 3;
  inline bool has_got() const;
  inline void clear_got();
  static const int kGotFieldNumber = 3;
  inline ::google::protobuf::uint32 got() const;
  inline void set_got(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.AchieveElement)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_got();
  inline void clear_has_got();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 got_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static AchieveElement* default_instance_;
};
// -------------------------------------------------------------------

class Achieve : public ::google::protobuf::Message {
 public:
  Achieve();
  virtual ~Achieve();

  Achieve(const Achieve& from);

  inline Achieve& operator=(const Achieve& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Achieve& default_instance();

  void Swap(Achieve* other);

  // implements Message ----------------------------------------------

  Achieve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Achieve& from);
  void MergeFrom(const Achieve& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.AchieveElement achieves = 1;
  inline int achieves_size() const;
  inline void clear_achieves();
  static const int kAchievesFieldNumber = 1;
  inline const ::TgsProtocol::AchieveElement& achieves(int index) const;
  inline ::TgsProtocol::AchieveElement* mutable_achieves(int index);
  inline ::TgsProtocol::AchieveElement* add_achieves();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AchieveElement >&
      achieves() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AchieveElement >*
      mutable_achieves();

  // @@protoc_insertion_point(class_scope:TgsProtocol.Achieve)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AchieveElement > achieves_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static Achieve* default_instance_;
};
// -------------------------------------------------------------------

class ClientRank : public ::google::protobuf::Message {
 public:
  ClientRank();
  virtual ~ClientRank();

  ClientRank(const ClientRank& from);

  inline ClientRank& operator=(const ClientRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientRank& default_instance();

  void Swap(ClientRank* other);

  // implements Message ----------------------------------------------

  ClientRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientRank& from);
  void MergeFrom(const ClientRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TgsProtocol.ERankType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::TgsProtocol::ERankType type() const;
  inline void set_type(::TgsProtocol::ERankType value);

  // required uint32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 playerLev = 4;
  inline bool has_playerlev() const;
  inline void clear_playerlev();
  static const int kPlayerLevFieldNumber = 4;
  inline ::google::protobuf::uint32 playerlev() const;
  inline void set_playerlev(::google::protobuf::uint32 value);

  // required uint32 vipLev = 5;
  inline bool has_viplev() const;
  inline void clear_viplev();
  static const int kVipLevFieldNumber = 5;
  inline ::google::protobuf::uint32 viplev() const;
  inline void set_viplev(::google::protobuf::uint32 value);

  // required string playerName = 6;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 6;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional string playerGuild = 7;
  inline bool has_playerguild() const;
  inline void clear_playerguild();
  static const int kPlayerGuildFieldNumber = 7;
  inline const ::std::string& playerguild() const;
  inline void set_playerguild(const ::std::string& value);
  inline void set_playerguild(const char* value);
  inline void set_playerguild(const char* value, size_t size);
  inline ::std::string* mutable_playerguild();
  inline ::std::string* release_playerguild();
  inline void set_allocated_playerguild(::std::string* playerguild);

  // required uint64 value = 8;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 8;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // optional uint32 templateId = 9;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 9;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // optional uint64 instanceId = 10;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 10;
  inline ::google::protobuf::uint64 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint64 value);

  // optional uint32 instanceValue = 11;
  inline bool has_instancevalue() const;
  inline void clear_instancevalue();
  static const int kInstanceValueFieldNumber = 11;
  inline ::google::protobuf::uint32 instancevalue() const;
  inline void set_instancevalue(::google::protobuf::uint32 value);

  // required uint64 effect = 12;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 12;
  inline ::google::protobuf::uint64 effect() const;
  inline void set_effect(::google::protobuf::uint64 value);

  // required uint32 photo = 13;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 13;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // optional uint32 nationalId = 14;
  inline bool has_nationalid() const;
  inline void clear_nationalid();
  static const int kNationalIdFieldNumber = 14;
  inline ::google::protobuf::uint32 nationalid() const;
  inline void set_nationalid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientRank)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_playerlev();
  inline void clear_has_playerlev();
  inline void set_has_viplev();
  inline void clear_has_viplev();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_playerguild();
  inline void clear_has_playerguild();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_instancevalue();
  inline void clear_has_instancevalue();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_nationalid();
  inline void clear_has_nationalid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 playerlev_;
  ::google::protobuf::uint32 viplev_;
  ::std::string* playername_;
  ::std::string* playerguild_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint64 instanceid_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 instancevalue_;
  ::google::protobuf::uint64 effect_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 nationalid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientRank* default_instance_;
};
// -------------------------------------------------------------------

class ClientRankList : public ::google::protobuf::Message {
 public:
  ClientRankList();
  virtual ~ClientRankList();

  ClientRankList(const ClientRankList& from);

  inline ClientRankList& operator=(const ClientRankList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientRankList& default_instance();

  void Swap(ClientRankList* other);

  // implements Message ----------------------------------------------

  ClientRankList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientRankList& from);
  void MergeFrom(const ClientRankList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TgsProtocol.ERankType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::TgsProtocol::ERankType type() const;
  inline void set_type(::TgsProtocol::ERankType value);

  // repeated .TgsProtocol.ClientRank items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::TgsProtocol::ClientRank& items(int index) const;
  inline ::TgsProtocol::ClientRank* mutable_items(int index);
  inline ::TgsProtocol::ClientRank* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRank >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRank >*
      mutable_items();

  // required uint32 myrank = 3;
  inline bool has_myrank() const;
  inline void clear_myrank();
  static const int kMyrankFieldNumber = 3;
  inline ::google::protobuf::uint32 myrank() const;
  inline void set_myrank(::google::protobuf::uint32 value);

  // optional uint32 templateId = 4;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 4;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // optional uint64 myvalue = 5;
  inline bool has_myvalue() const;
  inline void clear_myvalue();
  static const int kMyvalueFieldNumber = 5;
  inline ::google::protobuf::uint64 myvalue() const;
  inline void set_myvalue(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientRankList)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_myrank();
  inline void clear_has_myrank();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_myvalue();
  inline void clear_has_myvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRank > items_;
  int type_;
  ::google::protobuf::uint32 myrank_;
  ::google::protobuf::uint64 myvalue_;
  ::google::protobuf::uint32 templateid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientRankList* default_instance_;
};
// -------------------------------------------------------------------

class ClientHeroRank : public ::google::protobuf::Message {
 public:
  ClientHeroRank();
  virtual ~ClientHeroRank();

  ClientHeroRank(const ClientHeroRank& from);

  inline ClientHeroRank& operator=(const ClientHeroRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientHeroRank& default_instance();

  void Swap(ClientHeroRank* other);

  // implements Message ----------------------------------------------

  ClientHeroRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientHeroRank& from);
  void MergeFrom(const ClientHeroRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string guild = 5;
  inline bool has_guild() const;
  inline void clear_guild();
  static const int kGuildFieldNumber = 5;
  inline const ::std::string& guild() const;
  inline void set_guild(const ::std::string& value);
  inline void set_guild(const char* value);
  inline void set_guild(const char* value, size_t size);
  inline ::std::string* mutable_guild();
  inline ::std::string* release_guild();
  inline void set_allocated_guild(::std::string* guild);

  // required uint32 photo = 6;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 6;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 playerlevel = 7;
  inline bool has_playerlevel() const;
  inline void clear_playerlevel();
  static const int kPlayerlevelFieldNumber = 7;
  inline ::google::protobuf::uint32 playerlevel() const;
  inline void set_playerlevel(::google::protobuf::uint32 value);

  // required uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 forceLevel = 9;
  inline bool has_forcelevel() const;
  inline void clear_forcelevel();
  static const int kForceLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 forcelevel() const;
  inline void set_forcelevel(::google::protobuf::uint32 value);

  // required uint32 deificationlevel = 10;
  inline bool has_deificationlevel() const;
  inline void clear_deificationlevel();
  static const int kDeificationlevelFieldNumber = 10;
  inline ::google::protobuf::uint32 deificationlevel() const;
  inline void set_deificationlevel(::google::protobuf::uint32 value);

  // required uint32 wingslevel = 11;
  inline bool has_wingslevel() const;
  inline void clear_wingslevel();
  static const int kWingslevelFieldNumber = 11;
  inline ::google::protobuf::uint32 wingslevel() const;
  inline void set_wingslevel(::google::protobuf::uint32 value);

  // required uint64 effect = 12;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 12;
  inline ::google::protobuf::uint64 effect() const;
  inline void set_effect(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientHeroRank)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_guild();
  inline void clear_has_guild();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_playerlevel();
  inline void clear_has_playerlevel();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_forcelevel();
  inline void clear_has_forcelevel();
  inline void set_has_deificationlevel();
  inline void clear_has_deificationlevel();
  inline void set_has_wingslevel();
  inline void clear_has_wingslevel();
  inline void set_has_effect();
  inline void clear_has_effect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::std::string* guild_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 playerlevel_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 forcelevel_;
  ::google::protobuf::uint32 deificationlevel_;
  ::google::protobuf::uint32 wingslevel_;
  ::google::protobuf::uint64 effect_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientHeroRank* default_instance_;
};
// -------------------------------------------------------------------

class ClientAchieve : public ::google::protobuf::Message {
 public:
  ClientAchieve();
  virtual ~ClientAchieve();

  ClientAchieve(const ClientAchieve& from);

  inline ClientAchieve& operator=(const ClientAchieve& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientAchieve& default_instance();

  void Swap(ClientAchieve* other);

  // implements Message ----------------------------------------------

  ClientAchieve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientAchieve& from);
  void MergeFrom(const ClientAchieve& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 photo = 3;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 3;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // optional uint32 playerLev = 4;
  inline bool has_playerlev() const;
  inline void clear_playerlev();
  static const int kPlayerLevFieldNumber = 4;
  inline ::google::protobuf::uint32 playerlev() const;
  inline void set_playerlev(::google::protobuf::uint32 value);

  // optional uint32 vipLev = 5;
  inline bool has_viplev() const;
  inline void clear_viplev();
  static const int kVipLevFieldNumber = 5;
  inline ::google::protobuf::uint32 viplev() const;
  inline void set_viplev(::google::protobuf::uint32 value);

  // optional string playerName = 6;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 6;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional uint32 got = 7;
  inline bool has_got() const;
  inline void clear_got();
  static const int kGotFieldNumber = 7;
  inline ::google::protobuf::uint32 got() const;
  inline void set_got(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientAchieve)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_playerlev();
  inline void clear_has_playerlev();
  inline void set_has_viplev();
  inline void clear_has_viplev();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_got();
  inline void clear_has_got();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 playerlev_;
  ::google::protobuf::uint32 viplev_;
  ::std::string* playername_;
  ::google::protobuf::uint32 got_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientAchieve* default_instance_;
};
// -------------------------------------------------------------------

class ActionRecord : public ::google::protobuf::Message {
 public:
  ActionRecord();
  virtual ~ActionRecord();

  ActionRecord(const ActionRecord& from);

  inline ActionRecord& operator=(const ActionRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionRecord& default_instance();

  void Swap(ActionRecord* other);

  // implements Message ----------------------------------------------

  ActionRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionRecord& from);
  void MergeFrom(const ActionRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TgsProtocol.eActionType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::TgsProtocol::eActionType type() const;
  inline void set_type(::TgsProtocol::eActionType value);

  // required uint32 value = 2 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ActionRecord)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ActionRecord* default_instance_;
};
// -------------------------------------------------------------------

class GuildInfo : public ::google::protobuf::Message {
 public:
  GuildInfo();
  virtual ~GuildInfo();

  GuildInfo(const GuildInfo& from);

  inline GuildInfo& operator=(const GuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildInfo& default_instance();

  void Swap(GuildInfo* other);

  // implements Message ----------------------------------------------

  GuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildInfo& from);
  void MergeFrom(const GuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint64 creater = 4;
  inline bool has_creater() const;
  inline void clear_creater();
  static const int kCreaterFieldNumber = 4;
  inline ::google::protobuf::uint64 creater() const;
  inline void set_creater(::google::protobuf::uint64 value);

  // required uint64 leader = 5;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 5;
  inline ::google::protobuf::uint64 leader() const;
  inline void set_leader(::google::protobuf::uint64 value);

  // required uint32 createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // required uint32 photo = 7;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 7;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required string name = 8;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 8;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string notice = 9;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 9;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // required string manifesto = 10;
  inline bool has_manifesto() const;
  inline void clear_manifesto();
  static const int kManifestoFieldNumber = 10;
  inline const ::std::string& manifesto() const;
  inline void set_manifesto(const ::std::string& value);
  inline void set_manifesto(const char* value);
  inline void set_manifesto(const char* value, size_t size);
  inline ::std::string* mutable_manifesto();
  inline ::std::string* release_manifesto();
  inline void set_allocated_manifesto(::std::string* manifesto);

  // required uint32 ritual = 11;
  inline bool has_ritual() const;
  inline void clear_ritual();
  static const int kRitualFieldNumber = 11;
  inline ::google::protobuf::uint32 ritual() const;
  inline void set_ritual(::google::protobuf::uint32 value);

  // required uint32 technology_level = 12;
  inline bool has_technology_level() const;
  inline void clear_technology_level();
  static const int kTechnologyLevelFieldNumber = 12;
  inline ::google::protobuf::uint32 technology_level() const;
  inline void set_technology_level(::google::protobuf::uint32 value);

  // required uint32 technology_exp = 13;
  inline bool has_technology_exp() const;
  inline void clear_technology_exp();
  static const int kTechnologyExpFieldNumber = 13;
  inline ::google::protobuf::uint32 technology_exp() const;
  inline void set_technology_exp(::google::protobuf::uint32 value);

  // repeated uint32 unlocked_skill = 14;
  inline int unlocked_skill_size() const;
  inline void clear_unlocked_skill();
  static const int kUnlockedSkillFieldNumber = 14;
  inline ::google::protobuf::uint32 unlocked_skill(int index) const;
  inline void set_unlocked_skill(int index, ::google::protobuf::uint32 value);
  inline void add_unlocked_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_skill();

  // optional string guildwar_enemy = 15;
  inline bool has_guildwar_enemy() const;
  inline void clear_guildwar_enemy();
  static const int kGuildwarEnemyFieldNumber = 15;
  inline const ::std::string& guildwar_enemy() const;
  inline void set_guildwar_enemy(const ::std::string& value);
  inline void set_guildwar_enemy(const char* value);
  inline void set_guildwar_enemy(const char* value, size_t size);
  inline ::std::string* mutable_guildwar_enemy();
  inline ::std::string* release_guildwar_enemy();
  inline void set_allocated_guildwar_enemy(::std::string* guildwar_enemy);

  // optional uint32 guildwar_enemy_exp = 16;
  inline bool has_guildwar_enemy_exp() const;
  inline void clear_guildwar_enemy_exp();
  static const int kGuildwarEnemyExpFieldNumber = 16;
  inline ::google::protobuf::uint32 guildwar_enemy_exp() const;
  inline void set_guildwar_enemy_exp(::google::protobuf::uint32 value);

  // optional uint32 city_level = 17;
  inline bool has_city_level() const;
  inline void clear_city_level();
  static const int kCityLevelFieldNumber = 17;
  inline ::google::protobuf::uint32 city_level() const;
  inline void set_city_level(::google::protobuf::uint32 value);

  // optional uint32 city_exp = 18;
  inline bool has_city_exp() const;
  inline void clear_city_exp();
  static const int kCityExpFieldNumber = 18;
  inline ::google::protobuf::uint32 city_exp() const;
  inline void set_city_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_creater();
  inline void clear_has_creater();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_manifesto();
  inline void clear_has_manifesto();
  inline void set_has_ritual();
  inline void clear_has_ritual();
  inline void set_has_technology_level();
  inline void clear_has_technology_level();
  inline void set_has_technology_exp();
  inline void clear_has_technology_exp();
  inline void set_has_guildwar_enemy();
  inline void clear_has_guildwar_enemy();
  inline void set_has_guildwar_enemy_exp();
  inline void clear_has_guildwar_enemy_exp();
  inline void set_has_city_level();
  inline void clear_has_city_level();
  inline void set_has_city_exp();
  inline void clear_has_city_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 creater_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint64 leader_;
  ::std::string* name_;
  ::std::string* notice_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 ritual_;
  ::std::string* manifesto_;
  ::google::protobuf::uint32 technology_level_;
  ::google::protobuf::uint32 technology_exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_skill_;
  ::std::string* guildwar_enemy_;
  ::google::protobuf::uint32 guildwar_enemy_exp_;
  ::google::protobuf::uint32 city_level_;
  ::google::protobuf::uint32 city_exp_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientGuildInfo : public ::google::protobuf::Message {
 public:
  ClientGuildInfo();
  virtual ~ClientGuildInfo();

  ClientGuildInfo(const ClientGuildInfo& from);

  inline ClientGuildInfo& operator=(const ClientGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGuildInfo& default_instance();

  void Swap(ClientGuildInfo* other);

  // implements Message ----------------------------------------------

  ClientGuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientGuildInfo& from);
  void MergeFrom(const ClientGuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TgsProtocol.GuildInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::TgsProtocol::GuildInfo& info() const;
  inline ::TgsProtocol::GuildInfo* mutable_info();
  inline ::TgsProtocol::GuildInfo* release_info();
  inline void set_allocated_info(::TgsProtocol::GuildInfo* info);

  // optional uint32 membernum = 2;
  inline bool has_membernum() const;
  inline void clear_membernum();
  static const int kMembernumFieldNumber = 2;
  inline ::google::protobuf::uint32 membernum() const;
  inline void set_membernum(::google::protobuf::uint32 value);

  // optional uint32 membermax = 3;
  inline bool has_membermax() const;
  inline void clear_membermax();
  static const int kMembermaxFieldNumber = 3;
  inline ::google::protobuf::uint32 membermax() const;
  inline void set_membermax(::google::protobuf::uint32 value);

  // optional uint32 isapply = 4;
  inline bool has_isapply() const;
  inline void clear_isapply();
  static const int kIsapplyFieldNumber = 4;
  inline ::google::protobuf::uint32 isapply() const;
  inline void set_isapply(::google::protobuf::uint32 value);

  // optional string leadername = 5;
  inline bool has_leadername() const;
  inline void clear_leadername();
  static const int kLeadernameFieldNumber = 5;
  inline const ::std::string& leadername() const;
  inline void set_leadername(const ::std::string& value);
  inline void set_leadername(const char* value);
  inline void set_leadername(const char* value, size_t size);
  inline ::std::string* mutable_leadername();
  inline ::std::string* release_leadername();
  inline void set_allocated_leadername(::std::string* leadername);

  // optional uint32 myjob = 6;
  inline bool has_myjob() const;
  inline void clear_myjob();
  static const int kMyjobFieldNumber = 6;
  inline ::google::protobuf::uint32 myjob() const;
  inline void set_myjob(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientGuildInfo)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_membernum();
  inline void clear_has_membernum();
  inline void set_has_membermax();
  inline void clear_has_membermax();
  inline void set_has_isapply();
  inline void clear_has_isapply();
  inline void set_has_leadername();
  inline void clear_has_leadername();
  inline void set_has_myjob();
  inline void clear_has_myjob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TgsProtocol::GuildInfo* info_;
  ::google::protobuf::uint32 membernum_;
  ::google::protobuf::uint32 membermax_;
  ::std::string* leadername_;
  ::google::protobuf::uint32 isapply_;
  ::google::protobuf::uint32 myjob_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientGuildMember : public ::google::protobuf::Message {
 public:
  ClientGuildMember();
  virtual ~ClientGuildMember();

  ClientGuildMember(const ClientGuildMember& from);

  inline ClientGuildMember& operator=(const ClientGuildMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGuildMember& default_instance();

  void Swap(ClientGuildMember* other);

  // implements Message ----------------------------------------------

  ClientGuildMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientGuildMember& from);
  void MergeFrom(const ClientGuildMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 photo = 3;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 3;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 vip = 5;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 5;
  inline ::google::protobuf::uint32 vip() const;
  inline void set_vip(::google::protobuf::uint32 value);

  // required uint64 effect = 6;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 6;
  inline ::google::protobuf::uint64 effect() const;
  inline void set_effect(::google::protobuf::uint64 value);

  // optional uint32 online = 7;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 7;
  inline ::google::protobuf::uint32 online() const;
  inline void set_online(::google::protobuf::uint32 value);

  // optional uint32 arenarank = 8;
  inline bool has_arenarank() const;
  inline void clear_arenarank();
  static const int kArenarankFieldNumber = 8;
  inline ::google::protobuf::uint32 arenarank() const;
  inline void set_arenarank(::google::protobuf::uint32 value);

  // optional uint32 job = 9;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 9;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);

  // optional uint32 devote = 10;
  inline bool has_devote() const;
  inline void clear_devote();
  static const int kDevoteFieldNumber = 10;
  inline ::google::protobuf::uint32 devote() const;
  inline void set_devote(::google::protobuf::uint32 value);

  // optional uint32 dailyDevote = 11;
  inline bool has_dailydevote() const;
  inline void clear_dailydevote();
  static const int kDailyDevoteFieldNumber = 11;
  inline ::google::protobuf::uint32 dailydevote() const;
  inline void set_dailydevote(::google::protobuf::uint32 value);

  // optional .TgsProtocol.eGuildMemberType type = 12;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 12;
  inline ::TgsProtocol::eGuildMemberType type() const;
  inline void set_type(::TgsProtocol::eGuildMemberType value);

  // optional uint32 nationalId = 13;
  inline bool has_nationalid() const;
  inline void clear_nationalid();
  static const int kNationalIdFieldNumber = 13;
  inline ::google::protobuf::uint32 nationalid() const;
  inline void set_nationalid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientGuildMember)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_arenarank();
  inline void clear_has_arenarank();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_devote();
  inline void clear_has_devote();
  inline void set_has_dailydevote();
  inline void clear_has_dailydevote();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_nationalid();
  inline void clear_has_nationalid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 effect_;
  ::google::protobuf::uint32 vip_;
  ::google::protobuf::uint32 online_;
  ::google::protobuf::uint32 arenarank_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 devote_;
  ::google::protobuf::uint32 dailydevote_;
  int type_;
  ::google::protobuf::uint32 nationalid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientGuildMember* default_instance_;
};
// -------------------------------------------------------------------

class ClientGuildRitual : public ::google::protobuf::Message {
 public:
  ClientGuildRitual();
  virtual ~ClientGuildRitual();

  ClientGuildRitual(const ClientGuildRitual& from);

  inline ClientGuildRitual& operator=(const ClientGuildRitual& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGuildRitual& default_instance();

  void Swap(ClientGuildRitual* other);

  // implements Message ----------------------------------------------

  ClientGuildRitual* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientGuildRitual& from);
  void MergeFrom(const ClientGuildRitual& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rate = 1;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 1;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // optional uint32 ritual = 2;
  inline bool has_ritual() const;
  inline void clear_ritual();
  static const int kRitualFieldNumber = 2;
  inline ::google::protobuf::uint32 ritual() const;
  inline void set_ritual(::google::protobuf::uint32 value);

  // optional uint32 days = 3;
  inline bool has_days() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 3;
  inline ::google::protobuf::uint32 days() const;
  inline void set_days(::google::protobuf::uint32 value);

  // optional uint32 rewardgot = 4;
  inline bool has_rewardgot() const;
  inline void clear_rewardgot();
  static const int kRewardgotFieldNumber = 4;
  inline ::google::protobuf::uint32 rewardgot() const;
  inline void set_rewardgot(::google::protobuf::uint32 value);

  // optional uint32 ratereward = 5;
  inline bool has_ratereward() const;
  inline void clear_ratereward();
  static const int kRaterewardFieldNumber = 5;
  inline ::google::protobuf::uint32 ratereward() const;
  inline void set_ratereward(::google::protobuf::uint32 value);

  // optional uint32 guildlevel = 6;
  inline bool has_guildlevel() const;
  inline void clear_guildlevel();
  static const int kGuildlevelFieldNumber = 6;
  inline ::google::protobuf::uint32 guildlevel() const;
  inline void set_guildlevel(::google::protobuf::uint32 value);

  // optional uint32 guildexp = 7;
  inline bool has_guildexp() const;
  inline void clear_guildexp();
  static const int kGuildexpFieldNumber = 7;
  inline ::google::protobuf::uint32 guildexp() const;
  inline void set_guildexp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientGuildRitual)
 private:
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_ritual();
  inline void clear_has_ritual();
  inline void set_has_days();
  inline void clear_has_days();
  inline void set_has_rewardgot();
  inline void clear_has_rewardgot();
  inline void set_has_ratereward();
  inline void clear_has_ratereward();
  inline void set_has_guildlevel();
  inline void clear_has_guildlevel();
  inline void set_has_guildexp();
  inline void clear_has_guildexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rate_;
  ::google::protobuf::uint32 ritual_;
  ::google::protobuf::uint32 days_;
  ::google::protobuf::uint32 rewardgot_;
  ::google::protobuf::uint32 ratereward_;
  ::google::protobuf::uint32 guildlevel_;
  ::google::protobuf::uint32 guildexp_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientGuildRitual* default_instance_;
};
// -------------------------------------------------------------------

class ClientGuildTechnology : public ::google::protobuf::Message {
 public:
  ClientGuildTechnology();
  virtual ~ClientGuildTechnology();

  ClientGuildTechnology(const ClientGuildTechnology& from);

  inline ClientGuildTechnology& operator=(const ClientGuildTechnology& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGuildTechnology& default_instance();

  void Swap(ClientGuildTechnology* other);

  // implements Message ----------------------------------------------

  ClientGuildTechnology* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientGuildTechnology& from);
  void MergeFrom(const ClientGuildTechnology& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 technology_level = 1;
  inline bool has_technology_level() const;
  inline void clear_technology_level();
  static const int kTechnologyLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 technology_level() const;
  inline void set_technology_level(::google::protobuf::uint32 value);

  // required uint32 technology_exp = 2;
  inline bool has_technology_exp() const;
  inline void clear_technology_exp();
  static const int kTechnologyExpFieldNumber = 2;
  inline ::google::protobuf::uint32 technology_exp() const;
  inline void set_technology_exp(::google::protobuf::uint32 value);

  // repeated uint32 unlocked_skill = 3;
  inline int unlocked_skill_size() const;
  inline void clear_unlocked_skill();
  static const int kUnlockedSkillFieldNumber = 3;
  inline ::google::protobuf::uint32 unlocked_skill(int index) const;
  inline void set_unlocked_skill(int index, ::google::protobuf::uint32 value);
  inline void add_unlocked_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_skill();

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientGuildTechnology)
 private:
  inline void set_has_technology_level();
  inline void clear_has_technology_level();
  inline void set_has_technology_exp();
  inline void clear_has_technology_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 technology_level_;
  ::google::protobuf::uint32 technology_exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_skill_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientGuildTechnology* default_instance_;
};
// -------------------------------------------------------------------

class ClientGuildState : public ::google::protobuf::Message {
 public:
  ClientGuildState();
  virtual ~ClientGuildState();

  ClientGuildState(const ClientGuildState& from);

  inline ClientGuildState& operator=(const ClientGuildState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGuildState& default_instance();

  void Swap(ClientGuildState* other);

  // implements Message ----------------------------------------------

  ClientGuildState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientGuildState& from);
  void MergeFrom(const ClientGuildState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 job = 1;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 1;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .TgsProtocol.eGuildStateType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::TgsProtocol::eGuildStateType type() const;
  inline void set_type(::TgsProtocol::eGuildStateType value);

  // required uint32 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional string name2 = 5;
  inline bool has_name2() const;
  inline void clear_name2();
  static const int kName2FieldNumber = 5;
  inline const ::std::string& name2() const;
  inline void set_name2(const ::std::string& value);
  inline void set_name2(const char* value);
  inline void set_name2(const char* value, size_t size);
  inline ::std::string* mutable_name2();
  inline ::std::string* release_name2();
  inline void set_allocated_name2(::std::string* name2);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientGuildState)
 private:
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_name2();
  inline void clear_has_name2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 job_;
  int type_;
  ::std::string* name2_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientGuildState* default_instance_;
};
// -------------------------------------------------------------------

class ClientGuildWarMsg : public ::google::protobuf::Message {
 public:
  ClientGuildWarMsg();
  virtual ~ClientGuildWarMsg();

  ClientGuildWarMsg(const ClientGuildWarMsg& from);

  inline ClientGuildWarMsg& operator=(const ClientGuildWarMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGuildWarMsg& default_instance();

  void Swap(ClientGuildWarMsg* other);

  // implements Message ----------------------------------------------

  ClientGuildWarMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientGuildWarMsg& from);
  void MergeFrom(const ClientGuildWarMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_attack = 1;
  inline bool has_is_attack() const;
  inline void clear_is_attack();
  static const int kIsAttackFieldNumber = 1;
  inline bool is_attack() const;
  inline void set_is_attack(bool value);

  // required bool is_attacker_win = 2;
  inline bool has_is_attacker_win() const;
  inline void clear_is_attacker_win();
  static const int kIsAttackerWinFieldNumber = 2;
  inline bool is_attacker_win() const;
  inline void set_is_attacker_win(bool value);

  // required string attacker_name = 3;
  inline bool has_attacker_name() const;
  inline void clear_attacker_name();
  static const int kAttackerNameFieldNumber = 3;
  inline const ::std::string& attacker_name() const;
  inline void set_attacker_name(const ::std::string& value);
  inline void set_attacker_name(const char* value);
  inline void set_attacker_name(const char* value, size_t size);
  inline ::std::string* mutable_attacker_name();
  inline ::std::string* release_attacker_name();
  inline void set_allocated_attacker_name(::std::string* attacker_name);

  // required uint32 attacker_star = 4;
  inline bool has_attacker_star() const;
  inline void clear_attacker_star();
  static const int kAttackerStarFieldNumber = 4;
  inline ::google::protobuf::uint32 attacker_star() const;
  inline void set_attacker_star(::google::protobuf::uint32 value);

  // required string defender_name = 5;
  inline bool has_defender_name() const;
  inline void clear_defender_name();
  static const int kDefenderNameFieldNumber = 5;
  inline const ::std::string& defender_name() const;
  inline void set_defender_name(const ::std::string& value);
  inline void set_defender_name(const char* value);
  inline void set_defender_name(const char* value, size_t size);
  inline ::std::string* mutable_defender_name();
  inline ::std::string* release_defender_name();
  inline void set_allocated_defender_name(::std::string* defender_name);

  // required uint32 defender_star = 6;
  inline bool has_defender_star() const;
  inline void clear_defender_star();
  static const int kDefenderStarFieldNumber = 6;
  inline ::google::protobuf::uint32 defender_star() const;
  inline void set_defender_star(::google::protobuf::uint32 value);

  // required string enemy_guild_name = 7;
  inline bool has_enemy_guild_name() const;
  inline void clear_enemy_guild_name();
  static const int kEnemyGuildNameFieldNumber = 7;
  inline const ::std::string& enemy_guild_name() const;
  inline void set_enemy_guild_name(const ::std::string& value);
  inline void set_enemy_guild_name(const char* value);
  inline void set_enemy_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_enemy_guild_name();
  inline ::std::string* release_enemy_guild_name();
  inline void set_allocated_enemy_guild_name(::std::string* enemy_guild_name);

  // required uint32 exp = 8;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 8;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 attacker_total = 9;
  inline bool has_attacker_total() const;
  inline void clear_attacker_total();
  static const int kAttackerTotalFieldNumber = 9;
  inline ::google::protobuf::uint32 attacker_total() const;
  inline void set_attacker_total(::google::protobuf::uint32 value);

  // optional uint32 attacker_win = 10;
  inline bool has_attacker_win() const;
  inline void clear_attacker_win();
  static const int kAttackerWinFieldNumber = 10;
  inline ::google::protobuf::uint32 attacker_win() const;
  inline void set_attacker_win(::google::protobuf::uint32 value);

  // optional uint32 total_exp = 11;
  inline bool has_total_exp() const;
  inline void clear_total_exp();
  static const int kTotalExpFieldNumber = 11;
  inline ::google::protobuf::uint32 total_exp() const;
  inline void set_total_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientGuildWarMsg)
 private:
  inline void set_has_is_attack();
  inline void clear_has_is_attack();
  inline void set_has_is_attacker_win();
  inline void clear_has_is_attacker_win();
  inline void set_has_attacker_name();
  inline void clear_has_attacker_name();
  inline void set_has_attacker_star();
  inline void clear_has_attacker_star();
  inline void set_has_defender_name();
  inline void clear_has_defender_name();
  inline void set_has_defender_star();
  inline void clear_has_defender_star();
  inline void set_has_enemy_guild_name();
  inline void clear_has_enemy_guild_name();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_attacker_total();
  inline void clear_has_attacker_total();
  inline void set_has_attacker_win();
  inline void clear_has_attacker_win();
  inline void set_has_total_exp();
  inline void clear_has_total_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool is_attack_;
  bool is_attacker_win_;
  ::google::protobuf::uint32 attacker_star_;
  ::std::string* attacker_name_;
  ::std::string* defender_name_;
  ::std::string* enemy_guild_name_;
  ::google::protobuf::uint32 defender_star_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 attacker_total_;
  ::google::protobuf::uint32 attacker_win_;
  ::google::protobuf::uint32 total_exp_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientGuildWarMsg* default_instance_;
};
// -------------------------------------------------------------------

class ClientGuildWarEndMsg : public ::google::protobuf::Message {
 public:
  ClientGuildWarEndMsg();
  virtual ~ClientGuildWarEndMsg();

  ClientGuildWarEndMsg(const ClientGuildWarEndMsg& from);

  inline ClientGuildWarEndMsg& operator=(const ClientGuildWarEndMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGuildWarEndMsg& default_instance();

  void Swap(ClientGuildWarEndMsg* other);

  // implements Message ----------------------------------------------

  ClientGuildWarEndMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientGuildWarEndMsg& from);
  void MergeFrom(const ClientGuildWarEndMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_attack = 1;
  inline bool has_is_attack() const;
  inline void clear_is_attack();
  static const int kIsAttackFieldNumber = 1;
  inline bool is_attack() const;
  inline void set_is_attack(bool value);

  // required string enemy_guild_name = 2;
  inline bool has_enemy_guild_name() const;
  inline void clear_enemy_guild_name();
  static const int kEnemyGuildNameFieldNumber = 2;
  inline const ::std::string& enemy_guild_name() const;
  inline void set_enemy_guild_name(const ::std::string& value);
  inline void set_enemy_guild_name(const char* value);
  inline void set_enemy_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_enemy_guild_name();
  inline ::std::string* release_enemy_guild_name();
  inline void set_allocated_enemy_guild_name(::std::string* enemy_guild_name);

  // required uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 attack_total = 4;
  inline bool has_attack_total() const;
  inline void clear_attack_total();
  static const int kAttackTotalFieldNumber = 4;
  inline ::google::protobuf::uint32 attack_total() const;
  inline void set_attack_total(::google::protobuf::uint32 value);

  // required uint32 attack_win = 5;
  inline bool has_attack_win() const;
  inline void clear_attack_win();
  static const int kAttackWinFieldNumber = 5;
  inline ::google::protobuf::uint32 attack_win() const;
  inline void set_attack_win(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientGuildWarEndMsg)
 private:
  inline void set_has_is_attack();
  inline void clear_has_is_attack();
  inline void set_has_enemy_guild_name();
  inline void clear_has_enemy_guild_name();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_attack_total();
  inline void clear_has_attack_total();
  inline void set_has_attack_win();
  inline void clear_has_attack_win();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* enemy_guild_name_;
  bool is_attack_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 attack_total_;
  ::google::protobuf::uint32 attack_win_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientGuildWarEndMsg* default_instance_;
};
// -------------------------------------------------------------------

class MonthCardEle : public ::google::protobuf::Message {
 public:
  MonthCardEle();
  virtual ~MonthCardEle();

  MonthCardEle(const MonthCardEle& from);

  inline MonthCardEle& operator=(const MonthCardEle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonthCardEle& default_instance();

  void Swap(MonthCardEle* other);

  // implements Message ----------------------------------------------

  MonthCardEle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonthCardEle& from);
  void MergeFrom(const MonthCardEle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 startTime = 3;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 repeat = 4;
  inline bool has_repeat() const;
  inline void clear_repeat();
  static const int kRepeatFieldNumber = 4;
  inline ::google::protobuf::uint32 repeat() const;
  inline void set_repeat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.MonthCardEle)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_repeat();
  inline void clear_has_repeat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 repeat_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static MonthCardEle* default_instance_;
};
// -------------------------------------------------------------------

class DbMonthCard : public ::google::protobuf::Message {
 public:
  DbMonthCard();
  virtual ~DbMonthCard();

  DbMonthCard(const DbMonthCard& from);

  inline DbMonthCard& operator=(const DbMonthCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbMonthCard& default_instance();

  void Swap(DbMonthCard* other);

  // implements Message ----------------------------------------------

  DbMonthCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbMonthCard& from);
  void MergeFrom(const DbMonthCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.MonthCardEle card = 1;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline const ::TgsProtocol::MonthCardEle& card(int index) const;
  inline ::TgsProtocol::MonthCardEle* mutable_card(int index);
  inline ::TgsProtocol::MonthCardEle* add_card();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::MonthCardEle >&
      card() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::MonthCardEle >*
      mutable_card();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbMonthCard)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::MonthCardEle > card_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DbMonthCard* default_instance_;
};
// -------------------------------------------------------------------

class PrizeInfo : public ::google::protobuf::Message {
 public:
  PrizeInfo();
  virtual ~PrizeInfo();

  PrizeInfo(const PrizeInfo& from);

  inline PrizeInfo& operator=(const PrizeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrizeInfo& default_instance();

  void Swap(PrizeInfo* other);

  // implements Message ----------------------------------------------

  PrizeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrizeInfo& from);
  void MergeFrom(const PrizeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 got = 2;
  inline bool has_got() const;
  inline void clear_got();
  static const int kGotFieldNumber = 2;
  inline ::google::protobuf::int32 got() const;
  inline void set_got(::google::protobuf::int32 value);

  // required int32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional uint32 reset = 4;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 4;
  inline ::google::protobuf::uint32 reset() const;
  inline void set_reset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.PrizeInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_got();
  inline void clear_has_got();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 got_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::uint32 reset_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static PrizeInfo* default_instance_;
};
// -------------------------------------------------------------------

class PrizeInfoList : public ::google::protobuf::Message {
 public:
  PrizeInfoList();
  virtual ~PrizeInfoList();

  PrizeInfoList(const PrizeInfoList& from);

  inline PrizeInfoList& operator=(const PrizeInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrizeInfoList& default_instance();

  void Swap(PrizeInfoList* other);

  // implements Message ----------------------------------------------

  PrizeInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrizeInfoList& from);
  void MergeFrom(const PrizeInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.PrizeInfo item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::TgsProtocol::PrizeInfo& item(int index) const;
  inline ::TgsProtocol::PrizeInfo* mutable_item(int index);
  inline ::TgsProtocol::PrizeInfo* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PrizeInfo >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PrizeInfo >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TgsProtocol.PrizeInfoList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PrizeInfo > item_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static PrizeInfoList* default_instance_;
};
// -------------------------------------------------------------------

class GuildMapInfo : public ::google::protobuf::Message {
 public:
  GuildMapInfo();
  virtual ~GuildMapInfo();

  GuildMapInfo(const GuildMapInfo& from);

  inline GuildMapInfo& operator=(const GuildMapInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMapInfo& default_instance();

  void Swap(GuildMapInfo* other);

  // implements Message ----------------------------------------------

  GuildMapInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMapInfo& from);
  void MergeFrom(const GuildMapInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 passed_chapterid = 1;
  inline bool has_passed_chapterid() const;
  inline void clear_passed_chapterid();
  static const int kPassedChapteridFieldNumber = 1;
  inline ::google::protobuf::uint32 passed_chapterid() const;
  inline void set_passed_chapterid(::google::protobuf::uint32 value);

  // required uint32 select_chapterid = 2;
  inline bool has_select_chapterid() const;
  inline void clear_select_chapterid();
  static const int kSelectChapteridFieldNumber = 2;
  inline ::google::protobuf::uint32 select_chapterid() const;
  inline void set_select_chapterid(::google::protobuf::uint32 value);

  // optional uint32 map_id = 3;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);

  // optional bool is_map_pass = 4;
  inline bool has_is_map_pass() const;
  inline void clear_is_map_pass();
  static const int kIsMapPassFieldNumber = 4;
  inline bool is_map_pass() const;
  inline void set_is_map_pass(bool value);

  // optional uint32 pass_time = 5;
  inline bool has_pass_time() const;
  inline void clear_pass_time();
  static const int kPassTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 pass_time() const;
  inline void set_pass_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildMapInfo)
 private:
  inline void set_has_passed_chapterid();
  inline void clear_has_passed_chapterid();
  inline void set_has_select_chapterid();
  inline void clear_has_select_chapterid();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_is_map_pass();
  inline void clear_has_is_map_pass();
  inline void set_has_pass_time();
  inline void clear_has_pass_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 passed_chapterid_;
  ::google::protobuf::uint32 select_chapterid_;
  ::google::protobuf::uint32 map_id_;
  bool is_map_pass_;
  ::google::protobuf::uint32 pass_time_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildMapInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMapMonster : public ::google::protobuf::Message {
 public:
  GuildMapMonster();
  virtual ~GuildMapMonster();

  GuildMapMonster(const GuildMapMonster& from);

  inline GuildMapMonster& operator=(const GuildMapMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMapMonster& default_instance();

  void Swap(GuildMapMonster* other);

  // implements Message ----------------------------------------------

  GuildMapMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMapMonster& from);
  void MergeFrom(const GuildMapMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 monster_id = 1;
  inline bool has_monster_id() const;
  inline void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  inline ::google::protobuf::uint32 monster_id() const;
  inline void set_monster_id(::google::protobuf::uint32 value);

  // required uint32 hp_per = 2;
  inline bool has_hp_per() const;
  inline void clear_hp_per();
  static const int kHpPerFieldNumber = 2;
  inline ::google::protobuf::uint32 hp_per() const;
  inline void set_hp_per(::google::protobuf::uint32 value);

  // optional uint32 hp_max = 3;
  inline bool has_hp_max() const;
  inline void clear_hp_max();
  static const int kHpMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 hp_max() const;
  inline void set_hp_max(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildMapMonster)
 private:
  inline void set_has_monster_id();
  inline void clear_has_monster_id();
  inline void set_has_hp_per();
  inline void clear_has_hp_per();
  inline void set_has_hp_max();
  inline void clear_has_hp_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 hp_per_;
  ::google::protobuf::uint32 hp_max_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildMapMonster* default_instance_;
};
// -------------------------------------------------------------------

class GuildMapItem : public ::google::protobuf::Message {
 public:
  GuildMapItem();
  virtual ~GuildMapItem();

  GuildMapItem(const GuildMapItem& from);

  inline GuildMapItem& operator=(const GuildMapItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMapItem& default_instance();

  void Swap(GuildMapItem* other);

  // implements Message ----------------------------------------------

  GuildMapItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMapItem& from);
  void MergeFrom(const GuildMapItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.ClientSource source = 1;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 1;
  inline const ::TgsProtocol::ClientSource& source() const;
  inline ::TgsProtocol::ClientSource* mutable_source();
  inline ::TgsProtocol::ClientSource* release_source();
  inline void set_allocated_source(::TgsProtocol::ClientSource* source);

  // optional uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 photo = 4;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 4;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildMapItem)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_photo();
  inline void clear_has_photo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TgsProtocol::ClientSource* source_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::google::protobuf::uint32 photo_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildMapItem* default_instance_;
};
// -------------------------------------------------------------------

class GuildMapReward : public ::google::protobuf::Message {
 public:
  GuildMapReward();
  virtual ~GuildMapReward();

  GuildMapReward(const GuildMapReward& from);

  inline GuildMapReward& operator=(const GuildMapReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMapReward& default_instance();

  void Swap(GuildMapReward* other);

  // implements Message ----------------------------------------------

  GuildMapReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMapReward& from);
  void MergeFrom(const GuildMapReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.GuildMapItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::GuildMapItem& item(int index) const;
  inline ::TgsProtocol::GuildMapItem* mutable_item(int index);
  inline ::TgsProtocol::GuildMapItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildMapReward)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem > item_;
  ::google::protobuf::uint32 map_id_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildMapReward* default_instance_;
};
// -------------------------------------------------------------------

class DBGuildMap : public ::google::protobuf::Message {
 public:
  DBGuildMap();
  virtual ~DBGuildMap();

  DBGuildMap(const DBGuildMap& from);

  inline DBGuildMap& operator=(const DBGuildMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBGuildMap& default_instance();

  void Swap(DBGuildMap* other);

  // implements Message ----------------------------------------------

  DBGuildMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBGuildMap& from);
  void MergeFrom(const DBGuildMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.GuildMapInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::TgsProtocol::GuildMapInfo& info() const;
  inline ::TgsProtocol::GuildMapInfo* mutable_info();
  inline ::TgsProtocol::GuildMapInfo* release_info();
  inline void set_allocated_info(::TgsProtocol::GuildMapInfo* info);

  // repeated .TgsProtocol.GuildMapMonster monster = 2;
  inline int monster_size() const;
  inline void clear_monster();
  static const int kMonsterFieldNumber = 2;
  inline const ::TgsProtocol::GuildMapMonster& monster(int index) const;
  inline ::TgsProtocol::GuildMapMonster* mutable_monster(int index);
  inline ::TgsProtocol::GuildMapMonster* add_monster();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster >&
      monster() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster >*
      mutable_monster();

  // repeated .TgsProtocol.GuildMapItem item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::TgsProtocol::GuildMapItem& item(int index) const;
  inline ::TgsProtocol::GuildMapItem* mutable_item(int index);
  inline ::TgsProtocol::GuildMapItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBGuildMap)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TgsProtocol::GuildMapInfo* info_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster > monster_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem > item_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBGuildMap* default_instance_;
};
// -------------------------------------------------------------------

class GuildNewMapInfo : public ::google::protobuf::Message {
 public:
  GuildNewMapInfo();
  virtual ~GuildNewMapInfo();

  GuildNewMapInfo(const GuildNewMapInfo& from);

  inline GuildNewMapInfo& operator=(const GuildNewMapInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildNewMapInfo& default_instance();

  void Swap(GuildNewMapInfo* other);

  // implements Message ----------------------------------------------

  GuildNewMapInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildNewMapInfo& from);
  void MergeFrom(const GuildNewMapInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);

  // optional uint32 pass_time = 2;
  inline bool has_pass_time() const;
  inline void clear_pass_time();
  static const int kPassTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 pass_time() const;
  inline void set_pass_time(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.GuildMapMonster monster = 3;
  inline int monster_size() const;
  inline void clear_monster();
  static const int kMonsterFieldNumber = 3;
  inline const ::TgsProtocol::GuildMapMonster& monster(int index) const;
  inline ::TgsProtocol::GuildMapMonster* mutable_monster(int index);
  inline ::TgsProtocol::GuildMapMonster* add_monster();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster >&
      monster() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster >*
      mutable_monster();

  // repeated .TgsProtocol.GuildMapItem item = 4;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline const ::TgsProtocol::GuildMapItem& item(int index) const;
  inline ::TgsProtocol::GuildMapItem* mutable_item(int index);
  inline ::TgsProtocol::GuildMapItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >*
      mutable_item();

  // optional string pass_name = 5;
  inline bool has_pass_name() const;
  inline void clear_pass_name();
  static const int kPassNameFieldNumber = 5;
  inline const ::std::string& pass_name() const;
  inline void set_pass_name(const ::std::string& value);
  inline void set_pass_name(const char* value);
  inline void set_pass_name(const char* value, size_t size);
  inline ::std::string* mutable_pass_name();
  inline ::std::string* release_pass_name();
  inline void set_allocated_pass_name(::std::string* pass_name);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildNewMapInfo)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_pass_time();
  inline void clear_has_pass_time();
  inline void set_has_pass_name();
  inline void clear_has_pass_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 map_id_;
  ::google::protobuf::uint32 pass_time_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster > monster_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem > item_;
  ::std::string* pass_name_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildNewMapInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildChapterMap : public ::google::protobuf::Message {
 public:
  GuildChapterMap();
  virtual ~GuildChapterMap();

  GuildChapterMap(const GuildChapterMap& from);

  inline GuildChapterMap& operator=(const GuildChapterMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildChapterMap& default_instance();

  void Swap(GuildChapterMap* other);

  // implements Message ----------------------------------------------

  GuildChapterMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildChapterMap& from);
  void MergeFrom(const GuildChapterMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.GuildNewMapInfo map_item = 2;
  inline int map_item_size() const;
  inline void clear_map_item();
  static const int kMapItemFieldNumber = 2;
  inline const ::TgsProtocol::GuildNewMapInfo& map_item(int index) const;
  inline ::TgsProtocol::GuildNewMapInfo* mutable_map_item(int index);
  inline ::TgsProtocol::GuildNewMapInfo* add_map_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildNewMapInfo >&
      map_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildNewMapInfo >*
      mutable_map_item();

  // repeated uint64 attack_player = 3;
  inline int attack_player_size() const;
  inline void clear_attack_player();
  static const int kAttackPlayerFieldNumber = 3;
  inline ::google::protobuf::uint64 attack_player(int index) const;
  inline void set_attack_player(int index, ::google::protobuf::uint64 value);
  inline void add_attack_player(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      attack_player() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_attack_player();

  // optional bool self_attacked = 4;
  inline bool has_self_attacked() const;
  inline void clear_self_attacked();
  static const int kSelfAttackedFieldNumber = 4;
  inline bool self_attacked() const;
  inline void set_self_attacked(bool value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildChapterMap)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_self_attacked();
  inline void clear_has_self_attacked();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildNewMapInfo > map_item_;
  ::google::protobuf::uint32 chapter_id_;
  bool self_attacked_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > attack_player_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildChapterMap* default_instance_;
};
// -------------------------------------------------------------------

class GuildChapterInfo : public ::google::protobuf::Message {
 public:
  GuildChapterInfo();
  virtual ~GuildChapterInfo();

  GuildChapterInfo(const GuildChapterInfo& from);

  inline GuildChapterInfo& operator=(const GuildChapterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildChapterInfo& default_instance();

  void Swap(GuildChapterInfo* other);

  // implements Message ----------------------------------------------

  GuildChapterInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildChapterInfo& from);
  void MergeFrom(const GuildChapterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 passed_chapterid = 1;
  inline bool has_passed_chapterid() const;
  inline void clear_passed_chapterid();
  static const int kPassedChapteridFieldNumber = 1;
  inline ::google::protobuf::uint32 passed_chapterid() const;
  inline void set_passed_chapterid(::google::protobuf::uint32 value);

  // optional bool chapter_back = 2;
  inline bool has_chapter_back() const;
  inline void clear_chapter_back();
  static const int kChapterBackFieldNumber = 2;
  inline bool chapter_back() const;
  inline void set_chapter_back(bool value);

  // repeated .TgsProtocol.GuildChapterMap chapter_item = 3;
  inline int chapter_item_size() const;
  inline void clear_chapter_item();
  static const int kChapterItemFieldNumber = 3;
  inline const ::TgsProtocol::GuildChapterMap& chapter_item(int index) const;
  inline ::TgsProtocol::GuildChapterMap* mutable_chapter_item(int index);
  inline ::TgsProtocol::GuildChapterMap* add_chapter_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildChapterMap >&
      chapter_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildChapterMap >*
      mutable_chapter_item();

  // optional uint32 attack_chapterid = 4;
  inline bool has_attack_chapterid() const;
  inline void clear_attack_chapterid();
  static const int kAttackChapteridFieldNumber = 4;
  inline ::google::protobuf::uint32 attack_chapterid() const;
  inline void set_attack_chapterid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildChapterInfo)
 private:
  inline void set_has_passed_chapterid();
  inline void clear_has_passed_chapterid();
  inline void set_has_chapter_back();
  inline void clear_has_chapter_back();
  inline void set_has_attack_chapterid();
  inline void clear_has_attack_chapterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 passed_chapterid_;
  bool chapter_back_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildChapterMap > chapter_item_;
  ::google::protobuf::uint32 attack_chapterid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildChapterInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildTerritoryEvent : public ::google::protobuf::Message {
 public:
  GuildTerritoryEvent();
  virtual ~GuildTerritoryEvent();

  GuildTerritoryEvent(const GuildTerritoryEvent& from);

  inline GuildTerritoryEvent& operator=(const GuildTerritoryEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildTerritoryEvent& default_instance();

  void Swap(GuildTerritoryEvent* other);

  // implements Message ----------------------------------------------

  GuildTerritoryEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildTerritoryEvent& from);
  void MergeFrom(const GuildTerritoryEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required .TgsProtocol.GuildTerritoryEventType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::TgsProtocol::GuildTerritoryEventType type() const;
  inline void set_type(::TgsProtocol::GuildTerritoryEventType value);

  // repeated .TgsProtocol.ClientSource sources = 3;
  inline int sources_size() const;
  inline void clear_sources();
  static const int kSourcesFieldNumber = 3;
  inline const ::TgsProtocol::ClientSource& sources(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_sources(int index);
  inline ::TgsProtocol::ClientSource* add_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_sources();

  // optional uint64 suppress_charid = 4;
  inline bool has_suppress_charid() const;
  inline void clear_suppress_charid();
  static const int kSuppressCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 suppress_charid() const;
  inline void set_suppress_charid(::google::protobuf::uint64 value);

  // optional string suppress_name = 5;
  inline bool has_suppress_name() const;
  inline void clear_suppress_name();
  static const int kSuppressNameFieldNumber = 5;
  inline const ::std::string& suppress_name() const;
  inline void set_suppress_name(const ::std::string& value);
  inline void set_suppress_name(const char* value);
  inline void set_suppress_name(const char* value, size_t size);
  inline ::std::string* mutable_suppress_name();
  inline ::std::string* release_suppress_name();
  inline void set_allocated_suppress_name(::std::string* suppress_name);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildTerritoryEvent)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_suppress_charid();
  inline void clear_has_suppress_charid();
  inline void set_has_suppress_name();
  inline void clear_has_suppress_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int type_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > sources_;
  ::google::protobuf::uint64 suppress_charid_;
  ::std::string* suppress_name_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildTerritoryEvent* default_instance_;
};
// -------------------------------------------------------------------

class GuildTerritoryEventUpdate : public ::google::protobuf::Message {
 public:
  GuildTerritoryEventUpdate();
  virtual ~GuildTerritoryEventUpdate();

  GuildTerritoryEventUpdate(const GuildTerritoryEventUpdate& from);

  inline GuildTerritoryEventUpdate& operator=(const GuildTerritoryEventUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildTerritoryEventUpdate& default_instance();

  void Swap(GuildTerritoryEventUpdate* other);

  // implements Message ----------------------------------------------

  GuildTerritoryEventUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildTerritoryEventUpdate& from);
  void MergeFrom(const GuildTerritoryEventUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required .TgsProtocol.GuildTerritoryEventType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::TgsProtocol::GuildTerritoryEventType type() const;
  inline void set_type(::TgsProtocol::GuildTerritoryEventType value);

  // required uint32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildTerritoryEventUpdate)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int type_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildTerritoryEventUpdate* default_instance_;
};
// -------------------------------------------------------------------

class GuildTerritoryChapter : public ::google::protobuf::Message {
 public:
  GuildTerritoryChapter();
  virtual ~GuildTerritoryChapter();

  GuildTerritoryChapter(const GuildTerritoryChapter& from);

  inline GuildTerritoryChapter& operator=(const GuildTerritoryChapter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildTerritoryChapter& default_instance();

  void Swap(GuildTerritoryChapter* other);

  // implements Message ----------------------------------------------

  GuildTerritoryChapter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildTerritoryChapter& from);
  void MergeFrom(const GuildTerritoryChapter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::uint32 value);

  // required uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 begin_time = 3;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.GuildTerritoryEvent event = 4;
  inline int event_size() const;
  inline void clear_event();
  static const int kEventFieldNumber = 4;
  inline const ::TgsProtocol::GuildTerritoryEvent& event(int index) const;
  inline ::TgsProtocol::GuildTerritoryEvent* mutable_event(int index);
  inline ::TgsProtocol::GuildTerritoryEvent* add_event();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryEvent >&
      event() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryEvent >*
      mutable_event();

  // repeated .TgsProtocol.ClientSource sources = 5;
  inline int sources_size() const;
  inline void clear_sources();
  static const int kSourcesFieldNumber = 5;
  inline const ::TgsProtocol::ClientSource& sources(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_sources(int index);
  inline ::TgsProtocol::ClientSource* add_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_sources();

  // required uint32 source_rate = 6;
  inline bool has_source_rate() const;
  inline void clear_source_rate();
  static const int kSourceRateFieldNumber = 6;
  inline ::google::protobuf::uint32 source_rate() const;
  inline void set_source_rate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildTerritoryChapter)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_source_rate();
  inline void clear_has_source_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapter_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryEvent > event_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 source_rate_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > sources_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildTerritoryChapter* default_instance_;
};
// -------------------------------------------------------------------

class GuildTerritoryInfo : public ::google::protobuf::Message {
 public:
  GuildTerritoryInfo();
  virtual ~GuildTerritoryInfo();

  GuildTerritoryInfo(const GuildTerritoryInfo& from);

  inline GuildTerritoryInfo& operator=(const GuildTerritoryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildTerritoryInfo& default_instance();

  void Swap(GuildTerritoryInfo* other);

  // implements Message ----------------------------------------------

  GuildTerritoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildTerritoryInfo& from);
  void MergeFrom(const GuildTerritoryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 passed_chapterid = 1;
  inline bool has_passed_chapterid() const;
  inline void clear_passed_chapterid();
  static const int kPassedChapteridFieldNumber = 1;
  inline ::google::protobuf::uint32 passed_chapterid() const;
  inline void set_passed_chapterid(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.GuildTerritoryChapter item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::GuildTerritoryChapter& item(int index) const;
  inline ::TgsProtocol::GuildTerritoryChapter* mutable_item(int index);
  inline ::TgsProtocol::GuildTerritoryChapter* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryChapter >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryChapter >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildTerritoryInfo)
 private:
  inline void set_has_passed_chapterid();
  inline void clear_has_passed_chapterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryChapter > item_;
  ::google::protobuf::uint32 passed_chapterid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildTerritoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberTerritoryInfo : public ::google::protobuf::Message {
 public:
  GuildMemberTerritoryInfo();
  virtual ~GuildMemberTerritoryInfo();

  GuildMemberTerritoryInfo(const GuildMemberTerritoryInfo& from);

  inline GuildMemberTerritoryInfo& operator=(const GuildMemberTerritoryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberTerritoryInfo& default_instance();

  void Swap(GuildMemberTerritoryInfo* other);

  // implements Message ----------------------------------------------

  GuildMemberTerritoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberTerritoryInfo& from);
  void MergeFrom(const GuildMemberTerritoryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 photo = 2;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 2;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 territoryCount = 5;
  inline bool has_territorycount() const;
  inline void clear_territorycount();
  static const int kTerritoryCountFieldNumber = 5;
  inline ::google::protobuf::uint32 territorycount() const;
  inline void set_territorycount(::google::protobuf::uint32 value);

  // required uint32 territoryRiotCount = 6;
  inline bool has_territoryriotcount() const;
  inline void clear_territoryriotcount();
  static const int kTerritoryRiotCountFieldNumber = 6;
  inline ::google::protobuf::uint32 territoryriotcount() const;
  inline void set_territoryriotcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GuildMemberTerritoryInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_territorycount();
  inline void clear_has_territorycount();
  inline void set_has_territoryriotcount();
  inline void clear_has_territoryriotcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 level_;
  ::std::string* name_;
  ::google::protobuf::uint32 territorycount_;
  ::google::protobuf::uint32 territoryriotcount_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberTerritoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class PlayerTerritoryEvent : public ::google::protobuf::Message {
 public:
  PlayerTerritoryEvent();
  virtual ~PlayerTerritoryEvent();

  PlayerTerritoryEvent(const PlayerTerritoryEvent& from);

  inline PlayerTerritoryEvent& operator=(const PlayerTerritoryEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTerritoryEvent& default_instance();

  void Swap(PlayerTerritoryEvent* other);

  // implements Message ----------------------------------------------

  PlayerTerritoryEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerTerritoryEvent& from);
  void MergeFrom(const PlayerTerritoryEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required .TgsProtocol.PlayerTerritoryEventType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::TgsProtocol::PlayerTerritoryEventType type() const;
  inline void set_type(::TgsProtocol::PlayerTerritoryEventType value);

  // repeated .TgsProtocol.ClientSource sources = 3;
  inline int sources_size() const;
  inline void clear_sources();
  static const int kSourcesFieldNumber = 3;
  inline const ::TgsProtocol::ClientSource& sources(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_sources(int index);
  inline ::TgsProtocol::ClientSource* add_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_sources();

  // optional uint64 suppress_charid = 4;
  inline bool has_suppress_charid() const;
  inline void clear_suppress_charid();
  static const int kSuppressCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 suppress_charid() const;
  inline void set_suppress_charid(::google::protobuf::uint64 value);

  // optional string suppress_name = 5;
  inline bool has_suppress_name() const;
  inline void clear_suppress_name();
  static const int kSuppressNameFieldNumber = 5;
  inline const ::std::string& suppress_name() const;
  inline void set_suppress_name(const ::std::string& value);
  inline void set_suppress_name(const char* value);
  inline void set_suppress_name(const char* value, size_t size);
  inline ::std::string* mutable_suppress_name();
  inline ::std::string* release_suppress_name();
  inline void set_allocated_suppress_name(::std::string* suppress_name);

  // optional uint32 begin_time = 6;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // optional uint32 rate = 7;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 7;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientSource suppress_sources = 8;
  inline int suppress_sources_size() const;
  inline void clear_suppress_sources();
  static const int kSuppressSourcesFieldNumber = 8;
  inline const ::TgsProtocol::ClientSource& suppress_sources(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_suppress_sources(int index);
  inline ::TgsProtocol::ClientSource* add_suppress_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      suppress_sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_suppress_sources();

  // optional uint32 patrol_words = 9;
  inline bool has_patrol_words() const;
  inline void clear_patrol_words();
  static const int kPatrolWordsFieldNumber = 9;
  inline ::google::protobuf::uint32 patrol_words() const;
  inline void set_patrol_words(::google::protobuf::uint32 value);

  // optional uint32 suppress_words = 10;
  inline bool has_suppress_words() const;
  inline void clear_suppress_words();
  static const int kSuppressWordsFieldNumber = 10;
  inline ::google::protobuf::uint32 suppress_words() const;
  inline void set_suppress_words(::google::protobuf::uint32 value);

  // optional uint32 suppress_time = 11;
  inline bool has_suppress_time() const;
  inline void clear_suppress_time();
  static const int kSuppressTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 suppress_time() const;
  inline void set_suppress_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.PlayerTerritoryEvent)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_suppress_charid();
  inline void clear_has_suppress_charid();
  inline void set_has_suppress_name();
  inline void clear_has_suppress_name();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_patrol_words();
  inline void clear_has_patrol_words();
  inline void set_has_suppress_words();
  inline void clear_has_suppress_words();
  inline void set_has_suppress_time();
  inline void clear_has_suppress_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int type_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > sources_;
  ::google::protobuf::uint64 suppress_charid_;
  ::std::string* suppress_name_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 rate_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > suppress_sources_;
  ::google::protobuf::uint32 patrol_words_;
  ::google::protobuf::uint32 suppress_words_;
  ::google::protobuf::uint32 suppress_time_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static PlayerTerritoryEvent* default_instance_;
};
// -------------------------------------------------------------------

class PlayerTerritoryChapter : public ::google::protobuf::Message {
 public:
  PlayerTerritoryChapter();
  virtual ~PlayerTerritoryChapter();

  PlayerTerritoryChapter(const PlayerTerritoryChapter& from);

  inline PlayerTerritoryChapter& operator=(const PlayerTerritoryChapter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTerritoryChapter& default_instance();

  void Swap(PlayerTerritoryChapter* other);

  // implements Message ----------------------------------------------

  PlayerTerritoryChapter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerTerritoryChapter& from);
  void MergeFrom(const PlayerTerritoryChapter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::uint32 value);

  // required uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 begin_time = 3;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // required uint32 end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 end_time() const;
  inline void set_end_time(::google::protobuf::uint32 value);

  // required uint32 patrol_type = 5;
  inline bool has_patrol_type() const;
  inline void clear_patrol_type();
  static const int kPatrolTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 patrol_type() const;
  inline void set_patrol_type(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.PlayerTerritoryEvent event = 6;
  inline int event_size() const;
  inline void clear_event();
  static const int kEventFieldNumber = 6;
  inline const ::TgsProtocol::PlayerTerritoryEvent& event(int index) const;
  inline ::TgsProtocol::PlayerTerritoryEvent* mutable_event(int index);
  inline ::TgsProtocol::PlayerTerritoryEvent* add_event();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryEvent >&
      event() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryEvent >*
      mutable_event();

  // repeated .TgsProtocol.ClientSource sources = 7;
  inline int sources_size() const;
  inline void clear_sources();
  static const int kSourcesFieldNumber = 7;
  inline const ::TgsProtocol::ClientSource& sources(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_sources(int index);
  inline ::TgsProtocol::ClientSource* add_sources();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      sources() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_sources();

  // required uint32 next_event_time = 8;
  inline bool has_next_event_time() const;
  inline void clear_next_event_time();
  static const int kNextEventTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 next_event_time() const;
  inline void set_next_event_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.PlayerTerritoryChapter)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_patrol_type();
  inline void clear_has_patrol_type();
  inline void set_has_next_event_time();
  inline void clear_has_next_event_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chapter_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryEvent > event_;
  ::google::protobuf::uint32 patrol_type_;
  ::google::protobuf::uint32 next_event_time_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > sources_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static PlayerTerritoryChapter* default_instance_;
};
// -------------------------------------------------------------------

class TerritorySkill : public ::google::protobuf::Message {
 public:
  TerritorySkill();
  virtual ~TerritorySkill();

  TerritorySkill(const TerritorySkill& from);

  inline TerritorySkill& operator=(const TerritorySkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TerritorySkill& default_instance();

  void Swap(TerritorySkill* other);

  // implements Message ----------------------------------------------

  TerritorySkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TerritorySkill& from);
  void MergeFrom(const TerritorySkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.TerritorySkill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static TerritorySkill* default_instance_;
};
// -------------------------------------------------------------------

class PlayerTerritoryInfo : public ::google::protobuf::Message {
 public:
  PlayerTerritoryInfo();
  virtual ~PlayerTerritoryInfo();

  PlayerTerritoryInfo(const PlayerTerritoryInfo& from);

  inline PlayerTerritoryInfo& operator=(const PlayerTerritoryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTerritoryInfo& default_instance();

  void Swap(PlayerTerritoryInfo* other);

  // implements Message ----------------------------------------------

  PlayerTerritoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerTerritoryInfo& from);
  void MergeFrom(const PlayerTerritoryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 passed_chapterid = 1;
  inline bool has_passed_chapterid() const;
  inline void clear_passed_chapterid();
  static const int kPassedChapteridFieldNumber = 1;
  inline ::google::protobuf::uint32 passed_chapterid() const;
  inline void set_passed_chapterid(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.PlayerTerritoryChapter item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::PlayerTerritoryChapter& item(int index) const;
  inline ::TgsProtocol::PlayerTerritoryChapter* mutable_item(int index);
  inline ::TgsProtocol::PlayerTerritoryChapter* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryChapter >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryChapter >*
      mutable_item();

  // repeated .TgsProtocol.TerritorySkill skill = 3;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 3;
  inline const ::TgsProtocol::TerritorySkill& skill(int index) const;
  inline ::TgsProtocol::TerritorySkill* mutable_skill(int index);
  inline ::TgsProtocol::TerritorySkill* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TerritorySkill >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TerritorySkill >*
      mutable_skill();

  // @@protoc_insertion_point(class_scope:TgsProtocol.PlayerTerritoryInfo)
 private:
  inline void set_has_passed_chapterid();
  inline void clear_has_passed_chapterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryChapter > item_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TerritorySkill > skill_;
  ::google::protobuf::uint32 passed_chapterid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static PlayerTerritoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendTerritoryInfo : public ::google::protobuf::Message {
 public:
  FriendTerritoryInfo();
  virtual ~FriendTerritoryInfo();

  FriendTerritoryInfo(const FriendTerritoryInfo& from);

  inline FriendTerritoryInfo& operator=(const FriendTerritoryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendTerritoryInfo& default_instance();

  void Swap(FriendTerritoryInfo* other);

  // implements Message ----------------------------------------------

  FriendTerritoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendTerritoryInfo& from);
  void MergeFrom(const FriendTerritoryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 photo = 2;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 2;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 territoryCount = 5;
  inline bool has_territorycount() const;
  inline void clear_territorycount();
  static const int kTerritoryCountFieldNumber = 5;
  inline ::google::protobuf::uint32 territorycount() const;
  inline void set_territorycount(::google::protobuf::uint32 value);

  // required uint32 territoryRiotCount = 6;
  inline bool has_territoryriotcount() const;
  inline void clear_territoryriotcount();
  static const int kTerritoryRiotCountFieldNumber = 6;
  inline ::google::protobuf::uint32 territoryriotcount() const;
  inline void set_territoryriotcount(::google::protobuf::uint32 value);

  // optional uint32 patrolCount = 7;
  inline bool has_patrolcount() const;
  inline void clear_patrolcount();
  static const int kPatrolCountFieldNumber = 7;
  inline ::google::protobuf::uint32 patrolcount() const;
  inline void set_patrolcount(::google::protobuf::uint32 value);

  // optional uint32 star = 8;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 8;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 offlineTime = 9;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.FriendTerritoryInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_territorycount();
  inline void clear_has_territorycount();
  inline void set_has_territoryriotcount();
  inline void clear_has_territoryriotcount();
  inline void set_has_patrolcount();
  inline void clear_has_patrolcount();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 level_;
  ::std::string* name_;
  ::google::protobuf::uint32 territorycount_;
  ::google::protobuf::uint32 territoryriotcount_;
  ::google::protobuf::uint32 patrolcount_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 offlinetime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static FriendTerritoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class ClientNoticeInfo : public ::google::protobuf::Message {
 public:
  ClientNoticeInfo();
  virtual ~ClientNoticeInfo();

  ClientNoticeInfo(const ClientNoticeInfo& from);

  inline ClientNoticeInfo& operator=(const ClientNoticeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientNoticeInfo& default_instance();

  void Swap(ClientNoticeInfo* other);

  // implements Message ----------------------------------------------

  ClientNoticeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientNoticeInfo& from);
  void MergeFrom(const ClientNoticeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 confid = 2;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 2;
  inline ::google::protobuf::uint32 confid() const;
  inline void set_confid(::google::protobuf::uint32 value);

  // required .TgsProtocol.eNoticeType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::TgsProtocol::eNoticeType type() const;
  inline void set_type(::TgsProtocol::eNoticeType value);

  // required uint32 templateid = 4;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateidFieldNumber = 4;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // optional uint32 value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional string playername = 6;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 6;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional uint32 playerstar = 7;
  inline bool has_playerstar() const;
  inline void clear_playerstar();
  static const int kPlayerstarFieldNumber = 7;
  inline ::google::protobuf::uint32 playerstar() const;
  inline void set_playerstar(::google::protobuf::uint32 value);

  // required bool hasitem = 8;
  inline bool has_hasitem() const;
  inline void clear_hasitem();
  static const int kHasitemFieldNumber = 8;
  inline bool hasitem() const;
  inline void set_hasitem(bool value);

  // required uint32 wordsid = 9;
  inline bool has_wordsid() const;
  inline void clear_wordsid();
  static const int kWordsidFieldNumber = 9;
  inline ::google::protobuf::uint32 wordsid() const;
  inline void set_wordsid(::google::protobuf::uint32 value);

  // optional uint32 reason = 10;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 10;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);

  // optional uint32 charid = 11;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 11;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // repeated string str = 12;
  inline int str_size() const;
  inline void clear_str();
  static const int kStrFieldNumber = 12;
  inline const ::std::string& str(int index) const;
  inline ::std::string* mutable_str(int index);
  inline void set_str(int index, const ::std::string& value);
  inline void set_str(int index, const char* value);
  inline void set_str(int index, const char* value, size_t size);
  inline ::std::string* add_str();
  inline void add_str(const ::std::string& value);
  inline void add_str(const char* value);
  inline void add_str(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& str() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_str();

  // required .TgsProtocol.SourceType sourcetype = 13;
  inline bool has_sourcetype() const;
  inline void clear_sourcetype();
  static const int kSourcetypeFieldNumber = 13;
  inline ::TgsProtocol::SourceType sourcetype() const;
  inline void set_sourcetype(::TgsProtocol::SourceType value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientNoticeInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_playerstar();
  inline void clear_has_playerstar();
  inline void set_has_hasitem();
  inline void clear_has_hasitem();
  inline void set_has_wordsid();
  inline void clear_has_wordsid();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_sourcetype();
  inline void clear_has_sourcetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 confid_;
  int type_;
  ::google::protobuf::uint32 templateid_;
  ::std::string* playername_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 playerstar_;
  bool hasitem_;
  ::google::protobuf::uint32 wordsid_;
  ::google::protobuf::uint32 reason_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> str_;
  int sourcetype_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientNoticeInfo* default_instance_;
};
// -------------------------------------------------------------------

class DbTreasureInfo : public ::google::protobuf::Message {
 public:
  DbTreasureInfo();
  virtual ~DbTreasureInfo();

  DbTreasureInfo(const DbTreasureInfo& from);

  inline DbTreasureInfo& operator=(const DbTreasureInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbTreasureInfo& default_instance();

  void Swap(DbTreasureInfo* other);

  // implements Message ----------------------------------------------

  DbTreasureInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbTreasureInfo& from);
  void MergeFrom(const DbTreasureInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required string playername = 3;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 3;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // repeated uint32 itemlist = 4;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemlistFieldNumber = 4;
  inline ::google::protobuf::uint32 itemlist(int index) const;
  inline void set_itemlist(int index, ::google::protobuf::uint32 value);
  inline void add_itemlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      itemlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbTreasureInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_playername();
  inline void clear_has_playername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 level_;
  ::std::string* playername_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemlist_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DbTreasureInfo* default_instance_;
};
// -------------------------------------------------------------------

class DbDropEle : public ::google::protobuf::Message {
 public:
  DbDropEle();
  virtual ~DbDropEle();

  DbDropEle(const DbDropEle& from);

  inline DbDropEle& operator=(const DbDropEle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbDropEle& default_instance();

  void Swap(DbDropEle* other);

  // implements Message ----------------------------------------------

  DbDropEle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbDropEle& from);
  void MergeFrom(const DbDropEle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // required uint32 val = 3;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 3;
  inline ::google::protobuf::uint32 val() const;
  inline void set_val(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbDropEle)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 val_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DbDropEle* default_instance_;
};
// -------------------------------------------------------------------

class DbDrop : public ::google::protobuf::Message {
 public:
  DbDrop();
  virtual ~DbDrop();

  DbDrop(const DbDrop& from);

  inline DbDrop& operator=(const DbDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbDrop& default_instance();

  void Swap(DbDrop* other);

  // implements Message ----------------------------------------------

  DbDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbDrop& from);
  void MergeFrom(const DbDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DbDropEle one = 1;
  inline int one_size() const;
  inline void clear_one();
  static const int kOneFieldNumber = 1;
  inline const ::TgsProtocol::DbDropEle& one(int index) const;
  inline ::TgsProtocol::DbDropEle* mutable_one(int index);
  inline ::TgsProtocol::DbDropEle* add_one();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbDropEle >&
      one() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbDropEle >*
      mutable_one();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbDrop)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbDropEle > one_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DbDrop* default_instance_;
};
// -------------------------------------------------------------------

class RobotEffect : public ::google::protobuf::Message {
 public:
  RobotEffect();
  virtual ~RobotEffect();

  RobotEffect(const RobotEffect& from);

  inline RobotEffect& operator=(const RobotEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotEffect& default_instance();

  void Swap(RobotEffect* other);

  // implements Message ----------------------------------------------

  RobotEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotEffect& from);
  void MergeFrom(const RobotEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint64 effect = 2;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 2;
  inline ::google::protobuf::uint64 effect() const;
  inline void set_effect(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.RobotEffect)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_effect();
  inline void clear_has_effect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 effect_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static RobotEffect* default_instance_;
};
// -------------------------------------------------------------------

class ClientChargeShopConf : public ::google::protobuf::Message {
 public:
  ClientChargeShopConf();
  virtual ~ClientChargeShopConf();

  ClientChargeShopConf(const ClientChargeShopConf& from);

  inline ClientChargeShopConf& operator=(const ClientChargeShopConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientChargeShopConf& default_instance();

  void Swap(ClientChargeShopConf* other);

  // implements Message ----------------------------------------------

  ClientChargeShopConf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientChargeShopConf& from);
  void MergeFrom(const ClientChargeShopConf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 goodsid = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsidFieldNumber = 1;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // required uint32 shopType = 2;
  inline bool has_shoptype() const;
  inline void clear_shoptype();
  static const int kShopTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 shoptype() const;
  inline void set_shoptype(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientSource buy = 3;
  inline int buy_size() const;
  inline void clear_buy();
  static const int kBuyFieldNumber = 3;
  inline const ::TgsProtocol::ClientSource& buy(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_buy(int index);
  inline ::TgsProtocol::ClientSource* add_buy();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      buy() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_buy();

  // required .TgsProtocol.ClientSource cost = 4;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 4;
  inline const ::TgsProtocol::ClientSource& cost() const;
  inline ::TgsProtocol::ClientSource* mutable_cost();
  inline ::TgsProtocol::ClientSource* release_cost();
  inline void set_allocated_cost(::TgsProtocol::ClientSource* cost);

  // required uint32 status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 platformtype = 6;
  inline bool has_platformtype() const;
  inline void clear_platformtype();
  static const int kPlatformtypeFieldNumber = 6;
  inline ::google::protobuf::uint32 platformtype() const;
  inline void set_platformtype(::google::protobuf::uint32 value);

  // required bytes limitNumber = 7;
  inline bool has_limitnumber() const;
  inline void clear_limitnumber();
  static const int kLimitNumberFieldNumber = 7;
  inline const ::std::string& limitnumber() const;
  inline void set_limitnumber(const ::std::string& value);
  inline void set_limitnumber(const char* value);
  inline void set_limitnumber(const void* value, size_t size);
  inline ::std::string* mutable_limitnumber();
  inline ::std::string* release_limitnumber();
  inline void set_allocated_limitnumber(::std::string* limitnumber);

  // required uint32 limitType = 8;
  inline bool has_limittype() const;
  inline void clear_limittype();
  static const int kLimitTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 limittype() const;
  inline void set_limittype(::google::protobuf::uint32 value);

  // required uint32 prizeFloat = 9;
  inline bool has_prizefloat() const;
  inline void clear_prizefloat();
  static const int kPrizeFloatFieldNumber = 9;
  inline ::google::protobuf::uint32 prizefloat() const;
  inline void set_prizefloat(::google::protobuf::uint32 value);

  // required uint32 isDouble = 10;
  inline bool has_isdouble() const;
  inline void clear_isdouble();
  static const int kIsDoubleFieldNumber = 10;
  inline ::google::protobuf::uint32 isdouble() const;
  inline void set_isdouble(::google::protobuf::uint32 value);

  // required bytes IOSGoodId = 11;
  inline bool has_iosgoodid() const;
  inline void clear_iosgoodid();
  static const int kIOSGoodIdFieldNumber = 11;
  inline const ::std::string& iosgoodid() const;
  inline void set_iosgoodid(const ::std::string& value);
  inline void set_iosgoodid(const char* value);
  inline void set_iosgoodid(const void* value, size_t size);
  inline ::std::string* mutable_iosgoodid();
  inline ::std::string* release_iosgoodid();
  inline void set_allocated_iosgoodid(::std::string* iosgoodid);

  // required bytes AndroidGoodId = 12;
  inline bool has_androidgoodid() const;
  inline void clear_androidgoodid();
  static const int kAndroidGoodIdFieldNumber = 12;
  inline const ::std::string& androidgoodid() const;
  inline void set_androidgoodid(const ::std::string& value);
  inline void set_androidgoodid(const char* value);
  inline void set_androidgoodid(const void* value, size_t size);
  inline ::std::string* mutable_androidgoodid();
  inline ::std::string* release_androidgoodid();
  inline void set_allocated_androidgoodid(::std::string* androidgoodid);

  // required bytes currency = 13;
  inline bool has_currency() const;
  inline void clear_currency();
  static const int kCurrencyFieldNumber = 13;
  inline const ::std::string& currency() const;
  inline void set_currency(const ::std::string& value);
  inline void set_currency(const char* value);
  inline void set_currency(const void* value, size_t size);
  inline ::std::string* mutable_currency();
  inline ::std::string* release_currency();
  inline void set_allocated_currency(::std::string* currency);

  // required uint32 goodGift = 14;
  inline bool has_goodgift() const;
  inline void clear_goodgift();
  static const int kGoodGiftFieldNumber = 14;
  inline ::google::protobuf::uint32 goodgift() const;
  inline void set_goodgift(::google::protobuf::uint32 value);

  // required bytes itemIcon = 15;
  inline bool has_itemicon() const;
  inline void clear_itemicon();
  static const int kItemIconFieldNumber = 15;
  inline const ::std::string& itemicon() const;
  inline void set_itemicon(const ::std::string& value);
  inline void set_itemicon(const char* value);
  inline void set_itemicon(const void* value, size_t size);
  inline ::std::string* mutable_itemicon();
  inline ::std::string* release_itemicon();
  inline void set_allocated_itemicon(::std::string* itemicon);

  // required bytes collectionIcon = 16;
  inline bool has_collectionicon() const;
  inline void clear_collectionicon();
  static const int kCollectionIconFieldNumber = 16;
  inline const ::std::string& collectionicon() const;
  inline void set_collectionicon(const ::std::string& value);
  inline void set_collectionicon(const char* value);
  inline void set_collectionicon(const void* value, size_t size);
  inline ::std::string* mutable_collectionicon();
  inline ::std::string* release_collectionicon();
  inline void set_allocated_collectionicon(::std::string* collectionicon);

  // required bytes strName = 17;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 17;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const void* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required bytes strDescription = 18;
  inline bool has_strdescription() const;
  inline void clear_strdescription();
  static const int kStrDescriptionFieldNumber = 18;
  inline const ::std::string& strdescription() const;
  inline void set_strdescription(const ::std::string& value);
  inline void set_strdescription(const char* value);
  inline void set_strdescription(const void* value, size_t size);
  inline ::std::string* mutable_strdescription();
  inline ::std::string* release_strdescription();
  inline void set_allocated_strdescription(::std::string* strdescription);

  // required uint32 startTime = 19;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 19;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 endTime = 20;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 20;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 monthCardType = 21;
  inline bool has_monthcardtype() const;
  inline void clear_monthcardtype();
  static const int kMonthCardTypeFieldNumber = 21;
  inline ::google::protobuf::uint32 monthcardtype() const;
  inline void set_monthcardtype(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientSource extra = 22;
  inline int extra_size() const;
  inline void clear_extra();
  static const int kExtraFieldNumber = 22;
  inline const ::TgsProtocol::ClientSource& extra(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_extra(int index);
  inline ::TgsProtocol::ClientSource* add_extra();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      extra() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_extra();

  // optional .TgsProtocol.ClientSource oldPrice = 23;
  inline bool has_oldprice() const;
  inline void clear_oldprice();
  static const int kOldPriceFieldNumber = 23;
  inline const ::TgsProtocol::ClientSource& oldprice() const;
  inline ::TgsProtocol::ClientSource* mutable_oldprice();
  inline ::TgsProtocol::ClientSource* release_oldprice();
  inline void set_allocated_oldprice(::TgsProtocol::ClientSource* oldprice);

  // optional uint32 rate = 24;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 24;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // optional uint32 monthCardPrize = 25;
  inline bool has_monthcardprize() const;
  inline void clear_monthcardprize();
  static const int kMonthCardPrizeFieldNumber = 25;
  inline ::google::protobuf::uint32 monthcardprize() const;
  inline void set_monthcardprize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientChargeShopConf)
 private:
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_shoptype();
  inline void clear_has_shoptype();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_platformtype();
  inline void clear_has_platformtype();
  inline void set_has_limitnumber();
  inline void clear_has_limitnumber();
  inline void set_has_limittype();
  inline void clear_has_limittype();
  inline void set_has_prizefloat();
  inline void clear_has_prizefloat();
  inline void set_has_isdouble();
  inline void clear_has_isdouble();
  inline void set_has_iosgoodid();
  inline void clear_has_iosgoodid();
  inline void set_has_androidgoodid();
  inline void clear_has_androidgoodid();
  inline void set_has_currency();
  inline void clear_has_currency();
  inline void set_has_goodgift();
  inline void clear_has_goodgift();
  inline void set_has_itemicon();
  inline void clear_has_itemicon();
  inline void set_has_collectionicon();
  inline void clear_has_collectionicon();
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_strdescription();
  inline void clear_has_strdescription();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_monthcardtype();
  inline void clear_has_monthcardtype();
  inline void set_has_oldprice();
  inline void clear_has_oldprice();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_monthcardprize();
  inline void clear_has_monthcardprize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 shoptype_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > buy_;
  ::TgsProtocol::ClientSource* cost_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 platformtype_;
  ::std::string* limitnumber_;
  ::google::protobuf::uint32 limittype_;
  ::google::protobuf::uint32 prizefloat_;
  ::std::string* iosgoodid_;
  ::std::string* androidgoodid_;
  ::google::protobuf::uint32 isdouble_;
  ::google::protobuf::uint32 goodgift_;
  ::std::string* currency_;
  ::std::string* itemicon_;
  ::std::string* collectionicon_;
  ::std::string* strname_;
  ::std::string* strdescription_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > extra_;
  ::google::protobuf::uint32 monthcardtype_;
  ::google::protobuf::uint32 rate_;
  ::TgsProtocol::ClientSource* oldprice_;
  ::google::protobuf::uint32 monthcardprize_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientChargeShopConf* default_instance_;
};
// -------------------------------------------------------------------

class ClientSevenDayRankEle : public ::google::protobuf::Message {
 public:
  ClientSevenDayRankEle();
  virtual ~ClientSevenDayRankEle();

  ClientSevenDayRankEle(const ClientSevenDayRankEle& from);

  inline ClientSevenDayRankEle& operator=(const ClientSevenDayRankEle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientSevenDayRankEle& default_instance();

  void Swap(ClientSevenDayRankEle* other);

  // implements Message ----------------------------------------------

  ClientSevenDayRankEle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientSevenDayRankEle& from);
  void MergeFrom(const ClientSevenDayRankEle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // required uint32 photo = 5;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 5;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientSevenDayRankEle)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 value_;
  ::std::string* name_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientSevenDayRankEle* default_instance_;
};
// -------------------------------------------------------------------

class ClientSevenDayRank : public ::google::protobuf::Message {
 public:
  ClientSevenDayRank();
  virtual ~ClientSevenDayRank();

  ClientSevenDayRank(const ClientSevenDayRank& from);

  inline ClientSevenDayRank& operator=(const ClientSevenDayRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientSevenDayRank& default_instance();

  void Swap(ClientSevenDayRank* other);

  // implements Message ----------------------------------------------

  ClientSevenDayRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientSevenDayRank& from);
  void MergeFrom(const ClientSevenDayRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // required uint32 seconds = 2;
  inline bool has_seconds() const;
  inline void clear_seconds();
  static const int kSecondsFieldNumber = 2;
  inline ::google::protobuf::uint32 seconds() const;
  inline void set_seconds(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientSevenDayRankEle item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::TgsProtocol::ClientSevenDayRankEle& item(int index) const;
  inline ::TgsProtocol::ClientSevenDayRankEle* mutable_item(int index);
  inline ::TgsProtocol::ClientSevenDayRankEle* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSevenDayRankEle >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSevenDayRankEle >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientSevenDayRank)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_seconds();
  inline void clear_has_seconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 seconds_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSevenDayRankEle > item_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientSevenDayRank* default_instance_;
};
// -------------------------------------------------------------------

class DbNoticeEle : public ::google::protobuf::Message {
 public:
  DbNoticeEle();
  virtual ~DbNoticeEle();

  DbNoticeEle(const DbNoticeEle& from);

  inline DbNoticeEle& operator=(const DbNoticeEle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbNoticeEle& default_instance();

  void Swap(DbNoticeEle* other);

  // implements Message ----------------------------------------------

  DbNoticeEle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbNoticeEle& from);
  void MergeFrom(const DbNoticeEle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required .TgsProtocol.eNoticeType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::TgsProtocol::eNoticeType type() const;
  inline void set_type(::TgsProtocol::eNoticeType value);

  // required uint32 values = 3;
  inline bool has_values() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline ::google::protobuf::uint32 values() const;
  inline void set_values(::google::protobuf::uint32 value);

  // required uint32 wordsid = 4;
  inline bool has_wordsid() const;
  inline void clear_wordsid();
  static const int kWordsidFieldNumber = 4;
  inline ::google::protobuf::uint32 wordsid() const;
  inline void set_wordsid(::google::protobuf::uint32 value);

  // required uint32 pro = 5;
  inline bool has_pro() const;
  inline void clear_pro();
  static const int kProFieldNumber = 5;
  inline ::google::protobuf::uint32 pro() const;
  inline void set_pro(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ClientSource reward = 6;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 6;
  inline const ::TgsProtocol::ClientSource& reward(int index) const;
  inline ::TgsProtocol::ClientSource* mutable_reward(int index);
  inline ::TgsProtocol::ClientSource* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
      mutable_reward();

  // required uint32 number = 7;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 7;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // required uint32 timeout = 8;
  inline bool has_timeout() const;
  inline void clear_timeout();
  static const int kTimeoutFieldNumber = 8;
  inline ::google::protobuf::uint32 timeout() const;
  inline void set_timeout(::google::protobuf::uint32 value);

  // required uint32 reason = 9;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 9;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);

  // required uint32 rate = 10;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 10;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // required uint32 sendNumber = 11;
  inline bool has_sendnumber() const;
  inline void clear_sendnumber();
  static const int kSendNumberFieldNumber = 11;
  inline ::google::protobuf::uint32 sendnumber() const;
  inline void set_sendnumber(::google::protobuf::uint32 value);

  // required uint32 createTime = 12;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // required string content = 13;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 13;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbNoticeEle)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_values();
  inline void clear_has_values();
  inline void set_has_wordsid();
  inline void clear_has_wordsid();
  inline void set_has_pro();
  inline void clear_has_pro();
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_timeout();
  inline void clear_has_timeout();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_sendnumber();
  inline void clear_has_sendnumber();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int type_;
  ::google::protobuf::uint32 values_;
  ::google::protobuf::uint32 wordsid_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource > reward_;
  ::google::protobuf::uint32 pro_;
  ::google::protobuf::uint32 number_;
  ::google::protobuf::uint32 timeout_;
  ::google::protobuf::uint32 reason_;
  ::google::protobuf::uint32 rate_;
  ::google::protobuf::uint32 sendnumber_;
  ::std::string* content_;
  ::google::protobuf::uint32 createtime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DbNoticeEle* default_instance_;
};
// -------------------------------------------------------------------

class OptGlobal : public ::google::protobuf::Message {
 public:
  OptGlobal();
  virtual ~OptGlobal();

  OptGlobal(const OptGlobal& from);

  inline OptGlobal& operator=(const OptGlobal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OptGlobal& default_instance();

  void Swap(OptGlobal* other);

  // implements Message ----------------------------------------------

  OptGlobal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OptGlobal& from);
  void MergeFrom(const OptGlobal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DbNoticeEle notice = 1;
  inline int notice_size() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 1;
  inline const ::TgsProtocol::DbNoticeEle& notice(int index) const;
  inline ::TgsProtocol::DbNoticeEle* mutable_notice(int index);
  inline ::TgsProtocol::DbNoticeEle* add_notice();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbNoticeEle >&
      notice() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbNoticeEle >*
      mutable_notice();

  // @@protoc_insertion_point(class_scope:TgsProtocol.OptGlobal)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbNoticeEle > notice_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static OptGlobal* default_instance_;
};
// -------------------------------------------------------------------

class ClientContinueCharge : public ::google::protobuf::Message {
 public:
  ClientContinueCharge();
  virtual ~ClientContinueCharge();

  ClientContinueCharge(const ClientContinueCharge& from);

  inline ClientContinueCharge& operator=(const ClientContinueCharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientContinueCharge& default_instance();

  void Swap(ClientContinueCharge* other);

  // implements Message ----------------------------------------------

  ClientContinueCharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientContinueCharge& from);
  void MergeFrom(const ClientContinueCharge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 cd = 2;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 2;
  inline ::google::protobuf::uint32 cd() const;
  inline void set_cd(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated uint32 line = 4;
  inline int line_size() const;
  inline void clear_line();
  static const int kLineFieldNumber = 4;
  inline ::google::protobuf::uint32 line(int index) const;
  inline void set_line(int index, ::google::protobuf::uint32 value);
  inline void add_line(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      line() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_line();

  // repeated uint32 skillIndex = 5;
  inline int skillindex_size() const;
  inline void clear_skillindex();
  static const int kSkillIndexFieldNumber = 5;
  inline ::google::protobuf::uint32 skillindex(int index) const;
  inline void set_skillindex(int index, ::google::protobuf::uint32 value);
  inline void add_skillindex(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skillindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skillindex();

  // required uint32 chargeType = 6;
  inline bool has_chargetype() const;
  inline void clear_chargetype();
  static const int kChargeTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 chargetype() const;
  inline void set_chargetype(::google::protobuf::uint32 value);

  // repeated uint32 chargeValue = 7;
  inline int chargevalue_size() const;
  inline void clear_chargevalue();
  static const int kChargeValueFieldNumber = 7;
  inline ::google::protobuf::uint32 chargevalue(int index) const;
  inline void set_chargevalue(int index, ::google::protobuf::uint32 value);
  inline void add_chargevalue(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      chargevalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_chargevalue();

  // repeated .TgsProtocol.SourceList chargePrize = 8;
  inline int chargeprize_size() const;
  inline void clear_chargeprize();
  static const int kChargePrizeFieldNumber = 8;
  inline const ::TgsProtocol::SourceList& chargeprize(int index) const;
  inline ::TgsProtocol::SourceList* mutable_chargeprize(int index);
  inline ::TgsProtocol::SourceList* add_chargeprize();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
      chargeprize() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
      mutable_chargeprize();

  // repeated .TgsProtocol.SourceList chargePrize2 = 9;
  inline int chargeprize2_size() const;
  inline void clear_chargeprize2();
  static const int kChargePrize2FieldNumber = 9;
  inline const ::TgsProtocol::SourceList& chargeprize2(int index) const;
  inline ::TgsProtocol::SourceList* mutable_chargeprize2(int index);
  inline ::TgsProtocol::SourceList* add_chargeprize2();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
      chargeprize2() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
      mutable_chargeprize2();

  // repeated .TgsProtocol.SourceList chargePrize3 = 10;
  inline int chargeprize3_size() const;
  inline void clear_chargeprize3();
  static const int kChargePrize3FieldNumber = 10;
  inline const ::TgsProtocol::SourceList& chargeprize3(int index) const;
  inline ::TgsProtocol::SourceList* mutable_chargeprize3(int index);
  inline ::TgsProtocol::SourceList* add_chargeprize3();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
      chargeprize3() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
      mutable_chargeprize3();

  // repeated .TgsProtocol.SourceList chargePrize4 = 11;
  inline int chargeprize4_size() const;
  inline void clear_chargeprize4();
  static const int kChargePrize4FieldNumber = 11;
  inline const ::TgsProtocol::SourceList& chargeprize4(int index) const;
  inline ::TgsProtocol::SourceList* mutable_chargeprize4(int index);
  inline ::TgsProtocol::SourceList* add_chargeprize4();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
      chargeprize4() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
      mutable_chargeprize4();

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientContinueCharge)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_chargetype();
  inline void clear_has_chargetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 cd_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > line_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillindex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > chargevalue_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList > chargeprize_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList > chargeprize2_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList > chargeprize3_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList > chargeprize4_;
  ::google::protobuf::uint32 chargetype_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientContinueCharge* default_instance_;
};
// -------------------------------------------------------------------

class DbHandBookEle : public ::google::protobuf::Message {
 public:
  DbHandBookEle();
  virtual ~DbHandBookEle();

  DbHandBookEle(const DbHandBookEle& from);

  inline DbHandBookEle& operator=(const DbHandBookEle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbHandBookEle& default_instance();

  void Swap(DbHandBookEle* other);

  // implements Message ----------------------------------------------

  DbHandBookEle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbHandBookEle& from);
  void MergeFrom(const DbHandBookEle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // required uint32 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::uint32 val() const;
  inline void set_val(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbHandBookEle)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 val_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DbHandBookEle* default_instance_;
};
// -------------------------------------------------------------------

class DbHandBook : public ::google::protobuf::Message {
 public:
  DbHandBook();
  virtual ~DbHandBook();

  DbHandBook(const DbHandBook& from);

  inline DbHandBook& operator=(const DbHandBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbHandBook& default_instance();

  void Swap(DbHandBook* other);

  // implements Message ----------------------------------------------

  DbHandBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbHandBook& from);
  void MergeFrom(const DbHandBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DbHandBookEle one = 1;
  inline int one_size() const;
  inline void clear_one();
  static const int kOneFieldNumber = 1;
  inline const ::TgsProtocol::DbHandBookEle& one(int index) const;
  inline ::TgsProtocol::DbHandBookEle* mutable_one(int index);
  inline ::TgsProtocol::DbHandBookEle* add_one();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbHandBookEle >&
      one() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbHandBookEle >*
      mutable_one();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbHandBook)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbHandBookEle > one_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DbHandBook* default_instance_;
};
// -------------------------------------------------------------------

class ClientHandBook : public ::google::protobuf::Message {
 public:
  ClientHandBook();
  virtual ~ClientHandBook();

  ClientHandBook(const ClientHandBook& from);

  inline ClientHandBook& operator=(const ClientHandBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientHandBook& default_instance();

  void Swap(ClientHandBook* other);

  // implements Message ----------------------------------------------

  ClientHandBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientHandBook& from);
  void MergeFrom(const ClientHandBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // required uint32 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::uint32 val() const;
  inline void set_val(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientHandBook)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 val_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientHandBook* default_instance_;
};
// -------------------------------------------------------------------

class PlayerTurntableData : public ::google::protobuf::Message {
 public:
  PlayerTurntableData();
  virtual ~PlayerTurntableData();

  PlayerTurntableData(const PlayerTurntableData& from);

  inline PlayerTurntableData& operator=(const PlayerTurntableData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTurntableData& default_instance();

  void Swap(PlayerTurntableData* other);

  // implements Message ----------------------------------------------

  PlayerTurntableData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerTurntableData& from);
  void MergeFrom(const PlayerTurntableData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_id = 1;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 server_id() const;
  inline void set_server_id(::google::protobuf::uint32 value);

  // optional string server_name = 2;
  inline bool has_server_name() const;
  inline void clear_server_name();
  static const int kServerNameFieldNumber = 2;
  inline const ::std::string& server_name() const;
  inline void set_server_name(const ::std::string& value);
  inline void set_server_name(const char* value);
  inline void set_server_name(const char* value, size_t size);
  inline ::std::string* mutable_server_name();
  inline ::std::string* release_server_name();
  inline void set_allocated_server_name(::std::string* server_name);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 photo = 4;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 4;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 actid = 6;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActidFieldNumber = 6;
  inline ::google::protobuf::uint32 actid() const;
  inline void set_actid(::google::protobuf::uint32 value);

  // required uint32 turnnum = 7;
  inline bool has_turnnum() const;
  inline void clear_turnnum();
  static const int kTurnnumFieldNumber = 7;
  inline ::google::protobuf::uint32 turnnum() const;
  inline void set_turnnum(::google::protobuf::uint32 value);

  // optional uint32 mailtime = 8;
  inline bool has_mailtime() const;
  inline void clear_mailtime();
  static const int kMailtimeFieldNumber = 8;
  inline ::google::protobuf::uint32 mailtime() const;
  inline void set_mailtime(::google::protobuf::uint32 value);

  // required uint64 uid = 9;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 9;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 nationalId = 10;
  inline bool has_nationalid() const;
  inline void clear_nationalid();
  static const int kNationalIdFieldNumber = 10;
  inline ::google::protobuf::uint32 nationalid() const;
  inline void set_nationalid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.PlayerTurntableData)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_server_name();
  inline void clear_has_server_name();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_turnnum();
  inline void clear_has_turnnum();
  inline void set_has_mailtime();
  inline void clear_has_mailtime();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_nationalid();
  inline void clear_has_nationalid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* server_name_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::google::protobuf::uint32 actid_;
  ::google::protobuf::uint32 turnnum_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 mailtime_;
  ::google::protobuf::uint32 nationalid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static PlayerTurntableData* default_instance_;
};
// -------------------------------------------------------------------

class GlobalGoodsConf : public ::google::protobuf::Message {
 public:
  GlobalGoodsConf();
  virtual ~GlobalGoodsConf();

  GlobalGoodsConf(const GlobalGoodsConf& from);

  inline GlobalGoodsConf& operator=(const GlobalGoodsConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalGoodsConf& default_instance();

  void Swap(GlobalGoodsConf* other);

  // implements Message ----------------------------------------------

  GlobalGoodsConf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalGoodsConf& from);
  void MergeFrom(const GlobalGoodsConf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 goodsid = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsidFieldNumber = 1;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GlobalGoodsConf)
 private:
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GlobalGoodsConf* default_instance_;
};
// -------------------------------------------------------------------

class ServerWarConf : public ::google::protobuf::Message {
 public:
  ServerWarConf();
  virtual ~ServerWarConf();

  ServerWarConf(const ServerWarConf& from);

  inline ServerWarConf& operator=(const ServerWarConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerWarConf& default_instance();

  void Swap(ServerWarConf* other);

  // implements Message ----------------------------------------------

  ServerWarConf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerWarConf& from);
  void MergeFrom(const ServerWarConf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score_open_day = 1;
  inline bool has_score_open_day() const;
  inline void clear_score_open_day();
  static const int kScoreOpenDayFieldNumber = 1;
  inline ::google::protobuf::uint32 score_open_day() const;
  inline void set_score_open_day(::google::protobuf::uint32 value);

  // optional uint32 score_open_hour = 2;
  inline bool has_score_open_hour() const;
  inline void clear_score_open_hour();
  static const int kScoreOpenHourFieldNumber = 2;
  inline ::google::protobuf::uint32 score_open_hour() const;
  inline void set_score_open_hour(::google::protobuf::uint32 value);

  // optional uint32 score_close_day = 3;
  inline bool has_score_close_day() const;
  inline void clear_score_close_day();
  static const int kScoreCloseDayFieldNumber = 3;
  inline ::google::protobuf::uint32 score_close_day() const;
  inline void set_score_close_day(::google::protobuf::uint32 value);

  // optional uint32 score_close_hour = 4;
  inline bool has_score_close_hour() const;
  inline void clear_score_close_hour();
  static const int kScoreCloseHourFieldNumber = 4;
  inline ::google::protobuf::uint32 score_close_hour() const;
  inline void set_score_close_hour(::google::protobuf::uint32 value);

  // optional uint32 fight_open_day = 5;
  inline bool has_fight_open_day() const;
  inline void clear_fight_open_day();
  static const int kFightOpenDayFieldNumber = 5;
  inline ::google::protobuf::uint32 fight_open_day() const;
  inline void set_fight_open_day(::google::protobuf::uint32 value);

  // optional uint32 fight_open_hour = 6;
  inline bool has_fight_open_hour() const;
  inline void clear_fight_open_hour();
  static const int kFightOpenHourFieldNumber = 6;
  inline ::google::protobuf::uint32 fight_open_hour() const;
  inline void set_fight_open_hour(::google::protobuf::uint32 value);

  // optional uint32 fight_close_day = 7;
  inline bool has_fight_close_day() const;
  inline void clear_fight_close_day();
  static const int kFightCloseDayFieldNumber = 7;
  inline ::google::protobuf::uint32 fight_close_day() const;
  inline void set_fight_close_day(::google::protobuf::uint32 value);

  // optional uint32 fight_close_hour = 8;
  inline bool has_fight_close_hour() const;
  inline void clear_fight_close_hour();
  static const int kFightCloseHourFieldNumber = 8;
  inline ::google::protobuf::uint32 fight_close_hour() const;
  inline void set_fight_close_hour(::google::protobuf::uint32 value);

  // optional uint32 country_fight_num = 9;
  inline bool has_country_fight_num() const;
  inline void clear_country_fight_num();
  static const int kCountryFightNumFieldNumber = 9;
  inline ::google::protobuf::uint32 country_fight_num() const;
  inline void set_country_fight_num(::google::protobuf::uint32 value);

  // optional uint32 fight_show_topnum = 10;
  inline bool has_fight_show_topnum() const;
  inline void clear_fight_show_topnum();
  static const int kFightShowTopnumFieldNumber = 10;
  inline ::google::protobuf::uint32 fight_show_topnum() const;
  inline void set_fight_show_topnum(::google::protobuf::uint32 value);

  // optional uint32 fight_enemy_num = 11;
  inline bool has_fight_enemy_num() const;
  inline void clear_fight_enemy_num();
  static const int kFightEnemyNumFieldNumber = 11;
  inline ::google::protobuf::uint32 fight_enemy_num() const;
  inline void set_fight_enemy_num(::google::protobuf::uint32 value);

  // optional uint32 score_rank_country_num = 12;
  inline bool has_score_rank_country_num() const;
  inline void clear_score_rank_country_num();
  static const int kScoreRankCountryNumFieldNumber = 12;
  inline ::google::protobuf::uint32 score_rank_country_num() const;
  inline void set_score_rank_country_num(::google::protobuf::uint32 value);

  // optional uint32 fight_rank_num = 13;
  inline bool has_fight_rank_num() const;
  inline void clear_fight_rank_num();
  static const int kFightRankNumFieldNumber = 13;
  inline ::google::protobuf::uint32 fight_rank_num() const;
  inline void set_fight_rank_num(::google::protobuf::uint32 value);

  // optional uint32 score_win_score = 14;
  inline bool has_score_win_score() const;
  inline void clear_score_win_score();
  static const int kScoreWinScoreFieldNumber = 14;
  inline ::google::protobuf::uint32 score_win_score() const;
  inline void set_score_win_score(::google::protobuf::uint32 value);

  // optional uint32 score_win_scoremin = 15;
  inline bool has_score_win_scoremin() const;
  inline void clear_score_win_scoremin();
  static const int kScoreWinScoreminFieldNumber = 15;
  inline ::google::protobuf::uint32 score_win_scoremin() const;
  inline void set_score_win_scoremin(::google::protobuf::uint32 value);

  // optional uint32 score_win_scoremax = 16;
  inline bool has_score_win_scoremax() const;
  inline void clear_score_win_scoremax();
  static const int kScoreWinScoremaxFieldNumber = 16;
  inline ::google::protobuf::uint32 score_win_scoremax() const;
  inline void set_score_win_scoremax(::google::protobuf::uint32 value);

  // optional uint32 score_win_honor = 17;
  inline bool has_score_win_honor() const;
  inline void clear_score_win_honor();
  static const int kScoreWinHonorFieldNumber = 17;
  inline ::google::protobuf::uint32 score_win_honor() const;
  inline void set_score_win_honor(::google::protobuf::uint32 value);

  // optional uint32 score_win_honormin = 18;
  inline bool has_score_win_honormin() const;
  inline void clear_score_win_honormin();
  static const int kScoreWinHonorminFieldNumber = 18;
  inline ::google::protobuf::uint32 score_win_honormin() const;
  inline void set_score_win_honormin(::google::protobuf::uint32 value);

  // optional uint32 score_win_honormax = 19;
  inline bool has_score_win_honormax() const;
  inline void clear_score_win_honormax();
  static const int kScoreWinHonormaxFieldNumber = 19;
  inline ::google::protobuf::uint32 score_win_honormax() const;
  inline void set_score_win_honormax(::google::protobuf::uint32 value);

  // optional uint32 score_lose_score = 20;
  inline bool has_score_lose_score() const;
  inline void clear_score_lose_score();
  static const int kScoreLoseScoreFieldNumber = 20;
  inline ::google::protobuf::uint32 score_lose_score() const;
  inline void set_score_lose_score(::google::protobuf::uint32 value);

  // optional uint32 score_lose_honor = 21;
  inline bool has_score_lose_honor() const;
  inline void clear_score_lose_honor();
  static const int kScoreLoseHonorFieldNumber = 21;
  inline ::google::protobuf::uint32 score_lose_honor() const;
  inline void set_score_lose_honor(::google::protobuf::uint32 value);

  // optional float effect_check_per = 22;
  inline bool has_effect_check_per() const;
  inline void clear_effect_check_per();
  static const int kEffectCheckPerFieldNumber = 22;
  inline float effect_check_per() const;
  inline void set_effect_check_per(float value);

  // optional uint32 effect_skip_per = 23;
  inline bool has_effect_skip_per() const;
  inline void clear_effect_skip_per();
  static const int kEffectSkipPerFieldNumber = 23;
  inline ::google::protobuf::uint32 effect_skip_per() const;
  inline void set_effect_skip_per(::google::protobuf::uint32 value);

  // optional uint32 fight_win_honor = 24;
  inline bool has_fight_win_honor() const;
  inline void clear_fight_win_honor();
  static const int kFightWinHonorFieldNumber = 24;
  inline ::google::protobuf::uint32 fight_win_honor() const;
  inline void set_fight_win_honor(::google::protobuf::uint32 value);

  // optional uint32 fight_lose_honor = 25;
  inline bool has_fight_lose_honor() const;
  inline void clear_fight_lose_honor();
  static const int kFightLoseHonorFieldNumber = 25;
  inline ::google::protobuf::uint32 fight_lose_honor() const;
  inline void set_fight_lose_honor(::google::protobuf::uint32 value);

  // repeated uint64 score_enemy_effect = 26;
  inline int score_enemy_effect_size() const;
  inline void clear_score_enemy_effect();
  static const int kScoreEnemyEffectFieldNumber = 26;
  inline ::google::protobuf::uint64 score_enemy_effect(int index) const;
  inline void set_score_enemy_effect(int index, ::google::protobuf::uint64 value);
  inline void add_score_enemy_effect(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      score_enemy_effect() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_score_enemy_effect();

  // optional uint32 score_open_players = 27;
  inline bool has_score_open_players() const;
  inline void clear_score_open_players();
  static const int kScoreOpenPlayersFieldNumber = 27;
  inline ::google::protobuf::uint32 score_open_players() const;
  inline void set_score_open_players(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ServerWarConf)
 private:
  inline void set_has_score_open_day();
  inline void clear_has_score_open_day();
  inline void set_has_score_open_hour();
  inline void clear_has_score_open_hour();
  inline void set_has_score_close_day();
  inline void clear_has_score_close_day();
  inline void set_has_score_close_hour();
  inline void clear_has_score_close_hour();
  inline void set_has_fight_open_day();
  inline void clear_has_fight_open_day();
  inline void set_has_fight_open_hour();
  inline void clear_has_fight_open_hour();
  inline void set_has_fight_close_day();
  inline void clear_has_fight_close_day();
  inline void set_has_fight_close_hour();
  inline void clear_has_fight_close_hour();
  inline void set_has_country_fight_num();
  inline void clear_has_country_fight_num();
  inline void set_has_fight_show_topnum();
  inline void clear_has_fight_show_topnum();
  inline void set_has_fight_enemy_num();
  inline void clear_has_fight_enemy_num();
  inline void set_has_score_rank_country_num();
  inline void clear_has_score_rank_country_num();
  inline void set_has_fight_rank_num();
  inline void clear_has_fight_rank_num();
  inline void set_has_score_win_score();
  inline void clear_has_score_win_score();
  inline void set_has_score_win_scoremin();
  inline void clear_has_score_win_scoremin();
  inline void set_has_score_win_scoremax();
  inline void clear_has_score_win_scoremax();
  inline void set_has_score_win_honor();
  inline void clear_has_score_win_honor();
  inline void set_has_score_win_honormin();
  inline void clear_has_score_win_honormin();
  inline void set_has_score_win_honormax();
  inline void clear_has_score_win_honormax();
  inline void set_has_score_lose_score();
  inline void clear_has_score_lose_score();
  inline void set_has_score_lose_honor();
  inline void clear_has_score_lose_honor();
  inline void set_has_effect_check_per();
  inline void clear_has_effect_check_per();
  inline void set_has_effect_skip_per();
  inline void clear_has_effect_skip_per();
  inline void set_has_fight_win_honor();
  inline void clear_has_fight_win_honor();
  inline void set_has_fight_lose_honor();
  inline void clear_has_fight_lose_honor();
  inline void set_has_score_open_players();
  inline void clear_has_score_open_players();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_open_day_;
  ::google::protobuf::uint32 score_open_hour_;
  ::google::protobuf::uint32 score_close_day_;
  ::google::protobuf::uint32 score_close_hour_;
  ::google::protobuf::uint32 fight_open_day_;
  ::google::protobuf::uint32 fight_open_hour_;
  ::google::protobuf::uint32 fight_close_day_;
  ::google::protobuf::uint32 fight_close_hour_;
  ::google::protobuf::uint32 country_fight_num_;
  ::google::protobuf::uint32 fight_show_topnum_;
  ::google::protobuf::uint32 fight_enemy_num_;
  ::google::protobuf::uint32 score_rank_country_num_;
  ::google::protobuf::uint32 fight_rank_num_;
  ::google::protobuf::uint32 score_win_score_;
  ::google::protobuf::uint32 score_win_scoremin_;
  ::google::protobuf::uint32 score_win_scoremax_;
  ::google::protobuf::uint32 score_win_honor_;
  ::google::protobuf::uint32 score_win_honormin_;
  ::google::protobuf::uint32 score_win_honormax_;
  ::google::protobuf::uint32 score_lose_score_;
  ::google::protobuf::uint32 score_lose_honor_;
  float effect_check_per_;
  ::google::protobuf::uint32 effect_skip_per_;
  ::google::protobuf::uint32 fight_win_honor_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > score_enemy_effect_;
  ::google::protobuf::uint32 fight_lose_honor_;
  ::google::protobuf::uint32 score_open_players_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ServerWarConf* default_instance_;
};
// -------------------------------------------------------------------

class STeamWinProperty : public ::google::protobuf::Message {
 public:
  STeamWinProperty();
  virtual ~STeamWinProperty();

  STeamWinProperty(const STeamWinProperty& from);

  inline STeamWinProperty& operator=(const STeamWinProperty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STeamWinProperty& default_instance();

  void Swap(STeamWinProperty* other);

  // implements Message ----------------------------------------------

  STeamWinProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STeamWinProperty& from);
  void MergeFrom(const STeamWinProperty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 times = 1;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // optional uint32 atkHurt = 2;
  inline bool has_atkhurt() const;
  inline void clear_atkhurt();
  static const int kAtkHurtFieldNumber = 2;
  inline ::google::protobuf::uint32 atkhurt() const;
  inline void set_atkhurt(::google::protobuf::uint32 value);

  // optional uint32 defHurt = 3;
  inline bool has_defhurt() const;
  inline void clear_defhurt();
  static const int kDefHurtFieldNumber = 3;
  inline ::google::protobuf::uint32 defhurt() const;
  inline void set_defhurt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.STeamWinProperty)
 private:
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_atkhurt();
  inline void clear_has_atkhurt();
  inline void set_has_defhurt();
  inline void clear_has_defhurt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 atkhurt_;
  ::google::protobuf::uint32 defhurt_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static STeamWinProperty* default_instance_;
};
// -------------------------------------------------------------------

class ServerTeamConf : public ::google::protobuf::Message {
 public:
  ServerTeamConf();
  virtual ~ServerTeamConf();

  ServerTeamConf(const ServerTeamConf& from);

  inline ServerTeamConf& operator=(const ServerTeamConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTeamConf& default_instance();

  void Swap(ServerTeamConf* other);

  // implements Message ----------------------------------------------

  ServerTeamConf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerTeamConf& from);
  void MergeFrom(const ServerTeamConf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.TodayTime TeamOpenTime = 1;
  inline bool has_teamopentime() const;
  inline void clear_teamopentime();
  static const int kTeamOpenTimeFieldNumber = 1;
  inline const ::TgsProtocol::TodayTime& teamopentime() const;
  inline ::TgsProtocol::TodayTime* mutable_teamopentime();
  inline ::TgsProtocol::TodayTime* release_teamopentime();
  inline void set_allocated_teamopentime(::TgsProtocol::TodayTime* teamopentime);

  // repeated .TgsProtocol.TodayTime TeamHonorDoubleTime = 2;
  inline int teamhonordoubletime_size() const;
  inline void clear_teamhonordoubletime();
  static const int kTeamHonorDoubleTimeFieldNumber = 2;
  inline const ::TgsProtocol::TodayTime& teamhonordoubletime(int index) const;
  inline ::TgsProtocol::TodayTime* mutable_teamhonordoubletime(int index);
  inline ::TgsProtocol::TodayTime* add_teamhonordoubletime();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime >&
      teamhonordoubletime() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime >*
      mutable_teamhonordoubletime();

  // repeated uint32 TeamScoreAddPer = 3;
  inline int teamscoreaddper_size() const;
  inline void clear_teamscoreaddper();
  static const int kTeamScoreAddPerFieldNumber = 3;
  inline ::google::protobuf::uint32 teamscoreaddper(int index) const;
  inline void set_teamscoreaddper(int index, ::google::protobuf::uint32 value);
  inline void add_teamscoreaddper(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      teamscoreaddper() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_teamscoreaddper();

  // repeated uint32 TeamScore = 4;
  inline int teamscore_size() const;
  inline void clear_teamscore();
  static const int kTeamScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 teamscore(int index) const;
  inline void set_teamscore(int index, ::google::protobuf::uint32 value);
  inline void add_teamscore(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      teamscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_teamscore();

  // repeated uint32 TeamHonor = 5;
  inline int teamhonor_size() const;
  inline void clear_teamhonor();
  static const int kTeamHonorFieldNumber = 5;
  inline ::google::protobuf::uint32 teamhonor(int index) const;
  inline void set_teamhonor(int index, ::google::protobuf::uint32 value);
  inline void add_teamhonor(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      teamhonor() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_teamhonor();

  // repeated uint32 TeamFightEffectPer = 6;
  inline int teamfighteffectper_size() const;
  inline void clear_teamfighteffectper();
  static const int kTeamFightEffectPerFieldNumber = 6;
  inline ::google::protobuf::uint32 teamfighteffectper(int index) const;
  inline void set_teamfighteffectper(int index, ::google::protobuf::uint32 value);
  inline void add_teamfighteffectper(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      teamfighteffectper() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_teamfighteffectper();

  // repeated uint32 TeamFightAttr = 7;
  inline int teamfightattr_size() const;
  inline void clear_teamfightattr();
  static const int kTeamFightAttrFieldNumber = 7;
  inline ::google::protobuf::uint32 teamfightattr(int index) const;
  inline void set_teamfightattr(int index, ::google::protobuf::uint32 value);
  inline void add_teamfightattr(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      teamfightattr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_teamfightattr();

  // repeated uint32 TeamFightFactor = 8;
  inline int teamfightfactor_size() const;
  inline void clear_teamfightfactor();
  static const int kTeamFightFactorFieldNumber = 8;
  inline ::google::protobuf::uint32 teamfightfactor(int index) const;
  inline void set_teamfightfactor(int index, ::google::protobuf::uint32 value);
  inline void add_teamfightfactor(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      teamfightfactor() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_teamfightfactor();

  // repeated uint32 TeamRobotEffectPer = 9;
  inline int teamroboteffectper_size() const;
  inline void clear_teamroboteffectper();
  static const int kTeamRobotEffectPerFieldNumber = 9;
  inline ::google::protobuf::uint32 teamroboteffectper(int index) const;
  inline void set_teamroboteffectper(int index, ::google::protobuf::uint32 value);
  inline void add_teamroboteffectper(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      teamroboteffectper() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_teamroboteffectper();

  // repeated .TgsProtocol.STeamWinProperty property = 10;
  inline int property_size() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 10;
  inline const ::TgsProtocol::STeamWinProperty& property(int index) const;
  inline ::TgsProtocol::STeamWinProperty* mutable_property(int index);
  inline ::TgsProtocol::STeamWinProperty* add_property();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::STeamWinProperty >&
      property() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::STeamWinProperty >*
      mutable_property();

  // @@protoc_insertion_point(class_scope:TgsProtocol.ServerTeamConf)
 private:
  inline void set_has_teamopentime();
  inline void clear_has_teamopentime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TgsProtocol::TodayTime* teamopentime_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime > teamhonordoubletime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teamscoreaddper_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teamscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teamhonor_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teamfighteffectper_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teamfightattr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teamfightfactor_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teamroboteffectper_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::STeamWinProperty > property_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ServerTeamConf* default_instance_;
};
// -------------------------------------------------------------------

class ClientServerWarPlayer : public ::google::protobuf::Message {
 public:
  ClientServerWarPlayer();
  virtual ~ClientServerWarPlayer();

  ClientServerWarPlayer(const ClientServerWarPlayer& from);

  inline ClientServerWarPlayer& operator=(const ClientServerWarPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientServerWarPlayer& default_instance();

  void Swap(ClientServerWarPlayer* other);

  // implements Message ----------------------------------------------

  ClientServerWarPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientServerWarPlayer& from);
  void MergeFrom(const ClientServerWarPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TgsProtocol.ClientBattlePlayer battle_player = 1;
  inline bool has_battle_player() const;
  inline void clear_battle_player();
  static const int kBattlePlayerFieldNumber = 1;
  inline const ::TgsProtocol::ClientBattlePlayer& battle_player() const;
  inline ::TgsProtocol::ClientBattlePlayer* mutable_battle_player();
  inline ::TgsProtocol::ClientBattlePlayer* release_battle_player();
  inline void set_allocated_battle_player(::TgsProtocol::ClientBattlePlayer* battle_player);

  // optional uint32 country = 2;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 2;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);

  // optional uint32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional bool win = 5;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 5;
  inline bool win() const;
  inline void set_win(bool value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientServerWarPlayer)
 private:
  inline void set_has_battle_player();
  inline void clear_has_battle_player();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_win();
  inline void clear_has_win();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TgsProtocol::ClientBattlePlayer* battle_player_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 score_;
  bool win_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientServerWarPlayer* default_instance_;
};
// -------------------------------------------------------------------

class TombImp : public ::google::protobuf::Message {
 public:
  TombImp();
  virtual ~TombImp();

  TombImp(const TombImp& from);

  inline TombImp& operator=(const TombImp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TombImp& default_instance();

  void Swap(TombImp* other);

  // implements Message ----------------------------------------------

  TombImp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TombImp& from);
  void MergeFrom(const TombImp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 event = 2;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 2;
  inline ::google::protobuf::uint32 event() const;
  inline void set_event(::google::protobuf::uint32 value);

  // optional .TgsProtocol.ClientBattlePlayer opponent = 3;
  inline bool has_opponent() const;
  inline void clear_opponent();
  static const int kOpponentFieldNumber = 3;
  inline const ::TgsProtocol::ClientBattlePlayer& opponent() const;
  inline ::TgsProtocol::ClientBattlePlayer* mutable_opponent();
  inline ::TgsProtocol::ClientBattlePlayer* release_opponent();
  inline void set_allocated_opponent(::TgsProtocol::ClientBattlePlayer* opponent);

  // optional uint32 step = 4;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 4;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // optional uint32 rate = 5;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 5;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.TombImp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_opponent();
  inline void clear_has_opponent();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 event_;
  ::TgsProtocol::ClientBattlePlayer* opponent_;
  ::google::protobuf::uint32 step_;
  ::google::protobuf::uint32 rate_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static TombImp* default_instance_;
};
// -------------------------------------------------------------------

class ServerTeamBattle : public ::google::protobuf::Message {
 public:
  ServerTeamBattle();
  virtual ~ServerTeamBattle();

  ServerTeamBattle(const ServerTeamBattle& from);

  inline ServerTeamBattle& operator=(const ServerTeamBattle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTeamBattle& default_instance();

  void Swap(ServerTeamBattle* other);

  // implements Message ----------------------------------------------

  ServerTeamBattle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerTeamBattle& from);
  void MergeFrom(const ServerTeamBattle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hp = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 1;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // required uint32 atk = 2;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kAtkFieldNumber = 2;
  inline ::google::protobuf::uint32 atk() const;
  inline void set_atk(::google::protobuf::uint32 value);

  // required uint32 forceLevel = 3;
  inline bool has_forcelevel() const;
  inline void clear_forcelevel();
  static const int kForceLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 forcelevel() const;
  inline void set_forcelevel(::google::protobuf::uint32 value);

  // required uint32 refineLevel = 4;
  inline bool has_refinelevel() const;
  inline void clear_refinelevel();
  static const int kRefineLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 refinelevel() const;
  inline void set_refinelevel(::google::protobuf::uint32 value);

  // required uint32 nature = 5;
  inline bool has_nature() const;
  inline void clear_nature();
  static const int kNatureFieldNumber = 5;
  inline ::google::protobuf::uint32 nature() const;
  inline void set_nature(::google::protobuf::uint32 value);

  // required uint32 equipStar = 6;
  inline bool has_equipstar() const;
  inline void clear_equipstar();
  static const int kEquipStarFieldNumber = 6;
  inline ::google::protobuf::uint32 equipstar() const;
  inline void set_equipstar(::google::protobuf::uint32 value);

  // optional uint64 hp64 = 7;
  inline bool has_hp64() const;
  inline void clear_hp64();
  static const int kHp64FieldNumber = 7;
  inline ::google::protobuf::uint64 hp64() const;
  inline void set_hp64(::google::protobuf::uint64 value);

  // optional uint64 atk64 = 8;
  inline bool has_atk64() const;
  inline void clear_atk64();
  static const int kAtk64FieldNumber = 8;
  inline ::google::protobuf::uint64 atk64() const;
  inline void set_atk64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ServerTeamBattle)
 private:
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_forcelevel();
  inline void clear_has_forcelevel();
  inline void set_has_refinelevel();
  inline void clear_has_refinelevel();
  inline void set_has_nature();
  inline void clear_has_nature();
  inline void set_has_equipstar();
  inline void clear_has_equipstar();
  inline void set_has_hp64();
  inline void clear_has_hp64();
  inline void set_has_atk64();
  inline void clear_has_atk64();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 atk_;
  ::google::protobuf::uint32 forcelevel_;
  ::google::protobuf::uint32 refinelevel_;
  ::google::protobuf::uint32 nature_;
  ::google::protobuf::uint32 equipstar_;
  ::google::protobuf::uint64 hp64_;
  ::google::protobuf::uint64 atk64_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ServerTeamBattle* default_instance_;
};
// -------------------------------------------------------------------

class ClientServerTeamPlayer : public ::google::protobuf::Message {
 public:
  ClientServerTeamPlayer();
  virtual ~ClientServerTeamPlayer();

  ClientServerTeamPlayer(const ClientServerTeamPlayer& from);

  inline ClientServerTeamPlayer& operator=(const ClientServerTeamPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientServerTeamPlayer& default_instance();

  void Swap(ClientServerTeamPlayer* other);

  // implements Message ----------------------------------------------

  ClientServerTeamPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientServerTeamPlayer& from);
  void MergeFrom(const ClientServerTeamPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TgsProtocol.ClientBattlePlayer battle_player = 1;
  inline bool has_battle_player() const;
  inline void clear_battle_player();
  static const int kBattlePlayerFieldNumber = 1;
  inline const ::TgsProtocol::ClientBattlePlayer& battle_player() const;
  inline ::TgsProtocol::ClientBattlePlayer* mutable_battle_player();
  inline ::TgsProtocol::ClientBattlePlayer* release_battle_player();
  inline void set_allocated_battle_player(::TgsProtocol::ClientBattlePlayer* battle_player);

  // optional bool isleader = 2;
  inline bool has_isleader() const;
  inline void clear_isleader();
  static const int kIsleaderFieldNumber = 2;
  inline bool isleader() const;
  inline void set_isleader(bool value);

  // optional uint32 pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional bool isready = 4;
  inline bool has_isready() const;
  inline void clear_isready();
  static const int kIsreadyFieldNumber = 4;
  inline bool isready() const;
  inline void set_isready(bool value);

  // optional bool isrobot = 5;
  inline bool has_isrobot() const;
  inline void clear_isrobot();
  static const int kIsrobotFieldNumber = 5;
  inline bool isrobot() const;
  inline void set_isrobot(bool value);

  // optional .TgsProtocol.ServerTeamBattle battle_attr = 6;
  inline bool has_battle_attr() const;
  inline void clear_battle_attr();
  static const int kBattleAttrFieldNumber = 6;
  inline const ::TgsProtocol::ServerTeamBattle& battle_attr() const;
  inline ::TgsProtocol::ServerTeamBattle* mutable_battle_attr();
  inline ::TgsProtocol::ServerTeamBattle* release_battle_attr();
  inline void set_allocated_battle_attr(::TgsProtocol::ServerTeamBattle* battle_attr);

  // optional uint32 honor = 7;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 7;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // optional uint32 honor_rank = 8;
  inline bool has_honor_rank() const;
  inline void clear_honor_rank();
  static const int kHonorRankFieldNumber = 8;
  inline ::google::protobuf::uint32 honor_rank() const;
  inline void set_honor_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientServerTeamPlayer)
 private:
  inline void set_has_battle_player();
  inline void clear_has_battle_player();
  inline void set_has_isleader();
  inline void clear_has_isleader();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_isready();
  inline void clear_has_isready();
  inline void set_has_isrobot();
  inline void clear_has_isrobot();
  inline void set_has_battle_attr();
  inline void clear_has_battle_attr();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_honor_rank();
  inline void clear_has_honor_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TgsProtocol::ClientBattlePlayer* battle_player_;
  ::google::protobuf::uint32 pos_;
  bool isleader_;
  bool isready_;
  bool isrobot_;
  ::TgsProtocol::ServerTeamBattle* battle_attr_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 honor_rank_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientServerTeamPlayer* default_instance_;
};
// -------------------------------------------------------------------

class ServerTeamPos : public ::google::protobuf::Message {
 public:
  ServerTeamPos();
  virtual ~ServerTeamPos();

  ServerTeamPos(const ServerTeamPos& from);

  inline ServerTeamPos& operator=(const ServerTeamPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerTeamPos& default_instance();

  void Swap(ServerTeamPos* other);

  // implements Message ----------------------------------------------

  ServerTeamPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerTeamPos& from);
  void MergeFrom(const ServerTeamPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ServerTeamPos)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 pos_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ServerTeamPos* default_instance_;
};
// -------------------------------------------------------------------

class ClientServerTeamFightTurn : public ::google::protobuf::Message {
 public:
  ClientServerTeamFightTurn();
  virtual ~ClientServerTeamFightTurn();

  ClientServerTeamFightTurn(const ClientServerTeamFightTurn& from);

  inline ClientServerTeamFightTurn& operator=(const ClientServerTeamFightTurn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientServerTeamFightTurn& default_instance();

  void Swap(ClientServerTeamFightTurn* other);

  // implements Message ----------------------------------------------

  ClientServerTeamFightTurn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientServerTeamFightTurn& from);
  void MergeFrom(const ClientServerTeamFightTurn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos1 = 1;
  inline bool has_pos1() const;
  inline void clear_pos1();
  static const int kPos1FieldNumber = 1;
  inline ::google::protobuf::uint32 pos1() const;
  inline void set_pos1(::google::protobuf::uint32 value);

  // required uint32 pos2 = 2;
  inline bool has_pos2() const;
  inline void clear_pos2();
  static const int kPos2FieldNumber = 2;
  inline ::google::protobuf::uint32 pos2() const;
  inline void set_pos2(::google::protobuf::uint32 value);

  // required uint64 hp1 = 3;
  inline bool has_hp1() const;
  inline void clear_hp1();
  static const int kHp1FieldNumber = 3;
  inline ::google::protobuf::uint64 hp1() const;
  inline void set_hp1(::google::protobuf::uint64 value);

  // required uint64 hp2 = 4;
  inline bool has_hp2() const;
  inline void clear_hp2();
  static const int kHp2FieldNumber = 4;
  inline ::google::protobuf::uint64 hp2() const;
  inline void set_hp2(::google::protobuf::uint64 value);

  // optional bool dead1 = 5;
  inline bool has_dead1() const;
  inline void clear_dead1();
  static const int kDead1FieldNumber = 5;
  inline bool dead1() const;
  inline void set_dead1(bool value);

  // optional bool dead2 = 6;
  inline bool has_dead2() const;
  inline void clear_dead2();
  static const int kDead2FieldNumber = 6;
  inline bool dead2() const;
  inline void set_dead2(bool value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientServerTeamFightTurn)
 private:
  inline void set_has_pos1();
  inline void clear_has_pos1();
  inline void set_has_pos2();
  inline void clear_has_pos2();
  inline void set_has_hp1();
  inline void clear_has_hp1();
  inline void set_has_hp2();
  inline void clear_has_hp2();
  inline void set_has_dead1();
  inline void clear_has_dead1();
  inline void set_has_dead2();
  inline void clear_has_dead2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos1_;
  ::google::protobuf::uint32 pos2_;
  ::google::protobuf::uint64 hp1_;
  ::google::protobuf::uint64 hp2_;
  bool dead1_;
  bool dead2_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientServerTeamFightTurn* default_instance_;
};
// -------------------------------------------------------------------

class ClientServerTeamBattleResult : public ::google::protobuf::Message {
 public:
  ClientServerTeamBattleResult();
  virtual ~ClientServerTeamBattleResult();

  ClientServerTeamBattleResult(const ClientServerTeamBattleResult& from);

  inline ClientServerTeamBattleResult& operator=(const ClientServerTeamBattleResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientServerTeamBattleResult& default_instance();

  void Swap(ClientServerTeamBattleResult* other);

  // implements Message ----------------------------------------------

  ClientServerTeamBattleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientServerTeamBattleResult& from);
  void MergeFrom(const ClientServerTeamBattleResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.ClientServerTeamPlayer item1 = 1;
  inline int item1_size() const;
  inline void clear_item1();
  static const int kItem1FieldNumber = 1;
  inline const ::TgsProtocol::ClientServerTeamPlayer& item1(int index) const;
  inline ::TgsProtocol::ClientServerTeamPlayer* mutable_item1(int index);
  inline ::TgsProtocol::ClientServerTeamPlayer* add_item1();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer >&
      item1() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer >*
      mutable_item1();

  // repeated .TgsProtocol.ClientServerTeamPlayer item2 = 2;
  inline int item2_size() const;
  inline void clear_item2();
  static const int kItem2FieldNumber = 2;
  inline const ::TgsProtocol::ClientServerTeamPlayer& item2(int index) const;
  inline ::TgsProtocol::ClientServerTeamPlayer* mutable_item2(int index);
  inline ::TgsProtocol::ClientServerTeamPlayer* add_item2();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer >&
      item2() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer >*
      mutable_item2();

  // required uint32 winteam = 3;
  inline bool has_winteam() const;
  inline void clear_winteam();
  static const int kWinteamFieldNumber = 3;
  inline ::google::protobuf::uint32 winteam() const;
  inline void set_winteam(::google::protobuf::uint32 value);

  // repeated uint64 mvp = 4;
  inline int mvp_size() const;
  inline void clear_mvp();
  static const int kMvpFieldNumber = 4;
  inline ::google::protobuf::uint64 mvp(int index) const;
  inline void set_mvp(int index, ::google::protobuf::uint64 value);
  inline void add_mvp(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mvp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mvp();

  // repeated .TgsProtocol.ClientServerTeamFightTurn turn = 5;
  inline int turn_size() const;
  inline void clear_turn();
  static const int kTurnFieldNumber = 5;
  inline const ::TgsProtocol::ClientServerTeamFightTurn& turn(int index) const;
  inline ::TgsProtocol::ClientServerTeamFightTurn* mutable_turn(int index);
  inline ::TgsProtocol::ClientServerTeamFightTurn* add_turn();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamFightTurn >&
      turn() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamFightTurn >*
      mutable_turn();

  // required uint32 myteam = 6;
  inline bool has_myteam() const;
  inline void clear_myteam();
  static const int kMyteamFieldNumber = 6;
  inline ::google::protobuf::uint32 myteam() const;
  inline void set_myteam(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ClientServerTeamBattleResult)
 private:
  inline void set_has_winteam();
  inline void clear_has_winteam();
  inline void set_has_myteam();
  inline void clear_has_myteam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer > item1_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer > item2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mvp_;
  ::google::protobuf::uint32 winteam_;
  ::google::protobuf::uint32 myteam_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamFightTurn > turn_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ClientServerTeamBattleResult* default_instance_;
};
// -------------------------------------------------------------------

class SecretHole : public ::google::protobuf::Message {
 public:
  SecretHole();
  virtual ~SecretHole();

  SecretHole(const SecretHole& from);

  inline SecretHole& operator=(const SecretHole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SecretHole& default_instance();

  void Swap(SecretHole* other);

  // implements Message ----------------------------------------------

  SecretHole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SecretHole& from);
  void MergeFrom(const SecretHole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated uint32 star = 2;
  inline int star_size() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star(int index) const;
  inline void set_star(int index, ::google::protobuf::uint32 value);
  inline void add_star(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      star() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_star();

  // optional uint32 totalstar = 3;
  inline bool has_totalstar() const;
  inline void clear_totalstar();
  static const int kTotalstarFieldNumber = 3;
  inline ::google::protobuf::uint32 totalstar() const;
  inline void set_totalstar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.SecretHole)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_totalstar();
  inline void clear_has_totalstar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > star_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 totalstar_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static SecretHole* default_instance_;
};
// -------------------------------------------------------------------

class DBSecretHole : public ::google::protobuf::Message {
 public:
  DBSecretHole();
  virtual ~DBSecretHole();

  DBSecretHole(const DBSecretHole& from);

  inline DBSecretHole& operator=(const DBSecretHole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBSecretHole& default_instance();

  void Swap(DBSecretHole* other);

  // implements Message ----------------------------------------------

  DBSecretHole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBSecretHole& from);
  void MergeFrom(const DBSecretHole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 floor = 2;
  inline bool has_floor() const;
  inline void clear_floor();
  static const int kFloorFieldNumber = 2;
  inline ::google::protobuf::uint32 floor() const;
  inline void set_floor(::google::protobuf::uint32 value);

  // required uint32 boxtimes = 3;
  inline bool has_boxtimes() const;
  inline void clear_boxtimes();
  static const int kBoxtimesFieldNumber = 3;
  inline ::google::protobuf::uint32 boxtimes() const;
  inline void set_boxtimes(::google::protobuf::uint32 value);

  // repeated uint32 buff = 4;
  inline int buff_size() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 4;
  inline ::google::protobuf::uint32 buff(int index) const;
  inline void set_buff(int index, ::google::protobuf::uint32 value);
  inline void add_buff(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buff() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buff();

  // repeated .TgsProtocol.SecretHole hole = 5;
  inline int hole_size() const;
  inline void clear_hole();
  static const int kHoleFieldNumber = 5;
  inline const ::TgsProtocol::SecretHole& hole(int index) const;
  inline ::TgsProtocol::SecretHole* mutable_hole(int index);
  inline ::TgsProtocol::SecretHole* add_hole();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SecretHole >&
      hole() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SecretHole >*
      mutable_hole();

  // required uint32 goodsid = 6;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsidFieldNumber = 6;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // required uint32 stars = 7;
  inline bool has_stars() const;
  inline void clear_stars();
  static const int kStarsFieldNumber = 7;
  inline ::google::protobuf::uint32 stars() const;
  inline void set_stars(::google::protobuf::uint32 value);

  // optional uint32 floor_stars = 8;
  inline bool has_floor_stars() const;
  inline void clear_floor_stars();
  static const int kFloorStarsFieldNumber = 8;
  inline ::google::protobuf::uint32 floor_stars() const;
  inline void set_floor_stars(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBSecretHole)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_floor();
  inline void clear_has_floor();
  inline void set_has_boxtimes();
  inline void clear_has_boxtimes();
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_stars();
  inline void clear_has_stars();
  inline void set_has_floor_stars();
  inline void clear_has_floor_stars();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 floor_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buff_;
  ::google::protobuf::uint32 boxtimes_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SecretHole > hole_;
  ::google::protobuf::uint32 stars_;
  ::google::protobuf::uint32 floor_stars_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBSecretHole* default_instance_;
};
// -------------------------------------------------------------------

class AuctionInfo : public ::google::protobuf::Message {
 public:
  AuctionInfo();
  virtual ~AuctionInfo();

  AuctionInfo(const AuctionInfo& from);

  inline AuctionInfo& operator=(const AuctionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionInfo& default_instance();

  void Swap(AuctionInfo* other);

  // implements Message ----------------------------------------------

  AuctionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionInfo& from);
  void MergeFrom(const AuctionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 photo = 1;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 1;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // required .TgsProtocol.ClientSource source = 4;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 4;
  inline const ::TgsProtocol::ClientSource& source() const;
  inline ::TgsProtocol::ClientSource* mutable_source();
  inline ::TgsProtocol::ClientSource* release_source();
  inline void set_allocated_source(::TgsProtocol::ClientSource* source);

  // required uint32 serverid = 5;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 5;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // required string servername = 6;
  inline bool has_servername() const;
  inline void clear_servername();
  static const int kServernameFieldNumber = 6;
  inline const ::std::string& servername() const;
  inline void set_servername(const ::std::string& value);
  inline void set_servername(const char* value);
  inline void set_servername(const char* value, size_t size);
  inline ::std::string* mutable_servername();
  inline ::std::string* release_servername();
  inline void set_allocated_servername(::std::string* servername);

  // @@protoc_insertion_point(class_scope:TgsProtocol.AuctionInfo)
 private:
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_servername();
  inline void clear_has_servername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 num_;
  ::TgsProtocol::ClientSource* source_;
  ::std::string* servername_;
  ::google::protobuf::uint32 serverid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static AuctionInfo* default_instance_;
};
// -------------------------------------------------------------------

class AuctionConfig : public ::google::protobuf::Message {
 public:
  AuctionConfig();
  virtual ~AuctionConfig();

  AuctionConfig(const AuctionConfig& from);

  inline AuctionConfig& operator=(const AuctionConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionConfig& default_instance();

  void Swap(AuctionConfig* other);

  // implements Message ----------------------------------------------

  AuctionConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionConfig& from);
  void MergeFrom(const AuctionConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 sourceType = 2;
  inline bool has_sourcetype() const;
  inline void clear_sourcetype();
  static const int kSourceTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 sourcetype() const;
  inline void set_sourcetype(::google::protobuf::uint32 value);

  // required uint32 sourceId = 3;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // required uint32 sourceNum = 4;
  inline bool has_sourcenum() const;
  inline void clear_sourcenum();
  static const int kSourceNumFieldNumber = 4;
  inline ::google::protobuf::uint32 sourcenum() const;
  inline void set_sourcenum(::google::protobuf::uint32 value);

  // required uint32 maxNum = 5;
  inline bool has_maxnum() const;
  inline void clear_maxnum();
  static const int kMaxNumFieldNumber = 5;
  inline ::google::protobuf::uint32 maxnum() const;
  inline void set_maxnum(::google::protobuf::uint32 value);

  // required uint32 limit = 6;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 6;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // required uint32 buyNum = 7;
  inline bool has_buynum() const;
  inline void clear_buynum();
  static const int kBuyNumFieldNumber = 7;
  inline ::google::protobuf::uint32 buynum() const;
  inline void set_buynum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.AuctionConfig)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sourcetype();
  inline void clear_has_sourcetype();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_sourcenum();
  inline void clear_has_sourcenum();
  inline void set_has_maxnum();
  inline void clear_has_maxnum();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_buynum();
  inline void clear_has_buynum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 sourcetype_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 sourcenum_;
  ::google::protobuf::uint32 maxnum_;
  ::google::protobuf::uint32 limit_;
  ::google::protobuf::uint32 buynum_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static AuctionConfig* default_instance_;
};
// -------------------------------------------------------------------

class AuctionRecords : public ::google::protobuf::Message {
 public:
  AuctionRecords();
  virtual ~AuctionRecords();

  AuctionRecords(const AuctionRecords& from);

  inline AuctionRecords& operator=(const AuctionRecords& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionRecords& default_instance();

  void Swap(AuctionRecords* other);

  // implements Message ----------------------------------------------

  AuctionRecords* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionRecords& from);
  void MergeFrom(const AuctionRecords& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 sourceType = 2;
  inline bool has_sourcetype() const;
  inline void clear_sourcetype();
  static const int kSourceTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 sourcetype() const;
  inline void set_sourcetype(::google::protobuf::uint32 value);

  // required uint32 sourceId = 3;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // required uint32 sourceNum = 4;
  inline bool has_sourcenum() const;
  inline void clear_sourcenum();
  static const int kSourceNumFieldNumber = 4;
  inline ::google::protobuf::uint32 sourcenum() const;
  inline void set_sourcenum(::google::protobuf::uint32 value);

  // required uint32 charid = 5;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 5;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 photo = 6;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 6;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 serverid = 8;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 8;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // required string servername = 9;
  inline bool has_servername() const;
  inline void clear_servername();
  static const int kServernameFieldNumber = 9;
  inline const ::std::string& servername() const;
  inline void set_servername(const ::std::string& value);
  inline void set_servername(const char* value);
  inline void set_servername(const char* value, size_t size);
  inline ::std::string* mutable_servername();
  inline ::std::string* release_servername();
  inline void set_allocated_servername(::std::string* servername);

  // required uint32 num = 10;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 10;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.AuctionRecords)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sourcetype();
  inline void clear_has_sourcetype();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_sourcenum();
  inline void clear_has_sourcenum();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_servername();
  inline void clear_has_servername();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 sourcetype_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint32 sourcenum_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 photo_;
  ::std::string* name_;
  ::std::string* servername_;
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static AuctionRecords* default_instance_;
};
// -------------------------------------------------------------------

class AuctionRoleInfo : public ::google::protobuf::Message {
 public:
  AuctionRoleInfo();
  virtual ~AuctionRoleInfo();

  AuctionRoleInfo(const AuctionRoleInfo& from);

  inline AuctionRoleInfo& operator=(const AuctionRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionRoleInfo& default_instance();

  void Swap(AuctionRoleInfo* other);

  // implements Message ----------------------------------------------

  AuctionRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionRoleInfo& from);
  void MergeFrom(const AuctionRoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 serverid = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // required uint32 photo = 3;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 3;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.AuctionRoleInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 serverid_;
  ::std::string* name_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static AuctionRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class AuctionRoleMap : public ::google::protobuf::Message {
 public:
  AuctionRoleMap();
  virtual ~AuctionRoleMap();

  AuctionRoleMap(const AuctionRoleMap& from);

  inline AuctionRoleMap& operator=(const AuctionRoleMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionRoleMap& default_instance();

  void Swap(AuctionRoleMap* other);

  // implements Message ----------------------------------------------

  AuctionRoleMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionRoleMap& from);
  void MergeFrom(const AuctionRoleMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.AuctionRoleInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::TgsProtocol::AuctionRoleInfo& info(int index) const;
  inline ::TgsProtocol::AuctionRoleInfo* mutable_info(int index);
  inline ::TgsProtocol::AuctionRoleInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:TgsProtocol.AuctionRoleMap)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleInfo > info_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static AuctionRoleMap* default_instance_;
};
// -------------------------------------------------------------------

class AuctionSerialize : public ::google::protobuf::Message {
 public:
  AuctionSerialize();
  virtual ~AuctionSerialize();

  AuctionSerialize(const AuctionSerialize& from);

  inline AuctionSerialize& operator=(const AuctionSerialize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionSerialize& default_instance();

  void Swap(AuctionSerialize* other);

  // implements Message ----------------------------------------------

  AuctionSerialize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionSerialize& from);
  void MergeFrom(const AuctionSerialize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 activityid = 2;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityidFieldNumber = 2;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);

  // required uint32 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.AuctionConfig conf = 4;
  inline int conf_size() const;
  inline void clear_conf();
  static const int kConfFieldNumber = 4;
  inline const ::TgsProtocol::AuctionConfig& conf(int index) const;
  inline ::TgsProtocol::AuctionConfig* mutable_conf(int index);
  inline ::TgsProtocol::AuctionConfig* add_conf();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionConfig >&
      conf() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionConfig >*
      mutable_conf();

  // repeated .TgsProtocol.AuctionRecords cur = 5;
  inline int cur_size() const;
  inline void clear_cur();
  static const int kCurFieldNumber = 5;
  inline const ::TgsProtocol::AuctionRecords& cur(int index) const;
  inline ::TgsProtocol::AuctionRecords* mutable_cur(int index);
  inline ::TgsProtocol::AuctionRecords* add_cur();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords >&
      cur() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords >*
      mutable_cur();

  // repeated .TgsProtocol.AuctionRecords last = 6;
  inline int last_size() const;
  inline void clear_last();
  static const int kLastFieldNumber = 6;
  inline const ::TgsProtocol::AuctionRecords& last(int index) const;
  inline ::TgsProtocol::AuctionRecords* mutable_last(int index);
  inline ::TgsProtocol::AuctionRecords* add_last();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords >&
      last() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords >*
      mutable_last();

  // repeated .TgsProtocol.AuctionRoleMap inf = 7;
  inline int inf_size() const;
  inline void clear_inf();
  static const int kInfFieldNumber = 7;
  inline const ::TgsProtocol::AuctionRoleMap& inf(int index) const;
  inline ::TgsProtocol::AuctionRoleMap* mutable_inf(int index);
  inline ::TgsProtocol::AuctionRoleMap* add_inf();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleMap >&
      inf() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleMap >*
      mutable_inf();

  // @@protoc_insertion_point(class_scope:TgsProtocol.AuctionSerialize)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_activityid();
  inline void clear_has_activityid();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 activityid_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionConfig > conf_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords > cur_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords > last_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleMap > inf_;
  ::google::protobuf::uint32 endtime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static AuctionSerialize* default_instance_;
};
// -------------------------------------------------------------------

class ReturnTask : public ::google::protobuf::Message {
 public:
  ReturnTask();
  virtual ~ReturnTask();

  ReturnTask(const ReturnTask& from);

  inline ReturnTask& operator=(const ReturnTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnTask& default_instance();

  void Swap(ReturnTask* other);

  // implements Message ----------------------------------------------

  ReturnTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnTask& from);
  void MergeFrom(const ReturnTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 step = 3;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 3;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // optional uint64 step64 = 4;
  inline bool has_step64() const;
  inline void clear_step64();
  static const int kStep64FieldNumber = 4;
  inline ::google::protobuf::uint64 step64() const;
  inline void set_step64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.ReturnTask)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_step64();
  inline void clear_has_step64();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint64 step64_;
  ::google::protobuf::uint32 step_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ReturnTask* default_instance_;
};
// -------------------------------------------------------------------

class DBReturnTask : public ::google::protobuf::Message {
 public:
  DBReturnTask();
  virtual ~DBReturnTask();

  DBReturnTask(const DBReturnTask& from);

  inline DBReturnTask& operator=(const DBReturnTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBReturnTask& default_instance();

  void Swap(DBReturnTask* other);

  // implements Message ----------------------------------------------

  DBReturnTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBReturnTask& from);
  void MergeFrom(const DBReturnTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.ReturnTask task = 1;
  inline int task_size() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::TgsProtocol::ReturnTask& task(int index) const;
  inline ::TgsProtocol::ReturnTask* mutable_task(int index);
  inline ::TgsProtocol::ReturnTask* add_task();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ReturnTask >&
      task() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ReturnTask >*
      mutable_task();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBReturnTask)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ReturnTask > task_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static DBReturnTask* default_instance_;
};
// -------------------------------------------------------------------

class RefineEquipImp : public ::google::protobuf::Message {
 public:
  RefineEquipImp();
  virtual ~RefineEquipImp();

  RefineEquipImp(const RefineEquipImp& from);

  inline RefineEquipImp& operator=(const RefineEquipImp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefineEquipImp& default_instance();

  void Swap(RefineEquipImp* other);

  // implements Message ----------------------------------------------

  RefineEquipImp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefineEquipImp& from);
  void MergeFrom(const RefineEquipImp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // required uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.RefineEquipImp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static RefineEquipImp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerRankData : public ::google::protobuf::Message {
 public:
  PlayerRankData();
  virtual ~PlayerRankData();

  PlayerRankData(const PlayerRankData& from);

  inline PlayerRankData& operator=(const PlayerRankData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRankData& default_instance();

  void Swap(PlayerRankData* other);

  // implements Message ----------------------------------------------

  PlayerRankData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerRankData& from);
  void MergeFrom(const PlayerRankData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_id = 1;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 server_id() const;
  inline void set_server_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string server_name = 4;
  inline bool has_server_name() const;
  inline void clear_server_name();
  static const int kServerNameFieldNumber = 4;
  inline const ::std::string& server_name() const;
  inline void set_server_name(const ::std::string& value);
  inline void set_server_name(const char* value);
  inline void set_server_name(const char* value, size_t size);
  inline ::std::string* mutable_server_name();
  inline ::std::string* release_server_name();
  inline void set_allocated_server_name(::std::string* server_name);

  // required uint64 rank_value = 5;
  inline bool has_rank_value() const;
  inline void clear_rank_value();
  static const int kRankValueFieldNumber = 5;
  inline ::google::protobuf::uint64 rank_value() const;
  inline void set_rank_value(::google::protobuf::uint64 value);

  // optional uint64 value1 = 6;
  inline bool has_value1() const;
  inline void clear_value1();
  static const int kValue1FieldNumber = 6;
  inline ::google::protobuf::uint64 value1() const;
  inline void set_value1(::google::protobuf::uint64 value);

  // optional uint64 value2 = 7;
  inline bool has_value2() const;
  inline void clear_value2();
  static const int kValue2FieldNumber = 7;
  inline ::google::protobuf::uint64 value2() const;
  inline void set_value2(::google::protobuf::uint64 value);

  // optional uint32 rank = 8;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 8;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional .TgsProtocol.ClientBattlePlayer battle_player = 9;
  inline bool has_battle_player() const;
  inline void clear_battle_player();
  static const int kBattlePlayerFieldNumber = 9;
  inline const ::TgsProtocol::ClientBattlePlayer& battle_player() const;
  inline ::TgsProtocol::ClientBattlePlayer* mutable_battle_player();
  inline ::TgsProtocol::ClientBattlePlayer* release_battle_player();
  inline void set_allocated_battle_player(::TgsProtocol::ClientBattlePlayer* battle_player);

  // @@protoc_insertion_point(class_scope:TgsProtocol.PlayerRankData)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_server_name();
  inline void clear_has_server_name();
  inline void set_has_rank_value();
  inline void clear_has_rank_value();
  inline void set_has_value1();
  inline void clear_has_value1();
  inline void set_has_value2();
  inline void clear_has_value2();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_battle_player();
  inline void clear_has_battle_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint64 charid_;
  ::std::string* server_name_;
  ::google::protobuf::uint64 rank_value_;
  ::google::protobuf::uint64 value1_;
  ::google::protobuf::uint64 value2_;
  ::TgsProtocol::ClientBattlePlayer* battle_player_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static PlayerRankData* default_instance_;
};
// -------------------------------------------------------------------

class ServerCompareInfo : public ::google::protobuf::Message {
 public:
  ServerCompareInfo();
  virtual ~ServerCompareInfo();

  ServerCompareInfo(const ServerCompareInfo& from);

  inline ServerCompareInfo& operator=(const ServerCompareInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCompareInfo& default_instance();

  void Swap(ServerCompareInfo* other);

  // implements Message ----------------------------------------------

  ServerCompareInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerCompareInfo& from);
  void MergeFrom(const ServerCompareInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint64 first_rank_charid = 2;
  inline bool has_first_rank_charid() const;
  inline void clear_first_rank_charid();
  static const int kFirstRankCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 first_rank_charid() const;
  inline void set_first_rank_charid(::google::protobuf::uint64 value);

  // required string first_rank_charname = 3;
  inline bool has_first_rank_charname() const;
  inline void clear_first_rank_charname();
  static const int kFirstRankCharnameFieldNumber = 3;
  inline const ::std::string& first_rank_charname() const;
  inline void set_first_rank_charname(const ::std::string& value);
  inline void set_first_rank_charname(const char* value);
  inline void set_first_rank_charname(const char* value, size_t size);
  inline ::std::string* mutable_first_rank_charname();
  inline ::std::string* release_first_rank_charname();
  inline void set_allocated_first_rank_charname(::std::string* first_rank_charname);

  // required uint32 my_rank = 4;
  inline bool has_my_rank() const;
  inline void clear_my_rank();
  static const int kMyRankFieldNumber = 4;
  inline ::google::protobuf::uint32 my_rank() const;
  inline void set_my_rank(::google::protobuf::uint32 value);

  // repeated uint32 get_reward_indexs = 5;
  inline int get_reward_indexs_size() const;
  inline void clear_get_reward_indexs();
  static const int kGetRewardIndexsFieldNumber = 5;
  inline ::google::protobuf::uint32 get_reward_indexs(int index) const;
  inline void set_get_reward_indexs(int index, ::google::protobuf::uint32 value);
  inline void add_get_reward_indexs(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      get_reward_indexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_get_reward_indexs();

  // @@protoc_insertion_point(class_scope:TgsProtocol.ServerCompareInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_first_rank_charid();
  inline void clear_has_first_rank_charid();
  inline void set_has_first_rank_charname();
  inline void clear_has_first_rank_charname();
  inline void set_has_my_rank();
  inline void clear_has_my_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 first_rank_charid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 my_rank_;
  ::std::string* first_rank_charname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > get_reward_indexs_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ServerCompareInfo* default_instance_;
};
// -------------------------------------------------------------------

class ServerCompareGot : public ::google::protobuf::Message {
 public:
  ServerCompareGot();
  virtual ~ServerCompareGot();

  ServerCompareGot(const ServerCompareGot& from);

  inline ServerCompareGot& operator=(const ServerCompareGot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCompareGot& default_instance();

  void Swap(ServerCompareGot* other);

  // implements Message ----------------------------------------------

  ServerCompareGot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerCompareGot& from);
  void MergeFrom(const ServerCompareGot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // repeated uint32 index = 2;
  inline int index_size() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index(int index) const;
  inline void set_index(int index, ::google::protobuf::uint32 value);
  inline void add_index(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_index();

  // @@protoc_insertion_point(class_scope:TgsProtocol.ServerCompareGot)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > index_;
  ::google::protobuf::uint32 day_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static ServerCompareGot* default_instance_;
};
// -------------------------------------------------------------------

class CenterRankInfo : public ::google::protobuf::Message {
 public:
  CenterRankInfo();
  virtual ~CenterRankInfo();

  CenterRankInfo(const CenterRankInfo& from);

  inline CenterRankInfo& operator=(const CenterRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterRankInfo& default_instance();

  void Swap(CenterRankInfo* other);

  // implements Message ----------------------------------------------

  CenterRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterRankInfo& from);
  void MergeFrom(const CenterRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TgsProtocol.ECenterRankType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::TgsProtocol::ECenterRankType type() const;
  inline void set_type(::TgsProtocol::ECenterRankType value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint64 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // required string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required string servername = 5;
  inline bool has_servername() const;
  inline void clear_servername();
  static const int kServernameFieldNumber = 5;
  inline const ::std::string& servername() const;
  inline void set_servername(const ::std::string& value);
  inline void set_servername(const char* value);
  inline void set_servername(const char* value, size_t size);
  inline ::std::string* mutable_servername();
  inline ::std::string* release_servername();
  inline void set_allocated_servername(::std::string* servername);

  // required uint32 rank = 6;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 6;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 nationalId = 7;
  inline bool has_nationalid() const;
  inline void clear_nationalid();
  static const int kNationalIdFieldNumber = 7;
  inline ::google::protobuf::uint32 nationalid() const;
  inline void set_nationalid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.CenterRankInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_servername();
  inline void clear_has_servername();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_nationalid();
  inline void clear_has_nationalid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 value_;
  int type_;
  ::google::protobuf::uint32 rank_;
  ::std::string* charname_;
  ::std::string* servername_;
  ::google::protobuf::uint32 nationalid_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static CenterRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class SeedInfo : public ::google::protobuf::Message {
 public:
  SeedInfo();
  virtual ~SeedInfo();

  SeedInfo(const SeedInfo& from);

  inline SeedInfo& operator=(const SeedInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeedInfo& default_instance();

  void Swap(SeedInfo* other);

  // implements Message ----------------------------------------------

  SeedInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeedInfo& from);
  void MergeFrom(const SeedInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seedId = 1;
  inline bool has_seedid() const;
  inline void clear_seedid();
  static const int kSeedIdFieldNumber = 1;
  inline ::google::protobuf::uint32 seedid() const;
  inline void set_seedid(::google::protobuf::uint32 value);

  // required uint32 plantTime = 2;
  inline bool has_planttime() const;
  inline void clear_planttime();
  static const int kPlantTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 planttime() const;
  inline void set_planttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.SeedInfo)
 private:
  inline void set_has_seedid();
  inline void clear_has_seedid();
  inline void set_has_planttime();
  inline void clear_has_planttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seedid_;
  ::google::protobuf::uint32 planttime_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static SeedInfo* default_instance_;
};
// -------------------------------------------------------------------

class GroundInfo : public ::google::protobuf::Message {
 public:
  GroundInfo();
  virtual ~GroundInfo();

  GroundInfo(const GroundInfo& from);

  inline GroundInfo& operator=(const GroundInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroundInfo& default_instance();

  void Swap(GroundInfo* other);

  // implements Message ----------------------------------------------

  GroundInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroundInfo& from);
  void MergeFrom(const GroundInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 GroundId = 1;
  inline bool has_groundid() const;
  inline void clear_groundid();
  static const int kGroundIdFieldNumber = 1;
  inline ::google::protobuf::uint32 groundid() const;
  inline void set_groundid(::google::protobuf::uint32 value);

  // required bool isReclaimed = 2;
  inline bool has_isreclaimed() const;
  inline void clear_isreclaimed();
  static const int kIsReclaimedFieldNumber = 2;
  inline bool isreclaimed() const;
  inline void set_isreclaimed(bool value);

  // optional .TgsProtocol.SeedInfo seed = 3;
  inline bool has_seed() const;
  inline void clear_seed();
  static const int kSeedFieldNumber = 3;
  inline const ::TgsProtocol::SeedInfo& seed() const;
  inline ::TgsProtocol::SeedInfo* mutable_seed();
  inline ::TgsProtocol::SeedInfo* release_seed();
  inline void set_allocated_seed(::TgsProtocol::SeedInfo* seed);

  // @@protoc_insertion_point(class_scope:TgsProtocol.GroundInfo)
 private:
  inline void set_has_groundid();
  inline void clear_has_groundid();
  inline void set_has_isreclaimed();
  inline void clear_has_isreclaimed();
  inline void set_has_seed();
  inline void clear_has_seed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 groundid_;
  bool isreclaimed_;
  ::TgsProtocol::SeedInfo* seed_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static GroundInfo* default_instance_;
};
// -------------------------------------------------------------------

class FarmNoticeInfo : public ::google::protobuf::Message {
 public:
  FarmNoticeInfo();
  virtual ~FarmNoticeInfo();

  FarmNoticeInfo(const FarmNoticeInfo& from);

  inline FarmNoticeInfo& operator=(const FarmNoticeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FarmNoticeInfo& default_instance();

  void Swap(FarmNoticeInfo* other);

  // implements Message ----------------------------------------------

  FarmNoticeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FarmNoticeInfo& from);
  void MergeFrom(const FarmNoticeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // required uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required .TgsProtocol.FarmNoticeType type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::TgsProtocol::FarmNoticeType type() const;
  inline void set_type(::TgsProtocol::FarmNoticeType value);

  // required .TgsProtocol.FarmNoticeStatus status = 6;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 6;
  inline ::TgsProtocol::FarmNoticeStatus status() const;
  inline void set_status(::TgsProtocol::FarmNoticeStatus value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.FarmNoticeInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 time_;
  int type_;
  ::std::string* charname_;
  int status_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static FarmNoticeInfo* default_instance_;
};
// -------------------------------------------------------------------

class FarmWell : public ::google::protobuf::Message {
 public:
  FarmWell();
  virtual ~FarmWell();

  FarmWell(const FarmWell& from);

  inline FarmWell& operator=(const FarmWell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FarmWell& default_instance();

  void Swap(FarmWell* other);

  // implements Message ----------------------------------------------

  FarmWell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FarmWell& from);
  void MergeFrom(const FarmWell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 water = 2;
  inline bool has_water() const;
  inline void clear_water();
  static const int kWaterFieldNumber = 2;
  inline ::google::protobuf::uint32 water() const;
  inline void set_water(::google::protobuf::uint32 value);

  // required uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.FarmWell)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_water();
  inline void clear_has_water();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 water_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static FarmWell* default_instance_;
};
// -------------------------------------------------------------------

class FarmInfo : public ::google::protobuf::Message {
 public:
  FarmInfo();
  virtual ~FarmInfo();

  FarmInfo(const FarmInfo& from);

  inline FarmInfo& operator=(const FarmInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FarmInfo& default_instance();

  void Swap(FarmInfo* other);

  // implements Message ----------------------------------------------

  FarmInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FarmInfo& from);
  void MergeFrom(const FarmInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string charname = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // repeated .TgsProtocol.GroundInfo grounds = 3;
  inline int grounds_size() const;
  inline void clear_grounds();
  static const int kGroundsFieldNumber = 3;
  inline const ::TgsProtocol::GroundInfo& grounds(int index) const;
  inline ::TgsProtocol::GroundInfo* mutable_grounds(int index);
  inline ::TgsProtocol::GroundInfo* add_grounds();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo >&
      grounds() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo >*
      mutable_grounds();

  // required .TgsProtocol.FarmWell well = 4;
  inline bool has_well() const;
  inline void clear_well();
  static const int kWellFieldNumber = 4;
  inline const ::TgsProtocol::FarmWell& well() const;
  inline ::TgsProtocol::FarmWell* mutable_well();
  inline ::TgsProtocol::FarmWell* release_well();
  inline void set_allocated_well(::TgsProtocol::FarmWell* well);

  // @@protoc_insertion_point(class_scope:TgsProtocol.FarmInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_well();
  inline void clear_has_well();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo > grounds_;
  ::TgsProtocol::FarmWell* well_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static FarmInfo* default_instance_;
};
// -------------------------------------------------------------------

class MonthCardPrize : public ::google::protobuf::Message {
 public:
  MonthCardPrize();
  virtual ~MonthCardPrize();

  MonthCardPrize(const MonthCardPrize& from);

  inline MonthCardPrize& operator=(const MonthCardPrize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonthCardPrize& default_instance();

  void Swap(MonthCardPrize* other);

  // implements Message ----------------------------------------------

  MonthCardPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonthCardPrize& from);
  void MergeFrom(const MonthCardPrize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 wordsid = 1;
  inline bool has_wordsid() const;
  inline void clear_wordsid();
  static const int kWordsidFieldNumber = 1;
  inline ::google::protobuf::uint32 wordsid() const;
  inline void set_wordsid(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.MonthCardPrize)
 private:
  inline void set_has_wordsid();
  inline void clear_has_wordsid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 wordsid_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static MonthCardPrize* default_instance_;
};
// -------------------------------------------------------------------

class FarmDB : public ::google::protobuf::Message {
 public:
  FarmDB();
  virtual ~FarmDB();

  FarmDB(const FarmDB& from);

  inline FarmDB& operator=(const FarmDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FarmDB& default_instance();

  void Swap(FarmDB* other);

  // implements Message ----------------------------------------------

  FarmDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FarmDB& from);
  void MergeFrom(const FarmDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.GroundInfo grounds = 1;
  inline int grounds_size() const;
  inline void clear_grounds();
  static const int kGroundsFieldNumber = 1;
  inline const ::TgsProtocol::GroundInfo& grounds(int index) const;
  inline ::TgsProtocol::GroundInfo* mutable_grounds(int index);
  inline ::TgsProtocol::GroundInfo* add_grounds();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo >&
      grounds() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo >*
      mutable_grounds();

  // optional .TgsProtocol.FarmWell well = 2;
  inline bool has_well() const;
  inline void clear_well();
  static const int kWellFieldNumber = 2;
  inline const ::TgsProtocol::FarmWell& well() const;
  inline ::TgsProtocol::FarmWell* mutable_well();
  inline ::TgsProtocol::FarmWell* release_well();
  inline void set_allocated_well(::TgsProtocol::FarmWell* well);

  // repeated .TgsProtocol.FarmNoticeInfo notice = 3;
  inline int notice_size() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 3;
  inline const ::TgsProtocol::FarmNoticeInfo& notice(int index) const;
  inline ::TgsProtocol::FarmNoticeInfo* mutable_notice(int index);
  inline ::TgsProtocol::FarmNoticeInfo* add_notice();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::FarmNoticeInfo >&
      notice() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::FarmNoticeInfo >*
      mutable_notice();

  // optional string signature = 4;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 4;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const char* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  inline void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:TgsProtocol.FarmDB)
 private:
  inline void set_has_well();
  inline void clear_has_well();
  inline void set_has_signature();
  inline void clear_has_signature();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo > grounds_;
  ::TgsProtocol::FarmWell* well_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::FarmNoticeInfo > notice_;
  ::std::string* signature_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static FarmDB* default_instance_;
};
// -------------------------------------------------------------------

class SeedBag : public ::google::protobuf::Message {
 public:
  SeedBag();
  virtual ~SeedBag();

  SeedBag(const SeedBag& from);

  inline SeedBag& operator=(const SeedBag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeedBag& default_instance();

  void Swap(SeedBag* other);

  // implements Message ----------------------------------------------

  SeedBag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeedBag& from);
  void MergeFrom(const SeedBag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.SeedSource seeds = 1;
  inline int seeds_size() const;
  inline void clear_seeds();
  static const int kSeedsFieldNumber = 1;
  inline const ::TgsProtocol::SeedSource& seeds(int index) const;
  inline ::TgsProtocol::SeedSource* mutable_seeds(int index);
  inline ::TgsProtocol::SeedSource* add_seeds();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SeedSource >&
      seeds() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SeedSource >*
      mutable_seeds();

  // @@protoc_insertion_point(class_scope:TgsProtocol.SeedBag)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SeedSource > seeds_;
  friend void  protobuf_AddDesc_PacketDef_2eproto();
  friend void protobuf_AssignDesc_PacketDef_2eproto();
  friend void protobuf_ShutdownFile_PacketDef_2eproto();

  void InitAsDefaultInstance();
  static SeedBag* default_instance_;
};
// ===================================================================


// ===================================================================

// NotFinQuest

// required uint32 questid = 1;
inline bool NotFinQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotFinQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotFinQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotFinQuest::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 NotFinQuest::questid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.NotFinQuest.questid)
  return questid_;
}
inline void NotFinQuest::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.NotFinQuest.questid)
}

// required uint32 complete = 2;
inline bool NotFinQuest::has_complete() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotFinQuest::set_has_complete() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotFinQuest::clear_has_complete() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotFinQuest::clear_complete() {
  complete_ = 0u;
  clear_has_complete();
}
inline ::google::protobuf::uint32 NotFinQuest::complete() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.NotFinQuest.complete)
  return complete_;
}
inline void NotFinQuest::set_complete(::google::protobuf::uint32 value) {
  set_has_complete();
  complete_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.NotFinQuest.complete)
}

// required uint32 targetValue = 3;
inline bool NotFinQuest::has_targetvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotFinQuest::set_has_targetvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotFinQuest::clear_has_targetvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotFinQuest::clear_targetvalue() {
  targetvalue_ = 0u;
  clear_has_targetvalue();
}
inline ::google::protobuf::uint32 NotFinQuest::targetvalue() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.NotFinQuest.targetValue)
  return targetvalue_;
}
inline void NotFinQuest::set_targetvalue(::google::protobuf::uint32 value) {
  set_has_targetvalue();
  targetvalue_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.NotFinQuest.targetValue)
}

// optional uint32 show = 4;
inline bool NotFinQuest::has_show() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotFinQuest::set_has_show() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotFinQuest::clear_has_show() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotFinQuest::clear_show() {
  show_ = 0u;
  clear_has_show();
}
inline ::google::protobuf::uint32 NotFinQuest::show() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.NotFinQuest.show)
  return show_;
}
inline void NotFinQuest::set_show(::google::protobuf::uint32 value) {
  set_has_show();
  show_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.NotFinQuest.show)
}

// optional uint32 got = 5;
inline bool NotFinQuest::has_got() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotFinQuest::set_has_got() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotFinQuest::clear_has_got() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotFinQuest::clear_got() {
  got_ = 0u;
  clear_has_got();
}
inline ::google::protobuf::uint32 NotFinQuest::got() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.NotFinQuest.got)
  return got_;
}
inline void NotFinQuest::set_got(::google::protobuf::uint32 value) {
  set_has_got();
  got_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.NotFinQuest.got)
}

// optional uint32 completeTime = 6;
inline bool NotFinQuest::has_completetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotFinQuest::set_has_completetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotFinQuest::clear_has_completetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotFinQuest::clear_completetime() {
  completetime_ = 0u;
  clear_has_completetime();
}
inline ::google::protobuf::uint32 NotFinQuest::completetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.NotFinQuest.completeTime)
  return completetime_;
}
inline void NotFinQuest::set_completetime(::google::protobuf::uint32 value) {
  set_has_completetime();
  completetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.NotFinQuest.completeTime)
}

// optional uint64 targetValue64 = 7;
inline bool NotFinQuest::has_targetvalue64() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotFinQuest::set_has_targetvalue64() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotFinQuest::clear_has_targetvalue64() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotFinQuest::clear_targetvalue64() {
  targetvalue64_ = GOOGLE_ULONGLONG(0);
  clear_has_targetvalue64();
}
inline ::google::protobuf::uint64 NotFinQuest::targetvalue64() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.NotFinQuest.targetValue64)
  return targetvalue64_;
}
inline void NotFinQuest::set_targetvalue64(::google::protobuf::uint64 value) {
  set_has_targetvalue64();
  targetvalue64_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.NotFinQuest.targetValue64)
}

// -------------------------------------------------------------------

// DbQuest

// repeated uint32 commitquests = 1;
inline int DbQuest::commitquests_size() const {
  return commitquests_.size();
}
inline void DbQuest::clear_commitquests() {
  commitquests_.Clear();
}
inline ::google::protobuf::uint32 DbQuest::commitquests(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbQuest.commitquests)
  return commitquests_.Get(index);
}
inline void DbQuest::set_commitquests(int index, ::google::protobuf::uint32 value) {
  commitquests_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbQuest.commitquests)
}
inline void DbQuest::add_commitquests(::google::protobuf::uint32 value) {
  commitquests_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DbQuest.commitquests)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DbQuest::commitquests() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbQuest.commitquests)
  return commitquests_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DbQuest::mutable_commitquests() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbQuest.commitquests)
  return &commitquests_;
}

// repeated .TgsProtocol.NotFinQuest notfinquests = 2;
inline int DbQuest::notfinquests_size() const {
  return notfinquests_.size();
}
inline void DbQuest::clear_notfinquests() {
  notfinquests_.Clear();
}
inline const ::TgsProtocol::NotFinQuest& DbQuest::notfinquests(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbQuest.notfinquests)
  return notfinquests_.Get(index);
}
inline ::TgsProtocol::NotFinQuest* DbQuest::mutable_notfinquests(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbQuest.notfinquests)
  return notfinquests_.Mutable(index);
}
inline ::TgsProtocol::NotFinQuest* DbQuest::add_notfinquests() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DbQuest.notfinquests)
  return notfinquests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::NotFinQuest >&
DbQuest::notfinquests() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbQuest.notfinquests)
  return notfinquests_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::NotFinQuest >*
DbQuest::mutable_notfinquests() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbQuest.notfinquests)
  return &notfinquests_;
}

// -------------------------------------------------------------------

// CoinInfo

// required uint32 coinType = 1;
inline bool CoinInfo::has_cointype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoinInfo::set_has_cointype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoinInfo::clear_has_cointype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoinInfo::clear_cointype() {
  cointype_ = 0u;
  clear_has_cointype();
}
inline ::google::protobuf::uint32 CoinInfo::cointype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.CoinInfo.coinType)
  return cointype_;
}
inline void CoinInfo::set_cointype(::google::protobuf::uint32 value) {
  set_has_cointype();
  cointype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.CoinInfo.coinType)
}

// required uint32 coinNum = 2;
inline bool CoinInfo::has_coinnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CoinInfo::set_has_coinnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CoinInfo::clear_has_coinnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CoinInfo::clear_coinnum() {
  coinnum_ = 0u;
  clear_has_coinnum();
}
inline ::google::protobuf::uint32 CoinInfo::coinnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.CoinInfo.coinNum)
  return coinnum_;
}
inline void CoinInfo::set_coinnum(::google::protobuf::uint32 value) {
  set_has_coinnum();
  coinnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.CoinInfo.coinNum)
}

// -------------------------------------------------------------------

// ItemInfo

// required uint32 templateid = 1;
inline bool ItemInfo::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemInfo::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemInfo::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemInfo::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 ItemInfo::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ItemInfo.templateid)
  return templateid_;
}
inline void ItemInfo::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ItemInfo.templateid)
}

// required uint32 totalnum = 2;
inline bool ItemInfo::has_totalnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemInfo::set_has_totalnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemInfo::clear_has_totalnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemInfo::clear_totalnum() {
  totalnum_ = 0u;
  clear_has_totalnum();
}
inline ::google::protobuf::uint32 ItemInfo::totalnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ItemInfo.totalnum)
  return totalnum_;
}
inline void ItemInfo::set_totalnum(::google::protobuf::uint32 value) {
  set_has_totalnum();
  totalnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ItemInfo.totalnum)
}

// optional uint32 value1 = 3;
inline bool ItemInfo::has_value1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemInfo::set_has_value1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemInfo::clear_has_value1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemInfo::clear_value1() {
  value1_ = 0u;
  clear_has_value1();
}
inline ::google::protobuf::uint32 ItemInfo::value1() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ItemInfo.value1)
  return value1_;
}
inline void ItemInfo::set_value1(::google::protobuf::uint32 value) {
  set_has_value1();
  value1_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ItemInfo.value1)
}

// optional uint32 value2 = 4;
inline bool ItemInfo::has_value2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemInfo::set_has_value2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemInfo::clear_has_value2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemInfo::clear_value2() {
  value2_ = 0u;
  clear_has_value2();
}
inline ::google::protobuf::uint32 ItemInfo::value2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ItemInfo.value2)
  return value2_;
}
inline void ItemInfo::set_value2(::google::protobuf::uint32 value) {
  set_has_value2();
  value2_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ItemInfo.value2)
}

// -------------------------------------------------------------------

// SeedSource

// required uint32 seedId = 1;
inline bool SeedSource::has_seedid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeedSource::set_has_seedid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeedSource::clear_has_seedid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeedSource::clear_seedid() {
  seedid_ = 0u;
  clear_has_seedid();
}
inline ::google::protobuf::uint32 SeedSource::seedid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SeedSource.seedId)
  return seedid_;
}
inline void SeedSource::set_seedid(::google::protobuf::uint32 value) {
  set_has_seedid();
  seedid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.SeedSource.seedId)
}

// required uint32 totalnum = 2;
inline bool SeedSource::has_totalnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeedSource::set_has_totalnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeedSource::clear_has_totalnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeedSource::clear_totalnum() {
  totalnum_ = 0u;
  clear_has_totalnum();
}
inline ::google::protobuf::uint32 SeedSource::totalnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SeedSource.totalnum)
  return totalnum_;
}
inline void SeedSource::set_totalnum(::google::protobuf::uint32 value) {
  set_has_totalnum();
  totalnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.SeedSource.totalnum)
}

// -------------------------------------------------------------------

// DBGodEquip

// required uint32 templateid = 1;
inline bool DBGodEquip::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBGodEquip::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBGodEquip::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBGodEquip::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 DBGodEquip::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGodEquip.templateid)
  return templateid_;
}
inline void DBGodEquip::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGodEquip.templateid)
}

// required uint32 totalnum = 2;
inline bool DBGodEquip::has_totalnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBGodEquip::set_has_totalnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBGodEquip::clear_has_totalnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBGodEquip::clear_totalnum() {
  totalnum_ = 0u;
  clear_has_totalnum();
}
inline ::google::protobuf::uint32 DBGodEquip::totalnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGodEquip.totalnum)
  return totalnum_;
}
inline void DBGodEquip::set_totalnum(::google::protobuf::uint32 value) {
  set_has_totalnum();
  totalnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGodEquip.totalnum)
}

// -------------------------------------------------------------------

// DbBagInfo

// repeated .TgsProtocol.ItemInfo prop = 1;
inline int DbBagInfo::prop_size() const {
  return prop_.size();
}
inline void DbBagInfo::clear_prop() {
  prop_.Clear();
}
inline const ::TgsProtocol::ItemInfo& DbBagInfo::prop(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbBagInfo.prop)
  return prop_.Get(index);
}
inline ::TgsProtocol::ItemInfo* DbBagInfo::mutable_prop(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbBagInfo.prop)
  return prop_.Mutable(index);
}
inline ::TgsProtocol::ItemInfo* DbBagInfo::add_prop() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DbBagInfo.prop)
  return prop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ItemInfo >&
DbBagInfo::prop() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbBagInfo.prop)
  return prop_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ItemInfo >*
DbBagInfo::mutable_prop() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbBagInfo.prop)
  return &prop_;
}

// -------------------------------------------------------------------

// DBEvaluation

// required uint32 instanceId = 1;
inline bool DBEvaluation::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBEvaluation::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBEvaluation::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBEvaluation::clear_instanceid() {
  instanceid_ = 0u;
  clear_has_instanceid();
}
inline ::google::protobuf::uint32 DBEvaluation::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEvaluation.instanceId)
  return instanceid_;
}
inline void DBEvaluation::set_instanceid(::google::protobuf::uint32 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEvaluation.instanceId)
}

// required uint32 evaluation = 2;
inline bool DBEvaluation::has_evaluation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBEvaluation::set_has_evaluation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBEvaluation::clear_has_evaluation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBEvaluation::clear_evaluation() {
  evaluation_ = 0u;
  clear_has_evaluation();
}
inline ::google::protobuf::uint32 DBEvaluation::evaluation() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEvaluation.evaluation)
  return evaluation_;
}
inline void DBEvaluation::set_evaluation(::google::protobuf::uint32 value) {
  set_has_evaluation();
  evaluation_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEvaluation.evaluation)
}

// required uint32 challengeTimes = 3;
inline bool DBEvaluation::has_challengetimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBEvaluation::set_has_challengetimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBEvaluation::clear_has_challengetimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBEvaluation::clear_challengetimes() {
  challengetimes_ = 0u;
  clear_has_challengetimes();
}
inline ::google::protobuf::uint32 DBEvaluation::challengetimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEvaluation.challengeTimes)
  return challengetimes_;
}
inline void DBEvaluation::set_challengetimes(::google::protobuf::uint32 value) {
  set_has_challengetimes();
  challengetimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEvaluation.challengeTimes)
}

// required uint32 resetTimes = 4;
inline bool DBEvaluation::has_resettimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBEvaluation::set_has_resettimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBEvaluation::clear_has_resettimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBEvaluation::clear_resettimes() {
  resettimes_ = 0u;
  clear_has_resettimes();
}
inline ::google::protobuf::uint32 DBEvaluation::resettimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEvaluation.resetTimes)
  return resettimes_;
}
inline void DBEvaluation::set_resettimes(::google::protobuf::uint32 value) {
  set_has_resettimes();
  resettimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEvaluation.resetTimes)
}

// -------------------------------------------------------------------

// DBEvaluationList

// repeated .TgsProtocol.DBEvaluation evaluation = 1;
inline int DBEvaluationList::evaluation_size() const {
  return evaluation_.size();
}
inline void DBEvaluationList::clear_evaluation() {
  evaluation_.Clear();
}
inline const ::TgsProtocol::DBEvaluation& DBEvaluationList::evaluation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEvaluationList.evaluation)
  return evaluation_.Get(index);
}
inline ::TgsProtocol::DBEvaluation* DBEvaluationList::mutable_evaluation(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBEvaluationList.evaluation)
  return evaluation_.Mutable(index);
}
inline ::TgsProtocol::DBEvaluation* DBEvaluationList::add_evaluation() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBEvaluationList.evaluation)
  return evaluation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEvaluation >&
DBEvaluationList::evaluation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBEvaluationList.evaluation)
  return evaluation_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEvaluation >*
DBEvaluationList::mutable_evaluation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBEvaluationList.evaluation)
  return &evaluation_;
}

// optional uint32 share_count = 2;
inline bool DBEvaluationList::has_share_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBEvaluationList::set_has_share_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBEvaluationList::clear_has_share_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBEvaluationList::clear_share_count() {
  share_count_ = 0u;
  clear_has_share_count();
}
inline ::google::protobuf::uint32 DBEvaluationList::share_count() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEvaluationList.share_count)
  return share_count_;
}
inline void DBEvaluationList::set_share_count(::google::protobuf::uint32 value) {
  set_has_share_count();
  share_count_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEvaluationList.share_count)
}

// optional uint32 share_buy = 3;
inline bool DBEvaluationList::has_share_buy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBEvaluationList::set_has_share_buy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBEvaluationList::clear_has_share_buy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBEvaluationList::clear_share_buy() {
  share_buy_ = 0u;
  clear_has_share_buy();
}
inline ::google::protobuf::uint32 DBEvaluationList::share_buy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEvaluationList.share_buy)
  return share_buy_;
}
inline void DBEvaluationList::set_share_buy(::google::protobuf::uint32 value) {
  set_has_share_buy();
  share_buy_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEvaluationList.share_buy)
}

// -------------------------------------------------------------------

// DBChapterRewardList

// repeated uint32 chapterReward = 1;
inline int DBChapterRewardList::chapterreward_size() const {
  return chapterreward_.size();
}
inline void DBChapterRewardList::clear_chapterreward() {
  chapterreward_.Clear();
}
inline ::google::protobuf::uint32 DBChapterRewardList::chapterreward(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBChapterRewardList.chapterReward)
  return chapterreward_.Get(index);
}
inline void DBChapterRewardList::set_chapterreward(int index, ::google::protobuf::uint32 value) {
  chapterreward_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBChapterRewardList.chapterReward)
}
inline void DBChapterRewardList::add_chapterreward(::google::protobuf::uint32 value) {
  chapterreward_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBChapterRewardList.chapterReward)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBChapterRewardList::chapterreward() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBChapterRewardList.chapterReward)
  return chapterreward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBChapterRewardList::mutable_chapterreward() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBChapterRewardList.chapterReward)
  return &chapterreward_;
}

// -------------------------------------------------------------------

// DBHeroEquip

// required uint32 templateId = 1;
inline bool DBHeroEquip::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBHeroEquip::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBHeroEquip::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBHeroEquip::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 DBHeroEquip::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroEquip.templateId)
  return templateid_;
}
inline void DBHeroEquip::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroEquip.templateId)
}

// required uint32 star = 2;
inline bool DBHeroEquip::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBHeroEquip::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBHeroEquip::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBHeroEquip::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 DBHeroEquip::star() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroEquip.star)
  return star_;
}
inline void DBHeroEquip::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroEquip.star)
}

// repeated uint32 attrVal = 3;
inline int DBHeroEquip::attrval_size() const {
  return attrval_.size();
}
inline void DBHeroEquip::clear_attrval() {
  attrval_.Clear();
}
inline ::google::protobuf::uint32 DBHeroEquip::attrval(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroEquip.attrVal)
  return attrval_.Get(index);
}
inline void DBHeroEquip::set_attrval(int index, ::google::protobuf::uint32 value) {
  attrval_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroEquip.attrVal)
}
inline void DBHeroEquip::add_attrval(::google::protobuf::uint32 value) {
  attrval_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBHeroEquip.attrVal)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBHeroEquip::attrval() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBHeroEquip.attrVal)
  return attrval_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBHeroEquip::mutable_attrval() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBHeroEquip.attrVal)
  return &attrval_;
}

// repeated uint32 scheduleVal = 4;
inline int DBHeroEquip::scheduleval_size() const {
  return scheduleval_.size();
}
inline void DBHeroEquip::clear_scheduleval() {
  scheduleval_.Clear();
}
inline ::google::protobuf::uint32 DBHeroEquip::scheduleval(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroEquip.scheduleVal)
  return scheduleval_.Get(index);
}
inline void DBHeroEquip::set_scheduleval(int index, ::google::protobuf::uint32 value) {
  scheduleval_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroEquip.scheduleVal)
}
inline void DBHeroEquip::add_scheduleval(::google::protobuf::uint32 value) {
  scheduleval_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBHeroEquip.scheduleVal)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBHeroEquip::scheduleval() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBHeroEquip.scheduleVal)
  return scheduleval_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBHeroEquip::mutable_scheduleval() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBHeroEquip.scheduleVal)
  return &scheduleval_;
}

// -------------------------------------------------------------------

// DBEquipNew

// required uint32 templateId = 1;
inline bool DBEquipNew::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBEquipNew::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBEquipNew::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBEquipNew::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 DBEquipNew::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEquipNew.templateId)
  return templateid_;
}
inline void DBEquipNew::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEquipNew.templateId)
}

// required uint64 instanceId = 2;
inline bool DBEquipNew::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBEquipNew::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBEquipNew::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBEquipNew::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::uint64 DBEquipNew::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEquipNew.instanceId)
  return instanceid_;
}
inline void DBEquipNew::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEquipNew.instanceId)
}

// required uint32 strengLevel = 3;
inline bool DBEquipNew::has_strenglevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBEquipNew::set_has_strenglevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBEquipNew::clear_has_strenglevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBEquipNew::clear_strenglevel() {
  strenglevel_ = 0u;
  clear_has_strenglevel();
}
inline ::google::protobuf::uint32 DBEquipNew::strenglevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEquipNew.strengLevel)
  return strenglevel_;
}
inline void DBEquipNew::set_strenglevel(::google::protobuf::uint32 value) {
  set_has_strenglevel();
  strenglevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEquipNew.strengLevel)
}

// required uint32 refineLevel = 4;
inline bool DBEquipNew::has_refinelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBEquipNew::set_has_refinelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBEquipNew::clear_has_refinelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBEquipNew::clear_refinelevel() {
  refinelevel_ = 0u;
  clear_has_refinelevel();
}
inline ::google::protobuf::uint32 DBEquipNew::refinelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEquipNew.refineLevel)
  return refinelevel_;
}
inline void DBEquipNew::set_refinelevel(::google::protobuf::uint32 value) {
  set_has_refinelevel();
  refinelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEquipNew.refineLevel)
}

// optional uint32 starLevel = 5;
inline bool DBEquipNew::has_starlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBEquipNew::set_has_starlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBEquipNew::clear_has_starlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBEquipNew::clear_starlevel() {
  starlevel_ = 0u;
  clear_has_starlevel();
}
inline ::google::protobuf::uint32 DBEquipNew::starlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEquipNew.starLevel)
  return starlevel_;
}
inline void DBEquipNew::set_starlevel(::google::protobuf::uint32 value) {
  set_has_starlevel();
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEquipNew.starLevel)
}

// optional uint32 strengExp = 6;
inline bool DBEquipNew::has_strengexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBEquipNew::set_has_strengexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBEquipNew::clear_has_strengexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBEquipNew::clear_strengexp() {
  strengexp_ = 0u;
  clear_has_strengexp();
}
inline ::google::protobuf::uint32 DBEquipNew::strengexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEquipNew.strengExp)
  return strengexp_;
}
inline void DBEquipNew::set_strengexp(::google::protobuf::uint32 value) {
  set_has_strengexp();
  strengexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEquipNew.strengExp)
}

// optional uint32 refineExp = 7;
inline bool DBEquipNew::has_refineexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBEquipNew::set_has_refineexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBEquipNew::clear_has_refineexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBEquipNew::clear_refineexp() {
  refineexp_ = 0u;
  clear_has_refineexp();
}
inline ::google::protobuf::uint32 DBEquipNew::refineexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEquipNew.refineExp)
  return refineexp_;
}
inline void DBEquipNew::set_refineexp(::google::protobuf::uint32 value) {
  set_has_refineexp();
  refineexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEquipNew.refineExp)
}

// -------------------------------------------------------------------

// DBEquipNewList

// repeated .TgsProtocol.DBEquipNew equipNewList = 1;
inline int DBEquipNewList::equipnewlist_size() const {
  return equipnewlist_.size();
}
inline void DBEquipNewList::clear_equipnewlist() {
  equipnewlist_.Clear();
}
inline const ::TgsProtocol::DBEquipNew& DBEquipNewList::equipnewlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEquipNewList.equipNewList)
  return equipnewlist_.Get(index);
}
inline ::TgsProtocol::DBEquipNew* DBEquipNewList::mutable_equipnewlist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBEquipNewList.equipNewList)
  return equipnewlist_.Mutable(index);
}
inline ::TgsProtocol::DBEquipNew* DBEquipNewList::add_equipnewlist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBEquipNewList.equipNewList)
  return equipnewlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew >&
DBEquipNewList::equipnewlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBEquipNewList.equipNewList)
  return equipnewlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew >*
DBEquipNewList::mutable_equipnewlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBEquipNewList.equipNewList)
  return &equipnewlist_;
}

// -------------------------------------------------------------------

// DBHeroInfo

// required uint32 templateId = 1;
inline bool DBHeroInfo::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBHeroInfo::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBHeroInfo::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBHeroInfo::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 DBHeroInfo::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.templateId)
  return templateid_;
}
inline void DBHeroInfo::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.templateId)
}

// required uint64 instanceId = 2;
inline bool DBHeroInfo::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBHeroInfo::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBHeroInfo::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBHeroInfo::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::uint64 DBHeroInfo::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.instanceId)
  return instanceid_;
}
inline void DBHeroInfo::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.instanceId)
}

// required uint32 level = 3;
inline bool DBHeroInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBHeroInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBHeroInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBHeroInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 DBHeroInfo::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.level)
  return level_;
}
inline void DBHeroInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.level)
}

// required uint32 exp = 4;
inline bool DBHeroInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBHeroInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBHeroInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBHeroInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 DBHeroInfo::exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.exp)
  return exp_;
}
inline void DBHeroInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.exp)
}

// required uint32 evolutionLevel = 5;
inline bool DBHeroInfo::has_evolutionlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBHeroInfo::set_has_evolutionlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBHeroInfo::clear_has_evolutionlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBHeroInfo::clear_evolutionlevel() {
  evolutionlevel_ = 0u;
  clear_has_evolutionlevel();
}
inline ::google::protobuf::uint32 DBHeroInfo::evolutionlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.evolutionLevel)
  return evolutionlevel_;
}
inline void DBHeroInfo::set_evolutionlevel(::google::protobuf::uint32 value) {
  set_has_evolutionlevel();
  evolutionlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.evolutionLevel)
}

// required uint32 forceLevel = 6;
inline bool DBHeroInfo::has_forcelevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBHeroInfo::set_has_forcelevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBHeroInfo::clear_has_forcelevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBHeroInfo::clear_forcelevel() {
  forcelevel_ = 0u;
  clear_has_forcelevel();
}
inline ::google::protobuf::uint32 DBHeroInfo::forcelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.forceLevel)
  return forcelevel_;
}
inline void DBHeroInfo::set_forcelevel(::google::protobuf::uint32 value) {
  set_has_forcelevel();
  forcelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.forceLevel)
}

// repeated .TgsProtocol.DBHeroEquip equip = 7;
inline int DBHeroInfo::equip_size() const {
  return equip_.size();
}
inline void DBHeroInfo::clear_equip() {
  equip_.Clear();
}
inline const ::TgsProtocol::DBHeroEquip& DBHeroInfo::equip(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.equip)
  return equip_.Get(index);
}
inline ::TgsProtocol::DBHeroEquip* DBHeroInfo::mutable_equip(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBHeroInfo.equip)
  return equip_.Mutable(index);
}
inline ::TgsProtocol::DBHeroEquip* DBHeroInfo::add_equip() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBHeroInfo.equip)
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip >&
DBHeroInfo::equip() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBHeroInfo.equip)
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip >*
DBHeroInfo::mutable_equip() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBHeroInfo.equip)
  return &equip_;
}

// repeated uint32 skill = 8;
inline int DBHeroInfo::skill_size() const {
  return skill_.size();
}
inline void DBHeroInfo::clear_skill() {
  skill_.Clear();
}
inline ::google::protobuf::uint32 DBHeroInfo::skill(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.skill)
  return skill_.Get(index);
}
inline void DBHeroInfo::set_skill(int index, ::google::protobuf::uint32 value) {
  skill_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.skill)
}
inline void DBHeroInfo::add_skill(::google::protobuf::uint32 value) {
  skill_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBHeroInfo.skill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBHeroInfo::skill() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBHeroInfo.skill)
  return skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBHeroInfo::mutable_skill() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBHeroInfo.skill)
  return &skill_;
}

// optional bytes heroName = 9;
inline bool DBHeroInfo::has_heroname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBHeroInfo::set_has_heroname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBHeroInfo::clear_has_heroname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBHeroInfo::clear_heroname() {
  if (heroname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_->clear();
  }
  clear_has_heroname();
}
inline const ::std::string& DBHeroInfo::heroname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.heroName)
  return *heroname_;
}
inline void DBHeroInfo::set_heroname(const ::std::string& value) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.heroName)
}
inline void DBHeroInfo::set_heroname(const char* value) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBHeroInfo.heroName)
}
inline void DBHeroInfo::set_heroname(const void* value, size_t size) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBHeroInfo.heroName)
}
inline ::std::string* DBHeroInfo::mutable_heroname() {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBHeroInfo.heroName)
  return heroname_;
}
inline ::std::string* DBHeroInfo::release_heroname() {
  clear_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = heroname_;
    heroname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBHeroInfo::set_allocated_heroname(::std::string* heroname) {
  if (heroname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete heroname_;
  }
  if (heroname) {
    set_has_heroname();
    heroname_ = heroname;
  } else {
    clear_has_heroname();
    heroname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBHeroInfo.heroName)
}

// repeated uint64 equipNew = 10;
inline int DBHeroInfo::equipnew_size() const {
  return equipnew_.size();
}
inline void DBHeroInfo::clear_equipnew() {
  equipnew_.Clear();
}
inline ::google::protobuf::uint64 DBHeroInfo::equipnew(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.equipNew)
  return equipnew_.Get(index);
}
inline void DBHeroInfo::set_equipnew(int index, ::google::protobuf::uint64 value) {
  equipnew_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.equipNew)
}
inline void DBHeroInfo::add_equipnew(::google::protobuf::uint64 value) {
  equipnew_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBHeroInfo.equipNew)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DBHeroInfo::equipnew() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBHeroInfo.equipNew)
  return equipnew_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DBHeroInfo::mutable_equipnew() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBHeroInfo.equipNew)
  return &equipnew_;
}

// optional uint32 fashionId = 11;
inline bool DBHeroInfo::has_fashionid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DBHeroInfo::set_has_fashionid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DBHeroInfo::clear_has_fashionid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DBHeroInfo::clear_fashionid() {
  fashionid_ = 0u;
  clear_has_fashionid();
}
inline ::google::protobuf::uint32 DBHeroInfo::fashionid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.fashionId)
  return fashionid_;
}
inline void DBHeroInfo::set_fashionid(::google::protobuf::uint32 value) {
  set_has_fashionid();
  fashionid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.fashionId)
}

// optional uint32 deificationlevel = 12;
inline bool DBHeroInfo::has_deificationlevel() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DBHeroInfo::set_has_deificationlevel() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DBHeroInfo::clear_has_deificationlevel() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DBHeroInfo::clear_deificationlevel() {
  deificationlevel_ = 0u;
  clear_has_deificationlevel();
}
inline ::google::protobuf::uint32 DBHeroInfo::deificationlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.deificationlevel)
  return deificationlevel_;
}
inline void DBHeroInfo::set_deificationlevel(::google::protobuf::uint32 value) {
  set_has_deificationlevel();
  deificationlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.deificationlevel)
}

// optional uint32 wingslevel = 13;
inline bool DBHeroInfo::has_wingslevel() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DBHeroInfo::set_has_wingslevel() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DBHeroInfo::clear_has_wingslevel() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DBHeroInfo::clear_wingslevel() {
  wingslevel_ = 0u;
  clear_has_wingslevel();
}
inline ::google::protobuf::uint32 DBHeroInfo::wingslevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.wingslevel)
  return wingslevel_;
}
inline void DBHeroInfo::set_wingslevel(::google::protobuf::uint32 value) {
  set_has_wingslevel();
  wingslevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.wingslevel)
}

// optional uint32 wingsrate = 14;
inline bool DBHeroInfo::has_wingsrate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DBHeroInfo::set_has_wingsrate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DBHeroInfo::clear_has_wingsrate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DBHeroInfo::clear_wingsrate() {
  wingsrate_ = 0u;
  clear_has_wingsrate();
}
inline ::google::protobuf::uint32 DBHeroInfo::wingsrate() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.wingsrate)
  return wingsrate_;
}
inline void DBHeroInfo::set_wingsrate(::google::protobuf::uint32 value) {
  set_has_wingsrate();
  wingsrate_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.wingsrate)
}

// repeated .TgsProtocol.ClientSource sources = 15;
inline int DBHeroInfo::sources_size() const {
  return sources_.size();
}
inline void DBHeroInfo::clear_sources() {
  sources_.Clear();
}
inline const ::TgsProtocol::ClientSource& DBHeroInfo::sources(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.sources)
  return sources_.Get(index);
}
inline ::TgsProtocol::ClientSource* DBHeroInfo::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBHeroInfo.sources)
  return sources_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* DBHeroInfo::add_sources() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBHeroInfo.sources)
  return sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
DBHeroInfo::sources() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBHeroInfo.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
DBHeroInfo::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBHeroInfo.sources)
  return &sources_;
}

// optional uint32 wakeLevel = 16;
inline bool DBHeroInfo::has_wakelevel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DBHeroInfo::set_has_wakelevel() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DBHeroInfo::clear_has_wakelevel() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DBHeroInfo::clear_wakelevel() {
  wakelevel_ = 0u;
  clear_has_wakelevel();
}
inline ::google::protobuf::uint32 DBHeroInfo::wakelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.wakeLevel)
  return wakelevel_;
}
inline void DBHeroInfo::set_wakelevel(::google::protobuf::uint32 value) {
  set_has_wakelevel();
  wakelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.wakeLevel)
}

// repeated uint32 wakeEquips = 17;
inline int DBHeroInfo::wakeequips_size() const {
  return wakeequips_.size();
}
inline void DBHeroInfo::clear_wakeequips() {
  wakeequips_.Clear();
}
inline ::google::protobuf::uint32 DBHeroInfo::wakeequips(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroInfo.wakeEquips)
  return wakeequips_.Get(index);
}
inline void DBHeroInfo::set_wakeequips(int index, ::google::protobuf::uint32 value) {
  wakeequips_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBHeroInfo.wakeEquips)
}
inline void DBHeroInfo::add_wakeequips(::google::protobuf::uint32 value) {
  wakeequips_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBHeroInfo.wakeEquips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBHeroInfo::wakeequips() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBHeroInfo.wakeEquips)
  return wakeequips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBHeroInfo::mutable_wakeequips() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBHeroInfo.wakeEquips)
  return &wakeequips_;
}

// -------------------------------------------------------------------

// DBHeroList

// repeated .TgsProtocol.DBHeroInfo heroList = 1;
inline int DBHeroList::herolist_size() const {
  return herolist_.size();
}
inline void DBHeroList::clear_herolist() {
  herolist_.Clear();
}
inline const ::TgsProtocol::DBHeroInfo& DBHeroList::herolist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBHeroList.heroList)
  return herolist_.Get(index);
}
inline ::TgsProtocol::DBHeroInfo* DBHeroList::mutable_herolist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBHeroList.heroList)
  return herolist_.Mutable(index);
}
inline ::TgsProtocol::DBHeroInfo* DBHeroList::add_herolist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBHeroList.heroList)
  return herolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroInfo >&
DBHeroList::herolist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBHeroList.heroList)
  return herolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroInfo >*
DBHeroList::mutable_herolist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBHeroList.heroList)
  return &herolist_;
}

// -------------------------------------------------------------------

// DBEssenceItem

// required uint32 templateId = 1;
inline bool DBEssenceItem::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBEssenceItem::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBEssenceItem::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBEssenceItem::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 DBEssenceItem::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEssenceItem.templateId)
  return templateid_;
}
inline void DBEssenceItem::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEssenceItem.templateId)
}

// required uint32 itemValue = 2;
inline bool DBEssenceItem::has_itemvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBEssenceItem::set_has_itemvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBEssenceItem::clear_has_itemvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBEssenceItem::clear_itemvalue() {
  itemvalue_ = 0u;
  clear_has_itemvalue();
}
inline ::google::protobuf::uint32 DBEssenceItem::itemvalue() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEssenceItem.itemValue)
  return itemvalue_;
}
inline void DBEssenceItem::set_itemvalue(::google::protobuf::uint32 value) {
  set_has_itemvalue();
  itemvalue_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEssenceItem.itemValue)
}

// required uint32 num = 3;
inline bool DBEssenceItem::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBEssenceItem::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBEssenceItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBEssenceItem::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 DBEssenceItem::num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEssenceItem.num)
  return num_;
}
inline void DBEssenceItem::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBEssenceItem.num)
}

// -------------------------------------------------------------------

// DBEssenceList

// repeated .TgsProtocol.DBEssenceItem essenceItem = 1;
inline int DBEssenceList::essenceitem_size() const {
  return essenceitem_.size();
}
inline void DBEssenceList::clear_essenceitem() {
  essenceitem_.Clear();
}
inline const ::TgsProtocol::DBEssenceItem& DBEssenceList::essenceitem(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBEssenceList.essenceItem)
  return essenceitem_.Get(index);
}
inline ::TgsProtocol::DBEssenceItem* DBEssenceList::mutable_essenceitem(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBEssenceList.essenceItem)
  return essenceitem_.Mutable(index);
}
inline ::TgsProtocol::DBEssenceItem* DBEssenceList::add_essenceitem() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBEssenceList.essenceItem)
  return essenceitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEssenceItem >&
DBEssenceList::essenceitem() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBEssenceList.essenceItem)
  return essenceitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEssenceItem >*
DBEssenceList::mutable_essenceitem() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBEssenceList.essenceItem)
  return &essenceitem_;
}

// -------------------------------------------------------------------

// ItemUseRestrict

// required .TgsProtocol.eItemUseRestrict type = 1;
inline bool ItemUseRestrict::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemUseRestrict::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemUseRestrict::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemUseRestrict::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::eItemUseRestrict ItemUseRestrict::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ItemUseRestrict.type)
  return static_cast< ::TgsProtocol::eItemUseRestrict >(type_);
}
inline void ItemUseRestrict::set_type(::TgsProtocol::eItemUseRestrict value) {
  assert(::TgsProtocol::eItemUseRestrict_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ItemUseRestrict.type)
}

// required uint32 value = 2;
inline bool ItemUseRestrict::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemUseRestrict::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemUseRestrict::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemUseRestrict::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ItemUseRestrict::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ItemUseRestrict.value)
  return value_;
}
inline void ItemUseRestrict::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ItemUseRestrict.value)
}

// -------------------------------------------------------------------

// DBShopGoods

// required uint32 itemType = 1;
inline bool DBShopGoods::has_itemtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBShopGoods::set_has_itemtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBShopGoods::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBShopGoods::clear_itemtype() {
  itemtype_ = 0u;
  clear_has_itemtype();
}
inline ::google::protobuf::uint32 DBShopGoods::itemtype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopGoods.itemType)
  return itemtype_;
}
inline void DBShopGoods::set_itemtype(::google::protobuf::uint32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopGoods.itemType)
}

// required uint32 templateId = 2;
inline bool DBShopGoods::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBShopGoods::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBShopGoods::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBShopGoods::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 DBShopGoods::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopGoods.templateId)
  return templateid_;
}
inline void DBShopGoods::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopGoods.templateId)
}

// required uint32 SellVal = 3;
inline bool DBShopGoods::has_sellval() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBShopGoods::set_has_sellval() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBShopGoods::clear_has_sellval() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBShopGoods::clear_sellval() {
  sellval_ = 0u;
  clear_has_sellval();
}
inline ::google::protobuf::uint32 DBShopGoods::sellval() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopGoods.SellVal)
  return sellval_;
}
inline void DBShopGoods::set_sellval(::google::protobuf::uint32 value) {
  set_has_sellval();
  sellval_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopGoods.SellVal)
}

// required uint32 PriceType = 4;
inline bool DBShopGoods::has_pricetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBShopGoods::set_has_pricetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBShopGoods::clear_has_pricetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBShopGoods::clear_pricetype() {
  pricetype_ = 0u;
  clear_has_pricetype();
}
inline ::google::protobuf::uint32 DBShopGoods::pricetype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopGoods.PriceType)
  return pricetype_;
}
inline void DBShopGoods::set_pricetype(::google::protobuf::uint32 value) {
  set_has_pricetype();
  pricetype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopGoods.PriceType)
}

// required uint32 PARA1 = 5;
inline bool DBShopGoods::has_para1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBShopGoods::set_has_para1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBShopGoods::clear_has_para1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBShopGoods::clear_para1() {
  para1_ = 0u;
  clear_has_para1();
}
inline ::google::protobuf::uint32 DBShopGoods::para1() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopGoods.PARA1)
  return para1_;
}
inline void DBShopGoods::set_para1(::google::protobuf::uint32 value) {
  set_has_para1();
  para1_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopGoods.PARA1)
}

// required uint32 PARA2 = 6;
inline bool DBShopGoods::has_para2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBShopGoods::set_has_para2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBShopGoods::clear_has_para2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBShopGoods::clear_para2() {
  para2_ = 0u;
  clear_has_para2();
}
inline ::google::protobuf::uint32 DBShopGoods::para2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopGoods.PARA2)
  return para2_;
}
inline void DBShopGoods::set_para2(::google::protobuf::uint32 value) {
  set_has_para2();
  para2_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopGoods.PARA2)
}

// required bool bSale = 7;
inline bool DBShopGoods::has_bsale() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBShopGoods::set_has_bsale() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBShopGoods::clear_has_bsale() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBShopGoods::clear_bsale() {
  bsale_ = false;
  clear_has_bsale();
}
inline bool DBShopGoods::bsale() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopGoods.bSale)
  return bsale_;
}
inline void DBShopGoods::set_bsale(bool value) {
  set_has_bsale();
  bsale_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopGoods.bSale)
}

// optional uint32 goodsid = 8;
inline bool DBShopGoods::has_goodsid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBShopGoods::set_has_goodsid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBShopGoods::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBShopGoods::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 DBShopGoods::goodsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopGoods.goodsid)
  return goodsid_;
}
inline void DBShopGoods::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopGoods.goodsid)
}

// -------------------------------------------------------------------

// DBGoodsList

// required uint32 shopType = 1;
inline bool DBGoodsList::has_shoptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBGoodsList::set_has_shoptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBGoodsList::clear_has_shoptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBGoodsList::clear_shoptype() {
  shoptype_ = 0u;
  clear_has_shoptype();
}
inline ::google::protobuf::uint32 DBGoodsList::shoptype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGoodsList.shopType)
  return shoptype_;
}
inline void DBGoodsList::set_shoptype(::google::protobuf::uint32 value) {
  set_has_shoptype();
  shoptype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGoodsList.shopType)
}

// required uint32 activityTime = 2;
inline bool DBGoodsList::has_activitytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBGoodsList::set_has_activitytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBGoodsList::clear_has_activitytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBGoodsList::clear_activitytime() {
  activitytime_ = 0u;
  clear_has_activitytime();
}
inline ::google::protobuf::uint32 DBGoodsList::activitytime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGoodsList.activityTime)
  return activitytime_;
}
inline void DBGoodsList::set_activitytime(::google::protobuf::uint32 value) {
  set_has_activitytime();
  activitytime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGoodsList.activityTime)
}

// required uint32 lastRefreshTime = 3;
inline bool DBGoodsList::has_lastrefreshtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBGoodsList::set_has_lastrefreshtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBGoodsList::clear_has_lastrefreshtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBGoodsList::clear_lastrefreshtime() {
  lastrefreshtime_ = 0u;
  clear_has_lastrefreshtime();
}
inline ::google::protobuf::uint32 DBGoodsList::lastrefreshtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGoodsList.lastRefreshTime)
  return lastrefreshtime_;
}
inline void DBGoodsList::set_lastrefreshtime(::google::protobuf::uint32 value) {
  set_has_lastrefreshtime();
  lastrefreshtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGoodsList.lastRefreshTime)
}

// repeated .TgsProtocol.DBShopGoods goodsList = 4;
inline int DBGoodsList::goodslist_size() const {
  return goodslist_.size();
}
inline void DBGoodsList::clear_goodslist() {
  goodslist_.Clear();
}
inline const ::TgsProtocol::DBShopGoods& DBGoodsList::goodslist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGoodsList.goodsList)
  return goodslist_.Get(index);
}
inline ::TgsProtocol::DBShopGoods* DBGoodsList::mutable_goodslist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBGoodsList.goodsList)
  return goodslist_.Mutable(index);
}
inline ::TgsProtocol::DBShopGoods* DBGoodsList::add_goodslist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBGoodsList.goodsList)
  return goodslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBShopGoods >&
DBGoodsList::goodslist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBGoodsList.goodsList)
  return goodslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBShopGoods >*
DBGoodsList::mutable_goodslist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBGoodsList.goodsList)
  return &goodslist_;
}

// -------------------------------------------------------------------

// DBShopList

// repeated .TgsProtocol.DBGoodsList shopList = 1;
inline int DBShopList::shoplist_size() const {
  return shoplist_.size();
}
inline void DBShopList::clear_shoplist() {
  shoplist_.Clear();
}
inline const ::TgsProtocol::DBGoodsList& DBShopList::shoplist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopList.shopList)
  return shoplist_.Get(index);
}
inline ::TgsProtocol::DBGoodsList* DBShopList::mutable_shoplist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBShopList.shopList)
  return shoplist_.Mutable(index);
}
inline ::TgsProtocol::DBGoodsList* DBShopList::add_shoplist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBShopList.shopList)
  return shoplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGoodsList >&
DBShopList::shoplist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBShopList.shopList)
  return shoplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGoodsList >*
DBShopList::mutable_shoplist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBShopList.shopList)
  return &shoplist_;
}

// -------------------------------------------------------------------

// DBShopRefresh

// required uint32 RefreshNum = 1;
inline bool DBShopRefresh::has_refreshnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBShopRefresh::set_has_refreshnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBShopRefresh::clear_has_refreshnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBShopRefresh::clear_refreshnum() {
  refreshnum_ = 0u;
  clear_has_refreshnum();
}
inline ::google::protobuf::uint32 DBShopRefresh::refreshnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopRefresh.RefreshNum)
  return refreshnum_;
}
inline void DBShopRefresh::set_refreshnum(::google::protobuf::uint32 value) {
  set_has_refreshnum();
  refreshnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopRefresh.RefreshNum)
}

// required uint32 LastRefreshTime = 2;
inline bool DBShopRefresh::has_lastrefreshtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBShopRefresh::set_has_lastrefreshtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBShopRefresh::clear_has_lastrefreshtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBShopRefresh::clear_lastrefreshtime() {
  lastrefreshtime_ = 0u;
  clear_has_lastrefreshtime();
}
inline ::google::protobuf::uint32 DBShopRefresh::lastrefreshtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopRefresh.LastRefreshTime)
  return lastrefreshtime_;
}
inline void DBShopRefresh::set_lastrefreshtime(::google::protobuf::uint32 value) {
  set_has_lastrefreshtime();
  lastrefreshtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopRefresh.LastRefreshTime)
}

// -------------------------------------------------------------------

// DBShopRefreshList

// repeated uint32 RefreshList = 1;
inline int DBShopRefreshList::refreshlist_size() const {
  return refreshlist_.size();
}
inline void DBShopRefreshList::clear_refreshlist() {
  refreshlist_.Clear();
}
inline ::google::protobuf::uint32 DBShopRefreshList::refreshlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBShopRefreshList.RefreshList)
  return refreshlist_.Get(index);
}
inline void DBShopRefreshList::set_refreshlist(int index, ::google::protobuf::uint32 value) {
  refreshlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBShopRefreshList.RefreshList)
}
inline void DBShopRefreshList::add_refreshlist(::google::protobuf::uint32 value) {
  refreshlist_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBShopRefreshList.RefreshList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBShopRefreshList::refreshlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBShopRefreshList.RefreshList)
  return refreshlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBShopRefreshList::mutable_refreshlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBShopRefreshList.RefreshList)
  return &refreshlist_;
}

// -------------------------------------------------------------------

// DBFestivityInfo

// required uint32 festivityId = 1;
inline bool DBFestivityInfo::has_festivityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBFestivityInfo::set_has_festivityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBFestivityInfo::clear_has_festivityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBFestivityInfo::clear_festivityid() {
  festivityid_ = 0u;
  clear_has_festivityid();
}
inline ::google::protobuf::uint32 DBFestivityInfo::festivityid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFestivityInfo.festivityId)
  return festivityid_;
}
inline void DBFestivityInfo::set_festivityid(::google::protobuf::uint32 value) {
  set_has_festivityid();
  festivityid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFestivityInfo.festivityId)
}

// required uint32 enterCount = 2;
inline bool DBFestivityInfo::has_entercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBFestivityInfo::set_has_entercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBFestivityInfo::clear_has_entercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBFestivityInfo::clear_entercount() {
  entercount_ = 0u;
  clear_has_entercount();
}
inline ::google::protobuf::uint32 DBFestivityInfo::entercount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFestivityInfo.enterCount)
  return entercount_;
}
inline void DBFestivityInfo::set_entercount(::google::protobuf::uint32 value) {
  set_has_entercount();
  entercount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFestivityInfo.enterCount)
}

// -------------------------------------------------------------------

// DBFestivityList

// repeated .TgsProtocol.DBFestivityInfo FestivityList = 1;
inline int DBFestivityList::festivitylist_size() const {
  return festivitylist_.size();
}
inline void DBFestivityList::clear_festivitylist() {
  festivitylist_.Clear();
}
inline const ::TgsProtocol::DBFestivityInfo& DBFestivityList::festivitylist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFestivityList.FestivityList)
  return festivitylist_.Get(index);
}
inline ::TgsProtocol::DBFestivityInfo* DBFestivityList::mutable_festivitylist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBFestivityList.FestivityList)
  return festivitylist_.Mutable(index);
}
inline ::TgsProtocol::DBFestivityInfo* DBFestivityList::add_festivitylist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBFestivityList.FestivityList)
  return festivitylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFestivityInfo >&
DBFestivityList::festivitylist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBFestivityList.FestivityList)
  return festivitylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFestivityInfo >*
DBFestivityList::mutable_festivitylist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBFestivityList.FestivityList)
  return &festivitylist_;
}

// -------------------------------------------------------------------

// ClientSource

// required uint32 sourceType = 1;
inline bool ClientSource::has_sourcetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSource::set_has_sourcetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSource::clear_has_sourcetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSource::clear_sourcetype() {
  sourcetype_ = 0u;
  clear_has_sourcetype();
}
inline ::google::protobuf::uint32 ClientSource::sourcetype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSource.sourceType)
  return sourcetype_;
}
inline void ClientSource::set_sourcetype(::google::protobuf::uint32 value) {
  set_has_sourcetype();
  sourcetype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSource.sourceType)
}

// required uint32 sourceId = 2;
inline bool ClientSource::has_sourceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSource::set_has_sourceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSource::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSource::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 ClientSource::sourceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSource.sourceId)
  return sourceid_;
}
inline void ClientSource::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSource.sourceId)
}

// required uint32 sourceNum = 3;
inline bool ClientSource::has_sourcenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSource::set_has_sourcenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSource::clear_has_sourcenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSource::clear_sourcenum() {
  sourcenum_ = 0u;
  clear_has_sourcenum();
}
inline ::google::protobuf::uint32 ClientSource::sourcenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSource.sourceNum)
  return sourcenum_;
}
inline void ClientSource::set_sourcenum(::google::protobuf::uint32 value) {
  set_has_sourcenum();
  sourcenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSource.sourceNum)
}

// -------------------------------------------------------------------

// DBMailInfo

// required uint64 instanceId = 1;
inline bool DBMailInfo::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBMailInfo::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBMailInfo::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBMailInfo::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::uint64 DBMailInfo::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.instanceId)
  return instanceid_;
}
inline void DBMailInfo::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.instanceId)
}

// required uint32 templateId = 2;
inline bool DBMailInfo::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBMailInfo::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBMailInfo::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBMailInfo::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 DBMailInfo::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.templateId)
  return templateid_;
}
inline void DBMailInfo::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.templateId)
}

// required uint32 mailType = 3;
inline bool DBMailInfo::has_mailtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBMailInfo::set_has_mailtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBMailInfo::clear_has_mailtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBMailInfo::clear_mailtype() {
  mailtype_ = 0u;
  clear_has_mailtype();
}
inline ::google::protobuf::uint32 DBMailInfo::mailtype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.mailType)
  return mailtype_;
}
inline void DBMailInfo::set_mailtype(::google::protobuf::uint32 value) {
  set_has_mailtype();
  mailtype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.mailType)
}

// required bytes subjectStr = 4;
inline bool DBMailInfo::has_subjectstr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBMailInfo::set_has_subjectstr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBMailInfo::clear_has_subjectstr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBMailInfo::clear_subjectstr() {
  if (subjectstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subjectstr_->clear();
  }
  clear_has_subjectstr();
}
inline const ::std::string& DBMailInfo::subjectstr() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.subjectStr)
  return *subjectstr_;
}
inline void DBMailInfo::set_subjectstr(const ::std::string& value) {
  set_has_subjectstr();
  if (subjectstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subjectstr_ = new ::std::string;
  }
  subjectstr_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.subjectStr)
}
inline void DBMailInfo::set_subjectstr(const char* value) {
  set_has_subjectstr();
  if (subjectstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subjectstr_ = new ::std::string;
  }
  subjectstr_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBMailInfo.subjectStr)
}
inline void DBMailInfo::set_subjectstr(const void* value, size_t size) {
  set_has_subjectstr();
  if (subjectstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subjectstr_ = new ::std::string;
  }
  subjectstr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBMailInfo.subjectStr)
}
inline ::std::string* DBMailInfo::mutable_subjectstr() {
  set_has_subjectstr();
  if (subjectstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subjectstr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBMailInfo.subjectStr)
  return subjectstr_;
}
inline ::std::string* DBMailInfo::release_subjectstr() {
  clear_has_subjectstr();
  if (subjectstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = subjectstr_;
    subjectstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBMailInfo::set_allocated_subjectstr(::std::string* subjectstr) {
  if (subjectstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subjectstr_;
  }
  if (subjectstr) {
    set_has_subjectstr();
    subjectstr_ = subjectstr;
  } else {
    clear_has_subjectstr();
    subjectstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBMailInfo.subjectStr)
}

// required bytes contextStr = 5;
inline bool DBMailInfo::has_contextstr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBMailInfo::set_has_contextstr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBMailInfo::clear_has_contextstr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBMailInfo::clear_contextstr() {
  if (contextstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contextstr_->clear();
  }
  clear_has_contextstr();
}
inline const ::std::string& DBMailInfo::contextstr() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.contextStr)
  return *contextstr_;
}
inline void DBMailInfo::set_contextstr(const ::std::string& value) {
  set_has_contextstr();
  if (contextstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contextstr_ = new ::std::string;
  }
  contextstr_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.contextStr)
}
inline void DBMailInfo::set_contextstr(const char* value) {
  set_has_contextstr();
  if (contextstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contextstr_ = new ::std::string;
  }
  contextstr_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBMailInfo.contextStr)
}
inline void DBMailInfo::set_contextstr(const void* value, size_t size) {
  set_has_contextstr();
  if (contextstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contextstr_ = new ::std::string;
  }
  contextstr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBMailInfo.contextStr)
}
inline ::std::string* DBMailInfo::mutable_contextstr() {
  set_has_contextstr();
  if (contextstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    contextstr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBMailInfo.contextStr)
  return contextstr_;
}
inline ::std::string* DBMailInfo::release_contextstr() {
  clear_has_contextstr();
  if (contextstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = contextstr_;
    contextstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBMailInfo::set_allocated_contextstr(::std::string* contextstr) {
  if (contextstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete contextstr_;
  }
  if (contextstr) {
    set_has_contextstr();
    contextstr_ = contextstr;
  } else {
    clear_has_contextstr();
    contextstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBMailInfo.contextStr)
}

// required bytes senderStr = 6;
inline bool DBMailInfo::has_senderstr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBMailInfo::set_has_senderstr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBMailInfo::clear_has_senderstr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBMailInfo::clear_senderstr() {
  if (senderstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderstr_->clear();
  }
  clear_has_senderstr();
}
inline const ::std::string& DBMailInfo::senderstr() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.senderStr)
  return *senderstr_;
}
inline void DBMailInfo::set_senderstr(const ::std::string& value) {
  set_has_senderstr();
  if (senderstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderstr_ = new ::std::string;
  }
  senderstr_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.senderStr)
}
inline void DBMailInfo::set_senderstr(const char* value) {
  set_has_senderstr();
  if (senderstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderstr_ = new ::std::string;
  }
  senderstr_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBMailInfo.senderStr)
}
inline void DBMailInfo::set_senderstr(const void* value, size_t size) {
  set_has_senderstr();
  if (senderstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderstr_ = new ::std::string;
  }
  senderstr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBMailInfo.senderStr)
}
inline ::std::string* DBMailInfo::mutable_senderstr() {
  set_has_senderstr();
  if (senderstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderstr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBMailInfo.senderStr)
  return senderstr_;
}
inline ::std::string* DBMailInfo::release_senderstr() {
  clear_has_senderstr();
  if (senderstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = senderstr_;
    senderstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBMailInfo::set_allocated_senderstr(::std::string* senderstr) {
  if (senderstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete senderstr_;
  }
  if (senderstr) {
    set_has_senderstr();
    senderstr_ = senderstr;
  } else {
    clear_has_senderstr();
    senderstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBMailInfo.senderStr)
}

// required uint32 createtime = 7;
inline bool DBMailInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBMailInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBMailInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBMailInfo::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 DBMailInfo::createtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.createtime)
  return createtime_;
}
inline void DBMailInfo::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.createtime)
}

// required bool bRead = 8;
inline bool DBMailInfo::has_bread() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBMailInfo::set_has_bread() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBMailInfo::clear_has_bread() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBMailInfo::clear_bread() {
  bread_ = false;
  clear_has_bread();
}
inline bool DBMailInfo::bread() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.bRead)
  return bread_;
}
inline void DBMailInfo::set_bread(bool value) {
  set_has_bread();
  bread_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.bRead)
}

// repeated .TgsProtocol.ClientSource accessory = 9;
inline int DBMailInfo::accessory_size() const {
  return accessory_.size();
}
inline void DBMailInfo::clear_accessory() {
  accessory_.Clear();
}
inline const ::TgsProtocol::ClientSource& DBMailInfo::accessory(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.accessory)
  return accessory_.Get(index);
}
inline ::TgsProtocol::ClientSource* DBMailInfo::mutable_accessory(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBMailInfo.accessory)
  return accessory_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* DBMailInfo::add_accessory() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBMailInfo.accessory)
  return accessory_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
DBMailInfo::accessory() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBMailInfo.accessory)
  return accessory_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
DBMailInfo::mutable_accessory() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBMailInfo.accessory)
  return &accessory_;
}

// required uint32 opType = 10;
inline bool DBMailInfo::has_optype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DBMailInfo::set_has_optype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DBMailInfo::clear_has_optype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DBMailInfo::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 DBMailInfo::optype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.opType)
  return optype_;
}
inline void DBMailInfo::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.opType)
}

// required uint32 saveTime = 11;
inline bool DBMailInfo::has_savetime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DBMailInfo::set_has_savetime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DBMailInfo::clear_has_savetime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DBMailInfo::clear_savetime() {
  savetime_ = 0u;
  clear_has_savetime();
}
inline ::google::protobuf::uint32 DBMailInfo::savetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.saveTime)
  return savetime_;
}
inline void DBMailInfo::set_savetime(::google::protobuf::uint32 value) {
  set_has_savetime();
  savetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.saveTime)
}

// repeated bytes contextParam = 12;
inline int DBMailInfo::contextparam_size() const {
  return contextparam_.size();
}
inline void DBMailInfo::clear_contextparam() {
  contextparam_.Clear();
}
inline const ::std::string& DBMailInfo::contextparam(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBMailInfo.contextParam)
  return contextparam_.Get(index);
}
inline ::std::string* DBMailInfo::mutable_contextparam(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBMailInfo.contextParam)
  return contextparam_.Mutable(index);
}
inline void DBMailInfo::set_contextparam(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TgsProtocol.DBMailInfo.contextParam)
  contextparam_.Mutable(index)->assign(value);
}
inline void DBMailInfo::set_contextparam(int index, const char* value) {
  contextparam_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBMailInfo.contextParam)
}
inline void DBMailInfo::set_contextparam(int index, const void* value, size_t size) {
  contextparam_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBMailInfo.contextParam)
}
inline ::std::string* DBMailInfo::add_contextparam() {
  return contextparam_.Add();
}
inline void DBMailInfo::add_contextparam(const ::std::string& value) {
  contextparam_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBMailInfo.contextParam)
}
inline void DBMailInfo::add_contextparam(const char* value) {
  contextparam_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TgsProtocol.DBMailInfo.contextParam)
}
inline void DBMailInfo::add_contextparam(const void* value, size_t size) {
  contextparam_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TgsProtocol.DBMailInfo.contextParam)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DBMailInfo::contextparam() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBMailInfo.contextParam)
  return contextparam_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DBMailInfo::mutable_contextparam() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBMailInfo.contextParam)
  return &contextparam_;
}

// -------------------------------------------------------------------

// DBArenaHero

// required uint32 templateId = 1;
inline bool DBArenaHero::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBArenaHero::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBArenaHero::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBArenaHero::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 DBArenaHero::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaHero.templateId)
  return templateid_;
}
inline void DBArenaHero::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaHero.templateId)
}

// required uint32 level = 2;
inline bool DBArenaHero::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBArenaHero::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBArenaHero::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBArenaHero::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 DBArenaHero::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaHero.level)
  return level_;
}
inline void DBArenaHero::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaHero.level)
}

// required uint32 evolutionLevel = 3;
inline bool DBArenaHero::has_evolutionlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBArenaHero::set_has_evolutionlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBArenaHero::clear_has_evolutionlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBArenaHero::clear_evolutionlevel() {
  evolutionlevel_ = 0u;
  clear_has_evolutionlevel();
}
inline ::google::protobuf::uint32 DBArenaHero::evolutionlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaHero.evolutionLevel)
  return evolutionlevel_;
}
inline void DBArenaHero::set_evolutionlevel(::google::protobuf::uint32 value) {
  set_has_evolutionlevel();
  evolutionlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaHero.evolutionLevel)
}

// required uint32 forceLevel = 4;
inline bool DBArenaHero::has_forcelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBArenaHero::set_has_forcelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBArenaHero::clear_has_forcelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBArenaHero::clear_forcelevel() {
  forcelevel_ = 0u;
  clear_has_forcelevel();
}
inline ::google::protobuf::uint32 DBArenaHero::forcelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaHero.forceLevel)
  return forcelevel_;
}
inline void DBArenaHero::set_forcelevel(::google::protobuf::uint32 value) {
  set_has_forcelevel();
  forcelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaHero.forceLevel)
}

// repeated .TgsProtocol.DBHeroEquip equip = 5;
inline int DBArenaHero::equip_size() const {
  return equip_.size();
}
inline void DBArenaHero::clear_equip() {
  equip_.Clear();
}
inline const ::TgsProtocol::DBHeroEquip& DBArenaHero::equip(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaHero.equip)
  return equip_.Get(index);
}
inline ::TgsProtocol::DBHeroEquip* DBArenaHero::mutable_equip(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBArenaHero.equip)
  return equip_.Mutable(index);
}
inline ::TgsProtocol::DBHeroEquip* DBArenaHero::add_equip() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBArenaHero.equip)
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip >&
DBArenaHero::equip() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBArenaHero.equip)
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBHeroEquip >*
DBArenaHero::mutable_equip() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBArenaHero.equip)
  return &equip_;
}

// repeated uint32 skillLevel = 6;
inline int DBArenaHero::skilllevel_size() const {
  return skilllevel_.size();
}
inline void DBArenaHero::clear_skilllevel() {
  skilllevel_.Clear();
}
inline ::google::protobuf::uint32 DBArenaHero::skilllevel(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaHero.skillLevel)
  return skilllevel_.Get(index);
}
inline void DBArenaHero::set_skilllevel(int index, ::google::protobuf::uint32 value) {
  skilllevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaHero.skillLevel)
}
inline void DBArenaHero::add_skilllevel(::google::protobuf::uint32 value) {
  skilllevel_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBArenaHero.skillLevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBArenaHero::skilllevel() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBArenaHero.skillLevel)
  return skilllevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBArenaHero::mutable_skilllevel() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBArenaHero.skillLevel)
  return &skilllevel_;
}

// optional bytes heroName = 7;
inline bool DBArenaHero::has_heroname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBArenaHero::set_has_heroname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBArenaHero::clear_has_heroname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBArenaHero::clear_heroname() {
  if (heroname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_->clear();
  }
  clear_has_heroname();
}
inline const ::std::string& DBArenaHero::heroname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaHero.heroName)
  return *heroname_;
}
inline void DBArenaHero::set_heroname(const ::std::string& value) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaHero.heroName)
}
inline void DBArenaHero::set_heroname(const char* value) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBArenaHero.heroName)
}
inline void DBArenaHero::set_heroname(const void* value, size_t size) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBArenaHero.heroName)
}
inline ::std::string* DBArenaHero::mutable_heroname() {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBArenaHero.heroName)
  return heroname_;
}
inline ::std::string* DBArenaHero::release_heroname() {
  clear_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = heroname_;
    heroname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBArenaHero::set_allocated_heroname(::std::string* heroname) {
  if (heroname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete heroname_;
  }
  if (heroname) {
    set_has_heroname();
    heroname_ = heroname;
  } else {
    clear_has_heroname();
    heroname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBArenaHero.heroName)
}

// repeated .TgsProtocol.DBEquipNew newEquip = 8;
inline int DBArenaHero::newequip_size() const {
  return newequip_.size();
}
inline void DBArenaHero::clear_newequip() {
  newequip_.Clear();
}
inline const ::TgsProtocol::DBEquipNew& DBArenaHero::newequip(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaHero.newEquip)
  return newequip_.Get(index);
}
inline ::TgsProtocol::DBEquipNew* DBArenaHero::mutable_newequip(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBArenaHero.newEquip)
  return newequip_.Mutable(index);
}
inline ::TgsProtocol::DBEquipNew* DBArenaHero::add_newequip() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBArenaHero.newEquip)
  return newequip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew >&
DBArenaHero::newequip() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBArenaHero.newEquip)
  return newequip_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBEquipNew >*
DBArenaHero::mutable_newequip() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBArenaHero.newEquip)
  return &newequip_;
}

// -------------------------------------------------------------------

// DBArenaPlayer

// required uint32 rank = 1;
inline bool DBArenaPlayer::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBArenaPlayer::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBArenaPlayer::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBArenaPlayer::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 DBArenaPlayer::rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaPlayer.rank)
  return rank_;
}
inline void DBArenaPlayer::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaPlayer.rank)
}

// required uint64 charID = 2;
inline bool DBArenaPlayer::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBArenaPlayer::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBArenaPlayer::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBArenaPlayer::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DBArenaPlayer::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaPlayer.charID)
  return charid_;
}
inline void DBArenaPlayer::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaPlayer.charID)
}

// optional bytes playerName = 3;
inline bool DBArenaPlayer::has_playername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBArenaPlayer::set_has_playername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBArenaPlayer::clear_has_playername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBArenaPlayer::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& DBArenaPlayer::playername() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaPlayer.playerName)
  return *playername_;
}
inline void DBArenaPlayer::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaPlayer.playerName)
}
inline void DBArenaPlayer::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBArenaPlayer.playerName)
}
inline void DBArenaPlayer::set_playername(const void* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBArenaPlayer.playerName)
}
inline ::std::string* DBArenaPlayer::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBArenaPlayer.playerName)
  return playername_;
}
inline ::std::string* DBArenaPlayer::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBArenaPlayer::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBArenaPlayer.playerName)
}

// required uint32 playerLevel = 4;
inline bool DBArenaPlayer::has_playerlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBArenaPlayer::set_has_playerlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBArenaPlayer::clear_has_playerlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBArenaPlayer::clear_playerlevel() {
  playerlevel_ = 0u;
  clear_has_playerlevel();
}
inline ::google::protobuf::uint32 DBArenaPlayer::playerlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaPlayer.playerLevel)
  return playerlevel_;
}
inline void DBArenaPlayer::set_playerlevel(::google::protobuf::uint32 value) {
  set_has_playerlevel();
  playerlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaPlayer.playerLevel)
}

// required uint32 playerPhoto = 5;
inline bool DBArenaPlayer::has_playerphoto() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBArenaPlayer::set_has_playerphoto() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBArenaPlayer::clear_has_playerphoto() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBArenaPlayer::clear_playerphoto() {
  playerphoto_ = 0u;
  clear_has_playerphoto();
}
inline ::google::protobuf::uint32 DBArenaPlayer::playerphoto() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaPlayer.playerPhoto)
  return playerphoto_;
}
inline void DBArenaPlayer::set_playerphoto(::google::protobuf::uint32 value) {
  set_has_playerphoto();
  playerphoto_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaPlayer.playerPhoto)
}

// required uint32 vipLvl = 6;
inline bool DBArenaPlayer::has_viplvl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBArenaPlayer::set_has_viplvl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBArenaPlayer::clear_has_viplvl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBArenaPlayer::clear_viplvl() {
  viplvl_ = 0u;
  clear_has_viplvl();
}
inline ::google::protobuf::uint32 DBArenaPlayer::viplvl() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaPlayer.vipLvl)
  return viplvl_;
}
inline void DBArenaPlayer::set_viplvl(::google::protobuf::uint32 value) {
  set_has_viplvl();
  viplvl_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaPlayer.vipLvl)
}

// required uint32 effective = 7;
inline bool DBArenaPlayer::has_effective() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBArenaPlayer::set_has_effective() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBArenaPlayer::clear_has_effective() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBArenaPlayer::clear_effective() {
  effective_ = 0u;
  clear_has_effective();
}
inline ::google::protobuf::uint32 DBArenaPlayer::effective() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaPlayer.effective)
  return effective_;
}
inline void DBArenaPlayer::set_effective(::google::protobuf::uint32 value) {
  set_has_effective();
  effective_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaPlayer.effective)
}

// required uint32 totalWin = 8;
inline bool DBArenaPlayer::has_totalwin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBArenaPlayer::set_has_totalwin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBArenaPlayer::clear_has_totalwin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBArenaPlayer::clear_totalwin() {
  totalwin_ = 0u;
  clear_has_totalwin();
}
inline ::google::protobuf::uint32 DBArenaPlayer::totalwin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaPlayer.totalWin)
  return totalwin_;
}
inline void DBArenaPlayer::set_totalwin(::google::protobuf::uint32 value) {
  set_has_totalwin();
  totalwin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaPlayer.totalWin)
}

// repeated .TgsProtocol.DBArenaHero arHeroList = 9;
inline int DBArenaPlayer::arherolist_size() const {
  return arherolist_.size();
}
inline void DBArenaPlayer::clear_arherolist() {
  arherolist_.Clear();
}
inline const ::TgsProtocol::DBArenaHero& DBArenaPlayer::arherolist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaPlayer.arHeroList)
  return arherolist_.Get(index);
}
inline ::TgsProtocol::DBArenaHero* DBArenaPlayer::mutable_arherolist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBArenaPlayer.arHeroList)
  return arherolist_.Mutable(index);
}
inline ::TgsProtocol::DBArenaHero* DBArenaPlayer::add_arherolist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBArenaPlayer.arHeroList)
  return arherolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaHero >&
DBArenaPlayer::arherolist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBArenaPlayer.arHeroList)
  return arherolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaHero >*
DBArenaPlayer::mutable_arherolist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBArenaPlayer.arHeroList)
  return &arherolist_;
}

// -------------------------------------------------------------------

// DBArenaRank

// repeated .TgsProtocol.DBArenaPlayer arenaPlayerList = 1;
inline int DBArenaRank::arenaplayerlist_size() const {
  return arenaplayerlist_.size();
}
inline void DBArenaRank::clear_arenaplayerlist() {
  arenaplayerlist_.Clear();
}
inline const ::TgsProtocol::DBArenaPlayer& DBArenaRank::arenaplayerlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaRank.arenaPlayerList)
  return arenaplayerlist_.Get(index);
}
inline ::TgsProtocol::DBArenaPlayer* DBArenaRank::mutable_arenaplayerlist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBArenaRank.arenaPlayerList)
  return arenaplayerlist_.Mutable(index);
}
inline ::TgsProtocol::DBArenaPlayer* DBArenaRank::add_arenaplayerlist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBArenaRank.arenaPlayerList)
  return arenaplayerlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaPlayer >&
DBArenaRank::arenaplayerlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBArenaRank.arenaPlayerList)
  return arenaplayerlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaPlayer >*
DBArenaRank::mutable_arenaplayerlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBArenaRank.arenaPlayerList)
  return &arenaplayerlist_;
}

// -------------------------------------------------------------------

// DBArenaLog

// required uint32 type = 1;
inline bool DBArenaLog::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBArenaLog::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBArenaLog::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBArenaLog::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 DBArenaLog::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.type)
  return type_;
}
inline void DBArenaLog::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.type)
}

// required uint64 charId = 2;
inline bool DBArenaLog::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBArenaLog::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBArenaLog::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBArenaLog::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DBArenaLog::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.charId)
  return charid_;
}
inline void DBArenaLog::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.charId)
}

// required bytes charName = 3;
inline bool DBArenaLog::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBArenaLog::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBArenaLog::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBArenaLog::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& DBArenaLog::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.charName)
  return *charname_;
}
inline void DBArenaLog::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.charName)
}
inline void DBArenaLog::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBArenaLog.charName)
}
inline void DBArenaLog::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBArenaLog.charName)
}
inline ::std::string* DBArenaLog::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBArenaLog.charName)
  return charname_;
}
inline ::std::string* DBArenaLog::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBArenaLog::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBArenaLog.charName)
}

// required uint32 charLvl = 4;
inline bool DBArenaLog::has_charlvl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBArenaLog::set_has_charlvl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBArenaLog::clear_has_charlvl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBArenaLog::clear_charlvl() {
  charlvl_ = 0u;
  clear_has_charlvl();
}
inline ::google::protobuf::uint32 DBArenaLog::charlvl() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.charLvl)
  return charlvl_;
}
inline void DBArenaLog::set_charlvl(::google::protobuf::uint32 value) {
  set_has_charlvl();
  charlvl_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.charLvl)
}

// required uint32 charPhoto = 5;
inline bool DBArenaLog::has_charphoto() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBArenaLog::set_has_charphoto() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBArenaLog::clear_has_charphoto() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBArenaLog::clear_charphoto() {
  charphoto_ = 0u;
  clear_has_charphoto();
}
inline ::google::protobuf::uint32 DBArenaLog::charphoto() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.charPhoto)
  return charphoto_;
}
inline void DBArenaLog::set_charphoto(::google::protobuf::uint32 value) {
  set_has_charphoto();
  charphoto_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.charPhoto)
}

// required uint32 charVip = 6;
inline bool DBArenaLog::has_charvip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBArenaLog::set_has_charvip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBArenaLog::clear_has_charvip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBArenaLog::clear_charvip() {
  charvip_ = 0u;
  clear_has_charvip();
}
inline ::google::protobuf::uint32 DBArenaLog::charvip() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.charVip)
  return charvip_;
}
inline void DBArenaLog::set_charvip(::google::protobuf::uint32 value) {
  set_has_charvip();
  charvip_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.charVip)
}

// required bool bWin = 7;
inline bool DBArenaLog::has_bwin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBArenaLog::set_has_bwin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBArenaLog::clear_has_bwin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBArenaLog::clear_bwin() {
  bwin_ = false;
  clear_has_bwin();
}
inline bool DBArenaLog::bwin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.bWin)
  return bwin_;
}
inline void DBArenaLog::set_bwin(bool value) {
  set_has_bwin();
  bwin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.bWin)
}

// required uint32 newRank = 8;
inline bool DBArenaLog::has_newrank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBArenaLog::set_has_newrank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBArenaLog::clear_has_newrank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBArenaLog::clear_newrank() {
  newrank_ = 0u;
  clear_has_newrank();
}
inline ::google::protobuf::uint32 DBArenaLog::newrank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.newRank)
  return newrank_;
}
inline void DBArenaLog::set_newrank(::google::protobuf::uint32 value) {
  set_has_newrank();
  newrank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.newRank)
}

// required bool bRobot = 9;
inline bool DBArenaLog::has_brobot() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBArenaLog::set_has_brobot() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBArenaLog::clear_has_brobot() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBArenaLog::clear_brobot() {
  brobot_ = false;
  clear_has_brobot();
}
inline bool DBArenaLog::brobot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.bRobot)
  return brobot_;
}
inline void DBArenaLog::set_brobot(bool value) {
  set_has_brobot();
  brobot_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.bRobot)
}

// required uint32 curTime = 10;
inline bool DBArenaLog::has_curtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DBArenaLog::set_has_curtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DBArenaLog::clear_has_curtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DBArenaLog::clear_curtime() {
  curtime_ = 0u;
  clear_has_curtime();
}
inline ::google::protobuf::uint32 DBArenaLog::curtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLog.curTime)
  return curtime_;
}
inline void DBArenaLog::set_curtime(::google::protobuf::uint32 value) {
  set_has_curtime();
  curtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBArenaLog.curTime)
}

// -------------------------------------------------------------------

// DBArenaLogList

// repeated .TgsProtocol.DBArenaLog arenaLog = 1;
inline int DBArenaLogList::arenalog_size() const {
  return arenalog_.size();
}
inline void DBArenaLogList::clear_arenalog() {
  arenalog_.Clear();
}
inline const ::TgsProtocol::DBArenaLog& DBArenaLogList::arenalog(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBArenaLogList.arenaLog)
  return arenalog_.Get(index);
}
inline ::TgsProtocol::DBArenaLog* DBArenaLogList::mutable_arenalog(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBArenaLogList.arenaLog)
  return arenalog_.Mutable(index);
}
inline ::TgsProtocol::DBArenaLog* DBArenaLogList::add_arenalog() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBArenaLogList.arenaLog)
  return arenalog_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaLog >&
DBArenaLogList::arenalog() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBArenaLogList.arenaLog)
  return arenalog_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBArenaLog >*
DBArenaLogList::mutable_arenalog() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBArenaLogList.arenaLog)
  return &arenalog_;
}

// -------------------------------------------------------------------

// DBFriendInfo

// required uint64 charId = 1;
inline bool DBFriendInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBFriendInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBFriendInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBFriendInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DBFriendInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.charId)
  return charid_;
}
inline void DBFriendInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.charId)
}

// required bytes charName = 2;
inline bool DBFriendInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBFriendInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBFriendInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBFriendInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& DBFriendInfo::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.charName)
  return *charname_;
}
inline void DBFriendInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.charName)
}
inline void DBFriendInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBFriendInfo.charName)
}
inline void DBFriendInfo::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBFriendInfo.charName)
}
inline ::std::string* DBFriendInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBFriendInfo.charName)
  return charname_;
}
inline ::std::string* DBFriendInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBFriendInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBFriendInfo.charName)
}

// required uint32 photo = 3;
inline bool DBFriendInfo::has_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBFriendInfo::set_has_photo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBFriendInfo::clear_has_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBFriendInfo::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 DBFriendInfo::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.photo)
  return photo_;
}
inline void DBFriendInfo::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.photo)
}

// required uint32 charLevel = 4;
inline bool DBFriendInfo::has_charlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBFriendInfo::set_has_charlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBFriendInfo::clear_has_charlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBFriendInfo::clear_charlevel() {
  charlevel_ = 0u;
  clear_has_charlevel();
}
inline ::google::protobuf::uint32 DBFriendInfo::charlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.charLevel)
  return charlevel_;
}
inline void DBFriendInfo::set_charlevel(::google::protobuf::uint32 value) {
  set_has_charlevel();
  charlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.charLevel)
}

// required uint32 effect = 5;
inline bool DBFriendInfo::has_effect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBFriendInfo::set_has_effect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBFriendInfo::clear_has_effect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBFriendInfo::clear_effect() {
  effect_ = 0u;
  clear_has_effect();
}
inline ::google::protobuf::uint32 DBFriendInfo::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.effect)
  return effect_;
}
inline void DBFriendInfo::set_effect(::google::protobuf::uint32 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.effect)
}

// required uint32 vipLevel = 6;
inline bool DBFriendInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBFriendInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBFriendInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBFriendInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 DBFriendInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.vipLevel)
  return viplevel_;
}
inline void DBFriendInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.vipLevel)
}

// required bytes guildName = 7;
inline bool DBFriendInfo::has_guildname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBFriendInfo::set_has_guildname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBFriendInfo::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBFriendInfo::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& DBFriendInfo::guildname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.guildName)
  return *guildname_;
}
inline void DBFriendInfo::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.guildName)
}
inline void DBFriendInfo::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBFriendInfo.guildName)
}
inline void DBFriendInfo::set_guildname(const void* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBFriendInfo.guildName)
}
inline ::std::string* DBFriendInfo::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBFriendInfo.guildName)
  return guildname_;
}
inline ::std::string* DBFriendInfo::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBFriendInfo::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBFriendInfo.guildName)
}

// required bool bSend = 8;
inline bool DBFriendInfo::has_bsend() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBFriendInfo::set_has_bsend() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBFriendInfo::clear_has_bsend() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBFriendInfo::clear_bsend() {
  bsend_ = false;
  clear_has_bsend();
}
inline bool DBFriendInfo::bsend() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.bSend)
  return bsend_;
}
inline void DBFriendInfo::set_bsend(bool value) {
  set_has_bsend();
  bsend_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.bSend)
}

// required uint32 receive = 9;
inline bool DBFriendInfo::has_receive() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBFriendInfo::set_has_receive() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBFriendInfo::clear_has_receive() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBFriendInfo::clear_receive() {
  receive_ = 0u;
  clear_has_receive();
}
inline ::google::protobuf::uint32 DBFriendInfo::receive() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.receive)
  return receive_;
}
inline void DBFriendInfo::set_receive(::google::protobuf::uint32 value) {
  set_has_receive();
  receive_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.receive)
}

// required uint32 loginTime = 10;
inline bool DBFriendInfo::has_logintime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DBFriendInfo::set_has_logintime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DBFriendInfo::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DBFriendInfo::clear_logintime() {
  logintime_ = 0u;
  clear_has_logintime();
}
inline ::google::protobuf::uint32 DBFriendInfo::logintime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.loginTime)
  return logintime_;
}
inline void DBFriendInfo::set_logintime(::google::protobuf::uint32 value) {
  set_has_logintime();
  logintime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.loginTime)
}

// optional uint64 effect64 = 11;
inline bool DBFriendInfo::has_effect64() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DBFriendInfo::set_has_effect64() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DBFriendInfo::clear_has_effect64() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DBFriendInfo::clear_effect64() {
  effect64_ = GOOGLE_ULONGLONG(0);
  clear_has_effect64();
}
inline ::google::protobuf::uint64 DBFriendInfo::effect64() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendInfo.effect64)
  return effect64_;
}
inline void DBFriendInfo::set_effect64(::google::protobuf::uint64 value) {
  set_has_effect64();
  effect64_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBFriendInfo.effect64)
}

// -------------------------------------------------------------------

// DBFriendList

// repeated .TgsProtocol.DBFriendInfo friendList = 1;
inline int DBFriendList::friendlist_size() const {
  return friendlist_.size();
}
inline void DBFriendList::clear_friendlist() {
  friendlist_.Clear();
}
inline const ::TgsProtocol::DBFriendInfo& DBFriendList::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendList.friendList)
  return friendlist_.Get(index);
}
inline ::TgsProtocol::DBFriendInfo* DBFriendList::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBFriendList.friendList)
  return friendlist_.Mutable(index);
}
inline ::TgsProtocol::DBFriendInfo* DBFriendList::add_friendlist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBFriendList.friendList)
  return friendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >&
DBFriendList::friendlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBFriendList.friendList)
  return friendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >*
DBFriendList::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBFriendList.friendList)
  return &friendlist_;
}

// repeated .TgsProtocol.DBFriendInfo blackList = 2;
inline int DBFriendList::blacklist_size() const {
  return blacklist_.size();
}
inline void DBFriendList::clear_blacklist() {
  blacklist_.Clear();
}
inline const ::TgsProtocol::DBFriendInfo& DBFriendList::blacklist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendList.blackList)
  return blacklist_.Get(index);
}
inline ::TgsProtocol::DBFriendInfo* DBFriendList::mutable_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBFriendList.blackList)
  return blacklist_.Mutable(index);
}
inline ::TgsProtocol::DBFriendInfo* DBFriendList::add_blacklist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBFriendList.blackList)
  return blacklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >&
DBFriendList::blacklist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBFriendList.blackList)
  return blacklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >*
DBFriendList::mutable_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBFriendList.blackList)
  return &blacklist_;
}

// repeated .TgsProtocol.DBFriendInfo applyList = 3;
inline int DBFriendList::applylist_size() const {
  return applylist_.size();
}
inline void DBFriendList::clear_applylist() {
  applylist_.Clear();
}
inline const ::TgsProtocol::DBFriendInfo& DBFriendList::applylist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBFriendList.applyList)
  return applylist_.Get(index);
}
inline ::TgsProtocol::DBFriendInfo* DBFriendList::mutable_applylist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBFriendList.applyList)
  return applylist_.Mutable(index);
}
inline ::TgsProtocol::DBFriendInfo* DBFriendList::add_applylist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBFriendList.applyList)
  return applylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >&
DBFriendList::applylist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBFriendList.applyList)
  return applylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBFriendInfo >*
DBFriendList::mutable_applylist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBFriendList.applyList)
  return &applylist_;
}

// -------------------------------------------------------------------

// ShopInfo

// required uint32 goodsid = 1;
inline bool ShopInfo::has_goodsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopInfo::set_has_goodsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopInfo::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopInfo::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 ShopInfo::goodsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.goodsid)
  return goodsid_;
}
inline void ShopInfo::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.goodsid)
}

// required uint32 shoptype = 2;
inline bool ShopInfo::has_shoptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopInfo::set_has_shoptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopInfo::clear_has_shoptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopInfo::clear_shoptype() {
  shoptype_ = 0u;
  clear_has_shoptype();
}
inline ::google::protobuf::uint32 ShopInfo::shoptype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.shoptype)
  return shoptype_;
}
inline void ShopInfo::set_shoptype(::google::protobuf::uint32 value) {
  set_has_shoptype();
  shoptype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.shoptype)
}

// required uint32 buytype = 3;
inline bool ShopInfo::has_buytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopInfo::set_has_buytype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopInfo::clear_has_buytype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopInfo::clear_buytype() {
  buytype_ = 0u;
  clear_has_buytype();
}
inline ::google::protobuf::uint32 ShopInfo::buytype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.buytype)
  return buytype_;
}
inline void ShopInfo::set_buytype(::google::protobuf::uint32 value) {
  set_has_buytype();
  buytype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.buytype)
}

// required uint32 buycontentid = 4;
inline bool ShopInfo::has_buycontentid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopInfo::set_has_buycontentid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopInfo::clear_has_buycontentid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopInfo::clear_buycontentid() {
  buycontentid_ = 0u;
  clear_has_buycontentid();
}
inline ::google::protobuf::uint32 ShopInfo::buycontentid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.buycontentid)
  return buycontentid_;
}
inline void ShopInfo::set_buycontentid(::google::protobuf::uint32 value) {
  set_has_buycontentid();
  buycontentid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.buycontentid)
}

// required uint32 buycount = 5;
inline bool ShopInfo::has_buycount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShopInfo::set_has_buycount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShopInfo::clear_has_buycount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShopInfo::clear_buycount() {
  buycount_ = 0u;
  clear_has_buycount();
}
inline ::google::protobuf::uint32 ShopInfo::buycount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.buycount)
  return buycount_;
}
inline void ShopInfo::set_buycount(::google::protobuf::uint32 value) {
  set_has_buycount();
  buycount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.buycount)
}

// required uint32 costtype = 6;
inline bool ShopInfo::has_costtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShopInfo::set_has_costtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShopInfo::clear_has_costtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShopInfo::clear_costtype() {
  costtype_ = 0u;
  clear_has_costtype();
}
inline ::google::protobuf::uint32 ShopInfo::costtype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.costtype)
  return costtype_;
}
inline void ShopInfo::set_costtype(::google::protobuf::uint32 value) {
  set_has_costtype();
  costtype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.costtype)
}

// required uint32 costcontentid = 7;
inline bool ShopInfo::has_costcontentid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShopInfo::set_has_costcontentid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShopInfo::clear_has_costcontentid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShopInfo::clear_costcontentid() {
  costcontentid_ = 0u;
  clear_has_costcontentid();
}
inline ::google::protobuf::uint32 ShopInfo::costcontentid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.costcontentid)
  return costcontentid_;
}
inline void ShopInfo::set_costcontentid(::google::protobuf::uint32 value) {
  set_has_costcontentid();
  costcontentid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.costcontentid)
}

// required uint32 costcount = 8;
inline bool ShopInfo::has_costcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShopInfo::set_has_costcount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShopInfo::clear_has_costcount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShopInfo::clear_costcount() {
  costcount_ = 0u;
  clear_has_costcount();
}
inline ::google::protobuf::uint32 ShopInfo::costcount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.costcount)
  return costcount_;
}
inline void ShopInfo::set_costcount(::google::protobuf::uint32 value) {
  set_has_costcount();
  costcount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.costcount)
}

// required uint32 costcountold = 9;
inline bool ShopInfo::has_costcountold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ShopInfo::set_has_costcountold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ShopInfo::clear_has_costcountold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ShopInfo::clear_costcountold() {
  costcountold_ = 0u;
  clear_has_costcountold();
}
inline ::google::protobuf::uint32 ShopInfo::costcountold() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.costcountold)
  return costcountold_;
}
inline void ShopInfo::set_costcountold(::google::protobuf::uint32 value) {
  set_has_costcountold();
  costcountold_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.costcountold)
}

// required uint32 status = 10;
inline bool ShopInfo::has_status() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ShopInfo::set_has_status() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ShopInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ShopInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ShopInfo::status() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.status)
  return status_;
}
inline void ShopInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.status)
}

// required uint32 platformtype = 11;
inline bool ShopInfo::has_platformtype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ShopInfo::set_has_platformtype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ShopInfo::clear_has_platformtype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ShopInfo::clear_platformtype() {
  platformtype_ = 0u;
  clear_has_platformtype();
}
inline ::google::protobuf::uint32 ShopInfo::platformtype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.platformtype)
  return platformtype_;
}
inline void ShopInfo::set_platformtype(::google::protobuf::uint32 value) {
  set_has_platformtype();
  platformtype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.platformtype)
}

// required bytes limitnumber = 12;
inline bool ShopInfo::has_limitnumber() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ShopInfo::set_has_limitnumber() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ShopInfo::clear_has_limitnumber() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ShopInfo::clear_limitnumber() {
  if (limitnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_->clear();
  }
  clear_has_limitnumber();
}
inline const ::std::string& ShopInfo::limitnumber() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.limitnumber)
  return *limitnumber_;
}
inline void ShopInfo::set_limitnumber(const ::std::string& value) {
  set_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_ = new ::std::string;
  }
  limitnumber_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.limitnumber)
}
inline void ShopInfo::set_limitnumber(const char* value) {
  set_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_ = new ::std::string;
  }
  limitnumber_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ShopInfo.limitnumber)
}
inline void ShopInfo::set_limitnumber(const void* value, size_t size) {
  set_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_ = new ::std::string;
  }
  limitnumber_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ShopInfo.limitnumber)
}
inline ::std::string* ShopInfo::mutable_limitnumber() {
  set_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ShopInfo.limitnumber)
  return limitnumber_;
}
inline ::std::string* ShopInfo::release_limitnumber() {
  clear_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = limitnumber_;
    limitnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ShopInfo::set_allocated_limitnumber(::std::string* limitnumber) {
  if (limitnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete limitnumber_;
  }
  if (limitnumber) {
    set_has_limitnumber();
    limitnumber_ = limitnumber;
  } else {
    clear_has_limitnumber();
    limitnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ShopInfo.limitnumber)
}

// required uint32 limittype = 13;
inline bool ShopInfo::has_limittype() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ShopInfo::set_has_limittype() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ShopInfo::clear_has_limittype() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ShopInfo::clear_limittype() {
  limittype_ = 0u;
  clear_has_limittype();
}
inline ::google::protobuf::uint32 ShopInfo::limittype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.limittype)
  return limittype_;
}
inline void ShopInfo::set_limittype(::google::protobuf::uint32 value) {
  set_has_limittype();
  limittype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.limittype)
}

// required uint32 prizefloat = 14;
inline bool ShopInfo::has_prizefloat() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ShopInfo::set_has_prizefloat() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ShopInfo::clear_has_prizefloat() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ShopInfo::clear_prizefloat() {
  prizefloat_ = 0u;
  clear_has_prizefloat();
}
inline ::google::protobuf::uint32 ShopInfo::prizefloat() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ShopInfo.prizefloat)
  return prizefloat_;
}
inline void ShopInfo::set_prizefloat(::google::protobuf::uint32 value) {
  set_has_prizefloat();
  prizefloat_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ShopInfo.prizefloat)
}

// -------------------------------------------------------------------

// GoodsData

// required uint32 goodsid = 1;
inline bool GoodsData::has_goodsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsData::set_has_goodsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsData::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsData::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 GoodsData::goodsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GoodsData.goodsid)
  return goodsid_;
}
inline void GoodsData::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GoodsData.goodsid)
}

// required uint32 already = 2;
inline bool GoodsData::has_already() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodsData::set_has_already() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodsData::clear_has_already() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodsData::clear_already() {
  already_ = 0u;
  clear_has_already();
}
inline ::google::protobuf::uint32 GoodsData::already() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GoodsData.already)
  return already_;
}
inline void GoodsData::set_already(::google::protobuf::uint32 value) {
  set_has_already();
  already_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GoodsData.already)
}

// required uint32 flushtime = 3;
inline bool GoodsData::has_flushtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoodsData::set_has_flushtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoodsData::clear_has_flushtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoodsData::clear_flushtime() {
  flushtime_ = 0u;
  clear_has_flushtime();
}
inline ::google::protobuf::uint32 GoodsData::flushtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GoodsData.flushtime)
  return flushtime_;
}
inline void GoodsData::set_flushtime(::google::protobuf::uint32 value) {
  set_has_flushtime();
  flushtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GoodsData.flushtime)
}

// -------------------------------------------------------------------

// GoodsDataList

// repeated .TgsProtocol.GoodsData goodsdatalist = 1;
inline int GoodsDataList::goodsdatalist_size() const {
  return goodsdatalist_.size();
}
inline void GoodsDataList::clear_goodsdatalist() {
  goodsdatalist_.Clear();
}
inline const ::TgsProtocol::GoodsData& GoodsDataList::goodsdatalist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GoodsDataList.goodsdatalist)
  return goodsdatalist_.Get(index);
}
inline ::TgsProtocol::GoodsData* GoodsDataList::mutable_goodsdatalist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GoodsDataList.goodsdatalist)
  return goodsdatalist_.Mutable(index);
}
inline ::TgsProtocol::GoodsData* GoodsDataList::add_goodsdatalist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GoodsDataList.goodsdatalist)
  return goodsdatalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GoodsData >&
GoodsDataList::goodsdatalist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GoodsDataList.goodsdatalist)
  return goodsdatalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GoodsData >*
GoodsDataList::mutable_goodsdatalist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GoodsDataList.goodsdatalist)
  return &goodsdatalist_;
}

// -------------------------------------------------------------------

// ClientQuest

// required uint32 questid = 1;
inline bool ClientQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientQuest::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 ClientQuest::questid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientQuest.questid)
  return questid_;
}
inline void ClientQuest::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientQuest.questid)
}

// required uint32 complete = 2;
inline bool ClientQuest::has_complete() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientQuest::set_has_complete() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientQuest::clear_has_complete() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientQuest::clear_complete() {
  complete_ = 0u;
  clear_has_complete();
}
inline ::google::protobuf::uint32 ClientQuest::complete() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientQuest.complete)
  return complete_;
}
inline void ClientQuest::set_complete(::google::protobuf::uint32 value) {
  set_has_complete();
  complete_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientQuest.complete)
}

// required uint64 targetValue = 3;
inline bool ClientQuest::has_targetvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientQuest::set_has_targetvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientQuest::clear_has_targetvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientQuest::clear_targetvalue() {
  targetvalue_ = GOOGLE_ULONGLONG(0);
  clear_has_targetvalue();
}
inline ::google::protobuf::uint64 ClientQuest::targetvalue() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientQuest.targetValue)
  return targetvalue_;
}
inline void ClientQuest::set_targetvalue(::google::protobuf::uint64 value) {
  set_has_targetvalue();
  targetvalue_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientQuest.targetValue)
}

// required uint32 isShow = 4;
inline bool ClientQuest::has_isshow() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientQuest::set_has_isshow() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientQuest::clear_has_isshow() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientQuest::clear_isshow() {
  isshow_ = 0u;
  clear_has_isshow();
}
inline ::google::protobuf::uint32 ClientQuest::isshow() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientQuest.isShow)
  return isshow_;
}
inline void ClientQuest::set_isshow(::google::protobuf::uint32 value) {
  set_has_isshow();
  isshow_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientQuest.isShow)
}

// optional uint32 isGet = 5;
inline bool ClientQuest::has_isget() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientQuest::set_has_isget() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientQuest::clear_has_isget() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientQuest::clear_isget() {
  isget_ = 0u;
  clear_has_isget();
}
inline ::google::protobuf::uint32 ClientQuest::isget() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientQuest.isGet)
  return isget_;
}
inline void ClientQuest::set_isget(::google::protobuf::uint32 value) {
  set_has_isget();
  isget_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientQuest.isGet)
}

// optional uint32 completeTime = 6;
inline bool ClientQuest::has_completetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientQuest::set_has_completetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientQuest::clear_has_completetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientQuest::clear_completetime() {
  completetime_ = 0u;
  clear_has_completetime();
}
inline ::google::protobuf::uint32 ClientQuest::completetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientQuest.completeTime)
  return completetime_;
}
inline void ClientQuest::set_completetime(::google::protobuf::uint32 value) {
  set_has_completetime();
  completetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientQuest.completeTime)
}

// -------------------------------------------------------------------

// TEvaluation

// required uint32 instanceId = 1;
inline bool TEvaluation::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TEvaluation::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TEvaluation::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TEvaluation::clear_instanceid() {
  instanceid_ = 0u;
  clear_has_instanceid();
}
inline ::google::protobuf::uint32 TEvaluation::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TEvaluation.instanceId)
  return instanceid_;
}
inline void TEvaluation::set_instanceid(::google::protobuf::uint32 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TEvaluation.instanceId)
}

// required uint32 evaluation = 2;
inline bool TEvaluation::has_evaluation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TEvaluation::set_has_evaluation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TEvaluation::clear_has_evaluation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TEvaluation::clear_evaluation() {
  evaluation_ = 0u;
  clear_has_evaluation();
}
inline ::google::protobuf::uint32 TEvaluation::evaluation() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TEvaluation.evaluation)
  return evaluation_;
}
inline void TEvaluation::set_evaluation(::google::protobuf::uint32 value) {
  set_has_evaluation();
  evaluation_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TEvaluation.evaluation)
}

// -------------------------------------------------------------------

// HeroEquipInfo

// required uint32 templateId = 1;
inline bool HeroEquipInfo::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroEquipInfo::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroEquipInfo::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroEquipInfo::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 HeroEquipInfo::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipInfo.templateId)
  return templateid_;
}
inline void HeroEquipInfo::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipInfo.templateId)
}

// required uint32 star = 2;
inline bool HeroEquipInfo::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroEquipInfo::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroEquipInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroEquipInfo::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 HeroEquipInfo::star() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipInfo.star)
  return star_;
}
inline void HeroEquipInfo::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipInfo.star)
}

// repeated uint32 attrVal = 3;
inline int HeroEquipInfo::attrval_size() const {
  return attrval_.size();
}
inline void HeroEquipInfo::clear_attrval() {
  attrval_.Clear();
}
inline ::google::protobuf::uint32 HeroEquipInfo::attrval(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipInfo.attrVal)
  return attrval_.Get(index);
}
inline void HeroEquipInfo::set_attrval(int index, ::google::protobuf::uint32 value) {
  attrval_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipInfo.attrVal)
}
inline void HeroEquipInfo::add_attrval(::google::protobuf::uint32 value) {
  attrval_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.HeroEquipInfo.attrVal)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HeroEquipInfo::attrval() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.HeroEquipInfo.attrVal)
  return attrval_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HeroEquipInfo::mutable_attrval() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.HeroEquipInfo.attrVal)
  return &attrval_;
}

// repeated uint32 scheduleVal = 4;
inline int HeroEquipInfo::scheduleval_size() const {
  return scheduleval_.size();
}
inline void HeroEquipInfo::clear_scheduleval() {
  scheduleval_.Clear();
}
inline ::google::protobuf::uint32 HeroEquipInfo::scheduleval(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipInfo.scheduleVal)
  return scheduleval_.Get(index);
}
inline void HeroEquipInfo::set_scheduleval(int index, ::google::protobuf::uint32 value) {
  scheduleval_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipInfo.scheduleVal)
}
inline void HeroEquipInfo::add_scheduleval(::google::protobuf::uint32 value) {
  scheduleval_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.HeroEquipInfo.scheduleVal)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HeroEquipInfo::scheduleval() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.HeroEquipInfo.scheduleVal)
  return scheduleval_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HeroEquipInfo::mutable_scheduleval() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.HeroEquipInfo.scheduleVal)
  return &scheduleval_;
}

// -------------------------------------------------------------------

// HeroEquipNew

// required uint32 templateId = 1;
inline bool HeroEquipNew::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroEquipNew::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroEquipNew::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroEquipNew::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 HeroEquipNew::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipNew.templateId)
  return templateid_;
}
inline void HeroEquipNew::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipNew.templateId)
}

// required uint64 instanceId = 2;
inline bool HeroEquipNew::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroEquipNew::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroEquipNew::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroEquipNew::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::uint64 HeroEquipNew::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipNew.instanceId)
  return instanceid_;
}
inline void HeroEquipNew::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipNew.instanceId)
}

// required uint32 strengLevel = 3;
inline bool HeroEquipNew::has_strenglevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroEquipNew::set_has_strenglevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroEquipNew::clear_has_strenglevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroEquipNew::clear_strenglevel() {
  strenglevel_ = 0u;
  clear_has_strenglevel();
}
inline ::google::protobuf::uint32 HeroEquipNew::strenglevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipNew.strengLevel)
  return strenglevel_;
}
inline void HeroEquipNew::set_strenglevel(::google::protobuf::uint32 value) {
  set_has_strenglevel();
  strenglevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipNew.strengLevel)
}

// required uint32 refineLevel = 4;
inline bool HeroEquipNew::has_refinelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroEquipNew::set_has_refinelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroEquipNew::clear_has_refinelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroEquipNew::clear_refinelevel() {
  refinelevel_ = 0u;
  clear_has_refinelevel();
}
inline ::google::protobuf::uint32 HeroEquipNew::refinelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipNew.refineLevel)
  return refinelevel_;
}
inline void HeroEquipNew::set_refinelevel(::google::protobuf::uint32 value) {
  set_has_refinelevel();
  refinelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipNew.refineLevel)
}

// optional uint32 starLevel = 5;
inline bool HeroEquipNew::has_starlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroEquipNew::set_has_starlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroEquipNew::clear_has_starlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroEquipNew::clear_starlevel() {
  starlevel_ = 0u;
  clear_has_starlevel();
}
inline ::google::protobuf::uint32 HeroEquipNew::starlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipNew.starLevel)
  return starlevel_;
}
inline void HeroEquipNew::set_starlevel(::google::protobuf::uint32 value) {
  set_has_starlevel();
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipNew.starLevel)
}

// optional uint32 strengExp = 6;
inline bool HeroEquipNew::has_strengexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeroEquipNew::set_has_strengexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeroEquipNew::clear_has_strengexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeroEquipNew::clear_strengexp() {
  strengexp_ = 0u;
  clear_has_strengexp();
}
inline ::google::protobuf::uint32 HeroEquipNew::strengexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipNew.strengExp)
  return strengexp_;
}
inline void HeroEquipNew::set_strengexp(::google::protobuf::uint32 value) {
  set_has_strengexp();
  strengexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipNew.strengExp)
}

// optional uint32 refineExp = 7;
inline bool HeroEquipNew::has_refineexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeroEquipNew::set_has_refineexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeroEquipNew::clear_has_refineexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeroEquipNew::clear_refineexp() {
  refineexp_ = 0u;
  clear_has_refineexp();
}
inline ::google::protobuf::uint32 HeroEquipNew::refineexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HeroEquipNew.refineExp)
  return refineexp_;
}
inline void HeroEquipNew::set_refineexp(::google::protobuf::uint32 value) {
  set_has_refineexp();
  refineexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HeroEquipNew.refineExp)
}

// -------------------------------------------------------------------

// Property

// required uint32 index = 1;
inline bool Property::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Property::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Property::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Property::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 Property::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.Property.index)
  return index_;
}
inline void Property::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.Property.index)
}

// optional float base = 2;
inline bool Property::has_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Property::set_has_base() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Property::clear_has_base() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Property::clear_base() {
  base_ = 0;
  clear_has_base();
}
inline float Property::base() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.Property.base)
  return base_;
}
inline void Property::set_base(float value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.Property.base)
}

// optional float per = 3;
inline bool Property::has_per() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Property::set_has_per() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Property::clear_has_per() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Property::clear_per() {
  per_ = 0;
  clear_has_per();
}
inline float Property::per() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.Property.per)
  return per_;
}
inline void Property::set_per(float value) {
  set_has_per();
  per_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.Property.per)
}

// -------------------------------------------------------------------

// WakeAttr

// repeated .TgsProtocol.Property prop = 1;
inline int WakeAttr::prop_size() const {
  return prop_.size();
}
inline void WakeAttr::clear_prop() {
  prop_.Clear();
}
inline const ::TgsProtocol::Property& WakeAttr::prop(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.WakeAttr.prop)
  return prop_.Get(index);
}
inline ::TgsProtocol::Property* WakeAttr::mutable_prop(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.WakeAttr.prop)
  return prop_.Mutable(index);
}
inline ::TgsProtocol::Property* WakeAttr::add_prop() {
  // @@protoc_insertion_point(field_add:TgsProtocol.WakeAttr.prop)
  return prop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Property >&
WakeAttr::prop() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.WakeAttr.prop)
  return prop_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Property >*
WakeAttr::mutable_prop() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.WakeAttr.prop)
  return &prop_;
}

// -------------------------------------------------------------------

// Diagram

// required uint32 id = 1;
inline bool Diagram::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Diagram::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Diagram::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Diagram::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Diagram::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.Diagram.id)
  return id_;
}
inline void Diagram::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.Diagram.id)
}

// required uint32 level = 2;
inline bool Diagram::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Diagram::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Diagram::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Diagram::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Diagram::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.Diagram.level)
  return level_;
}
inline void Diagram::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.Diagram.level)
}

// -------------------------------------------------------------------

// DiagramChapter

// required uint32 id = 1;
inline bool DiagramChapter::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DiagramChapter::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DiagramChapter::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DiagramChapter::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DiagramChapter::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DiagramChapter.id)
  return id_;
}
inline void DiagramChapter::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DiagramChapter.id)
}

// required uint32 num = 2;
inline bool DiagramChapter::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DiagramChapter::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DiagramChapter::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DiagramChapter::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 DiagramChapter::num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DiagramChapter.num)
  return num_;
}
inline void DiagramChapter::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DiagramChapter.num)
}

// -------------------------------------------------------------------

// DiagramChapterMap

// required uint32 id = 1;
inline bool DiagramChapterMap::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DiagramChapterMap::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DiagramChapterMap::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DiagramChapterMap::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DiagramChapterMap::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DiagramChapterMap.id)
  return id_;
}
inline void DiagramChapterMap::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DiagramChapterMap.id)
}

// repeated .TgsProtocol.Diagram diagram = 2;
inline int DiagramChapterMap::diagram_size() const {
  return diagram_.size();
}
inline void DiagramChapterMap::clear_diagram() {
  diagram_.Clear();
}
inline const ::TgsProtocol::Diagram& DiagramChapterMap::diagram(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DiagramChapterMap.diagram)
  return diagram_.Get(index);
}
inline ::TgsProtocol::Diagram* DiagramChapterMap::mutable_diagram(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DiagramChapterMap.diagram)
  return diagram_.Mutable(index);
}
inline ::TgsProtocol::Diagram* DiagramChapterMap::add_diagram() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DiagramChapterMap.diagram)
  return diagram_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Diagram >&
DiagramChapterMap::diagram() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DiagramChapterMap.diagram)
  return diagram_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::Diagram >*
DiagramChapterMap::mutable_diagram() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DiagramChapterMap.diagram)
  return &diagram_;
}

// -------------------------------------------------------------------

// DiagramMap

// repeated .TgsProtocol.DiagramChapterMap diagramChapterMap = 1;
inline int DiagramMap::diagramchaptermap_size() const {
  return diagramchaptermap_.size();
}
inline void DiagramMap::clear_diagramchaptermap() {
  diagramchaptermap_.Clear();
}
inline const ::TgsProtocol::DiagramChapterMap& DiagramMap::diagramchaptermap(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DiagramMap.diagramChapterMap)
  return diagramchaptermap_.Get(index);
}
inline ::TgsProtocol::DiagramChapterMap* DiagramMap::mutable_diagramchaptermap(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DiagramMap.diagramChapterMap)
  return diagramchaptermap_.Mutable(index);
}
inline ::TgsProtocol::DiagramChapterMap* DiagramMap::add_diagramchaptermap() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DiagramMap.diagramChapterMap)
  return diagramchaptermap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DiagramChapterMap >&
DiagramMap::diagramchaptermap() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DiagramMap.diagramChapterMap)
  return diagramchaptermap_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DiagramChapterMap >*
DiagramMap::mutable_diagramchaptermap() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DiagramMap.diagramChapterMap)
  return &diagramchaptermap_;
}

// -------------------------------------------------------------------

// GhostDetail

// required uint32 id = 1;
inline bool GhostDetail::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GhostDetail::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GhostDetail::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GhostDetail::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GhostDetail::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GhostDetail.id)
  return id_;
}
inline void GhostDetail::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GhostDetail.id)
}

// repeated uint32 activeId = 2;
inline int GhostDetail::activeid_size() const {
  return activeid_.size();
}
inline void GhostDetail::clear_activeid() {
  activeid_.Clear();
}
inline ::google::protobuf::uint32 GhostDetail::activeid(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GhostDetail.activeId)
  return activeid_.Get(index);
}
inline void GhostDetail::set_activeid(int index, ::google::protobuf::uint32 value) {
  activeid_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GhostDetail.activeId)
}
inline void GhostDetail::add_activeid(::google::protobuf::uint32 value) {
  activeid_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.GhostDetail.activeId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GhostDetail::activeid() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GhostDetail.activeId)
  return activeid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GhostDetail::mutable_activeid() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GhostDetail.activeId)
  return &activeid_;
}

// -------------------------------------------------------------------

// Ghost

// required uint32 id = 1;
inline bool Ghost::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ghost::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ghost::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ghost::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Ghost::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.Ghost.id)
  return id_;
}
inline void Ghost::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.Ghost.id)
}

// repeated uint32 activeId = 2;
inline int Ghost::activeid_size() const {
  return activeid_.size();
}
inline void Ghost::clear_activeid() {
  activeid_.Clear();
}
inline ::google::protobuf::uint32 Ghost::activeid(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.Ghost.activeId)
  return activeid_.Get(index);
}
inline void Ghost::set_activeid(int index, ::google::protobuf::uint32 value) {
  activeid_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.Ghost.activeId)
}
inline void Ghost::add_activeid(::google::protobuf::uint32 value) {
  activeid_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.Ghost.activeId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Ghost::activeid() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.Ghost.activeId)
  return activeid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Ghost::mutable_activeid() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.Ghost.activeId)
  return &activeid_;
}

// -------------------------------------------------------------------

// GhostList

// repeated .TgsProtocol.GhostDetail ghostList = 1;
inline int GhostList::ghostlist_size() const {
  return ghostlist_.size();
}
inline void GhostList::clear_ghostlist() {
  ghostlist_.Clear();
}
inline const ::TgsProtocol::GhostDetail& GhostList::ghostlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GhostList.ghostList)
  return ghostlist_.Get(index);
}
inline ::TgsProtocol::GhostDetail* GhostList::mutable_ghostlist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GhostList.ghostList)
  return ghostlist_.Mutable(index);
}
inline ::TgsProtocol::GhostDetail* GhostList::add_ghostlist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GhostList.ghostList)
  return ghostlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GhostDetail >&
GhostList::ghostlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GhostList.ghostList)
  return ghostlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GhostDetail >*
GhostList::mutable_ghostlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GhostList.ghostList)
  return &ghostlist_;
}

// -------------------------------------------------------------------

// EpicBoss

// required uint32 chapterId = 1;
inline bool EpicBoss::has_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EpicBoss::set_has_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EpicBoss::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EpicBoss::clear_chapterid() {
  chapterid_ = 0u;
  clear_has_chapterid();
}
inline ::google::protobuf::uint32 EpicBoss::chapterid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.EpicBoss.chapterId)
  return chapterid_;
}
inline void EpicBoss::set_chapterid(::google::protobuf::uint32 value) {
  set_has_chapterid();
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.EpicBoss.chapterId)
}

// required uint32 mapId = 2;
inline bool EpicBoss::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EpicBoss::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EpicBoss::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EpicBoss::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 EpicBoss::mapid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.EpicBoss.mapId)
  return mapid_;
}
inline void EpicBoss::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.EpicBoss.mapId)
}

// required uint32 state = 3;
inline bool EpicBoss::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EpicBoss::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EpicBoss::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EpicBoss::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 EpicBoss::state() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.EpicBoss.state)
  return state_;
}
inline void EpicBoss::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.EpicBoss.state)
}

// -------------------------------------------------------------------

// EpicBossList

// repeated .TgsProtocol.EpicBoss list = 1;
inline int EpicBossList::list_size() const {
  return list_.size();
}
inline void EpicBossList::clear_list() {
  list_.Clear();
}
inline const ::TgsProtocol::EpicBoss& EpicBossList::list(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.EpicBossList.list)
  return list_.Get(index);
}
inline ::TgsProtocol::EpicBoss* EpicBossList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.EpicBossList.list)
  return list_.Mutable(index);
}
inline ::TgsProtocol::EpicBoss* EpicBossList::add_list() {
  // @@protoc_insertion_point(field_add:TgsProtocol.EpicBossList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::EpicBoss >&
EpicBossList::list() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.EpicBossList.list)
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::EpicBoss >*
EpicBossList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.EpicBossList.list)
  return &list_;
}

// -------------------------------------------------------------------

// OnlineRewards

// optional uint32 onlinetime = 1;
inline bool OnlineRewards::has_onlinetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlineRewards::set_has_onlinetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlineRewards::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlineRewards::clear_onlinetime() {
  onlinetime_ = 0u;
  clear_has_onlinetime();
}
inline ::google::protobuf::uint32 OnlineRewards::onlinetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OnlineRewards.onlinetime)
  return onlinetime_;
}
inline void OnlineRewards::set_onlinetime(::google::protobuf::uint32 value) {
  set_has_onlinetime();
  onlinetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OnlineRewards.onlinetime)
}

// repeated .TgsProtocol.ClientSource sources = 2;
inline int OnlineRewards::sources_size() const {
  return sources_.size();
}
inline void OnlineRewards::clear_sources() {
  sources_.Clear();
}
inline const ::TgsProtocol::ClientSource& OnlineRewards::sources(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OnlineRewards.sources)
  return sources_.Get(index);
}
inline ::TgsProtocol::ClientSource* OnlineRewards::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OnlineRewards.sources)
  return sources_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* OnlineRewards::add_sources() {
  // @@protoc_insertion_point(field_add:TgsProtocol.OnlineRewards.sources)
  return sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
OnlineRewards::sources() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OnlineRewards.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
OnlineRewards::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OnlineRewards.sources)
  return &sources_;
}

// -------------------------------------------------------------------

// TreeState

// required uint32 level = 1;
inline bool TreeState::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreeState::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreeState::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreeState::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TreeState::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TreeState.level)
  return level_;
}
inline void TreeState::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TreeState.level)
}

// required uint32 acctime = 2;
inline bool TreeState::has_acctime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreeState::set_has_acctime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TreeState::clear_has_acctime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TreeState::clear_acctime() {
  acctime_ = 0u;
  clear_has_acctime();
}
inline ::google::protobuf::uint32 TreeState::acctime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TreeState.acctime)
  return acctime_;
}
inline void TreeState::set_acctime(::google::protobuf::uint32 value) {
  set_has_acctime();
  acctime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TreeState.acctime)
}

// repeated .TgsProtocol.ClientSource sources = 3;
inline int TreeState::sources_size() const {
  return sources_.size();
}
inline void TreeState::clear_sources() {
  sources_.Clear();
}
inline const ::TgsProtocol::ClientSource& TreeState::sources(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TreeState.sources)
  return sources_.Get(index);
}
inline ::TgsProtocol::ClientSource* TreeState::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.TreeState.sources)
  return sources_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* TreeState::add_sources() {
  // @@protoc_insertion_point(field_add:TgsProtocol.TreeState.sources)
  return sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
TreeState::sources() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.TreeState.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
TreeState::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.TreeState.sources)
  return &sources_;
}

// -------------------------------------------------------------------

// RetrieveState

// required uint32 retrieveActivity = 1;
inline bool RetrieveState::has_retrieveactivity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetrieveState::set_has_retrieveactivity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetrieveState::clear_has_retrieveactivity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetrieveState::clear_retrieveactivity() {
  retrieveactivity_ = 0u;
  clear_has_retrieveactivity();
}
inline ::google::protobuf::uint32 RetrieveState::retrieveactivity() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.RetrieveState.retrieveActivity)
  return retrieveactivity_;
}
inline void RetrieveState::set_retrieveactivity(::google::protobuf::uint32 value) {
  set_has_retrieveactivity();
  retrieveactivity_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.RetrieveState.retrieveActivity)
}

// required uint32 state = 2;
inline bool RetrieveState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetrieveState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetrieveState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetrieveState::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 RetrieveState::state() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.RetrieveState.state)
  return state_;
}
inline void RetrieveState::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.RetrieveState.state)
}

// -------------------------------------------------------------------

// PassWordState

// required uint32 id = 1;
inline bool PassWordState::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PassWordState::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PassWordState::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PassWordState::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PassWordState::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PassWordState.id)
  return id_;
}
inline void PassWordState::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PassWordState.id)
}

// required uint32 state = 2;
inline bool PassWordState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PassWordState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PassWordState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PassWordState::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 PassWordState::state() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PassWordState.state)
  return state_;
}
inline void PassWordState::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PassWordState.state)
}

// -------------------------------------------------------------------

// ClientHeroInfo

// required uint32 templateId = 1;
inline bool ClientHeroInfo::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientHeroInfo::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientHeroInfo::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientHeroInfo::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 ClientHeroInfo::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.templateId)
  return templateid_;
}
inline void ClientHeroInfo::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.templateId)
}

// required uint64 instanceId = 2;
inline bool ClientHeroInfo::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientHeroInfo::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientHeroInfo::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientHeroInfo::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::uint64 ClientHeroInfo::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.instanceId)
  return instanceid_;
}
inline void ClientHeroInfo::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.instanceId)
}

// required uint32 level = 3;
inline bool ClientHeroInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientHeroInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientHeroInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientHeroInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ClientHeroInfo::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.level)
  return level_;
}
inline void ClientHeroInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.level)
}

// required uint32 exp = 4;
inline bool ClientHeroInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientHeroInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientHeroInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientHeroInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 ClientHeroInfo::exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.exp)
  return exp_;
}
inline void ClientHeroInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.exp)
}

// required uint32 evolutionLevel = 5;
inline bool ClientHeroInfo::has_evolutionlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientHeroInfo::set_has_evolutionlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientHeroInfo::clear_has_evolutionlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientHeroInfo::clear_evolutionlevel() {
  evolutionlevel_ = 0u;
  clear_has_evolutionlevel();
}
inline ::google::protobuf::uint32 ClientHeroInfo::evolutionlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.evolutionLevel)
  return evolutionlevel_;
}
inline void ClientHeroInfo::set_evolutionlevel(::google::protobuf::uint32 value) {
  set_has_evolutionlevel();
  evolutionlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.evolutionLevel)
}

// required uint32 forceLevel = 6;
inline bool ClientHeroInfo::has_forcelevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientHeroInfo::set_has_forcelevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientHeroInfo::clear_has_forcelevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientHeroInfo::clear_forcelevel() {
  forcelevel_ = 0u;
  clear_has_forcelevel();
}
inline ::google::protobuf::uint32 ClientHeroInfo::forcelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.forceLevel)
  return forcelevel_;
}
inline void ClientHeroInfo::set_forcelevel(::google::protobuf::uint32 value) {
  set_has_forcelevel();
  forcelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.forceLevel)
}

// repeated .TgsProtocol.HeroEquipInfo equip = 7;
inline int ClientHeroInfo::equip_size() const {
  return equip_.size();
}
inline void ClientHeroInfo::clear_equip() {
  equip_.Clear();
}
inline const ::TgsProtocol::HeroEquipInfo& ClientHeroInfo::equip(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.equip)
  return equip_.Get(index);
}
inline ::TgsProtocol::HeroEquipInfo* ClientHeroInfo::mutable_equip(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientHeroInfo.equip)
  return equip_.Mutable(index);
}
inline ::TgsProtocol::HeroEquipInfo* ClientHeroInfo::add_equip() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientHeroInfo.equip)
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo >&
ClientHeroInfo::equip() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientHeroInfo.equip)
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo >*
ClientHeroInfo::mutable_equip() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientHeroInfo.equip)
  return &equip_;
}

// repeated uint32 skillLevel = 8;
inline int ClientHeroInfo::skilllevel_size() const {
  return skilllevel_.size();
}
inline void ClientHeroInfo::clear_skilllevel() {
  skilllevel_.Clear();
}
inline ::google::protobuf::uint32 ClientHeroInfo::skilllevel(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.skillLevel)
  return skilllevel_.Get(index);
}
inline void ClientHeroInfo::set_skilllevel(int index, ::google::protobuf::uint32 value) {
  skilllevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.skillLevel)
}
inline void ClientHeroInfo::add_skilllevel(::google::protobuf::uint32 value) {
  skilllevel_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientHeroInfo.skillLevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientHeroInfo::skilllevel() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientHeroInfo.skillLevel)
  return skilllevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientHeroInfo::mutable_skilllevel() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientHeroInfo.skillLevel)
  return &skilllevel_;
}

// optional bytes heroName = 9;
inline bool ClientHeroInfo::has_heroname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientHeroInfo::set_has_heroname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientHeroInfo::clear_has_heroname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientHeroInfo::clear_heroname() {
  if (heroname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_->clear();
  }
  clear_has_heroname();
}
inline const ::std::string& ClientHeroInfo::heroname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.heroName)
  return *heroname_;
}
inline void ClientHeroInfo::set_heroname(const ::std::string& value) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.heroName)
}
inline void ClientHeroInfo::set_heroname(const char* value) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientHeroInfo.heroName)
}
inline void ClientHeroInfo::set_heroname(const void* value, size_t size) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientHeroInfo.heroName)
}
inline ::std::string* ClientHeroInfo::mutable_heroname() {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientHeroInfo.heroName)
  return heroname_;
}
inline ::std::string* ClientHeroInfo::release_heroname() {
  clear_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = heroname_;
    heroname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientHeroInfo::set_allocated_heroname(::std::string* heroname) {
  if (heroname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete heroname_;
  }
  if (heroname) {
    set_has_heroname();
    heroname_ = heroname;
  } else {
    clear_has_heroname();
    heroname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientHeroInfo.heroName)
}

// repeated uint64 equipNew = 10;
inline int ClientHeroInfo::equipnew_size() const {
  return equipnew_.size();
}
inline void ClientHeroInfo::clear_equipnew() {
  equipnew_.Clear();
}
inline ::google::protobuf::uint64 ClientHeroInfo::equipnew(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.equipNew)
  return equipnew_.Get(index);
}
inline void ClientHeroInfo::set_equipnew(int index, ::google::protobuf::uint64 value) {
  equipnew_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.equipNew)
}
inline void ClientHeroInfo::add_equipnew(::google::protobuf::uint64 value) {
  equipnew_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientHeroInfo.equipNew)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ClientHeroInfo::equipnew() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientHeroInfo.equipNew)
  return equipnew_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ClientHeroInfo::mutable_equipnew() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientHeroInfo.equipNew)
  return &equipnew_;
}

// optional uint32 fashionId = 11;
inline bool ClientHeroInfo::has_fashionid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientHeroInfo::set_has_fashionid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientHeroInfo::clear_has_fashionid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientHeroInfo::clear_fashionid() {
  fashionid_ = 0u;
  clear_has_fashionid();
}
inline ::google::protobuf::uint32 ClientHeroInfo::fashionid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.fashionId)
  return fashionid_;
}
inline void ClientHeroInfo::set_fashionid(::google::protobuf::uint32 value) {
  set_has_fashionid();
  fashionid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.fashionId)
}

// repeated uint32 comboSkill = 12;
inline int ClientHeroInfo::comboskill_size() const {
  return comboskill_.size();
}
inline void ClientHeroInfo::clear_comboskill() {
  comboskill_.Clear();
}
inline ::google::protobuf::uint32 ClientHeroInfo::comboskill(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.comboSkill)
  return comboskill_.Get(index);
}
inline void ClientHeroInfo::set_comboskill(int index, ::google::protobuf::uint32 value) {
  comboskill_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.comboSkill)
}
inline void ClientHeroInfo::add_comboskill(::google::protobuf::uint32 value) {
  comboskill_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientHeroInfo.comboSkill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientHeroInfo::comboskill() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientHeroInfo.comboSkill)
  return comboskill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientHeroInfo::mutable_comboskill() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientHeroInfo.comboSkill)
  return &comboskill_;
}

// repeated uint32 fateId = 13;
inline int ClientHeroInfo::fateid_size() const {
  return fateid_.size();
}
inline void ClientHeroInfo::clear_fateid() {
  fateid_.Clear();
}
inline ::google::protobuf::uint32 ClientHeroInfo::fateid(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.fateId)
  return fateid_.Get(index);
}
inline void ClientHeroInfo::set_fateid(int index, ::google::protobuf::uint32 value) {
  fateid_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.fateId)
}
inline void ClientHeroInfo::add_fateid(::google::protobuf::uint32 value) {
  fateid_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientHeroInfo.fateId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientHeroInfo::fateid() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientHeroInfo.fateId)
  return fateid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientHeroInfo::mutable_fateid() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientHeroInfo.fateId)
  return &fateid_;
}

// repeated .TgsProtocol.HeroEquipNew equipNewList = 14;
inline int ClientHeroInfo::equipnewlist_size() const {
  return equipnewlist_.size();
}
inline void ClientHeroInfo::clear_equipnewlist() {
  equipnewlist_.Clear();
}
inline const ::TgsProtocol::HeroEquipNew& ClientHeroInfo::equipnewlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.equipNewList)
  return equipnewlist_.Get(index);
}
inline ::TgsProtocol::HeroEquipNew* ClientHeroInfo::mutable_equipnewlist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientHeroInfo.equipNewList)
  return equipnewlist_.Mutable(index);
}
inline ::TgsProtocol::HeroEquipNew* ClientHeroInfo::add_equipnewlist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientHeroInfo.equipNewList)
  return equipnewlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >&
ClientHeroInfo::equipnewlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientHeroInfo.equipNewList)
  return equipnewlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >*
ClientHeroInfo::mutable_equipnewlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientHeroInfo.equipNewList)
  return &equipnewlist_;
}

// optional uint32 deificationlevel = 15;
inline bool ClientHeroInfo::has_deificationlevel() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ClientHeroInfo::set_has_deificationlevel() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ClientHeroInfo::clear_has_deificationlevel() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ClientHeroInfo::clear_deificationlevel() {
  deificationlevel_ = 0u;
  clear_has_deificationlevel();
}
inline ::google::protobuf::uint32 ClientHeroInfo::deificationlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.deificationlevel)
  return deificationlevel_;
}
inline void ClientHeroInfo::set_deificationlevel(::google::protobuf::uint32 value) {
  set_has_deificationlevel();
  deificationlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.deificationlevel)
}

// optional uint32 wingslevel = 16;
inline bool ClientHeroInfo::has_wingslevel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ClientHeroInfo::set_has_wingslevel() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ClientHeroInfo::clear_has_wingslevel() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ClientHeroInfo::clear_wingslevel() {
  wingslevel_ = 0u;
  clear_has_wingslevel();
}
inline ::google::protobuf::uint32 ClientHeroInfo::wingslevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.wingslevel)
  return wingslevel_;
}
inline void ClientHeroInfo::set_wingslevel(::google::protobuf::uint32 value) {
  set_has_wingslevel();
  wingslevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.wingslevel)
}

// optional uint32 wingsrate = 17;
inline bool ClientHeroInfo::has_wingsrate() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ClientHeroInfo::set_has_wingsrate() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ClientHeroInfo::clear_has_wingsrate() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ClientHeroInfo::clear_wingsrate() {
  wingsrate_ = 0u;
  clear_has_wingsrate();
}
inline ::google::protobuf::uint32 ClientHeroInfo::wingsrate() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.wingsrate)
  return wingsrate_;
}
inline void ClientHeroInfo::set_wingsrate(::google::protobuf::uint32 value) {
  set_has_wingsrate();
  wingsrate_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.wingsrate)
}

// repeated .TgsProtocol.ClientSource sources = 18;
inline int ClientHeroInfo::sources_size() const {
  return sources_.size();
}
inline void ClientHeroInfo::clear_sources() {
  sources_.Clear();
}
inline const ::TgsProtocol::ClientSource& ClientHeroInfo::sources(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.sources)
  return sources_.Get(index);
}
inline ::TgsProtocol::ClientSource* ClientHeroInfo::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientHeroInfo.sources)
  return sources_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* ClientHeroInfo::add_sources() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientHeroInfo.sources)
  return sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
ClientHeroInfo::sources() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientHeroInfo.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
ClientHeroInfo::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientHeroInfo.sources)
  return &sources_;
}

// repeated uint32 wakeEquips = 19;
inline int ClientHeroInfo::wakeequips_size() const {
  return wakeequips_.size();
}
inline void ClientHeroInfo::clear_wakeequips() {
  wakeequips_.Clear();
}
inline ::google::protobuf::uint32 ClientHeroInfo::wakeequips(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.wakeEquips)
  return wakeequips_.Get(index);
}
inline void ClientHeroInfo::set_wakeequips(int index, ::google::protobuf::uint32 value) {
  wakeequips_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.wakeEquips)
}
inline void ClientHeroInfo::add_wakeequips(::google::protobuf::uint32 value) {
  wakeequips_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientHeroInfo.wakeEquips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientHeroInfo::wakeequips() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientHeroInfo.wakeEquips)
  return wakeequips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientHeroInfo::mutable_wakeequips() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientHeroInfo.wakeEquips)
  return &wakeequips_;
}

// optional uint32 wakeLevel = 20;
inline bool ClientHeroInfo::has_wakelevel() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ClientHeroInfo::set_has_wakelevel() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ClientHeroInfo::clear_has_wakelevel() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ClientHeroInfo::clear_wakelevel() {
  wakelevel_ = 0u;
  clear_has_wakelevel();
}
inline ::google::protobuf::uint32 ClientHeroInfo::wakelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.wakeLevel)
  return wakelevel_;
}
inline void ClientHeroInfo::set_wakelevel(::google::protobuf::uint32 value) {
  set_has_wakelevel();
  wakelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroInfo.wakeLevel)
}

// optional .TgsProtocol.WakeAttr property = 21;
inline bool ClientHeroInfo::has_property() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ClientHeroInfo::set_has_property() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ClientHeroInfo::clear_has_property() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ClientHeroInfo::clear_property() {
  if (property_ != NULL) property_->::TgsProtocol::WakeAttr::Clear();
  clear_has_property();
}
inline const ::TgsProtocol::WakeAttr& ClientHeroInfo::property() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroInfo.property)
  return property_ != NULL ? *property_ : *default_instance_->property_;
}
inline ::TgsProtocol::WakeAttr* ClientHeroInfo::mutable_property() {
  set_has_property();
  if (property_ == NULL) property_ = new ::TgsProtocol::WakeAttr;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientHeroInfo.property)
  return property_;
}
inline ::TgsProtocol::WakeAttr* ClientHeroInfo::release_property() {
  clear_has_property();
  ::TgsProtocol::WakeAttr* temp = property_;
  property_ = NULL;
  return temp;
}
inline void ClientHeroInfo::set_allocated_property(::TgsProtocol::WakeAttr* property) {
  delete property_;
  property_ = property;
  if (property) {
    set_has_property();
  } else {
    clear_has_property();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientHeroInfo.property)
}

// -------------------------------------------------------------------

// ClientInstanceEvaluation

// required uint32 instanceId = 1;
inline bool ClientInstanceEvaluation::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientInstanceEvaluation::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientInstanceEvaluation::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientInstanceEvaluation::clear_instanceid() {
  instanceid_ = 0u;
  clear_has_instanceid();
}
inline ::google::protobuf::uint32 ClientInstanceEvaluation::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientInstanceEvaluation.instanceId)
  return instanceid_;
}
inline void ClientInstanceEvaluation::set_instanceid(::google::protobuf::uint32 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientInstanceEvaluation.instanceId)
}

// required uint32 evaluation = 2;
inline bool ClientInstanceEvaluation::has_evaluation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientInstanceEvaluation::set_has_evaluation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientInstanceEvaluation::clear_has_evaluation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientInstanceEvaluation::clear_evaluation() {
  evaluation_ = 0u;
  clear_has_evaluation();
}
inline ::google::protobuf::uint32 ClientInstanceEvaluation::evaluation() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientInstanceEvaluation.evaluation)
  return evaluation_;
}
inline void ClientInstanceEvaluation::set_evaluation(::google::protobuf::uint32 value) {
  set_has_evaluation();
  evaluation_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientInstanceEvaluation.evaluation)
}

// required uint32 challengeTimes = 3;
inline bool ClientInstanceEvaluation::has_challengetimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientInstanceEvaluation::set_has_challengetimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientInstanceEvaluation::clear_has_challengetimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientInstanceEvaluation::clear_challengetimes() {
  challengetimes_ = 0u;
  clear_has_challengetimes();
}
inline ::google::protobuf::uint32 ClientInstanceEvaluation::challengetimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientInstanceEvaluation.challengeTimes)
  return challengetimes_;
}
inline void ClientInstanceEvaluation::set_challengetimes(::google::protobuf::uint32 value) {
  set_has_challengetimes();
  challengetimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientInstanceEvaluation.challengeTimes)
}

// required uint32 resetTimes = 4;
inline bool ClientInstanceEvaluation::has_resettimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientInstanceEvaluation::set_has_resettimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientInstanceEvaluation::clear_has_resettimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientInstanceEvaluation::clear_resettimes() {
  resettimes_ = 0u;
  clear_has_resettimes();
}
inline ::google::protobuf::uint32 ClientInstanceEvaluation::resettimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientInstanceEvaluation.resetTimes)
  return resettimes_;
}
inline void ClientInstanceEvaluation::set_resettimes(::google::protobuf::uint32 value) {
  set_has_resettimes();
  resettimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientInstanceEvaluation.resetTimes)
}

// -------------------------------------------------------------------

// ClientFestivityInfo

// required uint32 festivityId = 1;
inline bool ClientFestivityInfo::has_festivityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientFestivityInfo::set_has_festivityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientFestivityInfo::clear_has_festivityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientFestivityInfo::clear_festivityid() {
  festivityid_ = 0u;
  clear_has_festivityid();
}
inline ::google::protobuf::uint32 ClientFestivityInfo::festivityid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFestivityInfo.festivityId)
  return festivityid_;
}
inline void ClientFestivityInfo::set_festivityid(::google::protobuf::uint32 value) {
  set_has_festivityid();
  festivityid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFestivityInfo.festivityId)
}

// required uint32 enterCount = 2;
inline bool ClientFestivityInfo::has_entercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientFestivityInfo::set_has_entercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientFestivityInfo::clear_has_entercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientFestivityInfo::clear_entercount() {
  entercount_ = 0u;
  clear_has_entercount();
}
inline ::google::protobuf::uint32 ClientFestivityInfo::entercount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFestivityInfo.enterCount)
  return entercount_;
}
inline void ClientFestivityInfo::set_entercount(::google::protobuf::uint32 value) {
  set_has_entercount();
  entercount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFestivityInfo.enterCount)
}

// -------------------------------------------------------------------

// OtherUserInfo

// required uint64 charId = 3;
inline bool OtherUserInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OtherUserInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OtherUserInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OtherUserInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 OtherUserInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.charId)
  return charid_;
}
inline void OtherUserInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.charId)
}

// optional bytes charName = 4;
inline bool OtherUserInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OtherUserInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OtherUserInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OtherUserInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& OtherUserInfo::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.charName)
  return *charname_;
}
inline void OtherUserInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.charName)
}
inline void OtherUserInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.OtherUserInfo.charName)
}
inline void OtherUserInfo::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.OtherUserInfo.charName)
}
inline ::std::string* OtherUserInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfo.charName)
  return charname_;
}
inline ::std::string* OtherUserInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OtherUserInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.OtherUserInfo.charName)
}

// optional uint32 cash = 5;
inline bool OtherUserInfo::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OtherUserInfo::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OtherUserInfo::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OtherUserInfo::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 OtherUserInfo::cash() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.cash)
  return cash_;
}
inline void OtherUserInfo::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.cash)
}

// optional uint32 gold = 6;
inline bool OtherUserInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OtherUserInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OtherUserInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OtherUserInfo::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 OtherUserInfo::gold() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.gold)
  return gold_;
}
inline void OtherUserInfo::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.gold)
}

// optional uint32 level = 7;
inline bool OtherUserInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OtherUserInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OtherUserInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OtherUserInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 OtherUserInfo::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.level)
  return level_;
}
inline void OtherUserInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.level)
}

// optional uint32 exp = 8;
inline bool OtherUserInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OtherUserInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OtherUserInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OtherUserInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 OtherUserInfo::exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.exp)
  return exp_;
}
inline void OtherUserInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.exp)
}

// optional uint32 curStamina = 9;
inline bool OtherUserInfo::has_curstamina() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OtherUserInfo::set_has_curstamina() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OtherUserInfo::clear_has_curstamina() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OtherUserInfo::clear_curstamina() {
  curstamina_ = 0u;
  clear_has_curstamina();
}
inline ::google::protobuf::uint32 OtherUserInfo::curstamina() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.curStamina)
  return curstamina_;
}
inline void OtherUserInfo::set_curstamina(::google::protobuf::uint32 value) {
  set_has_curstamina();
  curstamina_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.curStamina)
}

// optional uint32 maxStamina = 10;
inline bool OtherUserInfo::has_maxstamina() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OtherUserInfo::set_has_maxstamina() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OtherUserInfo::clear_has_maxstamina() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OtherUserInfo::clear_maxstamina() {
  maxstamina_ = 0u;
  clear_has_maxstamina();
}
inline ::google::protobuf::uint32 OtherUserInfo::maxstamina() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.maxStamina)
  return maxstamina_;
}
inline void OtherUserInfo::set_maxstamina(::google::protobuf::uint32 value) {
  set_has_maxstamina();
  maxstamina_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.maxStamina)
}

// optional uint32 createTime = 11;
inline bool OtherUserInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OtherUserInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OtherUserInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OtherUserInfo::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 OtherUserInfo::createtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.createTime)
  return createtime_;
}
inline void OtherUserInfo::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.createTime)
}

// optional uint32 offlineTime = 12;
inline bool OtherUserInfo::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OtherUserInfo::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OtherUserInfo::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OtherUserInfo::clear_offlinetime() {
  offlinetime_ = 0u;
  clear_has_offlinetime();
}
inline ::google::protobuf::uint32 OtherUserInfo::offlinetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.offlineTime)
  return offlinetime_;
}
inline void OtherUserInfo::set_offlinetime(::google::protobuf::uint32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.offlineTime)
}

// optional uint32 updateStaminaTime = 13;
inline bool OtherUserInfo::has_updatestaminatime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OtherUserInfo::set_has_updatestaminatime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OtherUserInfo::clear_has_updatestaminatime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OtherUserInfo::clear_updatestaminatime() {
  updatestaminatime_ = 0u;
  clear_has_updatestaminatime();
}
inline ::google::protobuf::uint32 OtherUserInfo::updatestaminatime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.updateStaminaTime)
  return updatestaminatime_;
}
inline void OtherUserInfo::set_updatestaminatime(::google::protobuf::uint32 value) {
  set_has_updatestaminatime();
  updatestaminatime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.updateStaminaTime)
}

// optional uint32 bitFlag = 14;
inline bool OtherUserInfo::has_bitflag() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OtherUserInfo::set_has_bitflag() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OtherUserInfo::clear_has_bitflag() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OtherUserInfo::clear_bitflag() {
  bitflag_ = 0u;
  clear_has_bitflag();
}
inline ::google::protobuf::uint32 OtherUserInfo::bitflag() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.bitFlag)
  return bitflag_;
}
inline void OtherUserInfo::set_bitflag(::google::protobuf::uint32 value) {
  set_has_bitflag();
  bitflag_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.bitFlag)
}

// optional .TgsProtocol.DbQuest quest = 15;
inline bool OtherUserInfo::has_quest() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OtherUserInfo::set_has_quest() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OtherUserInfo::clear_has_quest() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OtherUserInfo::clear_quest() {
  if (quest_ != NULL) quest_->::TgsProtocol::DbQuest::Clear();
  clear_has_quest();
}
inline const ::TgsProtocol::DbQuest& OtherUserInfo::quest() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.quest)
  return quest_ != NULL ? *quest_ : *default_instance_->quest_;
}
inline ::TgsProtocol::DbQuest* OtherUserInfo::mutable_quest() {
  set_has_quest();
  if (quest_ == NULL) quest_ = new ::TgsProtocol::DbQuest;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfo.quest)
  return quest_;
}
inline ::TgsProtocol::DbQuest* OtherUserInfo::release_quest() {
  clear_has_quest();
  ::TgsProtocol::DbQuest* temp = quest_;
  quest_ = NULL;
  return temp;
}
inline void OtherUserInfo::set_allocated_quest(::TgsProtocol::DbQuest* quest) {
  delete quest_;
  quest_ = quest;
  if (quest) {
    set_has_quest();
  } else {
    clear_has_quest();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.OtherUserInfo.quest)
}

// optional .TgsProtocol.DBEvaluationList evaluation = 16;
inline bool OtherUserInfo::has_evaluation() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OtherUserInfo::set_has_evaluation() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OtherUserInfo::clear_has_evaluation() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OtherUserInfo::clear_evaluation() {
  if (evaluation_ != NULL) evaluation_->::TgsProtocol::DBEvaluationList::Clear();
  clear_has_evaluation();
}
inline const ::TgsProtocol::DBEvaluationList& OtherUserInfo::evaluation() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.evaluation)
  return evaluation_ != NULL ? *evaluation_ : *default_instance_->evaluation_;
}
inline ::TgsProtocol::DBEvaluationList* OtherUserInfo::mutable_evaluation() {
  set_has_evaluation();
  if (evaluation_ == NULL) evaluation_ = new ::TgsProtocol::DBEvaluationList;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfo.evaluation)
  return evaluation_;
}
inline ::TgsProtocol::DBEvaluationList* OtherUserInfo::release_evaluation() {
  clear_has_evaluation();
  ::TgsProtocol::DBEvaluationList* temp = evaluation_;
  evaluation_ = NULL;
  return temp;
}
inline void OtherUserInfo::set_allocated_evaluation(::TgsProtocol::DBEvaluationList* evaluation) {
  delete evaluation_;
  evaluation_ = evaluation;
  if (evaluation) {
    set_has_evaluation();
  } else {
    clear_has_evaluation();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.OtherUserInfo.evaluation)
}

// optional uint32 vipExp = 18;
inline bool OtherUserInfo::has_vipexp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OtherUserInfo::set_has_vipexp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OtherUserInfo::clear_has_vipexp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OtherUserInfo::clear_vipexp() {
  vipexp_ = 0u;
  clear_has_vipexp();
}
inline ::google::protobuf::uint32 OtherUserInfo::vipexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.vipExp)
  return vipexp_;
}
inline void OtherUserInfo::set_vipexp(::google::protobuf::uint32 value) {
  set_has_vipexp();
  vipexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.vipExp)
}

// optional uint32 vipLevel = 19;
inline bool OtherUserInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void OtherUserInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00008000u;
}
inline void OtherUserInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void OtherUserInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 OtherUserInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.vipLevel)
  return viplevel_;
}
inline void OtherUserInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.vipLevel)
}

// repeated uint32 formation = 20;
inline int OtherUserInfo::formation_size() const {
  return formation_.size();
}
inline void OtherUserInfo::clear_formation() {
  formation_.Clear();
}
inline ::google::protobuf::uint32 OtherUserInfo::formation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.formation)
  return formation_.Get(index);
}
inline void OtherUserInfo::set_formation(int index, ::google::protobuf::uint32 value) {
  formation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.formation)
}
inline void OtherUserInfo::add_formation(::google::protobuf::uint32 value) {
  formation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfo.formation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OtherUserInfo::formation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfo.formation)
  return formation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OtherUserInfo::mutable_formation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfo.formation)
  return &formation_;
}

// optional .TgsProtocol.DBHeroList heroList = 22;
inline bool OtherUserInfo::has_herolist() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void OtherUserInfo::set_has_herolist() {
  _has_bits_[0] |= 0x00020000u;
}
inline void OtherUserInfo::clear_has_herolist() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void OtherUserInfo::clear_herolist() {
  if (herolist_ != NULL) herolist_->::TgsProtocol::DBHeroList::Clear();
  clear_has_herolist();
}
inline const ::TgsProtocol::DBHeroList& OtherUserInfo::herolist() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.heroList)
  return herolist_ != NULL ? *herolist_ : *default_instance_->herolist_;
}
inline ::TgsProtocol::DBHeroList* OtherUserInfo::mutable_herolist() {
  set_has_herolist();
  if (herolist_ == NULL) herolist_ = new ::TgsProtocol::DBHeroList;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfo.heroList)
  return herolist_;
}
inline ::TgsProtocol::DBHeroList* OtherUserInfo::release_herolist() {
  clear_has_herolist();
  ::TgsProtocol::DBHeroList* temp = herolist_;
  herolist_ = NULL;
  return temp;
}
inline void OtherUserInfo::set_allocated_herolist(::TgsProtocol::DBHeroList* herolist) {
  delete herolist_;
  herolist_ = herolist;
  if (herolist) {
    set_has_herolist();
  } else {
    clear_has_herolist();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.OtherUserInfo.heroList)
}

// optional uint32 gender = 23;
inline bool OtherUserInfo::has_gender() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void OtherUserInfo::set_has_gender() {
  _has_bits_[0] |= 0x00040000u;
}
inline void OtherUserInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void OtherUserInfo::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 OtherUserInfo::gender() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.gender)
  return gender_;
}
inline void OtherUserInfo::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.gender)
}

// optional uint32 photo = 24;
inline bool OtherUserInfo::has_photo() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void OtherUserInfo::set_has_photo() {
  _has_bits_[0] |= 0x00080000u;
}
inline void OtherUserInfo::clear_has_photo() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void OtherUserInfo::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 OtherUserInfo::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.photo)
  return photo_;
}
inline void OtherUserInfo::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.photo)
}

// optional .TgsProtocol.DBEssenceList essenceItem = 25;
inline bool OtherUserInfo::has_essenceitem() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void OtherUserInfo::set_has_essenceitem() {
  _has_bits_[0] |= 0x00100000u;
}
inline void OtherUserInfo::clear_has_essenceitem() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void OtherUserInfo::clear_essenceitem() {
  if (essenceitem_ != NULL) essenceitem_->::TgsProtocol::DBEssenceList::Clear();
  clear_has_essenceitem();
}
inline const ::TgsProtocol::DBEssenceList& OtherUserInfo::essenceitem() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.essenceItem)
  return essenceitem_ != NULL ? *essenceitem_ : *default_instance_->essenceitem_;
}
inline ::TgsProtocol::DBEssenceList* OtherUserInfo::mutable_essenceitem() {
  set_has_essenceitem();
  if (essenceitem_ == NULL) essenceitem_ = new ::TgsProtocol::DBEssenceList;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfo.essenceItem)
  return essenceitem_;
}
inline ::TgsProtocol::DBEssenceList* OtherUserInfo::release_essenceitem() {
  clear_has_essenceitem();
  ::TgsProtocol::DBEssenceList* temp = essenceitem_;
  essenceitem_ = NULL;
  return temp;
}
inline void OtherUserInfo::set_allocated_essenceitem(::TgsProtocol::DBEssenceList* essenceitem) {
  delete essenceitem_;
  essenceitem_ = essenceitem;
  if (essenceitem) {
    set_has_essenceitem();
  } else {
    clear_has_essenceitem();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.OtherUserInfo.essenceItem)
}

// repeated uint32 RefreshPrice = 26;
inline int OtherUserInfo::refreshprice_size() const {
  return refreshprice_.size();
}
inline void OtherUserInfo::clear_refreshprice() {
  refreshprice_.Clear();
}
inline ::google::protobuf::uint32 OtherUserInfo::refreshprice(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.RefreshPrice)
  return refreshprice_.Get(index);
}
inline void OtherUserInfo::set_refreshprice(int index, ::google::protobuf::uint32 value) {
  refreshprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.RefreshPrice)
}
inline void OtherUserInfo::add_refreshprice(::google::protobuf::uint32 value) {
  refreshprice_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfo.RefreshPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OtherUserInfo::refreshprice() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfo.RefreshPrice)
  return refreshprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OtherUserInfo::mutable_refreshprice() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfo.RefreshPrice)
  return &refreshprice_;
}

// optional .TgsProtocol.DBFestivityList festivity = 27;
inline bool OtherUserInfo::has_festivity() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void OtherUserInfo::set_has_festivity() {
  _has_bits_[0] |= 0x00400000u;
}
inline void OtherUserInfo::clear_has_festivity() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void OtherUserInfo::clear_festivity() {
  if (festivity_ != NULL) festivity_->::TgsProtocol::DBFestivityList::Clear();
  clear_has_festivity();
}
inline const ::TgsProtocol::DBFestivityList& OtherUserInfo::festivity() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.festivity)
  return festivity_ != NULL ? *festivity_ : *default_instance_->festivity_;
}
inline ::TgsProtocol::DBFestivityList* OtherUserInfo::mutable_festivity() {
  set_has_festivity();
  if (festivity_ == NULL) festivity_ = new ::TgsProtocol::DBFestivityList;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfo.festivity)
  return festivity_;
}
inline ::TgsProtocol::DBFestivityList* OtherUserInfo::release_festivity() {
  clear_has_festivity();
  ::TgsProtocol::DBFestivityList* temp = festivity_;
  festivity_ = NULL;
  return temp;
}
inline void OtherUserInfo::set_allocated_festivity(::TgsProtocol::DBFestivityList* festivity) {
  delete festivity_;
  festivity_ = festivity;
  if (festivity) {
    set_has_festivity();
  } else {
    clear_has_festivity();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.OtherUserInfo.festivity)
}

// optional uint32 lockChatEndTime = 28;
inline bool OtherUserInfo::has_lockchatendtime() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void OtherUserInfo::set_has_lockchatendtime() {
  _has_bits_[0] |= 0x00800000u;
}
inline void OtherUserInfo::clear_has_lockchatendtime() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void OtherUserInfo::clear_lockchatendtime() {
  lockchatendtime_ = 0u;
  clear_has_lockchatendtime();
}
inline ::google::protobuf::uint32 OtherUserInfo::lockchatendtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.lockChatEndTime)
  return lockchatendtime_;
}
inline void OtherUserInfo::set_lockchatendtime(::google::protobuf::uint32 value) {
  set_has_lockchatendtime();
  lockchatendtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.lockChatEndTime)
}

// optional uint32 dayChatTimes = 29;
inline bool OtherUserInfo::has_daychattimes() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void OtherUserInfo::set_has_daychattimes() {
  _has_bits_[0] |= 0x01000000u;
}
inline void OtherUserInfo::clear_has_daychattimes() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void OtherUserInfo::clear_daychattimes() {
  daychattimes_ = 0u;
  clear_has_daychattimes();
}
inline ::google::protobuf::uint32 OtherUserInfo::daychattimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.dayChatTimes)
  return daychattimes_;
}
inline void OtherUserInfo::set_daychattimes(::google::protobuf::uint32 value) {
  set_has_daychattimes();
  daychattimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.dayChatTimes)
}

// optional uint32 skillPoint = 30;
inline bool OtherUserInfo::has_skillpoint() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void OtherUserInfo::set_has_skillpoint() {
  _has_bits_[0] |= 0x02000000u;
}
inline void OtherUserInfo::clear_has_skillpoint() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void OtherUserInfo::clear_skillpoint() {
  skillpoint_ = 0u;
  clear_has_skillpoint();
}
inline ::google::protobuf::uint32 OtherUserInfo::skillpoint() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.skillPoint)
  return skillpoint_;
}
inline void OtherUserInfo::set_skillpoint(::google::protobuf::uint32 value) {
  set_has_skillpoint();
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.skillPoint)
}

// optional uint32 updateSkillPointTime = 31;
inline bool OtherUserInfo::has_updateskillpointtime() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void OtherUserInfo::set_has_updateskillpointtime() {
  _has_bits_[0] |= 0x04000000u;
}
inline void OtherUserInfo::clear_has_updateskillpointtime() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void OtherUserInfo::clear_updateskillpointtime() {
  updateskillpointtime_ = 0u;
  clear_has_updateskillpointtime();
}
inline ::google::protobuf::uint32 OtherUserInfo::updateskillpointtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.updateSkillPointTime)
  return updateskillpointtime_;
}
inline void OtherUserInfo::set_updateskillpointtime(::google::protobuf::uint32 value) {
  set_has_updateskillpointtime();
  updateskillpointtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.updateSkillPointTime)
}

// optional uint32 energy = 32;
inline bool OtherUserInfo::has_energy() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void OtherUserInfo::set_has_energy() {
  _has_bits_[0] |= 0x08000000u;
}
inline void OtherUserInfo::clear_has_energy() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void OtherUserInfo::clear_energy() {
  energy_ = 0u;
  clear_has_energy();
}
inline ::google::protobuf::uint32 OtherUserInfo::energy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.energy)
  return energy_;
}
inline void OtherUserInfo::set_energy(::google::protobuf::uint32 value) {
  set_has_energy();
  energy_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.energy)
}

// optional uint32 updateEnergyTime = 33;
inline bool OtherUserInfo::has_updateenergytime() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void OtherUserInfo::set_has_updateenergytime() {
  _has_bits_[0] |= 0x10000000u;
}
inline void OtherUserInfo::clear_has_updateenergytime() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void OtherUserInfo::clear_updateenergytime() {
  updateenergytime_ = 0u;
  clear_has_updateenergytime();
}
inline ::google::protobuf::uint32 OtherUserInfo::updateenergytime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.updateEnergyTime)
  return updateenergytime_;
}
inline void OtherUserInfo::set_updateenergytime(::google::protobuf::uint32 value) {
  set_has_updateenergytime();
  updateenergytime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.updateEnergyTime)
}

// optional .TgsProtocol.DBEquipNewList equipNew = 34;
inline bool OtherUserInfo::has_equipnew() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void OtherUserInfo::set_has_equipnew() {
  _has_bits_[0] |= 0x20000000u;
}
inline void OtherUserInfo::clear_has_equipnew() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void OtherUserInfo::clear_equipnew() {
  if (equipnew_ != NULL) equipnew_->::TgsProtocol::DBEquipNewList::Clear();
  clear_has_equipnew();
}
inline const ::TgsProtocol::DBEquipNewList& OtherUserInfo::equipnew() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.equipNew)
  return equipnew_ != NULL ? *equipnew_ : *default_instance_->equipnew_;
}
inline ::TgsProtocol::DBEquipNewList* OtherUserInfo::mutable_equipnew() {
  set_has_equipnew();
  if (equipnew_ == NULL) equipnew_ = new ::TgsProtocol::DBEquipNewList;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfo.equipNew)
  return equipnew_;
}
inline ::TgsProtocol::DBEquipNewList* OtherUserInfo::release_equipnew() {
  clear_has_equipnew();
  ::TgsProtocol::DBEquipNewList* temp = equipnew_;
  equipnew_ = NULL;
  return temp;
}
inline void OtherUserInfo::set_allocated_equipnew(::TgsProtocol::DBEquipNewList* equipnew) {
  delete equipnew_;
  equipnew_ = equipnew;
  if (equipnew) {
    set_has_equipnew();
  } else {
    clear_has_equipnew();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.OtherUserInfo.equipNew)
}

// repeated uint32 arenaFormation = 35;
inline int OtherUserInfo::arenaformation_size() const {
  return arenaformation_.size();
}
inline void OtherUserInfo::clear_arenaformation() {
  arenaformation_.Clear();
}
inline ::google::protobuf::uint32 OtherUserInfo::arenaformation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfo.arenaFormation)
  return arenaformation_.Get(index);
}
inline void OtherUserInfo::set_arenaformation(int index, ::google::protobuf::uint32 value) {
  arenaformation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfo.arenaFormation)
}
inline void OtherUserInfo::add_arenaformation(::google::protobuf::uint32 value) {
  arenaformation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfo.arenaFormation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OtherUserInfo::arenaformation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfo.arenaFormation)
  return arenaformation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OtherUserInfo::mutable_arenaformation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfo.arenaFormation)
  return &arenaformation_;
}

// -------------------------------------------------------------------

// OtherUserInfoClient

// required uint64 charId = 1;
inline bool OtherUserInfoClient::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OtherUserInfoClient::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OtherUserInfoClient::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OtherUserInfoClient::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 OtherUserInfoClient::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.charId)
  return charid_;
}
inline void OtherUserInfoClient::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.charId)
}

// required bytes charName = 2;
inline bool OtherUserInfoClient::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OtherUserInfoClient::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OtherUserInfoClient::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OtherUserInfoClient::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& OtherUserInfoClient::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.charName)
  return *charname_;
}
inline void OtherUserInfoClient::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.charName)
}
inline void OtherUserInfoClient::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.OtherUserInfoClient.charName)
}
inline void OtherUserInfoClient::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.OtherUserInfoClient.charName)
}
inline ::std::string* OtherUserInfoClient::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfoClient.charName)
  return charname_;
}
inline ::std::string* OtherUserInfoClient::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OtherUserInfoClient::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.OtherUserInfoClient.charName)
}

// required uint32 charExp = 3;
inline bool OtherUserInfoClient::has_charexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OtherUserInfoClient::set_has_charexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OtherUserInfoClient::clear_has_charexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OtherUserInfoClient::clear_charexp() {
  charexp_ = 0u;
  clear_has_charexp();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::charexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.charExp)
  return charexp_;
}
inline void OtherUserInfoClient::set_charexp(::google::protobuf::uint32 value) {
  set_has_charexp();
  charexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.charExp)
}

// required uint32 charlevel = 4;
inline bool OtherUserInfoClient::has_charlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OtherUserInfoClient::set_has_charlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OtherUserInfoClient::clear_has_charlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OtherUserInfoClient::clear_charlevel() {
  charlevel_ = 0u;
  clear_has_charlevel();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::charlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.charlevel)
  return charlevel_;
}
inline void OtherUserInfoClient::set_charlevel(::google::protobuf::uint32 value) {
  set_has_charlevel();
  charlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.charlevel)
}

// required uint32 vipExp = 5;
inline bool OtherUserInfoClient::has_vipexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OtherUserInfoClient::set_has_vipexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OtherUserInfoClient::clear_has_vipexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OtherUserInfoClient::clear_vipexp() {
  vipexp_ = 0u;
  clear_has_vipexp();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::vipexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.vipExp)
  return vipexp_;
}
inline void OtherUserInfoClient::set_vipexp(::google::protobuf::uint32 value) {
  set_has_vipexp();
  vipexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.vipExp)
}

// required uint32 vipLevel = 6;
inline bool OtherUserInfoClient::has_viplevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OtherUserInfoClient::set_has_viplevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OtherUserInfoClient::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OtherUserInfoClient::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::viplevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.vipLevel)
  return viplevel_;
}
inline void OtherUserInfoClient::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.vipLevel)
}

// required uint32 cash = 7;
inline bool OtherUserInfoClient::has_cash() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OtherUserInfoClient::set_has_cash() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OtherUserInfoClient::clear_has_cash() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OtherUserInfoClient::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::cash() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.cash)
  return cash_;
}
inline void OtherUserInfoClient::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.cash)
}

// required uint32 gold = 8;
inline bool OtherUserInfoClient::has_gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OtherUserInfoClient::set_has_gold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OtherUserInfoClient::clear_has_gold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OtherUserInfoClient::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::gold() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.gold)
  return gold_;
}
inline void OtherUserInfoClient::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.gold)
}

// required uint32 curStamina = 9;
inline bool OtherUserInfoClient::has_curstamina() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OtherUserInfoClient::set_has_curstamina() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OtherUserInfoClient::clear_has_curstamina() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OtherUserInfoClient::clear_curstamina() {
  curstamina_ = 0u;
  clear_has_curstamina();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::curstamina() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.curStamina)
  return curstamina_;
}
inline void OtherUserInfoClient::set_curstamina(::google::protobuf::uint32 value) {
  set_has_curstamina();
  curstamina_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.curStamina)
}

// required uint32 recoveryTime = 10;
inline bool OtherUserInfoClient::has_recoverytime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OtherUserInfoClient::set_has_recoverytime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OtherUserInfoClient::clear_has_recoverytime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OtherUserInfoClient::clear_recoverytime() {
  recoverytime_ = 0u;
  clear_has_recoverytime();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::recoverytime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.recoveryTime)
  return recoverytime_;
}
inline void OtherUserInfoClient::set_recoverytime(::google::protobuf::uint32 value) {
  set_has_recoverytime();
  recoverytime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.recoveryTime)
}

// repeated uint32 formation = 11;
inline int OtherUserInfoClient::formation_size() const {
  return formation_.size();
}
inline void OtherUserInfoClient::clear_formation() {
  formation_.Clear();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::formation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.formation)
  return formation_.Get(index);
}
inline void OtherUserInfoClient::set_formation(int index, ::google::protobuf::uint32 value) {
  formation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.formation)
}
inline void OtherUserInfoClient::add_formation(::google::protobuf::uint32 value) {
  formation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfoClient.formation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OtherUserInfoClient::formation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfoClient.formation)
  return formation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OtherUserInfoClient::mutable_formation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfoClient.formation)
  return &formation_;
}

// repeated .TgsProtocol.ClientHeroInfo heroBag = 14;
inline int OtherUserInfoClient::herobag_size() const {
  return herobag_.size();
}
inline void OtherUserInfoClient::clear_herobag() {
  herobag_.Clear();
}
inline const ::TgsProtocol::ClientHeroInfo& OtherUserInfoClient::herobag(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.heroBag)
  return herobag_.Get(index);
}
inline ::TgsProtocol::ClientHeroInfo* OtherUserInfoClient::mutable_herobag(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfoClient.heroBag)
  return herobag_.Mutable(index);
}
inline ::TgsProtocol::ClientHeroInfo* OtherUserInfoClient::add_herobag() {
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfoClient.heroBag)
  return herobag_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHeroInfo >&
OtherUserInfoClient::herobag() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfoClient.heroBag)
  return herobag_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHeroInfo >*
OtherUserInfoClient::mutable_herobag() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfoClient.heroBag)
  return &herobag_;
}

// required uint32 gender = 15;
inline bool OtherUserInfoClient::has_gender() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OtherUserInfoClient::set_has_gender() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OtherUserInfoClient::clear_has_gender() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OtherUserInfoClient::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::gender() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.gender)
  return gender_;
}
inline void OtherUserInfoClient::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.gender)
}

// required uint32 photo = 16;
inline bool OtherUserInfoClient::has_photo() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OtherUserInfoClient::set_has_photo() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OtherUserInfoClient::clear_has_photo() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OtherUserInfoClient::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.photo)
  return photo_;
}
inline void OtherUserInfoClient::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.photo)
}

// required uint32 bitFlag = 17;
inline bool OtherUserInfoClient::has_bitflag() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OtherUserInfoClient::set_has_bitflag() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OtherUserInfoClient::clear_has_bitflag() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OtherUserInfoClient::clear_bitflag() {
  bitflag_ = 0u;
  clear_has_bitflag();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::bitflag() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.bitFlag)
  return bitflag_;
}
inline void OtherUserInfoClient::set_bitflag(::google::protobuf::uint32 value) {
  set_has_bitflag();
  bitflag_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.bitFlag)
}

// repeated .TgsProtocol.ClientInstanceEvaluation instanceEvaluation = 18;
inline int OtherUserInfoClient::instanceevaluation_size() const {
  return instanceevaluation_.size();
}
inline void OtherUserInfoClient::clear_instanceevaluation() {
  instanceevaluation_.Clear();
}
inline const ::TgsProtocol::ClientInstanceEvaluation& OtherUserInfoClient::instanceevaluation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.instanceEvaluation)
  return instanceevaluation_.Get(index);
}
inline ::TgsProtocol::ClientInstanceEvaluation* OtherUserInfoClient::mutable_instanceevaluation(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfoClient.instanceEvaluation)
  return instanceevaluation_.Mutable(index);
}
inline ::TgsProtocol::ClientInstanceEvaluation* OtherUserInfoClient::add_instanceevaluation() {
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfoClient.instanceEvaluation)
  return instanceevaluation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientInstanceEvaluation >&
OtherUserInfoClient::instanceevaluation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfoClient.instanceEvaluation)
  return instanceevaluation_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientInstanceEvaluation >*
OtherUserInfoClient::mutable_instanceevaluation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfoClient.instanceEvaluation)
  return &instanceevaluation_;
}

// repeated uint32 RefreshPrice = 19;
inline int OtherUserInfoClient::refreshprice_size() const {
  return refreshprice_.size();
}
inline void OtherUserInfoClient::clear_refreshprice() {
  refreshprice_.Clear();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::refreshprice(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.RefreshPrice)
  return refreshprice_.Get(index);
}
inline void OtherUserInfoClient::set_refreshprice(int index, ::google::protobuf::uint32 value) {
  refreshprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.RefreshPrice)
}
inline void OtherUserInfoClient::add_refreshprice(::google::protobuf::uint32 value) {
  refreshprice_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfoClient.RefreshPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OtherUserInfoClient::refreshprice() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfoClient.RefreshPrice)
  return refreshprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OtherUserInfoClient::mutable_refreshprice() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfoClient.RefreshPrice)
  return &refreshprice_;
}

// repeated .TgsProtocol.ClientFestivityInfo festivityInfo = 20;
inline int OtherUserInfoClient::festivityinfo_size() const {
  return festivityinfo_.size();
}
inline void OtherUserInfoClient::clear_festivityinfo() {
  festivityinfo_.Clear();
}
inline const ::TgsProtocol::ClientFestivityInfo& OtherUserInfoClient::festivityinfo(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.festivityInfo)
  return festivityinfo_.Get(index);
}
inline ::TgsProtocol::ClientFestivityInfo* OtherUserInfoClient::mutable_festivityinfo(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfoClient.festivityInfo)
  return festivityinfo_.Mutable(index);
}
inline ::TgsProtocol::ClientFestivityInfo* OtherUserInfoClient::add_festivityinfo() {
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfoClient.festivityInfo)
  return festivityinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFestivityInfo >&
OtherUserInfoClient::festivityinfo() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfoClient.festivityInfo)
  return festivityinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFestivityInfo >*
OtherUserInfoClient::mutable_festivityinfo() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfoClient.festivityInfo)
  return &festivityinfo_;
}

// required uint32 serverTime = 24;
inline bool OtherUserInfoClient::has_servertime() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void OtherUserInfoClient::set_has_servertime() {
  _has_bits_[0] |= 0x00040000u;
}
inline void OtherUserInfoClient::clear_has_servertime() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void OtherUserInfoClient::clear_servertime() {
  servertime_ = 0u;
  clear_has_servertime();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::servertime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.serverTime)
  return servertime_;
}
inline void OtherUserInfoClient::set_servertime(::google::protobuf::uint32 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.serverTime)
}

// required uint32 skillPoint = 25;
inline bool OtherUserInfoClient::has_skillpoint() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void OtherUserInfoClient::set_has_skillpoint() {
  _has_bits_[0] |= 0x00080000u;
}
inline void OtherUserInfoClient::clear_has_skillpoint() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void OtherUserInfoClient::clear_skillpoint() {
  skillpoint_ = 0u;
  clear_has_skillpoint();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::skillpoint() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.skillPoint)
  return skillpoint_;
}
inline void OtherUserInfoClient::set_skillpoint(::google::protobuf::uint32 value) {
  set_has_skillpoint();
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.skillPoint)
}

// required uint32 energy = 27;
inline bool OtherUserInfoClient::has_energy() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void OtherUserInfoClient::set_has_energy() {
  _has_bits_[0] |= 0x00100000u;
}
inline void OtherUserInfoClient::clear_has_energy() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void OtherUserInfoClient::clear_energy() {
  energy_ = 0u;
  clear_has_energy();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::energy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.energy)
  return energy_;
}
inline void OtherUserInfoClient::set_energy(::google::protobuf::uint32 value) {
  set_has_energy();
  energy_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.energy)
}

// required uint32 energyReTime = 28;
inline bool OtherUserInfoClient::has_energyretime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void OtherUserInfoClient::set_has_energyretime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void OtherUserInfoClient::clear_has_energyretime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void OtherUserInfoClient::clear_energyretime() {
  energyretime_ = 0u;
  clear_has_energyretime();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::energyretime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.energyReTime)
  return energyretime_;
}
inline void OtherUserInfoClient::set_energyretime(::google::protobuf::uint32 value) {
  set_has_energyretime();
  energyretime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.energyReTime)
}

// repeated .TgsProtocol.HeroEquipNew equipNewBag = 29;
inline int OtherUserInfoClient::equipnewbag_size() const {
  return equipnewbag_.size();
}
inline void OtherUserInfoClient::clear_equipnewbag() {
  equipnewbag_.Clear();
}
inline const ::TgsProtocol::HeroEquipNew& OtherUserInfoClient::equipnewbag(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.equipNewBag)
  return equipnewbag_.Get(index);
}
inline ::TgsProtocol::HeroEquipNew* OtherUserInfoClient::mutable_equipnewbag(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OtherUserInfoClient.equipNewBag)
  return equipnewbag_.Mutable(index);
}
inline ::TgsProtocol::HeroEquipNew* OtherUserInfoClient::add_equipnewbag() {
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfoClient.equipNewBag)
  return equipnewbag_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >&
OtherUserInfoClient::equipnewbag() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfoClient.equipNewBag)
  return equipnewbag_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >*
OtherUserInfoClient::mutable_equipnewbag() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfoClient.equipNewBag)
  return &equipnewbag_;
}

// repeated uint32 heroRaise = 30;
inline int OtherUserInfoClient::heroraise_size() const {
  return heroraise_.size();
}
inline void OtherUserInfoClient::clear_heroraise() {
  heroraise_.Clear();
}
inline ::google::protobuf::uint32 OtherUserInfoClient::heroraise(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OtherUserInfoClient.heroRaise)
  return heroraise_.Get(index);
}
inline void OtherUserInfoClient::set_heroraise(int index, ::google::protobuf::uint32 value) {
  heroraise_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.OtherUserInfoClient.heroRaise)
}
inline void OtherUserInfoClient::add_heroraise(::google::protobuf::uint32 value) {
  heroraise_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.OtherUserInfoClient.heroRaise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OtherUserInfoClient::heroraise() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OtherUserInfoClient.heroRaise)
  return heroraise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OtherUserInfoClient::mutable_heroraise() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OtherUserInfoClient.heroRaise)
  return &heroraise_;
}

// -------------------------------------------------------------------

// DBPlayerActivity

// required uint32 id = 1;
inline bool DBPlayerActivity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBPlayerActivity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBPlayerActivity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBPlayerActivity::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DBPlayerActivity::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBPlayerActivity.id)
  return id_;
}
inline void DBPlayerActivity::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBPlayerActivity.id)
}

// required uint32 value = 2;
inline bool DBPlayerActivity::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBPlayerActivity::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBPlayerActivity::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBPlayerActivity::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 DBPlayerActivity::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBPlayerActivity.value)
  return value_;
}
inline void DBPlayerActivity::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBPlayerActivity.value)
}

// repeated uint32 got = 3;
inline int DBPlayerActivity::got_size() const {
  return got_.size();
}
inline void DBPlayerActivity::clear_got() {
  got_.Clear();
}
inline ::google::protobuf::uint32 DBPlayerActivity::got(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBPlayerActivity.got)
  return got_.Get(index);
}
inline void DBPlayerActivity::set_got(int index, ::google::protobuf::uint32 value) {
  got_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBPlayerActivity.got)
}
inline void DBPlayerActivity::add_got(::google::protobuf::uint32 value) {
  got_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBPlayerActivity.got)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBPlayerActivity::got() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBPlayerActivity.got)
  return got_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBPlayerActivity::mutable_got() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBPlayerActivity.got)
  return &got_;
}

// optional uint32 update_time = 4;
inline bool DBPlayerActivity::has_update_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBPlayerActivity::set_has_update_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBPlayerActivity::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBPlayerActivity::clear_update_time() {
  update_time_ = 0u;
  clear_has_update_time();
}
inline ::google::protobuf::uint32 DBPlayerActivity::update_time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBPlayerActivity.update_time)
  return update_time_;
}
inline void DBPlayerActivity::set_update_time(::google::protobuf::uint32 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBPlayerActivity.update_time)
}

// repeated uint32 doneValue = 5;
inline int DBPlayerActivity::donevalue_size() const {
  return donevalue_.size();
}
inline void DBPlayerActivity::clear_donevalue() {
  donevalue_.Clear();
}
inline ::google::protobuf::uint32 DBPlayerActivity::donevalue(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBPlayerActivity.doneValue)
  return donevalue_.Get(index);
}
inline void DBPlayerActivity::set_donevalue(int index, ::google::protobuf::uint32 value) {
  donevalue_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBPlayerActivity.doneValue)
}
inline void DBPlayerActivity::add_donevalue(::google::protobuf::uint32 value) {
  donevalue_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBPlayerActivity.doneValue)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBPlayerActivity::donevalue() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBPlayerActivity.doneValue)
  return donevalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBPlayerActivity::mutable_donevalue() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBPlayerActivity.doneValue)
  return &donevalue_;
}

// -------------------------------------------------------------------

// DBPlayerActivityList

// repeated .TgsProtocol.DBPlayerActivity act = 1;
inline int DBPlayerActivityList::act_size() const {
  return act_.size();
}
inline void DBPlayerActivityList::clear_act() {
  act_.Clear();
}
inline const ::TgsProtocol::DBPlayerActivity& DBPlayerActivityList::act(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBPlayerActivityList.act)
  return act_.Get(index);
}
inline ::TgsProtocol::DBPlayerActivity* DBPlayerActivityList::mutable_act(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBPlayerActivityList.act)
  return act_.Mutable(index);
}
inline ::TgsProtocol::DBPlayerActivity* DBPlayerActivityList::add_act() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBPlayerActivityList.act)
  return act_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBPlayerActivity >&
DBPlayerActivityList::act() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBPlayerActivityList.act)
  return act_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBPlayerActivity >*
DBPlayerActivityList::mutable_act() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBPlayerActivityList.act)
  return &act_;
}

// -------------------------------------------------------------------

// ChapterMapBox

// required uint32 maptype = 1;
inline bool ChapterMapBox::has_maptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChapterMapBox::set_has_maptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChapterMapBox::clear_has_maptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChapterMapBox::clear_maptype() {
  maptype_ = 0u;
  clear_has_maptype();
}
inline ::google::protobuf::uint32 ChapterMapBox::maptype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ChapterMapBox.maptype)
  return maptype_;
}
inline void ChapterMapBox::set_maptype(::google::protobuf::uint32 value) {
  set_has_maptype();
  maptype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ChapterMapBox.maptype)
}

// repeated bool got = 2;
inline int ChapterMapBox::got_size() const {
  return got_.size();
}
inline void ChapterMapBox::clear_got() {
  got_.Clear();
}
inline bool ChapterMapBox::got(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ChapterMapBox.got)
  return got_.Get(index);
}
inline void ChapterMapBox::set_got(int index, bool value) {
  got_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ChapterMapBox.got)
}
inline void ChapterMapBox::add_got(bool value) {
  got_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ChapterMapBox.got)
}
inline const ::google::protobuf::RepeatedField< bool >&
ChapterMapBox::got() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ChapterMapBox.got)
  return got_;
}
inline ::google::protobuf::RepeatedField< bool >*
ChapterMapBox::mutable_got() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ChapterMapBox.got)
  return &got_;
}

// -------------------------------------------------------------------

// DBChapterBox

// required uint32 id = 1;
inline bool DBChapterBox::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBChapterBox::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBChapterBox::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBChapterBox::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DBChapterBox::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBChapterBox.id)
  return id_;
}
inline void DBChapterBox::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBChapterBox.id)
}

// repeated uint32 got = 2;
inline int DBChapterBox::got_size() const {
  return got_.size();
}
inline void DBChapterBox::clear_got() {
  got_.Clear();
}
inline ::google::protobuf::uint32 DBChapterBox::got(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBChapterBox.got)
  return got_.Get(index);
}
inline void DBChapterBox::set_got(int index, ::google::protobuf::uint32 value) {
  got_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBChapterBox.got)
}
inline void DBChapterBox::add_got(::google::protobuf::uint32 value) {
  got_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBChapterBox.got)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBChapterBox::got() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBChapterBox.got)
  return got_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBChapterBox::mutable_got() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBChapterBox.got)
  return &got_;
}

// repeated uint32 elite_got = 3;
inline int DBChapterBox::elite_got_size() const {
  return elite_got_.size();
}
inline void DBChapterBox::clear_elite_got() {
  elite_got_.Clear();
}
inline ::google::protobuf::uint32 DBChapterBox::elite_got(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBChapterBox.elite_got)
  return elite_got_.Get(index);
}
inline void DBChapterBox::set_elite_got(int index, ::google::protobuf::uint32 value) {
  elite_got_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBChapterBox.elite_got)
}
inline void DBChapterBox::add_elite_got(::google::protobuf::uint32 value) {
  elite_got_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBChapterBox.elite_got)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBChapterBox::elite_got() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBChapterBox.elite_got)
  return elite_got_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBChapterBox::mutable_elite_got() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBChapterBox.elite_got)
  return &elite_got_;
}

// repeated uint32 epic_got = 4;
inline int DBChapterBox::epic_got_size() const {
  return epic_got_.size();
}
inline void DBChapterBox::clear_epic_got() {
  epic_got_.Clear();
}
inline ::google::protobuf::uint32 DBChapterBox::epic_got(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBChapterBox.epic_got)
  return epic_got_.Get(index);
}
inline void DBChapterBox::set_epic_got(int index, ::google::protobuf::uint32 value) {
  epic_got_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBChapterBox.epic_got)
}
inline void DBChapterBox::add_epic_got(::google::protobuf::uint32 value) {
  epic_got_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBChapterBox.epic_got)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBChapterBox::epic_got() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBChapterBox.epic_got)
  return epic_got_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBChapterBox::mutable_epic_got() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBChapterBox.epic_got)
  return &epic_got_;
}

// repeated uint32 legend_got = 5;
inline int DBChapterBox::legend_got_size() const {
  return legend_got_.size();
}
inline void DBChapterBox::clear_legend_got() {
  legend_got_.Clear();
}
inline ::google::protobuf::uint32 DBChapterBox::legend_got(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBChapterBox.legend_got)
  return legend_got_.Get(index);
}
inline void DBChapterBox::set_legend_got(int index, ::google::protobuf::uint32 value) {
  legend_got_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBChapterBox.legend_got)
}
inline void DBChapterBox::add_legend_got(::google::protobuf::uint32 value) {
  legend_got_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBChapterBox.legend_got)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBChapterBox::legend_got() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBChapterBox.legend_got)
  return legend_got_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBChapterBox::mutable_legend_got() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBChapterBox.legend_got)
  return &legend_got_;
}

// repeated .TgsProtocol.ChapterMapBox mapbox = 6;
inline int DBChapterBox::mapbox_size() const {
  return mapbox_.size();
}
inline void DBChapterBox::clear_mapbox() {
  mapbox_.Clear();
}
inline const ::TgsProtocol::ChapterMapBox& DBChapterBox::mapbox(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBChapterBox.mapbox)
  return mapbox_.Get(index);
}
inline ::TgsProtocol::ChapterMapBox* DBChapterBox::mutable_mapbox(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBChapterBox.mapbox)
  return mapbox_.Mutable(index);
}
inline ::TgsProtocol::ChapterMapBox* DBChapterBox::add_mapbox() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBChapterBox.mapbox)
  return mapbox_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ChapterMapBox >&
DBChapterBox::mapbox() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBChapterBox.mapbox)
  return mapbox_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ChapterMapBox >*
DBChapterBox::mutable_mapbox() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBChapterBox.mapbox)
  return &mapbox_;
}

// -------------------------------------------------------------------

// DBChapterBoxList

// repeated .TgsProtocol.DBChapterBox items = 1;
inline int DBChapterBoxList::items_size() const {
  return items_.size();
}
inline void DBChapterBoxList::clear_items() {
  items_.Clear();
}
inline const ::TgsProtocol::DBChapterBox& DBChapterBoxList::items(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBChapterBoxList.items)
  return items_.Get(index);
}
inline ::TgsProtocol::DBChapterBox* DBChapterBoxList::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBChapterBoxList.items)
  return items_.Mutable(index);
}
inline ::TgsProtocol::DBChapterBox* DBChapterBoxList::add_items() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBChapterBoxList.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBChapterBox >&
DBChapterBoxList::items() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBChapterBoxList.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBChapterBox >*
DBChapterBoxList::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBChapterBoxList.items)
  return &items_;
}

// -------------------------------------------------------------------

// ClientFriendInfo

// required uint64 charId = 1;
inline bool ClientFriendInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientFriendInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientFriendInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientFriendInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ClientFriendInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.charId)
  return charid_;
}
inline void ClientFriendInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.charId)
}

// required bytes charName = 2;
inline bool ClientFriendInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientFriendInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientFriendInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientFriendInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& ClientFriendInfo::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.charName)
  return *charname_;
}
inline void ClientFriendInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.charName)
}
inline void ClientFriendInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientFriendInfo.charName)
}
inline void ClientFriendInfo::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientFriendInfo.charName)
}
inline ::std::string* ClientFriendInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientFriendInfo.charName)
  return charname_;
}
inline ::std::string* ClientFriendInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientFriendInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientFriendInfo.charName)
}

// required uint32 photo = 3;
inline bool ClientFriendInfo::has_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientFriendInfo::set_has_photo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientFriendInfo::clear_has_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientFriendInfo::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 ClientFriendInfo::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.photo)
  return photo_;
}
inline void ClientFriendInfo::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.photo)
}

// required uint32 charLevel = 4;
inline bool ClientFriendInfo::has_charlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientFriendInfo::set_has_charlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientFriendInfo::clear_has_charlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientFriendInfo::clear_charlevel() {
  charlevel_ = 0u;
  clear_has_charlevel();
}
inline ::google::protobuf::uint32 ClientFriendInfo::charlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.charLevel)
  return charlevel_;
}
inline void ClientFriendInfo::set_charlevel(::google::protobuf::uint32 value) {
  set_has_charlevel();
  charlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.charLevel)
}

// required uint32 effect = 5;
inline bool ClientFriendInfo::has_effect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientFriendInfo::set_has_effect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientFriendInfo::clear_has_effect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientFriendInfo::clear_effect() {
  effect_ = 0u;
  clear_has_effect();
}
inline ::google::protobuf::uint32 ClientFriendInfo::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.effect)
  return effect_;
}
inline void ClientFriendInfo::set_effect(::google::protobuf::uint32 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.effect)
}

// required uint32 vipLevel = 6;
inline bool ClientFriendInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientFriendInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientFriendInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientFriendInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 ClientFriendInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.vipLevel)
  return viplevel_;
}
inline void ClientFriendInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.vipLevel)
}

// required bytes guildName = 7;
inline bool ClientFriendInfo::has_guildname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientFriendInfo::set_has_guildname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientFriendInfo::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientFriendInfo::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& ClientFriendInfo::guildname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.guildName)
  return *guildname_;
}
inline void ClientFriendInfo::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.guildName)
}
inline void ClientFriendInfo::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientFriendInfo.guildName)
}
inline void ClientFriendInfo::set_guildname(const void* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientFriendInfo.guildName)
}
inline ::std::string* ClientFriendInfo::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientFriendInfo.guildName)
  return guildname_;
}
inline ::std::string* ClientFriendInfo::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientFriendInfo::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientFriendInfo.guildName)
}

// required bool bSend = 8;
inline bool ClientFriendInfo::has_bsend() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientFriendInfo::set_has_bsend() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientFriendInfo::clear_has_bsend() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientFriendInfo::clear_bsend() {
  bsend_ = false;
  clear_has_bsend();
}
inline bool ClientFriendInfo::bsend() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.bSend)
  return bsend_;
}
inline void ClientFriendInfo::set_bsend(bool value) {
  set_has_bsend();
  bsend_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.bSend)
}

// required uint32 receive = 9;
inline bool ClientFriendInfo::has_receive() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientFriendInfo::set_has_receive() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientFriendInfo::clear_has_receive() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientFriendInfo::clear_receive() {
  receive_ = 0u;
  clear_has_receive();
}
inline ::google::protobuf::uint32 ClientFriendInfo::receive() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.receive)
  return receive_;
}
inline void ClientFriendInfo::set_receive(::google::protobuf::uint32 value) {
  set_has_receive();
  receive_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.receive)
}

// required uint32 loginTime = 10;
inline bool ClientFriendInfo::has_logintime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientFriendInfo::set_has_logintime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientFriendInfo::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientFriendInfo::clear_logintime() {
  logintime_ = 0u;
  clear_has_logintime();
}
inline ::google::protobuf::uint32 ClientFriendInfo::logintime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.loginTime)
  return logintime_;
}
inline void ClientFriendInfo::set_logintime(::google::protobuf::uint32 value) {
  set_has_logintime();
  logintime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.loginTime)
}

// optional uint64 effect64 = 11;
inline bool ClientFriendInfo::has_effect64() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientFriendInfo::set_has_effect64() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientFriendInfo::clear_has_effect64() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientFriendInfo::clear_effect64() {
  effect64_ = GOOGLE_ULONGLONG(0);
  clear_has_effect64();
}
inline ::google::protobuf::uint64 ClientFriendInfo::effect64() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.effect64)
  return effect64_;
}
inline void ClientFriendInfo::set_effect64(::google::protobuf::uint64 value) {
  set_has_effect64();
  effect64_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.effect64)
}

// optional uint32 nationalId = 12;
inline bool ClientFriendInfo::has_nationalid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientFriendInfo::set_has_nationalid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientFriendInfo::clear_has_nationalid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientFriendInfo::clear_nationalid() {
  nationalid_ = 0u;
  clear_has_nationalid();
}
inline ::google::protobuf::uint32 ClientFriendInfo::nationalid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientFriendInfo.nationalId)
  return nationalid_;
}
inline void ClientFriendInfo::set_nationalid(::google::protobuf::uint32 value) {
  set_has_nationalid();
  nationalid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientFriendInfo.nationalId)
}

// -------------------------------------------------------------------

// ClientBattleHero

// required uint32 templateId = 1;
inline bool ClientBattleHero::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientBattleHero::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientBattleHero::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientBattleHero::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 ClientBattleHero::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.templateId)
  return templateid_;
}
inline void ClientBattleHero::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.templateId)
}

// required uint32 level = 2;
inline bool ClientBattleHero::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientBattleHero::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientBattleHero::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientBattleHero::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ClientBattleHero::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.level)
  return level_;
}
inline void ClientBattleHero::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.level)
}

// required uint32 evolutionLevel = 3;
inline bool ClientBattleHero::has_evolutionlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientBattleHero::set_has_evolutionlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientBattleHero::clear_has_evolutionlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientBattleHero::clear_evolutionlevel() {
  evolutionlevel_ = 0u;
  clear_has_evolutionlevel();
}
inline ::google::protobuf::uint32 ClientBattleHero::evolutionlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.evolutionLevel)
  return evolutionlevel_;
}
inline void ClientBattleHero::set_evolutionlevel(::google::protobuf::uint32 value) {
  set_has_evolutionlevel();
  evolutionlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.evolutionLevel)
}

// required uint32 forceLevel = 4;
inline bool ClientBattleHero::has_forcelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientBattleHero::set_has_forcelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientBattleHero::clear_has_forcelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientBattleHero::clear_forcelevel() {
  forcelevel_ = 0u;
  clear_has_forcelevel();
}
inline ::google::protobuf::uint32 ClientBattleHero::forcelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.forceLevel)
  return forcelevel_;
}
inline void ClientBattleHero::set_forcelevel(::google::protobuf::uint32 value) {
  set_has_forcelevel();
  forcelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.forceLevel)
}

// repeated .TgsProtocol.HeroEquipInfo equip = 5;
inline int ClientBattleHero::equip_size() const {
  return equip_.size();
}
inline void ClientBattleHero::clear_equip() {
  equip_.Clear();
}
inline const ::TgsProtocol::HeroEquipInfo& ClientBattleHero::equip(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.equip)
  return equip_.Get(index);
}
inline ::TgsProtocol::HeroEquipInfo* ClientBattleHero::mutable_equip(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattleHero.equip)
  return equip_.Mutable(index);
}
inline ::TgsProtocol::HeroEquipInfo* ClientBattleHero::add_equip() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattleHero.equip)
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo >&
ClientBattleHero::equip() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattleHero.equip)
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipInfo >*
ClientBattleHero::mutable_equip() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattleHero.equip)
  return &equip_;
}

// repeated uint32 skillLevel = 6;
inline int ClientBattleHero::skilllevel_size() const {
  return skilllevel_.size();
}
inline void ClientBattleHero::clear_skilllevel() {
  skilllevel_.Clear();
}
inline ::google::protobuf::uint32 ClientBattleHero::skilllevel(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.skillLevel)
  return skilllevel_.Get(index);
}
inline void ClientBattleHero::set_skilllevel(int index, ::google::protobuf::uint32 value) {
  skilllevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.skillLevel)
}
inline void ClientBattleHero::add_skilllevel(::google::protobuf::uint32 value) {
  skilllevel_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattleHero.skillLevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientBattleHero::skilllevel() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattleHero.skillLevel)
  return skilllevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientBattleHero::mutable_skilllevel() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattleHero.skillLevel)
  return &skilllevel_;
}

// optional bytes heroName = 7;
inline bool ClientBattleHero::has_heroname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientBattleHero::set_has_heroname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientBattleHero::clear_has_heroname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientBattleHero::clear_heroname() {
  if (heroname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_->clear();
  }
  clear_has_heroname();
}
inline const ::std::string& ClientBattleHero::heroname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.heroName)
  return *heroname_;
}
inline void ClientBattleHero::set_heroname(const ::std::string& value) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.heroName)
}
inline void ClientBattleHero::set_heroname(const char* value) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientBattleHero.heroName)
}
inline void ClientBattleHero::set_heroname(const void* value, size_t size) {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  heroname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientBattleHero.heroName)
}
inline ::std::string* ClientBattleHero::mutable_heroname() {
  set_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    heroname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattleHero.heroName)
  return heroname_;
}
inline ::std::string* ClientBattleHero::release_heroname() {
  clear_has_heroname();
  if (heroname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = heroname_;
    heroname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientBattleHero::set_allocated_heroname(::std::string* heroname) {
  if (heroname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete heroname_;
  }
  if (heroname) {
    set_has_heroname();
    heroname_ = heroname;
  } else {
    clear_has_heroname();
    heroname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientBattleHero.heroName)
}

// repeated .TgsProtocol.HeroEquipNew equipNew = 8;
inline int ClientBattleHero::equipnew_size() const {
  return equipnew_.size();
}
inline void ClientBattleHero::clear_equipnew() {
  equipnew_.Clear();
}
inline const ::TgsProtocol::HeroEquipNew& ClientBattleHero::equipnew(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.equipNew)
  return equipnew_.Get(index);
}
inline ::TgsProtocol::HeroEquipNew* ClientBattleHero::mutable_equipnew(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattleHero.equipNew)
  return equipnew_.Mutable(index);
}
inline ::TgsProtocol::HeroEquipNew* ClientBattleHero::add_equipnew() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattleHero.equipNew)
  return equipnew_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >&
ClientBattleHero::equipnew() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattleHero.equipNew)
  return equipnew_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HeroEquipNew >*
ClientBattleHero::mutable_equipnew() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattleHero.equipNew)
  return &equipnew_;
}

// optional uint32 isFashion = 9;
inline bool ClientBattleHero::has_isfashion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientBattleHero::set_has_isfashion() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientBattleHero::clear_has_isfashion() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientBattleHero::clear_isfashion() {
  isfashion_ = 0u;
  clear_has_isfashion();
}
inline ::google::protobuf::uint32 ClientBattleHero::isfashion() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.isFashion)
  return isfashion_;
}
inline void ClientBattleHero::set_isfashion(::google::protobuf::uint32 value) {
  set_has_isfashion();
  isfashion_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.isFashion)
}

// optional uint32 postion = 10;
inline bool ClientBattleHero::has_postion() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientBattleHero::set_has_postion() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientBattleHero::clear_has_postion() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientBattleHero::clear_postion() {
  postion_ = 0u;
  clear_has_postion();
}
inline ::google::protobuf::uint32 ClientBattleHero::postion() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.postion)
  return postion_;
}
inline void ClientBattleHero::set_postion(::google::protobuf::uint32 value) {
  set_has_postion();
  postion_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.postion)
}

// required uint32 effect = 11;
inline bool ClientBattleHero::has_effect() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientBattleHero::set_has_effect() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientBattleHero::clear_has_effect() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientBattleHero::clear_effect() {
  effect_ = 0u;
  clear_has_effect();
}
inline ::google::protobuf::uint32 ClientBattleHero::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.effect)
  return effect_;
}
inline void ClientBattleHero::set_effect(::google::protobuf::uint32 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.effect)
}

// optional uint32 deificationlevel = 12;
inline bool ClientBattleHero::has_deificationlevel() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientBattleHero::set_has_deificationlevel() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientBattleHero::clear_has_deificationlevel() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientBattleHero::clear_deificationlevel() {
  deificationlevel_ = 0u;
  clear_has_deificationlevel();
}
inline ::google::protobuf::uint32 ClientBattleHero::deificationlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.deificationlevel)
  return deificationlevel_;
}
inline void ClientBattleHero::set_deificationlevel(::google::protobuf::uint32 value) {
  set_has_deificationlevel();
  deificationlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.deificationlevel)
}

// optional uint32 wingslevel = 13;
inline bool ClientBattleHero::has_wingslevel() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ClientBattleHero::set_has_wingslevel() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ClientBattleHero::clear_has_wingslevel() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ClientBattleHero::clear_wingslevel() {
  wingslevel_ = 0u;
  clear_has_wingslevel();
}
inline ::google::protobuf::uint32 ClientBattleHero::wingslevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.wingslevel)
  return wingslevel_;
}
inline void ClientBattleHero::set_wingslevel(::google::protobuf::uint32 value) {
  set_has_wingslevel();
  wingslevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.wingslevel)
}

// optional string attr = 14;
inline bool ClientBattleHero::has_attr() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ClientBattleHero::set_has_attr() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ClientBattleHero::clear_has_attr() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ClientBattleHero::clear_attr() {
  if (attr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attr_->clear();
  }
  clear_has_attr();
}
inline const ::std::string& ClientBattleHero::attr() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.attr)
  return *attr_;
}
inline void ClientBattleHero::set_attr(const ::std::string& value) {
  set_has_attr();
  if (attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attr_ = new ::std::string;
  }
  attr_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.attr)
}
inline void ClientBattleHero::set_attr(const char* value) {
  set_has_attr();
  if (attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attr_ = new ::std::string;
  }
  attr_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientBattleHero.attr)
}
inline void ClientBattleHero::set_attr(const char* value, size_t size) {
  set_has_attr();
  if (attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attr_ = new ::std::string;
  }
  attr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientBattleHero.attr)
}
inline ::std::string* ClientBattleHero::mutable_attr() {
  set_has_attr();
  if (attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattleHero.attr)
  return attr_;
}
inline ::std::string* ClientBattleHero::release_attr() {
  clear_has_attr();
  if (attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attr_;
    attr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientBattleHero::set_allocated_attr(::std::string* attr) {
  if (attr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attr_;
  }
  if (attr) {
    set_has_attr();
    attr_ = attr;
  } else {
    clear_has_attr();
    attr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientBattleHero.attr)
}

// optional uint32 wakeLevel = 15;
inline bool ClientBattleHero::has_wakelevel() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ClientBattleHero::set_has_wakelevel() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ClientBattleHero::clear_has_wakelevel() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ClientBattleHero::clear_wakelevel() {
  wakelevel_ = 0u;
  clear_has_wakelevel();
}
inline ::google::protobuf::uint32 ClientBattleHero::wakelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.wakeLevel)
  return wakelevel_;
}
inline void ClientBattleHero::set_wakelevel(::google::protobuf::uint32 value) {
  set_has_wakelevel();
  wakelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.wakeLevel)
}

// repeated uint32 wakeEquips = 16;
inline int ClientBattleHero::wakeequips_size() const {
  return wakeequips_.size();
}
inline void ClientBattleHero::clear_wakeequips() {
  wakeequips_.Clear();
}
inline ::google::protobuf::uint32 ClientBattleHero::wakeequips(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.wakeEquips)
  return wakeequips_.Get(index);
}
inline void ClientBattleHero::set_wakeequips(int index, ::google::protobuf::uint32 value) {
  wakeequips_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.wakeEquips)
}
inline void ClientBattleHero::add_wakeequips(::google::protobuf::uint32 value) {
  wakeequips_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattleHero.wakeEquips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientBattleHero::wakeequips() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattleHero.wakeEquips)
  return wakeequips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientBattleHero::mutable_wakeequips() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattleHero.wakeEquips)
  return &wakeequips_;
}

// optional .TgsProtocol.WakeAttr property = 17;
inline bool ClientBattleHero::has_property() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ClientBattleHero::set_has_property() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ClientBattleHero::clear_has_property() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ClientBattleHero::clear_property() {
  if (property_ != NULL) property_->::TgsProtocol::WakeAttr::Clear();
  clear_has_property();
}
inline const ::TgsProtocol::WakeAttr& ClientBattleHero::property() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.property)
  return property_ != NULL ? *property_ : *default_instance_->property_;
}
inline ::TgsProtocol::WakeAttr* ClientBattleHero::mutable_property() {
  set_has_property();
  if (property_ == NULL) property_ = new ::TgsProtocol::WakeAttr;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattleHero.property)
  return property_;
}
inline ::TgsProtocol::WakeAttr* ClientBattleHero::release_property() {
  clear_has_property();
  ::TgsProtocol::WakeAttr* temp = property_;
  property_ = NULL;
  return temp;
}
inline void ClientBattleHero::set_allocated_property(::TgsProtocol::WakeAttr* property) {
  delete property_;
  property_ = property;
  if (property) {
    set_has_property();
  } else {
    clear_has_property();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientBattleHero.property)
}

// optional uint64 effect64 = 18;
inline bool ClientBattleHero::has_effect64() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ClientBattleHero::set_has_effect64() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ClientBattleHero::clear_has_effect64() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ClientBattleHero::clear_effect64() {
  effect64_ = GOOGLE_ULONGLONG(0);
  clear_has_effect64();
}
inline ::google::protobuf::uint64 ClientBattleHero::effect64() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattleHero.effect64)
  return effect64_;
}
inline void ClientBattleHero::set_effect64(::google::protobuf::uint64 value) {
  set_has_effect64();
  effect64_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattleHero.effect64)
}

// -------------------------------------------------------------------

// GuildSkill

// required uint32 id = 1;
inline bool GuildSkill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildSkill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildSkill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildSkill::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GuildSkill::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildSkill.id)
  return id_;
}
inline void GuildSkill::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildSkill.id)
}

// required uint32 level = 2;
inline bool GuildSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 GuildSkill::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildSkill.level)
  return level_;
}
inline void GuildSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildSkill.level)
}

// -------------------------------------------------------------------

// ClientBattlePlayer

// required uint64 charId = 1;
inline bool ClientBattlePlayer::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientBattlePlayer::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientBattlePlayer::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientBattlePlayer::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ClientBattlePlayer::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.charId)
  return charid_;
}
inline void ClientBattlePlayer::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.charId)
}

// required string charName = 2;
inline bool ClientBattlePlayer::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientBattlePlayer::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientBattlePlayer::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientBattlePlayer::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& ClientBattlePlayer::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.charName)
  return *charname_;
}
inline void ClientBattlePlayer::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.charName)
}
inline void ClientBattlePlayer::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientBattlePlayer.charName)
}
inline void ClientBattlePlayer::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientBattlePlayer.charName)
}
inline ::std::string* ClientBattlePlayer::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattlePlayer.charName)
  return charname_;
}
inline ::std::string* ClientBattlePlayer::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientBattlePlayer::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientBattlePlayer.charName)
}

// required uint32 charLevel = 3;
inline bool ClientBattlePlayer::has_charlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientBattlePlayer::set_has_charlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientBattlePlayer::clear_has_charlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientBattlePlayer::clear_charlevel() {
  charlevel_ = 0u;
  clear_has_charlevel();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::charlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.charLevel)
  return charlevel_;
}
inline void ClientBattlePlayer::set_charlevel(::google::protobuf::uint32 value) {
  set_has_charlevel();
  charlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.charLevel)
}

// required uint32 photo = 4;
inline bool ClientBattlePlayer::has_photo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientBattlePlayer::set_has_photo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientBattlePlayer::clear_has_photo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientBattlePlayer::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.photo)
  return photo_;
}
inline void ClientBattlePlayer::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.photo)
}

// required uint32 effect = 5;
inline bool ClientBattlePlayer::has_effect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientBattlePlayer::set_has_effect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientBattlePlayer::clear_has_effect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientBattlePlayer::clear_effect() {
  effect_ = 0u;
  clear_has_effect();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.effect)
  return effect_;
}
inline void ClientBattlePlayer::set_effect(::google::protobuf::uint32 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.effect)
}

// required uint32 vipLevel = 6;
inline bool ClientBattlePlayer::has_viplevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientBattlePlayer::set_has_viplevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientBattlePlayer::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientBattlePlayer::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::viplevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.vipLevel)
  return viplevel_;
}
inline void ClientBattlePlayer::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.vipLevel)
}

// required uint32 position = 7;
inline bool ClientBattlePlayer::has_position() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientBattlePlayer::set_has_position() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientBattlePlayer::clear_has_position() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientBattlePlayer::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::position() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.position)
  return position_;
}
inline void ClientBattlePlayer::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.position)
}

// required uint32 isRobot = 8;
inline bool ClientBattlePlayer::has_isrobot() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientBattlePlayer::set_has_isrobot() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientBattlePlayer::clear_has_isrobot() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientBattlePlayer::clear_isrobot() {
  isrobot_ = 0u;
  clear_has_isrobot();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::isrobot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.isRobot)
  return isrobot_;
}
inline void ClientBattlePlayer::set_isrobot(::google::protobuf::uint32 value) {
  set_has_isrobot();
  isrobot_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.isRobot)
}

// optional uint32 guild_job = 9;
inline bool ClientBattlePlayer::has_guild_job() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientBattlePlayer::set_has_guild_job() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientBattlePlayer::clear_has_guild_job() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientBattlePlayer::clear_guild_job() {
  guild_job_ = 0u;
  clear_has_guild_job();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::guild_job() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.guild_job)
  return guild_job_;
}
inline void ClientBattlePlayer::set_guild_job(::google::protobuf::uint32 value) {
  set_has_guild_job();
  guild_job_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.guild_job)
}

// optional bool online = 10;
inline bool ClientBattlePlayer::has_online() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientBattlePlayer::set_has_online() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientBattlePlayer::clear_has_online() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientBattlePlayer::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool ClientBattlePlayer::online() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.online)
  return online_;
}
inline void ClientBattlePlayer::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.online)
}

// repeated .TgsProtocol.ClientBattleHero hero = 11;
inline int ClientBattlePlayer::hero_size() const {
  return hero_.size();
}
inline void ClientBattlePlayer::clear_hero() {
  hero_.Clear();
}
inline const ::TgsProtocol::ClientBattleHero& ClientBattlePlayer::hero(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.hero)
  return hero_.Get(index);
}
inline ::TgsProtocol::ClientBattleHero* ClientBattlePlayer::mutable_hero(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattlePlayer.hero)
  return hero_.Mutable(index);
}
inline ::TgsProtocol::ClientBattleHero* ClientBattlePlayer::add_hero() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattlePlayer.hero)
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero >&
ClientBattlePlayer::hero() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattlePlayer.hero)
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero >*
ClientBattlePlayer::mutable_hero() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattlePlayer.hero)
  return &hero_;
}

// repeated .TgsProtocol.ClientBattleHero assist_hero = 12;
inline int ClientBattlePlayer::assist_hero_size() const {
  return assist_hero_.size();
}
inline void ClientBattlePlayer::clear_assist_hero() {
  assist_hero_.Clear();
}
inline const ::TgsProtocol::ClientBattleHero& ClientBattlePlayer::assist_hero(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.assist_hero)
  return assist_hero_.Get(index);
}
inline ::TgsProtocol::ClientBattleHero* ClientBattlePlayer::mutable_assist_hero(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattlePlayer.assist_hero)
  return assist_hero_.Mutable(index);
}
inline ::TgsProtocol::ClientBattleHero* ClientBattlePlayer::add_assist_hero() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattlePlayer.assist_hero)
  return assist_hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero >&
ClientBattlePlayer::assist_hero() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattlePlayer.assist_hero)
  return assist_hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientBattleHero >*
ClientBattlePlayer::mutable_assist_hero() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattlePlayer.assist_hero)
  return &assist_hero_;
}

// repeated .TgsProtocol.GuildSkill guild_skill = 13;
inline int ClientBattlePlayer::guild_skill_size() const {
  return guild_skill_.size();
}
inline void ClientBattlePlayer::clear_guild_skill() {
  guild_skill_.Clear();
}
inline const ::TgsProtocol::GuildSkill& ClientBattlePlayer::guild_skill(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.guild_skill)
  return guild_skill_.Get(index);
}
inline ::TgsProtocol::GuildSkill* ClientBattlePlayer::mutable_guild_skill(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattlePlayer.guild_skill)
  return guild_skill_.Mutable(index);
}
inline ::TgsProtocol::GuildSkill* ClientBattlePlayer::add_guild_skill() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattlePlayer.guild_skill)
  return guild_skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildSkill >&
ClientBattlePlayer::guild_skill() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattlePlayer.guild_skill)
  return guild_skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildSkill >*
ClientBattlePlayer::mutable_guild_skill() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattlePlayer.guild_skill)
  return &guild_skill_;
}

// optional uint32 server_id = 14;
inline bool ClientBattlePlayer::has_server_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ClientBattlePlayer::set_has_server_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ClientBattlePlayer::clear_has_server_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ClientBattlePlayer::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::server_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.server_id)
  return server_id_;
}
inline void ClientBattlePlayer::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.server_id)
}

// optional string server_name = 15;
inline bool ClientBattlePlayer::has_server_name() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ClientBattlePlayer::set_has_server_name() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ClientBattlePlayer::clear_has_server_name() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ClientBattlePlayer::clear_server_name() {
  if (server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_->clear();
  }
  clear_has_server_name();
}
inline const ::std::string& ClientBattlePlayer::server_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.server_name)
  return *server_name_;
}
inline void ClientBattlePlayer::set_server_name(const ::std::string& value) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.server_name)
}
inline void ClientBattlePlayer::set_server_name(const char* value) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientBattlePlayer.server_name)
}
inline void ClientBattlePlayer::set_server_name(const char* value, size_t size) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientBattlePlayer.server_name)
}
inline ::std::string* ClientBattlePlayer::mutable_server_name() {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattlePlayer.server_name)
  return server_name_;
}
inline ::std::string* ClientBattlePlayer::release_server_name() {
  clear_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = server_name_;
    server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientBattlePlayer::set_allocated_server_name(::std::string* server_name) {
  if (server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete server_name_;
  }
  if (server_name) {
    set_has_server_name();
    server_name_ = server_name;
  } else {
    clear_has_server_name();
    server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientBattlePlayer.server_name)
}

// repeated .TgsProtocol.ClientHandBook handbook = 16;
inline int ClientBattlePlayer::handbook_size() const {
  return handbook_.size();
}
inline void ClientBattlePlayer::clear_handbook() {
  handbook_.Clear();
}
inline const ::TgsProtocol::ClientHandBook& ClientBattlePlayer::handbook(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.handbook)
  return handbook_.Get(index);
}
inline ::TgsProtocol::ClientHandBook* ClientBattlePlayer::mutable_handbook(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattlePlayer.handbook)
  return handbook_.Mutable(index);
}
inline ::TgsProtocol::ClientHandBook* ClientBattlePlayer::add_handbook() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattlePlayer.handbook)
  return handbook_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHandBook >&
ClientBattlePlayer::handbook() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattlePlayer.handbook)
  return handbook_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientHandBook >*
ClientBattlePlayer::mutable_handbook() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattlePlayer.handbook)
  return &handbook_;
}

// repeated uint32 fashionHero = 17;
inline int ClientBattlePlayer::fashionhero_size() const {
  return fashionhero_.size();
}
inline void ClientBattlePlayer::clear_fashionhero() {
  fashionhero_.Clear();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::fashionhero(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.fashionHero)
  return fashionhero_.Get(index);
}
inline void ClientBattlePlayer::set_fashionhero(int index, ::google::protobuf::uint32 value) {
  fashionhero_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.fashionHero)
}
inline void ClientBattlePlayer::add_fashionhero(::google::protobuf::uint32 value) {
  fashionhero_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattlePlayer.fashionHero)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientBattlePlayer::fashionhero() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattlePlayer.fashionHero)
  return fashionhero_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientBattlePlayer::mutable_fashionhero() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattlePlayer.fashionHero)
  return &fashionhero_;
}

// optional string guild_name = 18;
inline bool ClientBattlePlayer::has_guild_name() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ClientBattlePlayer::set_has_guild_name() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ClientBattlePlayer::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ClientBattlePlayer::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& ClientBattlePlayer::guild_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.guild_name)
  return *guild_name_;
}
inline void ClientBattlePlayer::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.guild_name)
}
inline void ClientBattlePlayer::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientBattlePlayer.guild_name)
}
inline void ClientBattlePlayer::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientBattlePlayer.guild_name)
}
inline ::std::string* ClientBattlePlayer::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientBattlePlayer.guild_name)
  return guild_name_;
}
inline ::std::string* ClientBattlePlayer::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientBattlePlayer::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientBattlePlayer.guild_name)
}

// optional uint32 steamwin = 19;
inline bool ClientBattlePlayer::has_steamwin() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ClientBattlePlayer::set_has_steamwin() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ClientBattlePlayer::clear_has_steamwin() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ClientBattlePlayer::clear_steamwin() {
  steamwin_ = 0u;
  clear_has_steamwin();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::steamwin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.steamwin)
  return steamwin_;
}
inline void ClientBattlePlayer::set_steamwin(::google::protobuf::uint32 value) {
  set_has_steamwin();
  steamwin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.steamwin)
}

// repeated uint32 secrethole_buff = 20;
inline int ClientBattlePlayer::secrethole_buff_size() const {
  return secrethole_buff_.size();
}
inline void ClientBattlePlayer::clear_secrethole_buff() {
  secrethole_buff_.Clear();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::secrethole_buff(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.secrethole_buff)
  return secrethole_buff_.Get(index);
}
inline void ClientBattlePlayer::set_secrethole_buff(int index, ::google::protobuf::uint32 value) {
  secrethole_buff_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.secrethole_buff)
}
inline void ClientBattlePlayer::add_secrethole_buff(::google::protobuf::uint32 value) {
  secrethole_buff_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattlePlayer.secrethole_buff)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientBattlePlayer::secrethole_buff() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattlePlayer.secrethole_buff)
  return secrethole_buff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientBattlePlayer::mutable_secrethole_buff() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattlePlayer.secrethole_buff)
  return &secrethole_buff_;
}

// optional uint32 cheerid = 21;
inline bool ClientBattlePlayer::has_cheerid() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ClientBattlePlayer::set_has_cheerid() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ClientBattlePlayer::clear_has_cheerid() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ClientBattlePlayer::clear_cheerid() {
  cheerid_ = 0u;
  clear_has_cheerid();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::cheerid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.cheerid)
  return cheerid_;
}
inline void ClientBattlePlayer::set_cheerid(::google::protobuf::uint32 value) {
  set_has_cheerid();
  cheerid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.cheerid)
}

// repeated uint32 activeTitleId = 22;
inline int ClientBattlePlayer::activetitleid_size() const {
  return activetitleid_.size();
}
inline void ClientBattlePlayer::clear_activetitleid() {
  activetitleid_.Clear();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::activetitleid(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.activeTitleId)
  return activetitleid_.Get(index);
}
inline void ClientBattlePlayer::set_activetitleid(int index, ::google::protobuf::uint32 value) {
  activetitleid_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.activeTitleId)
}
inline void ClientBattlePlayer::add_activetitleid(::google::protobuf::uint32 value) {
  activetitleid_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattlePlayer.activeTitleId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientBattlePlayer::activetitleid() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattlePlayer.activeTitleId)
  return activetitleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientBattlePlayer::mutable_activetitleid() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattlePlayer.activeTitleId)
  return &activetitleid_;
}

// repeated bool privilege = 23;
inline int ClientBattlePlayer::privilege_size() const {
  return privilege_.size();
}
inline void ClientBattlePlayer::clear_privilege() {
  privilege_.Clear();
}
inline bool ClientBattlePlayer::privilege(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.privilege)
  return privilege_.Get(index);
}
inline void ClientBattlePlayer::set_privilege(int index, bool value) {
  privilege_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.privilege)
}
inline void ClientBattlePlayer::add_privilege(bool value) {
  privilege_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientBattlePlayer.privilege)
}
inline const ::google::protobuf::RepeatedField< bool >&
ClientBattlePlayer::privilege() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientBattlePlayer.privilege)
  return privilege_;
}
inline ::google::protobuf::RepeatedField< bool >*
ClientBattlePlayer::mutable_privilege() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientBattlePlayer.privilege)
  return &privilege_;
}

// optional uint64 effect64 = 24;
inline bool ClientBattlePlayer::has_effect64() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ClientBattlePlayer::set_has_effect64() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ClientBattlePlayer::clear_has_effect64() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ClientBattlePlayer::clear_effect64() {
  effect64_ = GOOGLE_ULONGLONG(0);
  clear_has_effect64();
}
inline ::google::protobuf::uint64 ClientBattlePlayer::effect64() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.effect64)
  return effect64_;
}
inline void ClientBattlePlayer::set_effect64(::google::protobuf::uint64 value) {
  set_has_effect64();
  effect64_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.effect64)
}

// optional uint32 nationalId = 25;
inline bool ClientBattlePlayer::has_nationalid() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ClientBattlePlayer::set_has_nationalid() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ClientBattlePlayer::clear_has_nationalid() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ClientBattlePlayer::clear_nationalid() {
  nationalid_ = 0u;
  clear_has_nationalid();
}
inline ::google::protobuf::uint32 ClientBattlePlayer::nationalid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientBattlePlayer.nationalId)
  return nationalid_;
}
inline void ClientBattlePlayer::set_nationalid(::google::protobuf::uint32 value) {
  set_has_nationalid();
  nationalid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientBattlePlayer.nationalId)
}

// -------------------------------------------------------------------

// ClientRaidTeamHeroInfo

// required uint32 heroIndex = 1;
inline bool ClientRaidTeamHeroInfo::has_heroindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientRaidTeamHeroInfo::set_has_heroindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientRaidTeamHeroInfo::clear_has_heroindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientRaidTeamHeroInfo::clear_heroindex() {
  heroindex_ = 0u;
  clear_has_heroindex();
}
inline ::google::protobuf::uint32 ClientRaidTeamHeroInfo::heroindex() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamHeroInfo.heroIndex)
  return heroindex_;
}
inline void ClientRaidTeamHeroInfo::set_heroindex(::google::protobuf::uint32 value) {
  set_has_heroindex();
  heroindex_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamHeroInfo.heroIndex)
}

// required uint32 isFashion = 2;
inline bool ClientRaidTeamHeroInfo::has_isfashion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientRaidTeamHeroInfo::set_has_isfashion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientRaidTeamHeroInfo::clear_has_isfashion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientRaidTeamHeroInfo::clear_isfashion() {
  isfashion_ = 0u;
  clear_has_isfashion();
}
inline ::google::protobuf::uint32 ClientRaidTeamHeroInfo::isfashion() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamHeroInfo.isFashion)
  return isfashion_;
}
inline void ClientRaidTeamHeroInfo::set_isfashion(::google::protobuf::uint32 value) {
  set_has_isfashion();
  isfashion_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamHeroInfo.isFashion)
}

// required uint32 evolutionLevel = 3;
inline bool ClientRaidTeamHeroInfo::has_evolutionlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientRaidTeamHeroInfo::set_has_evolutionlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientRaidTeamHeroInfo::clear_has_evolutionlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientRaidTeamHeroInfo::clear_evolutionlevel() {
  evolutionlevel_ = 0u;
  clear_has_evolutionlevel();
}
inline ::google::protobuf::uint32 ClientRaidTeamHeroInfo::evolutionlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamHeroInfo.evolutionLevel)
  return evolutionlevel_;
}
inline void ClientRaidTeamHeroInfo::set_evolutionlevel(::google::protobuf::uint32 value) {
  set_has_evolutionlevel();
  evolutionlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamHeroInfo.evolutionLevel)
}

// required uint32 forceLevel = 4;
inline bool ClientRaidTeamHeroInfo::has_forcelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientRaidTeamHeroInfo::set_has_forcelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientRaidTeamHeroInfo::clear_has_forcelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientRaidTeamHeroInfo::clear_forcelevel() {
  forcelevel_ = 0u;
  clear_has_forcelevel();
}
inline ::google::protobuf::uint32 ClientRaidTeamHeroInfo::forcelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamHeroInfo.forceLevel)
  return forcelevel_;
}
inline void ClientRaidTeamHeroInfo::set_forcelevel(::google::protobuf::uint32 value) {
  set_has_forcelevel();
  forcelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamHeroInfo.forceLevel)
}

// required uint32 position = 5;
inline bool ClientRaidTeamHeroInfo::has_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientRaidTeamHeroInfo::set_has_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientRaidTeamHeroInfo::clear_has_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientRaidTeamHeroInfo::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 ClientRaidTeamHeroInfo::position() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamHeroInfo.position)
  return position_;
}
inline void ClientRaidTeamHeroInfo::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamHeroInfo.position)
}

// optional uint32 deificationlevel = 6;
inline bool ClientRaidTeamHeroInfo::has_deificationlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientRaidTeamHeroInfo::set_has_deificationlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientRaidTeamHeroInfo::clear_has_deificationlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientRaidTeamHeroInfo::clear_deificationlevel() {
  deificationlevel_ = 0u;
  clear_has_deificationlevel();
}
inline ::google::protobuf::uint32 ClientRaidTeamHeroInfo::deificationlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamHeroInfo.deificationlevel)
  return deificationlevel_;
}
inline void ClientRaidTeamHeroInfo::set_deificationlevel(::google::protobuf::uint32 value) {
  set_has_deificationlevel();
  deificationlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamHeroInfo.deificationlevel)
}

// optional uint32 wingslevel = 7;
inline bool ClientRaidTeamHeroInfo::has_wingslevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientRaidTeamHeroInfo::set_has_wingslevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientRaidTeamHeroInfo::clear_has_wingslevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientRaidTeamHeroInfo::clear_wingslevel() {
  wingslevel_ = 0u;
  clear_has_wingslevel();
}
inline ::google::protobuf::uint32 ClientRaidTeamHeroInfo::wingslevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamHeroInfo.wingslevel)
  return wingslevel_;
}
inline void ClientRaidTeamHeroInfo::set_wingslevel(::google::protobuf::uint32 value) {
  set_has_wingslevel();
  wingslevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamHeroInfo.wingslevel)
}

// -------------------------------------------------------------------

// ClientRaidTeamInfo

// required uint64 charId = 1;
inline bool ClientRaidTeamInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientRaidTeamInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientRaidTeamInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientRaidTeamInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ClientRaidTeamInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.charId)
  return charid_;
}
inline void ClientRaidTeamInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.charId)
}

// required bytes charName = 2;
inline bool ClientRaidTeamInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientRaidTeamInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientRaidTeamInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientRaidTeamInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& ClientRaidTeamInfo::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.charName)
  return *charname_;
}
inline void ClientRaidTeamInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.charName)
}
inline void ClientRaidTeamInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientRaidTeamInfo.charName)
}
inline void ClientRaidTeamInfo::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientRaidTeamInfo.charName)
}
inline ::std::string* ClientRaidTeamInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientRaidTeamInfo.charName)
  return charname_;
}
inline ::std::string* ClientRaidTeamInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientRaidTeamInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientRaidTeamInfo.charName)
}

// required uint32 photo = 3;
inline bool ClientRaidTeamInfo::has_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientRaidTeamInfo::set_has_photo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientRaidTeamInfo::clear_has_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientRaidTeamInfo::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 ClientRaidTeamInfo::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.photo)
  return photo_;
}
inline void ClientRaidTeamInfo::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.photo)
}

// required uint32 charLevel = 4;
inline bool ClientRaidTeamInfo::has_charlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientRaidTeamInfo::set_has_charlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientRaidTeamInfo::clear_has_charlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientRaidTeamInfo::clear_charlevel() {
  charlevel_ = 0u;
  clear_has_charlevel();
}
inline ::google::protobuf::uint32 ClientRaidTeamInfo::charlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.charLevel)
  return charlevel_;
}
inline void ClientRaidTeamInfo::set_charlevel(::google::protobuf::uint32 value) {
  set_has_charlevel();
  charlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.charLevel)
}

// required uint64 effect = 5;
inline bool ClientRaidTeamInfo::has_effect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientRaidTeamInfo::set_has_effect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientRaidTeamInfo::clear_has_effect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientRaidTeamInfo::clear_effect() {
  effect_ = GOOGLE_ULONGLONG(0);
  clear_has_effect();
}
inline ::google::protobuf::uint64 ClientRaidTeamInfo::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.effect)
  return effect_;
}
inline void ClientRaidTeamInfo::set_effect(::google::protobuf::uint64 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.effect)
}

// required uint32 vipLevel = 6;
inline bool ClientRaidTeamInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientRaidTeamInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientRaidTeamInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientRaidTeamInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 ClientRaidTeamInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.vipLevel)
  return viplevel_;
}
inline void ClientRaidTeamInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.vipLevel)
}

// required bytes guildName = 7;
inline bool ClientRaidTeamInfo::has_guildname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientRaidTeamInfo::set_has_guildname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientRaidTeamInfo::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientRaidTeamInfo::clear_guildname() {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_->clear();
  }
  clear_has_guildname();
}
inline const ::std::string& ClientRaidTeamInfo::guildname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.guildName)
  return *guildname_;
}
inline void ClientRaidTeamInfo::set_guildname(const ::std::string& value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.guildName)
}
inline void ClientRaidTeamInfo::set_guildname(const char* value) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientRaidTeamInfo.guildName)
}
inline void ClientRaidTeamInfo::set_guildname(const void* value, size_t size) {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  guildname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientRaidTeamInfo.guildName)
}
inline ::std::string* ClientRaidTeamInfo::mutable_guildname() {
  set_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientRaidTeamInfo.guildName)
  return guildname_;
}
inline ::std::string* ClientRaidTeamInfo::release_guildname() {
  clear_has_guildname();
  if (guildname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildname_;
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientRaidTeamInfo::set_allocated_guildname(::std::string* guildname) {
  if (guildname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildname_;
  }
  if (guildname) {
    set_has_guildname();
    guildname_ = guildname;
  } else {
    clear_has_guildname();
    guildname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientRaidTeamInfo.guildName)
}

// required bool bSend = 8;
inline bool ClientRaidTeamInfo::has_bsend() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientRaidTeamInfo::set_has_bsend() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientRaidTeamInfo::clear_has_bsend() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientRaidTeamInfo::clear_bsend() {
  bsend_ = false;
  clear_has_bsend();
}
inline bool ClientRaidTeamInfo::bsend() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.bSend)
  return bsend_;
}
inline void ClientRaidTeamInfo::set_bsend(bool value) {
  set_has_bsend();
  bsend_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.bSend)
}

// required uint32 receive = 9;
inline bool ClientRaidTeamInfo::has_receive() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientRaidTeamInfo::set_has_receive() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientRaidTeamInfo::clear_has_receive() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientRaidTeamInfo::clear_receive() {
  receive_ = 0u;
  clear_has_receive();
}
inline ::google::protobuf::uint32 ClientRaidTeamInfo::receive() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.receive)
  return receive_;
}
inline void ClientRaidTeamInfo::set_receive(::google::protobuf::uint32 value) {
  set_has_receive();
  receive_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.receive)
}

// required uint32 loginTime = 10;
inline bool ClientRaidTeamInfo::has_logintime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientRaidTeamInfo::set_has_logintime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientRaidTeamInfo::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientRaidTeamInfo::clear_logintime() {
  logintime_ = 0u;
  clear_has_logintime();
}
inline ::google::protobuf::uint32 ClientRaidTeamInfo::logintime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.loginTime)
  return logintime_;
}
inline void ClientRaidTeamInfo::set_logintime(::google::protobuf::uint32 value) {
  set_has_logintime();
  logintime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.loginTime)
}

// repeated .TgsProtocol.ClientRaidTeamHeroInfo hero = 11;
inline int ClientRaidTeamInfo::hero_size() const {
  return hero_.size();
}
inline void ClientRaidTeamInfo::clear_hero() {
  hero_.Clear();
}
inline const ::TgsProtocol::ClientRaidTeamHeroInfo& ClientRaidTeamInfo::hero(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.hero)
  return hero_.Get(index);
}
inline ::TgsProtocol::ClientRaidTeamHeroInfo* ClientRaidTeamInfo::mutable_hero(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientRaidTeamInfo.hero)
  return hero_.Mutable(index);
}
inline ::TgsProtocol::ClientRaidTeamHeroInfo* ClientRaidTeamInfo::add_hero() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientRaidTeamInfo.hero)
  return hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRaidTeamHeroInfo >&
ClientRaidTeamInfo::hero() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientRaidTeamInfo.hero)
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRaidTeamHeroInfo >*
ClientRaidTeamInfo::mutable_hero() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientRaidTeamInfo.hero)
  return &hero_;
}

// optional uint32 nationalId = 12;
inline bool ClientRaidTeamInfo::has_nationalid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientRaidTeamInfo::set_has_nationalid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientRaidTeamInfo::clear_has_nationalid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientRaidTeamInfo::clear_nationalid() {
  nationalid_ = 0u;
  clear_has_nationalid();
}
inline ::google::protobuf::uint32 ClientRaidTeamInfo::nationalid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRaidTeamInfo.nationalId)
  return nationalid_;
}
inline void ClientRaidTeamInfo::set_nationalid(::google::protobuf::uint32 value) {
  set_has_nationalid();
  nationalid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRaidTeamInfo.nationalId)
}

// -------------------------------------------------------------------

// TodayTime

// required uint32 beginTime = 1;
inline bool TodayTime::has_begintime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TodayTime::set_has_begintime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TodayTime::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TodayTime::clear_begintime() {
  begintime_ = 0u;
  clear_has_begintime();
}
inline ::google::protobuf::uint32 TodayTime::begintime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TodayTime.beginTime)
  return begintime_;
}
inline void TodayTime::set_begintime(::google::protobuf::uint32 value) {
  set_has_begintime();
  begintime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TodayTime.beginTime)
}

// required uint32 endTime = 2;
inline bool TodayTime::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TodayTime::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TodayTime::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TodayTime::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 TodayTime::endtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TodayTime.endTime)
  return endtime_;
}
inline void TodayTime::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TodayTime.endTime)
}

// -------------------------------------------------------------------

// SourceList

// repeated .TgsProtocol.ClientSource source = 1;
inline int SourceList::source_size() const {
  return source_.size();
}
inline void SourceList::clear_source() {
  source_.Clear();
}
inline const ::TgsProtocol::ClientSource& SourceList::source(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SourceList.source)
  return source_.Get(index);
}
inline ::TgsProtocol::ClientSource* SourceList::mutable_source(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.SourceList.source)
  return source_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* SourceList::add_source() {
  // @@protoc_insertion_point(field_add:TgsProtocol.SourceList.source)
  return source_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
SourceList::source() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.SourceList.source)
  return source_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
SourceList::mutable_source() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.SourceList.source)
  return &source_;
}

// -------------------------------------------------------------------

// ClientMonthCard

// required uint32 index = 1;
inline bool ClientMonthCard::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientMonthCard::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientMonthCard::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientMonthCard::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ClientMonthCard::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientMonthCard.index)
  return index_;
}
inline void ClientMonthCard::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientMonthCard.index)
}

// required uint32 startTime = 2;
inline bool ClientMonthCard::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientMonthCard::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientMonthCard::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientMonthCard::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 ClientMonthCard::starttime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientMonthCard.startTime)
  return starttime_;
}
inline void ClientMonthCard::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientMonthCard.startTime)
}

// required uint32 getTime = 3;
inline bool ClientMonthCard::has_gettime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientMonthCard::set_has_gettime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientMonthCard::clear_has_gettime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientMonthCard::clear_gettime() {
  gettime_ = 0u;
  clear_has_gettime();
}
inline ::google::protobuf::uint32 ClientMonthCard::gettime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientMonthCard.getTime)
  return gettime_;
}
inline void ClientMonthCard::set_gettime(::google::protobuf::uint32 value) {
  set_has_gettime();
  gettime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientMonthCard.getTime)
}

// -------------------------------------------------------------------

// ClientItemLimit

// required uint32 id = 1;
inline bool ClientItemLimit::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientItemLimit::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientItemLimit::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientItemLimit::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ClientItemLimit::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientItemLimit.id)
  return id_;
}
inline void ClientItemLimit::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientItemLimit.id)
}

// required uint32 limit = 2;
inline bool ClientItemLimit::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientItemLimit::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientItemLimit::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientItemLimit::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 ClientItemLimit::limit() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientItemLimit.limit)
  return limit_;
}
inline void ClientItemLimit::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientItemLimit.limit)
}

// required uint32 got = 3;
inline bool ClientItemLimit::has_got() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientItemLimit::set_has_got() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientItemLimit::clear_has_got() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientItemLimit::clear_got() {
  got_ = 0u;
  clear_has_got();
}
inline ::google::protobuf::uint32 ClientItemLimit::got() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientItemLimit.got)
  return got_;
}
inline void ClientItemLimit::set_got(::google::protobuf::uint32 value) {
  set_has_got();
  got_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientItemLimit.got)
}

// -------------------------------------------------------------------

// LString

// required string str = 1;
inline bool LString::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LString::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LString::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LString::clear_str() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& LString::str() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LString.str)
  return *str_;
}
inline void LString::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LString.str)
}
inline void LString::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LString.str)
}
inline void LString::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LString.str)
}
inline ::std::string* LString::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LString.str)
  return str_;
}
inline ::std::string* LString::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LString::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LString.str)
}

// optional uint32 type = 2;
inline bool LString::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LString::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LString::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LString::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 LString::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LString.type)
  return type_;
}
inline void LString::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LString.type)
}

// -------------------------------------------------------------------

// IntList

// repeated uint32 value = 1;
inline int IntList::value_size() const {
  return value_.size();
}
inline void IntList::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::uint32 IntList::value(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.IntList.value)
  return value_.Get(index);
}
inline void IntList::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.IntList.value)
}
inline void IntList::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.IntList.value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IntList::value() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.IntList.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IntList::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.IntList.value)
  return &value_;
}

// -------------------------------------------------------------------

// ClientActivity

// required uint32 id = 1;
inline bool ClientActivity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientActivity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientActivity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientActivity::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ClientActivity::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.id)
  return id_;
}
inline void ClientActivity::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.id)
}

// optional uint32 closed = 2;
inline bool ClientActivity::has_closed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientActivity::set_has_closed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientActivity::clear_has_closed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientActivity::clear_closed() {
  closed_ = 0u;
  clear_has_closed();
}
inline ::google::protobuf::uint32 ClientActivity::closed() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.closed)
  return closed_;
}
inline void ClientActivity::set_closed(::google::protobuf::uint32 value) {
  set_has_closed();
  closed_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.closed)
}

// optional uint32 opentype = 3;
inline bool ClientActivity::has_opentype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientActivity::set_has_opentype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientActivity::clear_has_opentype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientActivity::clear_opentype() {
  opentype_ = 0u;
  clear_has_opentype();
}
inline ::google::protobuf::uint32 ClientActivity::opentype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.opentype)
  return opentype_;
}
inline void ClientActivity::set_opentype(::google::protobuf::uint32 value) {
  set_has_opentype();
  opentype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.opentype)
}

// optional uint32 actype = 4;
inline bool ClientActivity::has_actype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientActivity::set_has_actype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientActivity::clear_has_actype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientActivity::clear_actype() {
  actype_ = 0u;
  clear_has_actype();
}
inline ::google::protobuf::uint32 ClientActivity::actype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.actype)
  return actype_;
}
inline void ClientActivity::set_actype(::google::protobuf::uint32 value) {
  set_has_actype();
  actype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.actype)
}

// optional uint32 showBeginTime = 5;
inline bool ClientActivity::has_showbegintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientActivity::set_has_showbegintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientActivity::clear_has_showbegintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientActivity::clear_showbegintime() {
  showbegintime_ = 0u;
  clear_has_showbegintime();
}
inline ::google::protobuf::uint32 ClientActivity::showbegintime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.showBeginTime)
  return showbegintime_;
}
inline void ClientActivity::set_showbegintime(::google::protobuf::uint32 value) {
  set_has_showbegintime();
  showbegintime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.showBeginTime)
}

// optional uint32 showEndTime = 6;
inline bool ClientActivity::has_showendtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientActivity::set_has_showendtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientActivity::clear_has_showendtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientActivity::clear_showendtime() {
  showendtime_ = 0u;
  clear_has_showendtime();
}
inline ::google::protobuf::uint32 ClientActivity::showendtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.showEndTime)
  return showendtime_;
}
inline void ClientActivity::set_showendtime(::google::protobuf::uint32 value) {
  set_has_showendtime();
  showendtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.showEndTime)
}

// optional uint32 beginTime = 7;
inline bool ClientActivity::has_begintime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientActivity::set_has_begintime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientActivity::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientActivity::clear_begintime() {
  begintime_ = 0u;
  clear_has_begintime();
}
inline ::google::protobuf::uint32 ClientActivity::begintime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.beginTime)
  return begintime_;
}
inline void ClientActivity::set_begintime(::google::protobuf::uint32 value) {
  set_has_begintime();
  begintime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.beginTime)
}

// optional uint32 endTime = 8;
inline bool ClientActivity::has_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientActivity::set_has_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientActivity::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientActivity::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 ClientActivity::endtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.endTime)
  return endtime_;
}
inline void ClientActivity::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.endTime)
}

// optional uint32 playerLev = 9;
inline bool ClientActivity::has_playerlev() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientActivity::set_has_playerlev() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientActivity::clear_has_playerlev() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientActivity::clear_playerlev() {
  playerlev_ = 0u;
  clear_has_playerlev();
}
inline ::google::protobuf::uint32 ClientActivity::playerlev() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.playerLev)
  return playerlev_;
}
inline void ClientActivity::set_playerlev(::google::protobuf::uint32 value) {
  set_has_playerlev();
  playerlev_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.playerLev)
}

// optional string name = 10;
inline bool ClientActivity::has_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientActivity::set_has_name() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientActivity::clear_has_name() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientActivity::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ClientActivity::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.name)
  return *name_;
}
inline void ClientActivity::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.name)
}
inline void ClientActivity::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientActivity.name)
}
inline void ClientActivity::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientActivity.name)
}
inline ::std::string* ClientActivity::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.name)
  return name_;
}
inline ::std::string* ClientActivity::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientActivity::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientActivity.name)
}

// optional string desc = 11;
inline bool ClientActivity::has_desc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientActivity::set_has_desc() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientActivity::clear_has_desc() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientActivity::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& ClientActivity::desc() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.desc)
  return *desc_;
}
inline void ClientActivity::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.desc)
}
inline void ClientActivity::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientActivity.desc)
}
inline void ClientActivity::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientActivity.desc)
}
inline ::std::string* ClientActivity::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.desc)
  return desc_;
}
inline ::std::string* ClientActivity::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientActivity::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientActivity.desc)
}

// repeated .TgsProtocol.TodayTime todayTimes = 12;
inline int ClientActivity::todaytimes_size() const {
  return todaytimes_.size();
}
inline void ClientActivity::clear_todaytimes() {
  todaytimes_.Clear();
}
inline const ::TgsProtocol::TodayTime& ClientActivity::todaytimes(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.todayTimes)
  return todaytimes_.Get(index);
}
inline ::TgsProtocol::TodayTime* ClientActivity::mutable_todaytimes(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.todayTimes)
  return todaytimes_.Mutable(index);
}
inline ::TgsProtocol::TodayTime* ClientActivity::add_todaytimes() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.todayTimes)
  return todaytimes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime >&
ClientActivity::todaytimes() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.todayTimes)
  return todaytimes_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime >*
ClientActivity::mutable_todaytimes() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.todayTimes)
  return &todaytimes_;
}

// repeated uint32 values = 13;
inline int ClientActivity::values_size() const {
  return values_.size();
}
inline void ClientActivity::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint32 ClientActivity::values(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.values)
  return values_.Get(index);
}
inline void ClientActivity::set_values(int index, ::google::protobuf::uint32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.values)
}
inline void ClientActivity::add_values(::google::protobuf::uint32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientActivity::values() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientActivity::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.values)
  return &values_;
}

// repeated .TgsProtocol.SourceList rewards = 14;
inline int ClientActivity::rewards_size() const {
  return rewards_.size();
}
inline void ClientActivity::clear_rewards() {
  rewards_.Clear();
}
inline const ::TgsProtocol::SourceList& ClientActivity::rewards(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.rewards)
  return rewards_.Get(index);
}
inline ::TgsProtocol::SourceList* ClientActivity::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.rewards)
  return rewards_.Mutable(index);
}
inline ::TgsProtocol::SourceList* ClientActivity::add_rewards() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
ClientActivity::rewards() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
ClientActivity::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.rewards)
  return &rewards_;
}

// repeated uint32 rewardGot = 15;
inline int ClientActivity::rewardgot_size() const {
  return rewardgot_.size();
}
inline void ClientActivity::clear_rewardgot() {
  rewardgot_.Clear();
}
inline ::google::protobuf::uint32 ClientActivity::rewardgot(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.rewardGot)
  return rewardgot_.Get(index);
}
inline void ClientActivity::set_rewardgot(int index, ::google::protobuf::uint32 value) {
  rewardgot_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.rewardGot)
}
inline void ClientActivity::add_rewardgot(::google::protobuf::uint32 value) {
  rewardgot_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.rewardGot)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientActivity::rewardgot() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.rewardGot)
  return rewardgot_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientActivity::mutable_rewardgot() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.rewardGot)
  return &rewardgot_;
}

// optional uint32 value = 16;
inline bool ClientActivity::has_value() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ClientActivity::set_has_value() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ClientActivity::clear_has_value() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ClientActivity::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ClientActivity::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.value)
  return value_;
}
inline void ClientActivity::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.value)
}

// repeated string childDesc = 17;
inline int ClientActivity::childdesc_size() const {
  return childdesc_.size();
}
inline void ClientActivity::clear_childdesc() {
  childdesc_.Clear();
}
inline const ::std::string& ClientActivity::childdesc(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.childDesc)
  return childdesc_.Get(index);
}
inline ::std::string* ClientActivity::mutable_childdesc(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.childDesc)
  return childdesc_.Mutable(index);
}
inline void ClientActivity::set_childdesc(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.childDesc)
  childdesc_.Mutable(index)->assign(value);
}
inline void ClientActivity::set_childdesc(int index, const char* value) {
  childdesc_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientActivity.childDesc)
}
inline void ClientActivity::set_childdesc(int index, const char* value, size_t size) {
  childdesc_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientActivity.childDesc)
}
inline ::std::string* ClientActivity::add_childdesc() {
  return childdesc_.Add();
}
inline void ClientActivity::add_childdesc(const ::std::string& value) {
  childdesc_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.childDesc)
}
inline void ClientActivity::add_childdesc(const char* value) {
  childdesc_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TgsProtocol.ClientActivity.childDesc)
}
inline void ClientActivity::add_childdesc(const char* value, size_t size) {
  childdesc_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TgsProtocol.ClientActivity.childDesc)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientActivity::childdesc() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.childDesc)
  return childdesc_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientActivity::mutable_childdesc() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.childDesc)
  return &childdesc_;
}

// repeated uint32 shareValues = 18;
inline int ClientActivity::sharevalues_size() const {
  return sharevalues_.size();
}
inline void ClientActivity::clear_sharevalues() {
  sharevalues_.Clear();
}
inline ::google::protobuf::uint32 ClientActivity::sharevalues(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.shareValues)
  return sharevalues_.Get(index);
}
inline void ClientActivity::set_sharevalues(int index, ::google::protobuf::uint32 value) {
  sharevalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.shareValues)
}
inline void ClientActivity::add_sharevalues(::google::protobuf::uint32 value) {
  sharevalues_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.shareValues)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientActivity::sharevalues() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.shareValues)
  return sharevalues_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientActivity::mutable_sharevalues() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.shareValues)
  return &sharevalues_;
}

// repeated .TgsProtocol.SourceList values2 = 19;
inline int ClientActivity::values2_size() const {
  return values2_.size();
}
inline void ClientActivity::clear_values2() {
  values2_.Clear();
}
inline const ::TgsProtocol::SourceList& ClientActivity::values2(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.values2)
  return values2_.Get(index);
}
inline ::TgsProtocol::SourceList* ClientActivity::mutable_values2(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.values2)
  return values2_.Mutable(index);
}
inline ::TgsProtocol::SourceList* ClientActivity::add_values2() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.values2)
  return values2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
ClientActivity::values2() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.values2)
  return values2_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
ClientActivity::mutable_values2() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.values2)
  return &values2_;
}

// repeated string shareTex = 20;
inline int ClientActivity::sharetex_size() const {
  return sharetex_.size();
}
inline void ClientActivity::clear_sharetex() {
  sharetex_.Clear();
}
inline const ::std::string& ClientActivity::sharetex(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.shareTex)
  return sharetex_.Get(index);
}
inline ::std::string* ClientActivity::mutable_sharetex(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.shareTex)
  return sharetex_.Mutable(index);
}
inline void ClientActivity::set_sharetex(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.shareTex)
  sharetex_.Mutable(index)->assign(value);
}
inline void ClientActivity::set_sharetex(int index, const char* value) {
  sharetex_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientActivity.shareTex)
}
inline void ClientActivity::set_sharetex(int index, const char* value, size_t size) {
  sharetex_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientActivity.shareTex)
}
inline ::std::string* ClientActivity::add_sharetex() {
  return sharetex_.Add();
}
inline void ClientActivity::add_sharetex(const ::std::string& value) {
  sharetex_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.shareTex)
}
inline void ClientActivity::add_sharetex(const char* value) {
  sharetex_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TgsProtocol.ClientActivity.shareTex)
}
inline void ClientActivity::add_sharetex(const char* value, size_t size) {
  sharetex_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TgsProtocol.ClientActivity.shareTex)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientActivity::sharetex() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.shareTex)
  return sharetex_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientActivity::mutable_sharetex() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.shareTex)
  return &sharetex_;
}

// optional string icon = 21;
inline bool ClientActivity::has_icon() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ClientActivity::set_has_icon() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ClientActivity::clear_has_icon() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ClientActivity::clear_icon() {
  if (icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& ClientActivity::icon() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.icon)
  return *icon_;
}
inline void ClientActivity::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.icon)
}
inline void ClientActivity::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientActivity.icon)
}
inline void ClientActivity::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientActivity.icon)
}
inline ::std::string* ClientActivity::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    icon_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.icon)
  return icon_;
}
inline ::std::string* ClientActivity::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientActivity::set_allocated_icon(::std::string* icon) {
  if (icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete icon_;
  }
  if (icon) {
    set_has_icon();
    icon_ = icon;
  } else {
    clear_has_icon();
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientActivity.icon)
}

// optional uint32 activetime = 22;
inline bool ClientActivity::has_activetime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ClientActivity::set_has_activetime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ClientActivity::clear_has_activetime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ClientActivity::clear_activetime() {
  activetime_ = 0u;
  clear_has_activetime();
}
inline ::google::protobuf::uint32 ClientActivity::activetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.activetime)
  return activetime_;
}
inline void ClientActivity::set_activetime(::google::protobuf::uint32 value) {
  set_has_activetime();
  activetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.activetime)
}

// optional uint32 countdown = 23;
inline bool ClientActivity::has_countdown() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ClientActivity::set_has_countdown() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ClientActivity::clear_has_countdown() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ClientActivity::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 ClientActivity::countdown() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.countdown)
  return countdown_;
}
inline void ClientActivity::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.countdown)
}

// repeated .TgsProtocol.ClientMonthCard card = 24;
inline int ClientActivity::card_size() const {
  return card_.size();
}
inline void ClientActivity::clear_card() {
  card_.Clear();
}
inline const ::TgsProtocol::ClientMonthCard& ClientActivity::card(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.card)
  return card_.Get(index);
}
inline ::TgsProtocol::ClientMonthCard* ClientActivity::mutable_card(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.card)
  return card_.Mutable(index);
}
inline ::TgsProtocol::ClientMonthCard* ClientActivity::add_card() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.card)
  return card_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientMonthCard >&
ClientActivity::card() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.card)
  return card_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientMonthCard >*
ClientActivity::mutable_card() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.card)
  return &card_;
}

// optional uint32 sequence = 25;
inline bool ClientActivity::has_sequence() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ClientActivity::set_has_sequence() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ClientActivity::clear_has_sequence() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ClientActivity::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 ClientActivity::sequence() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.sequence)
  return sequence_;
}
inline void ClientActivity::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.sequence)
}

// repeated .TgsProtocol.ClientItemLimit globalItemLimit = 26;
inline int ClientActivity::globalitemlimit_size() const {
  return globalitemlimit_.size();
}
inline void ClientActivity::clear_globalitemlimit() {
  globalitemlimit_.Clear();
}
inline const ::TgsProtocol::ClientItemLimit& ClientActivity::globalitemlimit(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.globalItemLimit)
  return globalitemlimit_.Get(index);
}
inline ::TgsProtocol::ClientItemLimit* ClientActivity::mutable_globalitemlimit(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.globalItemLimit)
  return globalitemlimit_.Mutable(index);
}
inline ::TgsProtocol::ClientItemLimit* ClientActivity::add_globalitemlimit() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.globalItemLimit)
  return globalitemlimit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit >&
ClientActivity::globalitemlimit() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.globalItemLimit)
  return globalitemlimit_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit >*
ClientActivity::mutable_globalitemlimit() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.globalItemLimit)
  return &globalitemlimit_;
}

// repeated .TgsProtocol.ClientItemLimit playerItemLimit = 27;
inline int ClientActivity::playeritemlimit_size() const {
  return playeritemlimit_.size();
}
inline void ClientActivity::clear_playeritemlimit() {
  playeritemlimit_.Clear();
}
inline const ::TgsProtocol::ClientItemLimit& ClientActivity::playeritemlimit(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.playerItemLimit)
  return playeritemlimit_.Get(index);
}
inline ::TgsProtocol::ClientItemLimit* ClientActivity::mutable_playeritemlimit(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.playerItemLimit)
  return playeritemlimit_.Mutable(index);
}
inline ::TgsProtocol::ClientItemLimit* ClientActivity::add_playeritemlimit() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.playerItemLimit)
  return playeritemlimit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit >&
ClientActivity::playeritemlimit() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.playerItemLimit)
  return playeritemlimit_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientItemLimit >*
ClientActivity::mutable_playeritemlimit() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.playerItemLimit)
  return &playeritemlimit_;
}

// repeated uint32 getTimes = 28;
inline int ClientActivity::gettimes_size() const {
  return gettimes_.size();
}
inline void ClientActivity::clear_gettimes() {
  gettimes_.Clear();
}
inline ::google::protobuf::uint32 ClientActivity::gettimes(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.getTimes)
  return gettimes_.Get(index);
}
inline void ClientActivity::set_gettimes(int index, ::google::protobuf::uint32 value) {
  gettimes_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.getTimes)
}
inline void ClientActivity::add_gettimes(::google::protobuf::uint32 value) {
  gettimes_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.getTimes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientActivity::gettimes() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.getTimes)
  return gettimes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientActivity::mutable_gettimes() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.getTimes)
  return &gettimes_;
}

// repeated uint32 everyValues = 29;
inline int ClientActivity::everyvalues_size() const {
  return everyvalues_.size();
}
inline void ClientActivity::clear_everyvalues() {
  everyvalues_.Clear();
}
inline ::google::protobuf::uint32 ClientActivity::everyvalues(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.everyValues)
  return everyvalues_.Get(index);
}
inline void ClientActivity::set_everyvalues(int index, ::google::protobuf::uint32 value) {
  everyvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.everyValues)
}
inline void ClientActivity::add_everyvalues(::google::protobuf::uint32 value) {
  everyvalues_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.everyValues)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientActivity::everyvalues() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.everyValues)
  return everyvalues_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientActivity::mutable_everyvalues() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.everyValues)
  return &everyvalues_;
}

// repeated uint32 everyDoneValues = 30;
inline int ClientActivity::everydonevalues_size() const {
  return everydonevalues_.size();
}
inline void ClientActivity::clear_everydonevalues() {
  everydonevalues_.Clear();
}
inline ::google::protobuf::uint32 ClientActivity::everydonevalues(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.everyDoneValues)
  return everydonevalues_.Get(index);
}
inline void ClientActivity::set_everydonevalues(int index, ::google::protobuf::uint32 value) {
  everydonevalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.everyDoneValues)
}
inline void ClientActivity::add_everydonevalues(::google::protobuf::uint32 value) {
  everydonevalues_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.everyDoneValues)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientActivity::everydonevalues() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.everyDoneValues)
  return everydonevalues_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientActivity::mutable_everydonevalues() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.everyDoneValues)
  return &everydonevalues_;
}

// optional .TgsProtocol.LString name_l = 31;
inline bool ClientActivity::has_name_l() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ClientActivity::set_has_name_l() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ClientActivity::clear_has_name_l() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ClientActivity::clear_name_l() {
  if (name_l_ != NULL) name_l_->::TgsProtocol::LString::Clear();
  clear_has_name_l();
}
inline const ::TgsProtocol::LString& ClientActivity::name_l() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.name_l)
  return name_l_ != NULL ? *name_l_ : *default_instance_->name_l_;
}
inline ::TgsProtocol::LString* ClientActivity::mutable_name_l() {
  set_has_name_l();
  if (name_l_ == NULL) name_l_ = new ::TgsProtocol::LString;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.name_l)
  return name_l_;
}
inline ::TgsProtocol::LString* ClientActivity::release_name_l() {
  clear_has_name_l();
  ::TgsProtocol::LString* temp = name_l_;
  name_l_ = NULL;
  return temp;
}
inline void ClientActivity::set_allocated_name_l(::TgsProtocol::LString* name_l) {
  delete name_l_;
  name_l_ = name_l;
  if (name_l) {
    set_has_name_l();
  } else {
    clear_has_name_l();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientActivity.name_l)
}

// optional .TgsProtocol.LString desc_l = 32;
inline bool ClientActivity::has_desc_l() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void ClientActivity::set_has_desc_l() {
  _has_bits_[0] |= 0x80000000u;
}
inline void ClientActivity::clear_has_desc_l() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void ClientActivity::clear_desc_l() {
  if (desc_l_ != NULL) desc_l_->::TgsProtocol::LString::Clear();
  clear_has_desc_l();
}
inline const ::TgsProtocol::LString& ClientActivity::desc_l() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.desc_l)
  return desc_l_ != NULL ? *desc_l_ : *default_instance_->desc_l_;
}
inline ::TgsProtocol::LString* ClientActivity::mutable_desc_l() {
  set_has_desc_l();
  if (desc_l_ == NULL) desc_l_ = new ::TgsProtocol::LString;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.desc_l)
  return desc_l_;
}
inline ::TgsProtocol::LString* ClientActivity::release_desc_l() {
  clear_has_desc_l();
  ::TgsProtocol::LString* temp = desc_l_;
  desc_l_ = NULL;
  return temp;
}
inline void ClientActivity::set_allocated_desc_l(::TgsProtocol::LString* desc_l) {
  delete desc_l_;
  desc_l_ = desc_l;
  if (desc_l) {
    set_has_desc_l();
  } else {
    clear_has_desc_l();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientActivity.desc_l)
}

// repeated .TgsProtocol.LString childDesc_l = 33;
inline int ClientActivity::childdesc_l_size() const {
  return childdesc_l_.size();
}
inline void ClientActivity::clear_childdesc_l() {
  childdesc_l_.Clear();
}
inline const ::TgsProtocol::LString& ClientActivity::childdesc_l(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.childDesc_l)
  return childdesc_l_.Get(index);
}
inline ::TgsProtocol::LString* ClientActivity::mutable_childdesc_l(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.childDesc_l)
  return childdesc_l_.Mutable(index);
}
inline ::TgsProtocol::LString* ClientActivity::add_childdesc_l() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.childDesc_l)
  return childdesc_l_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString >&
ClientActivity::childdesc_l() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.childDesc_l)
  return childdesc_l_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString >*
ClientActivity::mutable_childdesc_l() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.childDesc_l)
  return &childdesc_l_;
}

// repeated uint32 intNumber = 34;
inline int ClientActivity::intnumber_size() const {
  return intnumber_.size();
}
inline void ClientActivity::clear_intnumber() {
  intnumber_.Clear();
}
inline ::google::protobuf::uint32 ClientActivity::intnumber(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.intNumber)
  return intnumber_.Get(index);
}
inline void ClientActivity::set_intnumber(int index, ::google::protobuf::uint32 value) {
  intnumber_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.intNumber)
}
inline void ClientActivity::add_intnumber(::google::protobuf::uint32 value) {
  intnumber_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.intNumber)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientActivity::intnumber() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.intNumber)
  return intnumber_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientActivity::mutable_intnumber() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.intNumber)
  return &intnumber_;
}

// repeated .TgsProtocol.IntList intNumberList = 35;
inline int ClientActivity::intnumberlist_size() const {
  return intnumberlist_.size();
}
inline void ClientActivity::clear_intnumberlist() {
  intnumberlist_.Clear();
}
inline const ::TgsProtocol::IntList& ClientActivity::intnumberlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.intNumberList)
  return intnumberlist_.Get(index);
}
inline ::TgsProtocol::IntList* ClientActivity::mutable_intnumberlist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.intNumberList)
  return intnumberlist_.Mutable(index);
}
inline ::TgsProtocol::IntList* ClientActivity::add_intnumberlist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.intNumberList)
  return intnumberlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::IntList >&
ClientActivity::intnumberlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.intNumberList)
  return intnumberlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::IntList >*
ClientActivity::mutable_intnumberlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.intNumberList)
  return &intnumberlist_;
}

// repeated uint32 mailid = 36;
inline int ClientActivity::mailid_size() const {
  return mailid_.size();
}
inline void ClientActivity::clear_mailid() {
  mailid_.Clear();
}
inline ::google::protobuf::uint32 ClientActivity::mailid(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.mailid)
  return mailid_.Get(index);
}
inline void ClientActivity::set_mailid(int index, ::google::protobuf::uint32 value) {
  mailid_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.mailid)
}
inline void ClientActivity::add_mailid(::google::protobuf::uint32 value) {
  mailid_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.mailid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientActivity::mailid() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.mailid)
  return mailid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientActivity::mutable_mailid() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.mailid)
  return &mailid_;
}

// repeated .TgsProtocol.LString child2Desc_l = 37;
inline int ClientActivity::child2desc_l_size() const {
  return child2desc_l_.size();
}
inline void ClientActivity::clear_child2desc_l() {
  child2desc_l_.Clear();
}
inline const ::TgsProtocol::LString& ClientActivity::child2desc_l(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.child2Desc_l)
  return child2desc_l_.Get(index);
}
inline ::TgsProtocol::LString* ClientActivity::mutable_child2desc_l(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientActivity.child2Desc_l)
  return child2desc_l_.Mutable(index);
}
inline ::TgsProtocol::LString* ClientActivity::add_child2desc_l() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientActivity.child2Desc_l)
  return child2desc_l_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString >&
ClientActivity::child2desc_l() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientActivity.child2Desc_l)
  return child2desc_l_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::LString >*
ClientActivity::mutable_child2desc_l() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientActivity.child2Desc_l)
  return &child2desc_l_;
}

// optional uint32 iconIndex = 38;
inline bool ClientActivity::has_iconindex() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void ClientActivity::set_has_iconindex() {
  _has_bits_[1] |= 0x00000020u;
}
inline void ClientActivity::clear_has_iconindex() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void ClientActivity::clear_iconindex() {
  iconindex_ = 0u;
  clear_has_iconindex();
}
inline ::google::protobuf::uint32 ClientActivity::iconindex() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.iconIndex)
  return iconindex_;
}
inline void ClientActivity::set_iconindex(::google::protobuf::uint32 value) {
  set_has_iconindex();
  iconindex_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.iconIndex)
}

// optional uint32 expand = 39;
inline bool ClientActivity::has_expand() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void ClientActivity::set_has_expand() {
  _has_bits_[1] |= 0x00000040u;
}
inline void ClientActivity::clear_has_expand() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void ClientActivity::clear_expand() {
  expand_ = 0u;
  clear_has_expand();
}
inline ::google::protobuf::uint32 ClientActivity::expand() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientActivity.expand)
  return expand_;
}
inline void ClientActivity::set_expand(::google::protobuf::uint32 value) {
  set_has_expand();
  expand_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientActivity.expand)
}

// -------------------------------------------------------------------

// HalfBuyElement

// required uint32 index = 1;
inline bool HalfBuyElement::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HalfBuyElement::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HalfBuyElement::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HalfBuyElement::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 HalfBuyElement::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HalfBuyElement.index)
  return index_;
}
inline void HalfBuyElement::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HalfBuyElement.index)
}

// required uint32 number = 2;
inline bool HalfBuyElement::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HalfBuyElement::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HalfBuyElement::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HalfBuyElement::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 HalfBuyElement::number() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HalfBuyElement.number)
  return number_;
}
inline void HalfBuyElement::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.HalfBuyElement.number)
}

// -------------------------------------------------------------------

// HalfBuy

// repeated .TgsProtocol.HalfBuyElement halfBuyEle = 1;
inline int HalfBuy::halfbuyele_size() const {
  return halfbuyele_.size();
}
inline void HalfBuy::clear_halfbuyele() {
  halfbuyele_.Clear();
}
inline const ::TgsProtocol::HalfBuyElement& HalfBuy::halfbuyele(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.HalfBuy.halfBuyEle)
  return halfbuyele_.Get(index);
}
inline ::TgsProtocol::HalfBuyElement* HalfBuy::mutable_halfbuyele(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.HalfBuy.halfBuyEle)
  return halfbuyele_.Mutable(index);
}
inline ::TgsProtocol::HalfBuyElement* HalfBuy::add_halfbuyele() {
  // @@protoc_insertion_point(field_add:TgsProtocol.HalfBuy.halfBuyEle)
  return halfbuyele_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HalfBuyElement >&
HalfBuy::halfbuyele() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.HalfBuy.halfBuyEle)
  return halfbuyele_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::HalfBuyElement >*
HalfBuy::mutable_halfbuyele() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.HalfBuy.halfBuyEle)
  return &halfbuyele_;
}

// -------------------------------------------------------------------

// AchieveElement

// required uint32 id = 1;
inline bool AchieveElement::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AchieveElement::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AchieveElement::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AchieveElement::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AchieveElement::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AchieveElement.id)
  return id_;
}
inline void AchieveElement::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AchieveElement.id)
}

// optional uint64 charid = 2;
inline bool AchieveElement::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AchieveElement::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AchieveElement::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AchieveElement::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AchieveElement::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AchieveElement.charid)
  return charid_;
}
inline void AchieveElement::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AchieveElement.charid)
}

// optional uint32 got = 3;
inline bool AchieveElement::has_got() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AchieveElement::set_has_got() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AchieveElement::clear_has_got() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AchieveElement::clear_got() {
  got_ = 0u;
  clear_has_got();
}
inline ::google::protobuf::uint32 AchieveElement::got() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AchieveElement.got)
  return got_;
}
inline void AchieveElement::set_got(::google::protobuf::uint32 value) {
  set_has_got();
  got_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AchieveElement.got)
}

// -------------------------------------------------------------------

// Achieve

// repeated .TgsProtocol.AchieveElement achieves = 1;
inline int Achieve::achieves_size() const {
  return achieves_.size();
}
inline void Achieve::clear_achieves() {
  achieves_.Clear();
}
inline const ::TgsProtocol::AchieveElement& Achieve::achieves(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.Achieve.achieves)
  return achieves_.Get(index);
}
inline ::TgsProtocol::AchieveElement* Achieve::mutable_achieves(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.Achieve.achieves)
  return achieves_.Mutable(index);
}
inline ::TgsProtocol::AchieveElement* Achieve::add_achieves() {
  // @@protoc_insertion_point(field_add:TgsProtocol.Achieve.achieves)
  return achieves_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AchieveElement >&
Achieve::achieves() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.Achieve.achieves)
  return achieves_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AchieveElement >*
Achieve::mutable_achieves() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.Achieve.achieves)
  return &achieves_;
}

// -------------------------------------------------------------------

// ClientRank

// required .TgsProtocol.ERankType type = 1;
inline bool ClientRank::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientRank::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientRank::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientRank::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::ERankType ClientRank::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.type)
  return static_cast< ::TgsProtocol::ERankType >(type_);
}
inline void ClientRank::set_type(::TgsProtocol::ERankType value) {
  assert(::TgsProtocol::ERankType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.type)
}

// required uint32 rank = 2;
inline bool ClientRank::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientRank::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientRank::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientRank::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 ClientRank::rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.rank)
  return rank_;
}
inline void ClientRank::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.rank)
}

// required uint64 charid = 3;
inline bool ClientRank::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientRank::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientRank::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientRank::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ClientRank::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.charid)
  return charid_;
}
inline void ClientRank::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.charid)
}

// required uint32 playerLev = 4;
inline bool ClientRank::has_playerlev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientRank::set_has_playerlev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientRank::clear_has_playerlev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientRank::clear_playerlev() {
  playerlev_ = 0u;
  clear_has_playerlev();
}
inline ::google::protobuf::uint32 ClientRank::playerlev() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.playerLev)
  return playerlev_;
}
inline void ClientRank::set_playerlev(::google::protobuf::uint32 value) {
  set_has_playerlev();
  playerlev_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.playerLev)
}

// required uint32 vipLev = 5;
inline bool ClientRank::has_viplev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientRank::set_has_viplev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientRank::clear_has_viplev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientRank::clear_viplev() {
  viplev_ = 0u;
  clear_has_viplev();
}
inline ::google::protobuf::uint32 ClientRank::viplev() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.vipLev)
  return viplev_;
}
inline void ClientRank::set_viplev(::google::protobuf::uint32 value) {
  set_has_viplev();
  viplev_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.vipLev)
}

// required string playerName = 6;
inline bool ClientRank::has_playername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientRank::set_has_playername() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientRank::clear_has_playername() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientRank::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& ClientRank::playername() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.playerName)
  return *playername_;
}
inline void ClientRank::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.playerName)
}
inline void ClientRank::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientRank.playerName)
}
inline void ClientRank::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientRank.playerName)
}
inline ::std::string* ClientRank::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientRank.playerName)
  return playername_;
}
inline ::std::string* ClientRank::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientRank::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientRank.playerName)
}

// optional string playerGuild = 7;
inline bool ClientRank::has_playerguild() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientRank::set_has_playerguild() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientRank::clear_has_playerguild() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientRank::clear_playerguild() {
  if (playerguild_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playerguild_->clear();
  }
  clear_has_playerguild();
}
inline const ::std::string& ClientRank::playerguild() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.playerGuild)
  return *playerguild_;
}
inline void ClientRank::set_playerguild(const ::std::string& value) {
  set_has_playerguild();
  if (playerguild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playerguild_ = new ::std::string;
  }
  playerguild_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.playerGuild)
}
inline void ClientRank::set_playerguild(const char* value) {
  set_has_playerguild();
  if (playerguild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playerguild_ = new ::std::string;
  }
  playerguild_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientRank.playerGuild)
}
inline void ClientRank::set_playerguild(const char* value, size_t size) {
  set_has_playerguild();
  if (playerguild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playerguild_ = new ::std::string;
  }
  playerguild_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientRank.playerGuild)
}
inline ::std::string* ClientRank::mutable_playerguild() {
  set_has_playerguild();
  if (playerguild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playerguild_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientRank.playerGuild)
  return playerguild_;
}
inline ::std::string* ClientRank::release_playerguild() {
  clear_has_playerguild();
  if (playerguild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playerguild_;
    playerguild_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientRank::set_allocated_playerguild(::std::string* playerguild) {
  if (playerguild_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playerguild_;
  }
  if (playerguild) {
    set_has_playerguild();
    playerguild_ = playerguild;
  } else {
    clear_has_playerguild();
    playerguild_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientRank.playerGuild)
}

// required uint64 value = 8;
inline bool ClientRank::has_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientRank::set_has_value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientRank::clear_has_value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientRank::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 ClientRank::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.value)
  return value_;
}
inline void ClientRank::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.value)
}

// optional uint32 templateId = 9;
inline bool ClientRank::has_templateid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientRank::set_has_templateid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientRank::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientRank::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 ClientRank::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.templateId)
  return templateid_;
}
inline void ClientRank::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.templateId)
}

// optional uint64 instanceId = 10;
inline bool ClientRank::has_instanceid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientRank::set_has_instanceid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientRank::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientRank::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::uint64 ClientRank::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.instanceId)
  return instanceid_;
}
inline void ClientRank::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.instanceId)
}

// optional uint32 instanceValue = 11;
inline bool ClientRank::has_instancevalue() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientRank::set_has_instancevalue() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientRank::clear_has_instancevalue() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientRank::clear_instancevalue() {
  instancevalue_ = 0u;
  clear_has_instancevalue();
}
inline ::google::protobuf::uint32 ClientRank::instancevalue() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.instanceValue)
  return instancevalue_;
}
inline void ClientRank::set_instancevalue(::google::protobuf::uint32 value) {
  set_has_instancevalue();
  instancevalue_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.instanceValue)
}

// required uint64 effect = 12;
inline bool ClientRank::has_effect() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientRank::set_has_effect() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientRank::clear_has_effect() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientRank::clear_effect() {
  effect_ = GOOGLE_ULONGLONG(0);
  clear_has_effect();
}
inline ::google::protobuf::uint64 ClientRank::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.effect)
  return effect_;
}
inline void ClientRank::set_effect(::google::protobuf::uint64 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.effect)
}

// required uint32 photo = 13;
inline bool ClientRank::has_photo() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ClientRank::set_has_photo() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ClientRank::clear_has_photo() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ClientRank::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 ClientRank::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.photo)
  return photo_;
}
inline void ClientRank::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.photo)
}

// optional uint32 nationalId = 14;
inline bool ClientRank::has_nationalid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ClientRank::set_has_nationalid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ClientRank::clear_has_nationalid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ClientRank::clear_nationalid() {
  nationalid_ = 0u;
  clear_has_nationalid();
}
inline ::google::protobuf::uint32 ClientRank::nationalid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRank.nationalId)
  return nationalid_;
}
inline void ClientRank::set_nationalid(::google::protobuf::uint32 value) {
  set_has_nationalid();
  nationalid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRank.nationalId)
}

// -------------------------------------------------------------------

// ClientRankList

// required .TgsProtocol.ERankType type = 1;
inline bool ClientRankList::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientRankList::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientRankList::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientRankList::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::ERankType ClientRankList::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRankList.type)
  return static_cast< ::TgsProtocol::ERankType >(type_);
}
inline void ClientRankList::set_type(::TgsProtocol::ERankType value) {
  assert(::TgsProtocol::ERankType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRankList.type)
}

// repeated .TgsProtocol.ClientRank items = 2;
inline int ClientRankList::items_size() const {
  return items_.size();
}
inline void ClientRankList::clear_items() {
  items_.Clear();
}
inline const ::TgsProtocol::ClientRank& ClientRankList::items(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRankList.items)
  return items_.Get(index);
}
inline ::TgsProtocol::ClientRank* ClientRankList::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientRankList.items)
  return items_.Mutable(index);
}
inline ::TgsProtocol::ClientRank* ClientRankList::add_items() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientRankList.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRank >&
ClientRankList::items() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientRankList.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientRank >*
ClientRankList::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientRankList.items)
  return &items_;
}

// required uint32 myrank = 3;
inline bool ClientRankList::has_myrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientRankList::set_has_myrank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientRankList::clear_has_myrank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientRankList::clear_myrank() {
  myrank_ = 0u;
  clear_has_myrank();
}
inline ::google::protobuf::uint32 ClientRankList::myrank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRankList.myrank)
  return myrank_;
}
inline void ClientRankList::set_myrank(::google::protobuf::uint32 value) {
  set_has_myrank();
  myrank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRankList.myrank)
}

// optional uint32 templateId = 4;
inline bool ClientRankList::has_templateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientRankList::set_has_templateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientRankList::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientRankList::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 ClientRankList::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRankList.templateId)
  return templateid_;
}
inline void ClientRankList::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRankList.templateId)
}

// optional uint64 myvalue = 5;
inline bool ClientRankList::has_myvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientRankList::set_has_myvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientRankList::clear_has_myvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientRankList::clear_myvalue() {
  myvalue_ = GOOGLE_ULONGLONG(0);
  clear_has_myvalue();
}
inline ::google::protobuf::uint64 ClientRankList::myvalue() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientRankList.myvalue)
  return myvalue_;
}
inline void ClientRankList::set_myvalue(::google::protobuf::uint64 value) {
  set_has_myvalue();
  myvalue_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientRankList.myvalue)
}

// -------------------------------------------------------------------

// ClientHeroRank

// required uint32 rank = 1;
inline bool ClientHeroRank::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientHeroRank::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientHeroRank::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientHeroRank::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 ClientHeroRank::rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.rank)
  return rank_;
}
inline void ClientHeroRank::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.rank)
}

// required uint32 hero_id = 2;
inline bool ClientHeroRank::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientHeroRank::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientHeroRank::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientHeroRank::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 ClientHeroRank::hero_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.hero_id)
  return hero_id_;
}
inline void ClientHeroRank::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.hero_id)
}

// required uint64 charid = 3;
inline bool ClientHeroRank::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientHeroRank::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientHeroRank::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientHeroRank::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ClientHeroRank::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.charid)
  return charid_;
}
inline void ClientHeroRank::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.charid)
}

// required string name = 4;
inline bool ClientHeroRank::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientHeroRank::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientHeroRank::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientHeroRank::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ClientHeroRank::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.name)
  return *name_;
}
inline void ClientHeroRank::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.name)
}
inline void ClientHeroRank::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientHeroRank.name)
}
inline void ClientHeroRank::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientHeroRank.name)
}
inline ::std::string* ClientHeroRank::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientHeroRank.name)
  return name_;
}
inline ::std::string* ClientHeroRank::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientHeroRank::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientHeroRank.name)
}

// optional string guild = 5;
inline bool ClientHeroRank::has_guild() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientHeroRank::set_has_guild() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientHeroRank::clear_has_guild() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientHeroRank::clear_guild() {
  if (guild_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_->clear();
  }
  clear_has_guild();
}
inline const ::std::string& ClientHeroRank::guild() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.guild)
  return *guild_;
}
inline void ClientHeroRank::set_guild(const ::std::string& value) {
  set_has_guild();
  if (guild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_ = new ::std::string;
  }
  guild_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.guild)
}
inline void ClientHeroRank::set_guild(const char* value) {
  set_has_guild();
  if (guild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_ = new ::std::string;
  }
  guild_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientHeroRank.guild)
}
inline void ClientHeroRank::set_guild(const char* value, size_t size) {
  set_has_guild();
  if (guild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_ = new ::std::string;
  }
  guild_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientHeroRank.guild)
}
inline ::std::string* ClientHeroRank::mutable_guild() {
  set_has_guild();
  if (guild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientHeroRank.guild)
  return guild_;
}
inline ::std::string* ClientHeroRank::release_guild() {
  clear_has_guild();
  if (guild_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_;
    guild_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientHeroRank::set_allocated_guild(::std::string* guild) {
  if (guild_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_;
  }
  if (guild) {
    set_has_guild();
    guild_ = guild;
  } else {
    clear_has_guild();
    guild_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientHeroRank.guild)
}

// required uint32 photo = 6;
inline bool ClientHeroRank::has_photo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientHeroRank::set_has_photo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientHeroRank::clear_has_photo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientHeroRank::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 ClientHeroRank::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.photo)
  return photo_;
}
inline void ClientHeroRank::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.photo)
}

// required uint32 playerlevel = 7;
inline bool ClientHeroRank::has_playerlevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientHeroRank::set_has_playerlevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientHeroRank::clear_has_playerlevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientHeroRank::clear_playerlevel() {
  playerlevel_ = 0u;
  clear_has_playerlevel();
}
inline ::google::protobuf::uint32 ClientHeroRank::playerlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.playerlevel)
  return playerlevel_;
}
inline void ClientHeroRank::set_playerlevel(::google::protobuf::uint32 value) {
  set_has_playerlevel();
  playerlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.playerlevel)
}

// required uint32 level = 8;
inline bool ClientHeroRank::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientHeroRank::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientHeroRank::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientHeroRank::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ClientHeroRank::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.level)
  return level_;
}
inline void ClientHeroRank::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.level)
}

// required uint32 forceLevel = 9;
inline bool ClientHeroRank::has_forcelevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientHeroRank::set_has_forcelevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientHeroRank::clear_has_forcelevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientHeroRank::clear_forcelevel() {
  forcelevel_ = 0u;
  clear_has_forcelevel();
}
inline ::google::protobuf::uint32 ClientHeroRank::forcelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.forceLevel)
  return forcelevel_;
}
inline void ClientHeroRank::set_forcelevel(::google::protobuf::uint32 value) {
  set_has_forcelevel();
  forcelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.forceLevel)
}

// required uint32 deificationlevel = 10;
inline bool ClientHeroRank::has_deificationlevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientHeroRank::set_has_deificationlevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientHeroRank::clear_has_deificationlevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientHeroRank::clear_deificationlevel() {
  deificationlevel_ = 0u;
  clear_has_deificationlevel();
}
inline ::google::protobuf::uint32 ClientHeroRank::deificationlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.deificationlevel)
  return deificationlevel_;
}
inline void ClientHeroRank::set_deificationlevel(::google::protobuf::uint32 value) {
  set_has_deificationlevel();
  deificationlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.deificationlevel)
}

// required uint32 wingslevel = 11;
inline bool ClientHeroRank::has_wingslevel() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientHeroRank::set_has_wingslevel() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientHeroRank::clear_has_wingslevel() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientHeroRank::clear_wingslevel() {
  wingslevel_ = 0u;
  clear_has_wingslevel();
}
inline ::google::protobuf::uint32 ClientHeroRank::wingslevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.wingslevel)
  return wingslevel_;
}
inline void ClientHeroRank::set_wingslevel(::google::protobuf::uint32 value) {
  set_has_wingslevel();
  wingslevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.wingslevel)
}

// required uint64 effect = 12;
inline bool ClientHeroRank::has_effect() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientHeroRank::set_has_effect() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientHeroRank::clear_has_effect() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientHeroRank::clear_effect() {
  effect_ = GOOGLE_ULONGLONG(0);
  clear_has_effect();
}
inline ::google::protobuf::uint64 ClientHeroRank::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHeroRank.effect)
  return effect_;
}
inline void ClientHeroRank::set_effect(::google::protobuf::uint64 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHeroRank.effect)
}

// -------------------------------------------------------------------

// ClientAchieve

// required uint32 id = 1;
inline bool ClientAchieve::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientAchieve::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientAchieve::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientAchieve::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ClientAchieve::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientAchieve.id)
  return id_;
}
inline void ClientAchieve::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientAchieve.id)
}

// optional uint64 charid = 2;
inline bool ClientAchieve::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientAchieve::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientAchieve::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientAchieve::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ClientAchieve::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientAchieve.charid)
  return charid_;
}
inline void ClientAchieve::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientAchieve.charid)
}

// optional uint32 photo = 3;
inline bool ClientAchieve::has_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientAchieve::set_has_photo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientAchieve::clear_has_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientAchieve::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 ClientAchieve::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientAchieve.photo)
  return photo_;
}
inline void ClientAchieve::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientAchieve.photo)
}

// optional uint32 playerLev = 4;
inline bool ClientAchieve::has_playerlev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientAchieve::set_has_playerlev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientAchieve::clear_has_playerlev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientAchieve::clear_playerlev() {
  playerlev_ = 0u;
  clear_has_playerlev();
}
inline ::google::protobuf::uint32 ClientAchieve::playerlev() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientAchieve.playerLev)
  return playerlev_;
}
inline void ClientAchieve::set_playerlev(::google::protobuf::uint32 value) {
  set_has_playerlev();
  playerlev_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientAchieve.playerLev)
}

// optional uint32 vipLev = 5;
inline bool ClientAchieve::has_viplev() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientAchieve::set_has_viplev() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientAchieve::clear_has_viplev() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientAchieve::clear_viplev() {
  viplev_ = 0u;
  clear_has_viplev();
}
inline ::google::protobuf::uint32 ClientAchieve::viplev() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientAchieve.vipLev)
  return viplev_;
}
inline void ClientAchieve::set_viplev(::google::protobuf::uint32 value) {
  set_has_viplev();
  viplev_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientAchieve.vipLev)
}

// optional string playerName = 6;
inline bool ClientAchieve::has_playername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientAchieve::set_has_playername() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientAchieve::clear_has_playername() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientAchieve::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& ClientAchieve::playername() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientAchieve.playerName)
  return *playername_;
}
inline void ClientAchieve::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientAchieve.playerName)
}
inline void ClientAchieve::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientAchieve.playerName)
}
inline void ClientAchieve::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientAchieve.playerName)
}
inline ::std::string* ClientAchieve::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientAchieve.playerName)
  return playername_;
}
inline ::std::string* ClientAchieve::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientAchieve::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientAchieve.playerName)
}

// optional uint32 got = 7;
inline bool ClientAchieve::has_got() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientAchieve::set_has_got() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientAchieve::clear_has_got() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientAchieve::clear_got() {
  got_ = 0u;
  clear_has_got();
}
inline ::google::protobuf::uint32 ClientAchieve::got() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientAchieve.got)
  return got_;
}
inline void ClientAchieve::set_got(::google::protobuf::uint32 value) {
  set_has_got();
  got_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientAchieve.got)
}

// -------------------------------------------------------------------

// ActionRecord

// required .TgsProtocol.eActionType type = 1;
inline bool ActionRecord::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionRecord::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionRecord::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionRecord::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::TgsProtocol::eActionType ActionRecord::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ActionRecord.type)
  return static_cast< ::TgsProtocol::eActionType >(type_);
}
inline void ActionRecord::set_type(::TgsProtocol::eActionType value) {
  assert(::TgsProtocol::eActionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ActionRecord.type)
}

// required uint32 value = 2 [default = 0];
inline bool ActionRecord::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionRecord::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionRecord::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionRecord::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ActionRecord::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ActionRecord.value)
  return value_;
}
inline void ActionRecord::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ActionRecord.value)
}

// -------------------------------------------------------------------

// GuildInfo

// required uint32 id = 1;
inline bool GuildInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GuildInfo::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.id)
  return id_;
}
inline void GuildInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.id)
}

// required uint32 level = 2;
inline bool GuildInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 GuildInfo::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.level)
  return level_;
}
inline void GuildInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.level)
}

// required uint32 exp = 3;
inline bool GuildInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 GuildInfo::exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.exp)
  return exp_;
}
inline void GuildInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.exp)
}

// required uint64 creater = 4;
inline bool GuildInfo::has_creater() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInfo::set_has_creater() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInfo::clear_has_creater() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInfo::clear_creater() {
  creater_ = GOOGLE_ULONGLONG(0);
  clear_has_creater();
}
inline ::google::protobuf::uint64 GuildInfo::creater() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.creater)
  return creater_;
}
inline void GuildInfo::set_creater(::google::protobuf::uint64 value) {
  set_has_creater();
  creater_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.creater)
}

// required uint64 leader = 5;
inline bool GuildInfo::has_leader() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildInfo::set_has_leader() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildInfo::clear_has_leader() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildInfo::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
  clear_has_leader();
}
inline ::google::protobuf::uint64 GuildInfo::leader() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.leader)
  return leader_;
}
inline void GuildInfo::set_leader(::google::protobuf::uint64 value) {
  set_has_leader();
  leader_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.leader)
}

// required uint32 createtime = 6;
inline bool GuildInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildInfo::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 GuildInfo::createtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.createtime)
  return createtime_;
}
inline void GuildInfo::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.createtime)
}

// required uint32 photo = 7;
inline bool GuildInfo::has_photo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildInfo::set_has_photo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildInfo::clear_has_photo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildInfo::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 GuildInfo::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.photo)
  return photo_;
}
inline void GuildInfo::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.photo)
}

// required string name = 8;
inline bool GuildInfo::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildInfo::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildInfo::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.name)
  return *name_;
}
inline void GuildInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.name)
}
inline void GuildInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.GuildInfo.name)
}
inline void GuildInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.GuildInfo.name)
}
inline ::std::string* GuildInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildInfo.name)
  return name_;
}
inline ::std::string* GuildInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GuildInfo.name)
}

// required string notice = 9;
inline bool GuildInfo::has_notice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildInfo::set_has_notice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildInfo::clear_has_notice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildInfo::clear_notice() {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& GuildInfo::notice() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.notice)
  return *notice_;
}
inline void GuildInfo::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.notice)
}
inline void GuildInfo::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.GuildInfo.notice)
}
inline void GuildInfo::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.GuildInfo.notice)
}
inline ::std::string* GuildInfo::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildInfo.notice)
  return notice_;
}
inline ::std::string* GuildInfo::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfo::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GuildInfo.notice)
}

// required string manifesto = 10;
inline bool GuildInfo::has_manifesto() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildInfo::set_has_manifesto() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildInfo::clear_has_manifesto() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildInfo::clear_manifesto() {
  if (manifesto_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    manifesto_->clear();
  }
  clear_has_manifesto();
}
inline const ::std::string& GuildInfo::manifesto() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.manifesto)
  return *manifesto_;
}
inline void GuildInfo::set_manifesto(const ::std::string& value) {
  set_has_manifesto();
  if (manifesto_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    manifesto_ = new ::std::string;
  }
  manifesto_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.manifesto)
}
inline void GuildInfo::set_manifesto(const char* value) {
  set_has_manifesto();
  if (manifesto_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    manifesto_ = new ::std::string;
  }
  manifesto_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.GuildInfo.manifesto)
}
inline void GuildInfo::set_manifesto(const char* value, size_t size) {
  set_has_manifesto();
  if (manifesto_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    manifesto_ = new ::std::string;
  }
  manifesto_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.GuildInfo.manifesto)
}
inline ::std::string* GuildInfo::mutable_manifesto() {
  set_has_manifesto();
  if (manifesto_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    manifesto_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildInfo.manifesto)
  return manifesto_;
}
inline ::std::string* GuildInfo::release_manifesto() {
  clear_has_manifesto();
  if (manifesto_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = manifesto_;
    manifesto_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfo::set_allocated_manifesto(::std::string* manifesto) {
  if (manifesto_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete manifesto_;
  }
  if (manifesto) {
    set_has_manifesto();
    manifesto_ = manifesto;
  } else {
    clear_has_manifesto();
    manifesto_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GuildInfo.manifesto)
}

// required uint32 ritual = 11;
inline bool GuildInfo::has_ritual() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildInfo::set_has_ritual() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildInfo::clear_has_ritual() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildInfo::clear_ritual() {
  ritual_ = 0u;
  clear_has_ritual();
}
inline ::google::protobuf::uint32 GuildInfo::ritual() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.ritual)
  return ritual_;
}
inline void GuildInfo::set_ritual(::google::protobuf::uint32 value) {
  set_has_ritual();
  ritual_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.ritual)
}

// required uint32 technology_level = 12;
inline bool GuildInfo::has_technology_level() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildInfo::set_has_technology_level() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildInfo::clear_has_technology_level() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildInfo::clear_technology_level() {
  technology_level_ = 0u;
  clear_has_technology_level();
}
inline ::google::protobuf::uint32 GuildInfo::technology_level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.technology_level)
  return technology_level_;
}
inline void GuildInfo::set_technology_level(::google::protobuf::uint32 value) {
  set_has_technology_level();
  technology_level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.technology_level)
}

// required uint32 technology_exp = 13;
inline bool GuildInfo::has_technology_exp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildInfo::set_has_technology_exp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildInfo::clear_has_technology_exp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildInfo::clear_technology_exp() {
  technology_exp_ = 0u;
  clear_has_technology_exp();
}
inline ::google::protobuf::uint32 GuildInfo::technology_exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.technology_exp)
  return technology_exp_;
}
inline void GuildInfo::set_technology_exp(::google::protobuf::uint32 value) {
  set_has_technology_exp();
  technology_exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.technology_exp)
}

// repeated uint32 unlocked_skill = 14;
inline int GuildInfo::unlocked_skill_size() const {
  return unlocked_skill_.size();
}
inline void GuildInfo::clear_unlocked_skill() {
  unlocked_skill_.Clear();
}
inline ::google::protobuf::uint32 GuildInfo::unlocked_skill(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.unlocked_skill)
  return unlocked_skill_.Get(index);
}
inline void GuildInfo::set_unlocked_skill(int index, ::google::protobuf::uint32 value) {
  unlocked_skill_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.unlocked_skill)
}
inline void GuildInfo::add_unlocked_skill(::google::protobuf::uint32 value) {
  unlocked_skill_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildInfo.unlocked_skill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GuildInfo::unlocked_skill() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildInfo.unlocked_skill)
  return unlocked_skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GuildInfo::mutable_unlocked_skill() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildInfo.unlocked_skill)
  return &unlocked_skill_;
}

// optional string guildwar_enemy = 15;
inline bool GuildInfo::has_guildwar_enemy() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuildInfo::set_has_guildwar_enemy() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuildInfo::clear_has_guildwar_enemy() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuildInfo::clear_guildwar_enemy() {
  if (guildwar_enemy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildwar_enemy_->clear();
  }
  clear_has_guildwar_enemy();
}
inline const ::std::string& GuildInfo::guildwar_enemy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.guildwar_enemy)
  return *guildwar_enemy_;
}
inline void GuildInfo::set_guildwar_enemy(const ::std::string& value) {
  set_has_guildwar_enemy();
  if (guildwar_enemy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildwar_enemy_ = new ::std::string;
  }
  guildwar_enemy_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.guildwar_enemy)
}
inline void GuildInfo::set_guildwar_enemy(const char* value) {
  set_has_guildwar_enemy();
  if (guildwar_enemy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildwar_enemy_ = new ::std::string;
  }
  guildwar_enemy_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.GuildInfo.guildwar_enemy)
}
inline void GuildInfo::set_guildwar_enemy(const char* value, size_t size) {
  set_has_guildwar_enemy();
  if (guildwar_enemy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildwar_enemy_ = new ::std::string;
  }
  guildwar_enemy_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.GuildInfo.guildwar_enemy)
}
inline ::std::string* GuildInfo::mutable_guildwar_enemy() {
  set_has_guildwar_enemy();
  if (guildwar_enemy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guildwar_enemy_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildInfo.guildwar_enemy)
  return guildwar_enemy_;
}
inline ::std::string* GuildInfo::release_guildwar_enemy() {
  clear_has_guildwar_enemy();
  if (guildwar_enemy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guildwar_enemy_;
    guildwar_enemy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfo::set_allocated_guildwar_enemy(::std::string* guildwar_enemy) {
  if (guildwar_enemy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guildwar_enemy_;
  }
  if (guildwar_enemy) {
    set_has_guildwar_enemy();
    guildwar_enemy_ = guildwar_enemy;
  } else {
    clear_has_guildwar_enemy();
    guildwar_enemy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GuildInfo.guildwar_enemy)
}

// optional uint32 guildwar_enemy_exp = 16;
inline bool GuildInfo::has_guildwar_enemy_exp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildInfo::set_has_guildwar_enemy_exp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildInfo::clear_has_guildwar_enemy_exp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildInfo::clear_guildwar_enemy_exp() {
  guildwar_enemy_exp_ = 0u;
  clear_has_guildwar_enemy_exp();
}
inline ::google::protobuf::uint32 GuildInfo::guildwar_enemy_exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.guildwar_enemy_exp)
  return guildwar_enemy_exp_;
}
inline void GuildInfo::set_guildwar_enemy_exp(::google::protobuf::uint32 value) {
  set_has_guildwar_enemy_exp();
  guildwar_enemy_exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.guildwar_enemy_exp)
}

// optional uint32 city_level = 17;
inline bool GuildInfo::has_city_level() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuildInfo::set_has_city_level() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuildInfo::clear_has_city_level() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuildInfo::clear_city_level() {
  city_level_ = 0u;
  clear_has_city_level();
}
inline ::google::protobuf::uint32 GuildInfo::city_level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.city_level)
  return city_level_;
}
inline void GuildInfo::set_city_level(::google::protobuf::uint32 value) {
  set_has_city_level();
  city_level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.city_level)
}

// optional uint32 city_exp = 18;
inline bool GuildInfo::has_city_exp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GuildInfo::set_has_city_exp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GuildInfo::clear_has_city_exp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GuildInfo::clear_city_exp() {
  city_exp_ = 0u;
  clear_has_city_exp();
}
inline ::google::protobuf::uint32 GuildInfo::city_exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildInfo.city_exp)
  return city_exp_;
}
inline void GuildInfo::set_city_exp(::google::protobuf::uint32 value) {
  set_has_city_exp();
  city_exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildInfo.city_exp)
}

// -------------------------------------------------------------------

// ClientGuildInfo

// required .TgsProtocol.GuildInfo info = 1;
inline bool ClientGuildInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientGuildInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientGuildInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientGuildInfo::clear_info() {
  if (info_ != NULL) info_->::TgsProtocol::GuildInfo::Clear();
  clear_has_info();
}
inline const ::TgsProtocol::GuildInfo& ClientGuildInfo::info() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildInfo.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::TgsProtocol::GuildInfo* ClientGuildInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::TgsProtocol::GuildInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientGuildInfo.info)
  return info_;
}
inline ::TgsProtocol::GuildInfo* ClientGuildInfo::release_info() {
  clear_has_info();
  ::TgsProtocol::GuildInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void ClientGuildInfo::set_allocated_info(::TgsProtocol::GuildInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientGuildInfo.info)
}

// optional uint32 membernum = 2;
inline bool ClientGuildInfo::has_membernum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientGuildInfo::set_has_membernum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientGuildInfo::clear_has_membernum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientGuildInfo::clear_membernum() {
  membernum_ = 0u;
  clear_has_membernum();
}
inline ::google::protobuf::uint32 ClientGuildInfo::membernum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildInfo.membernum)
  return membernum_;
}
inline void ClientGuildInfo::set_membernum(::google::protobuf::uint32 value) {
  set_has_membernum();
  membernum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildInfo.membernum)
}

// optional uint32 membermax = 3;
inline bool ClientGuildInfo::has_membermax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientGuildInfo::set_has_membermax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientGuildInfo::clear_has_membermax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientGuildInfo::clear_membermax() {
  membermax_ = 0u;
  clear_has_membermax();
}
inline ::google::protobuf::uint32 ClientGuildInfo::membermax() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildInfo.membermax)
  return membermax_;
}
inline void ClientGuildInfo::set_membermax(::google::protobuf::uint32 value) {
  set_has_membermax();
  membermax_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildInfo.membermax)
}

// optional uint32 isapply = 4;
inline bool ClientGuildInfo::has_isapply() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientGuildInfo::set_has_isapply() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientGuildInfo::clear_has_isapply() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientGuildInfo::clear_isapply() {
  isapply_ = 0u;
  clear_has_isapply();
}
inline ::google::protobuf::uint32 ClientGuildInfo::isapply() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildInfo.isapply)
  return isapply_;
}
inline void ClientGuildInfo::set_isapply(::google::protobuf::uint32 value) {
  set_has_isapply();
  isapply_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildInfo.isapply)
}

// optional string leadername = 5;
inline bool ClientGuildInfo::has_leadername() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientGuildInfo::set_has_leadername() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientGuildInfo::clear_has_leadername() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientGuildInfo::clear_leadername() {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_->clear();
  }
  clear_has_leadername();
}
inline const ::std::string& ClientGuildInfo::leadername() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildInfo.leadername)
  return *leadername_;
}
inline void ClientGuildInfo::set_leadername(const ::std::string& value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildInfo.leadername)
}
inline void ClientGuildInfo::set_leadername(const char* value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientGuildInfo.leadername)
}
inline void ClientGuildInfo::set_leadername(const char* value, size_t size) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientGuildInfo.leadername)
}
inline ::std::string* ClientGuildInfo::mutable_leadername() {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    leadername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientGuildInfo.leadername)
  return leadername_;
}
inline ::std::string* ClientGuildInfo::release_leadername() {
  clear_has_leadername();
  if (leadername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = leadername_;
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientGuildInfo::set_allocated_leadername(::std::string* leadername) {
  if (leadername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete leadername_;
  }
  if (leadername) {
    set_has_leadername();
    leadername_ = leadername;
  } else {
    clear_has_leadername();
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientGuildInfo.leadername)
}

// optional uint32 myjob = 6;
inline bool ClientGuildInfo::has_myjob() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientGuildInfo::set_has_myjob() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientGuildInfo::clear_has_myjob() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientGuildInfo::clear_myjob() {
  myjob_ = 0u;
  clear_has_myjob();
}
inline ::google::protobuf::uint32 ClientGuildInfo::myjob() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildInfo.myjob)
  return myjob_;
}
inline void ClientGuildInfo::set_myjob(::google::protobuf::uint32 value) {
  set_has_myjob();
  myjob_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildInfo.myjob)
}

// -------------------------------------------------------------------

// ClientGuildMember

// required uint64 charid = 1;
inline bool ClientGuildMember::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientGuildMember::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientGuildMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientGuildMember::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ClientGuildMember::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.charid)
  return charid_;
}
inline void ClientGuildMember::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.charid)
}

// required string name = 2;
inline bool ClientGuildMember::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientGuildMember::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientGuildMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientGuildMember::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ClientGuildMember::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.name)
  return *name_;
}
inline void ClientGuildMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.name)
}
inline void ClientGuildMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientGuildMember.name)
}
inline void ClientGuildMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientGuildMember.name)
}
inline ::std::string* ClientGuildMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientGuildMember.name)
  return name_;
}
inline ::std::string* ClientGuildMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientGuildMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientGuildMember.name)
}

// required uint32 photo = 3;
inline bool ClientGuildMember::has_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientGuildMember::set_has_photo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientGuildMember::clear_has_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientGuildMember::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 ClientGuildMember::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.photo)
  return photo_;
}
inline void ClientGuildMember::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.photo)
}

// required uint32 level = 4;
inline bool ClientGuildMember::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientGuildMember::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientGuildMember::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientGuildMember::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ClientGuildMember::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.level)
  return level_;
}
inline void ClientGuildMember::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.level)
}

// required uint32 vip = 5;
inline bool ClientGuildMember::has_vip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientGuildMember::set_has_vip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientGuildMember::clear_has_vip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientGuildMember::clear_vip() {
  vip_ = 0u;
  clear_has_vip();
}
inline ::google::protobuf::uint32 ClientGuildMember::vip() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.vip)
  return vip_;
}
inline void ClientGuildMember::set_vip(::google::protobuf::uint32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.vip)
}

// required uint64 effect = 6;
inline bool ClientGuildMember::has_effect() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientGuildMember::set_has_effect() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientGuildMember::clear_has_effect() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientGuildMember::clear_effect() {
  effect_ = GOOGLE_ULONGLONG(0);
  clear_has_effect();
}
inline ::google::protobuf::uint64 ClientGuildMember::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.effect)
  return effect_;
}
inline void ClientGuildMember::set_effect(::google::protobuf::uint64 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.effect)
}

// optional uint32 online = 7;
inline bool ClientGuildMember::has_online() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientGuildMember::set_has_online() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientGuildMember::clear_has_online() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientGuildMember::clear_online() {
  online_ = 0u;
  clear_has_online();
}
inline ::google::protobuf::uint32 ClientGuildMember::online() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.online)
  return online_;
}
inline void ClientGuildMember::set_online(::google::protobuf::uint32 value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.online)
}

// optional uint32 arenarank = 8;
inline bool ClientGuildMember::has_arenarank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientGuildMember::set_has_arenarank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientGuildMember::clear_has_arenarank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientGuildMember::clear_arenarank() {
  arenarank_ = 0u;
  clear_has_arenarank();
}
inline ::google::protobuf::uint32 ClientGuildMember::arenarank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.arenarank)
  return arenarank_;
}
inline void ClientGuildMember::set_arenarank(::google::protobuf::uint32 value) {
  set_has_arenarank();
  arenarank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.arenarank)
}

// optional uint32 job = 9;
inline bool ClientGuildMember::has_job() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientGuildMember::set_has_job() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientGuildMember::clear_has_job() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientGuildMember::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 ClientGuildMember::job() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.job)
  return job_;
}
inline void ClientGuildMember::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.job)
}

// optional uint32 devote = 10;
inline bool ClientGuildMember::has_devote() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientGuildMember::set_has_devote() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientGuildMember::clear_has_devote() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientGuildMember::clear_devote() {
  devote_ = 0u;
  clear_has_devote();
}
inline ::google::protobuf::uint32 ClientGuildMember::devote() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.devote)
  return devote_;
}
inline void ClientGuildMember::set_devote(::google::protobuf::uint32 value) {
  set_has_devote();
  devote_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.devote)
}

// optional uint32 dailyDevote = 11;
inline bool ClientGuildMember::has_dailydevote() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientGuildMember::set_has_dailydevote() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientGuildMember::clear_has_dailydevote() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientGuildMember::clear_dailydevote() {
  dailydevote_ = 0u;
  clear_has_dailydevote();
}
inline ::google::protobuf::uint32 ClientGuildMember::dailydevote() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.dailyDevote)
  return dailydevote_;
}
inline void ClientGuildMember::set_dailydevote(::google::protobuf::uint32 value) {
  set_has_dailydevote();
  dailydevote_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.dailyDevote)
}

// optional .TgsProtocol.eGuildMemberType type = 12;
inline bool ClientGuildMember::has_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientGuildMember::set_has_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientGuildMember::clear_has_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientGuildMember::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::eGuildMemberType ClientGuildMember::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.type)
  return static_cast< ::TgsProtocol::eGuildMemberType >(type_);
}
inline void ClientGuildMember::set_type(::TgsProtocol::eGuildMemberType value) {
  assert(::TgsProtocol::eGuildMemberType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.type)
}

// optional uint32 nationalId = 13;
inline bool ClientGuildMember::has_nationalid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ClientGuildMember::set_has_nationalid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ClientGuildMember::clear_has_nationalid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ClientGuildMember::clear_nationalid() {
  nationalid_ = 0u;
  clear_has_nationalid();
}
inline ::google::protobuf::uint32 ClientGuildMember::nationalid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildMember.nationalId)
  return nationalid_;
}
inline void ClientGuildMember::set_nationalid(::google::protobuf::uint32 value) {
  set_has_nationalid();
  nationalid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildMember.nationalId)
}

// -------------------------------------------------------------------

// ClientGuildRitual

// required uint32 rate = 1;
inline bool ClientGuildRitual::has_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientGuildRitual::set_has_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientGuildRitual::clear_has_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientGuildRitual::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 ClientGuildRitual::rate() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildRitual.rate)
  return rate_;
}
inline void ClientGuildRitual::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildRitual.rate)
}

// optional uint32 ritual = 2;
inline bool ClientGuildRitual::has_ritual() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientGuildRitual::set_has_ritual() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientGuildRitual::clear_has_ritual() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientGuildRitual::clear_ritual() {
  ritual_ = 0u;
  clear_has_ritual();
}
inline ::google::protobuf::uint32 ClientGuildRitual::ritual() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildRitual.ritual)
  return ritual_;
}
inline void ClientGuildRitual::set_ritual(::google::protobuf::uint32 value) {
  set_has_ritual();
  ritual_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildRitual.ritual)
}

// optional uint32 days = 3;
inline bool ClientGuildRitual::has_days() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientGuildRitual::set_has_days() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientGuildRitual::clear_has_days() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientGuildRitual::clear_days() {
  days_ = 0u;
  clear_has_days();
}
inline ::google::protobuf::uint32 ClientGuildRitual::days() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildRitual.days)
  return days_;
}
inline void ClientGuildRitual::set_days(::google::protobuf::uint32 value) {
  set_has_days();
  days_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildRitual.days)
}

// optional uint32 rewardgot = 4;
inline bool ClientGuildRitual::has_rewardgot() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientGuildRitual::set_has_rewardgot() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientGuildRitual::clear_has_rewardgot() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientGuildRitual::clear_rewardgot() {
  rewardgot_ = 0u;
  clear_has_rewardgot();
}
inline ::google::protobuf::uint32 ClientGuildRitual::rewardgot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildRitual.rewardgot)
  return rewardgot_;
}
inline void ClientGuildRitual::set_rewardgot(::google::protobuf::uint32 value) {
  set_has_rewardgot();
  rewardgot_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildRitual.rewardgot)
}

// optional uint32 ratereward = 5;
inline bool ClientGuildRitual::has_ratereward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientGuildRitual::set_has_ratereward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientGuildRitual::clear_has_ratereward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientGuildRitual::clear_ratereward() {
  ratereward_ = 0u;
  clear_has_ratereward();
}
inline ::google::protobuf::uint32 ClientGuildRitual::ratereward() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildRitual.ratereward)
  return ratereward_;
}
inline void ClientGuildRitual::set_ratereward(::google::protobuf::uint32 value) {
  set_has_ratereward();
  ratereward_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildRitual.ratereward)
}

// optional uint32 guildlevel = 6;
inline bool ClientGuildRitual::has_guildlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientGuildRitual::set_has_guildlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientGuildRitual::clear_has_guildlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientGuildRitual::clear_guildlevel() {
  guildlevel_ = 0u;
  clear_has_guildlevel();
}
inline ::google::protobuf::uint32 ClientGuildRitual::guildlevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildRitual.guildlevel)
  return guildlevel_;
}
inline void ClientGuildRitual::set_guildlevel(::google::protobuf::uint32 value) {
  set_has_guildlevel();
  guildlevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildRitual.guildlevel)
}

// optional uint32 guildexp = 7;
inline bool ClientGuildRitual::has_guildexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientGuildRitual::set_has_guildexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientGuildRitual::clear_has_guildexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientGuildRitual::clear_guildexp() {
  guildexp_ = 0u;
  clear_has_guildexp();
}
inline ::google::protobuf::uint32 ClientGuildRitual::guildexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildRitual.guildexp)
  return guildexp_;
}
inline void ClientGuildRitual::set_guildexp(::google::protobuf::uint32 value) {
  set_has_guildexp();
  guildexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildRitual.guildexp)
}

// -------------------------------------------------------------------

// ClientGuildTechnology

// required uint32 technology_level = 1;
inline bool ClientGuildTechnology::has_technology_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientGuildTechnology::set_has_technology_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientGuildTechnology::clear_has_technology_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientGuildTechnology::clear_technology_level() {
  technology_level_ = 0u;
  clear_has_technology_level();
}
inline ::google::protobuf::uint32 ClientGuildTechnology::technology_level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildTechnology.technology_level)
  return technology_level_;
}
inline void ClientGuildTechnology::set_technology_level(::google::protobuf::uint32 value) {
  set_has_technology_level();
  technology_level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildTechnology.technology_level)
}

// required uint32 technology_exp = 2;
inline bool ClientGuildTechnology::has_technology_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientGuildTechnology::set_has_technology_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientGuildTechnology::clear_has_technology_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientGuildTechnology::clear_technology_exp() {
  technology_exp_ = 0u;
  clear_has_technology_exp();
}
inline ::google::protobuf::uint32 ClientGuildTechnology::technology_exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildTechnology.technology_exp)
  return technology_exp_;
}
inline void ClientGuildTechnology::set_technology_exp(::google::protobuf::uint32 value) {
  set_has_technology_exp();
  technology_exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildTechnology.technology_exp)
}

// repeated uint32 unlocked_skill = 3;
inline int ClientGuildTechnology::unlocked_skill_size() const {
  return unlocked_skill_.size();
}
inline void ClientGuildTechnology::clear_unlocked_skill() {
  unlocked_skill_.Clear();
}
inline ::google::protobuf::uint32 ClientGuildTechnology::unlocked_skill(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildTechnology.unlocked_skill)
  return unlocked_skill_.Get(index);
}
inline void ClientGuildTechnology::set_unlocked_skill(int index, ::google::protobuf::uint32 value) {
  unlocked_skill_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildTechnology.unlocked_skill)
}
inline void ClientGuildTechnology::add_unlocked_skill(::google::protobuf::uint32 value) {
  unlocked_skill_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientGuildTechnology.unlocked_skill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientGuildTechnology::unlocked_skill() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientGuildTechnology.unlocked_skill)
  return unlocked_skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientGuildTechnology::mutable_unlocked_skill() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientGuildTechnology.unlocked_skill)
  return &unlocked_skill_;
}

// -------------------------------------------------------------------

// ClientGuildState

// required uint32 job = 1;
inline bool ClientGuildState::has_job() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientGuildState::set_has_job() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientGuildState::clear_has_job() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientGuildState::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 ClientGuildState::job() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildState.job)
  return job_;
}
inline void ClientGuildState::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildState.job)
}

// required string name = 2;
inline bool ClientGuildState::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientGuildState::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientGuildState::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientGuildState::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ClientGuildState::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildState.name)
  return *name_;
}
inline void ClientGuildState::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildState.name)
}
inline void ClientGuildState::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientGuildState.name)
}
inline void ClientGuildState::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientGuildState.name)
}
inline ::std::string* ClientGuildState::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientGuildState.name)
  return name_;
}
inline ::std::string* ClientGuildState::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientGuildState::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientGuildState.name)
}

// required .TgsProtocol.eGuildStateType type = 3;
inline bool ClientGuildState::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientGuildState::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientGuildState::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientGuildState::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::eGuildStateType ClientGuildState::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildState.type)
  return static_cast< ::TgsProtocol::eGuildStateType >(type_);
}
inline void ClientGuildState::set_type(::TgsProtocol::eGuildStateType value) {
  assert(::TgsProtocol::eGuildStateType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildState.type)
}

// required uint32 value = 4;
inline bool ClientGuildState::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientGuildState::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientGuildState::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientGuildState::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ClientGuildState::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildState.value)
  return value_;
}
inline void ClientGuildState::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildState.value)
}

// optional string name2 = 5;
inline bool ClientGuildState::has_name2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientGuildState::set_has_name2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientGuildState::clear_has_name2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientGuildState::clear_name2() {
  if (name2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name2_->clear();
  }
  clear_has_name2();
}
inline const ::std::string& ClientGuildState::name2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildState.name2)
  return *name2_;
}
inline void ClientGuildState::set_name2(const ::std::string& value) {
  set_has_name2();
  if (name2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name2_ = new ::std::string;
  }
  name2_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildState.name2)
}
inline void ClientGuildState::set_name2(const char* value) {
  set_has_name2();
  if (name2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name2_ = new ::std::string;
  }
  name2_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientGuildState.name2)
}
inline void ClientGuildState::set_name2(const char* value, size_t size) {
  set_has_name2();
  if (name2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name2_ = new ::std::string;
  }
  name2_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientGuildState.name2)
}
inline ::std::string* ClientGuildState::mutable_name2() {
  set_has_name2();
  if (name2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name2_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientGuildState.name2)
  return name2_;
}
inline ::std::string* ClientGuildState::release_name2() {
  clear_has_name2();
  if (name2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name2_;
    name2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientGuildState::set_allocated_name2(::std::string* name2) {
  if (name2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name2_;
  }
  if (name2) {
    set_has_name2();
    name2_ = name2;
  } else {
    clear_has_name2();
    name2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientGuildState.name2)
}

// -------------------------------------------------------------------

// ClientGuildWarMsg

// required bool is_attack = 1;
inline bool ClientGuildWarMsg::has_is_attack() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientGuildWarMsg::set_has_is_attack() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientGuildWarMsg::clear_has_is_attack() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientGuildWarMsg::clear_is_attack() {
  is_attack_ = false;
  clear_has_is_attack();
}
inline bool ClientGuildWarMsg::is_attack() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.is_attack)
  return is_attack_;
}
inline void ClientGuildWarMsg::set_is_attack(bool value) {
  set_has_is_attack();
  is_attack_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.is_attack)
}

// required bool is_attacker_win = 2;
inline bool ClientGuildWarMsg::has_is_attacker_win() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientGuildWarMsg::set_has_is_attacker_win() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientGuildWarMsg::clear_has_is_attacker_win() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientGuildWarMsg::clear_is_attacker_win() {
  is_attacker_win_ = false;
  clear_has_is_attacker_win();
}
inline bool ClientGuildWarMsg::is_attacker_win() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.is_attacker_win)
  return is_attacker_win_;
}
inline void ClientGuildWarMsg::set_is_attacker_win(bool value) {
  set_has_is_attacker_win();
  is_attacker_win_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.is_attacker_win)
}

// required string attacker_name = 3;
inline bool ClientGuildWarMsg::has_attacker_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientGuildWarMsg::set_has_attacker_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientGuildWarMsg::clear_has_attacker_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientGuildWarMsg::clear_attacker_name() {
  if (attacker_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attacker_name_->clear();
  }
  clear_has_attacker_name();
}
inline const ::std::string& ClientGuildWarMsg::attacker_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.attacker_name)
  return *attacker_name_;
}
inline void ClientGuildWarMsg::set_attacker_name(const ::std::string& value) {
  set_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attacker_name_ = new ::std::string;
  }
  attacker_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.attacker_name)
}
inline void ClientGuildWarMsg::set_attacker_name(const char* value) {
  set_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attacker_name_ = new ::std::string;
  }
  attacker_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientGuildWarMsg.attacker_name)
}
inline void ClientGuildWarMsg::set_attacker_name(const char* value, size_t size) {
  set_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attacker_name_ = new ::std::string;
  }
  attacker_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientGuildWarMsg.attacker_name)
}
inline ::std::string* ClientGuildWarMsg::mutable_attacker_name() {
  set_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attacker_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientGuildWarMsg.attacker_name)
  return attacker_name_;
}
inline ::std::string* ClientGuildWarMsg::release_attacker_name() {
  clear_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attacker_name_;
    attacker_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientGuildWarMsg::set_allocated_attacker_name(::std::string* attacker_name) {
  if (attacker_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attacker_name_;
  }
  if (attacker_name) {
    set_has_attacker_name();
    attacker_name_ = attacker_name;
  } else {
    clear_has_attacker_name();
    attacker_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientGuildWarMsg.attacker_name)
}

// required uint32 attacker_star = 4;
inline bool ClientGuildWarMsg::has_attacker_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientGuildWarMsg::set_has_attacker_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientGuildWarMsg::clear_has_attacker_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientGuildWarMsg::clear_attacker_star() {
  attacker_star_ = 0u;
  clear_has_attacker_star();
}
inline ::google::protobuf::uint32 ClientGuildWarMsg::attacker_star() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.attacker_star)
  return attacker_star_;
}
inline void ClientGuildWarMsg::set_attacker_star(::google::protobuf::uint32 value) {
  set_has_attacker_star();
  attacker_star_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.attacker_star)
}

// required string defender_name = 5;
inline bool ClientGuildWarMsg::has_defender_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientGuildWarMsg::set_has_defender_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientGuildWarMsg::clear_has_defender_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientGuildWarMsg::clear_defender_name() {
  if (defender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defender_name_->clear();
  }
  clear_has_defender_name();
}
inline const ::std::string& ClientGuildWarMsg::defender_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.defender_name)
  return *defender_name_;
}
inline void ClientGuildWarMsg::set_defender_name(const ::std::string& value) {
  set_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defender_name_ = new ::std::string;
  }
  defender_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.defender_name)
}
inline void ClientGuildWarMsg::set_defender_name(const char* value) {
  set_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defender_name_ = new ::std::string;
  }
  defender_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientGuildWarMsg.defender_name)
}
inline void ClientGuildWarMsg::set_defender_name(const char* value, size_t size) {
  set_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defender_name_ = new ::std::string;
  }
  defender_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientGuildWarMsg.defender_name)
}
inline ::std::string* ClientGuildWarMsg::mutable_defender_name() {
  set_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defender_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientGuildWarMsg.defender_name)
  return defender_name_;
}
inline ::std::string* ClientGuildWarMsg::release_defender_name() {
  clear_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = defender_name_;
    defender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientGuildWarMsg::set_allocated_defender_name(::std::string* defender_name) {
  if (defender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete defender_name_;
  }
  if (defender_name) {
    set_has_defender_name();
    defender_name_ = defender_name;
  } else {
    clear_has_defender_name();
    defender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientGuildWarMsg.defender_name)
}

// required uint32 defender_star = 6;
inline bool ClientGuildWarMsg::has_defender_star() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientGuildWarMsg::set_has_defender_star() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientGuildWarMsg::clear_has_defender_star() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientGuildWarMsg::clear_defender_star() {
  defender_star_ = 0u;
  clear_has_defender_star();
}
inline ::google::protobuf::uint32 ClientGuildWarMsg::defender_star() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.defender_star)
  return defender_star_;
}
inline void ClientGuildWarMsg::set_defender_star(::google::protobuf::uint32 value) {
  set_has_defender_star();
  defender_star_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.defender_star)
}

// required string enemy_guild_name = 7;
inline bool ClientGuildWarMsg::has_enemy_guild_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientGuildWarMsg::set_has_enemy_guild_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientGuildWarMsg::clear_has_enemy_guild_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientGuildWarMsg::clear_enemy_guild_name() {
  if (enemy_guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_->clear();
  }
  clear_has_enemy_guild_name();
}
inline const ::std::string& ClientGuildWarMsg::enemy_guild_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.enemy_guild_name)
  return *enemy_guild_name_;
}
inline void ClientGuildWarMsg::set_enemy_guild_name(const ::std::string& value) {
  set_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_ = new ::std::string;
  }
  enemy_guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.enemy_guild_name)
}
inline void ClientGuildWarMsg::set_enemy_guild_name(const char* value) {
  set_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_ = new ::std::string;
  }
  enemy_guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientGuildWarMsg.enemy_guild_name)
}
inline void ClientGuildWarMsg::set_enemy_guild_name(const char* value, size_t size) {
  set_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_ = new ::std::string;
  }
  enemy_guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientGuildWarMsg.enemy_guild_name)
}
inline ::std::string* ClientGuildWarMsg::mutable_enemy_guild_name() {
  set_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientGuildWarMsg.enemy_guild_name)
  return enemy_guild_name_;
}
inline ::std::string* ClientGuildWarMsg::release_enemy_guild_name() {
  clear_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = enemy_guild_name_;
    enemy_guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientGuildWarMsg::set_allocated_enemy_guild_name(::std::string* enemy_guild_name) {
  if (enemy_guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete enemy_guild_name_;
  }
  if (enemy_guild_name) {
    set_has_enemy_guild_name();
    enemy_guild_name_ = enemy_guild_name;
  } else {
    clear_has_enemy_guild_name();
    enemy_guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientGuildWarMsg.enemy_guild_name)
}

// required uint32 exp = 8;
inline bool ClientGuildWarMsg::has_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientGuildWarMsg::set_has_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientGuildWarMsg::clear_has_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientGuildWarMsg::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 ClientGuildWarMsg::exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.exp)
  return exp_;
}
inline void ClientGuildWarMsg::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.exp)
}

// optional uint32 attacker_total = 9;
inline bool ClientGuildWarMsg::has_attacker_total() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientGuildWarMsg::set_has_attacker_total() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientGuildWarMsg::clear_has_attacker_total() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientGuildWarMsg::clear_attacker_total() {
  attacker_total_ = 0u;
  clear_has_attacker_total();
}
inline ::google::protobuf::uint32 ClientGuildWarMsg::attacker_total() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.attacker_total)
  return attacker_total_;
}
inline void ClientGuildWarMsg::set_attacker_total(::google::protobuf::uint32 value) {
  set_has_attacker_total();
  attacker_total_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.attacker_total)
}

// optional uint32 attacker_win = 10;
inline bool ClientGuildWarMsg::has_attacker_win() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientGuildWarMsg::set_has_attacker_win() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientGuildWarMsg::clear_has_attacker_win() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientGuildWarMsg::clear_attacker_win() {
  attacker_win_ = 0u;
  clear_has_attacker_win();
}
inline ::google::protobuf::uint32 ClientGuildWarMsg::attacker_win() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.attacker_win)
  return attacker_win_;
}
inline void ClientGuildWarMsg::set_attacker_win(::google::protobuf::uint32 value) {
  set_has_attacker_win();
  attacker_win_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.attacker_win)
}

// optional uint32 total_exp = 11;
inline bool ClientGuildWarMsg::has_total_exp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientGuildWarMsg::set_has_total_exp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientGuildWarMsg::clear_has_total_exp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientGuildWarMsg::clear_total_exp() {
  total_exp_ = 0u;
  clear_has_total_exp();
}
inline ::google::protobuf::uint32 ClientGuildWarMsg::total_exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarMsg.total_exp)
  return total_exp_;
}
inline void ClientGuildWarMsg::set_total_exp(::google::protobuf::uint32 value) {
  set_has_total_exp();
  total_exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarMsg.total_exp)
}

// -------------------------------------------------------------------

// ClientGuildWarEndMsg

// required bool is_attack = 1;
inline bool ClientGuildWarEndMsg::has_is_attack() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientGuildWarEndMsg::set_has_is_attack() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientGuildWarEndMsg::clear_has_is_attack() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientGuildWarEndMsg::clear_is_attack() {
  is_attack_ = false;
  clear_has_is_attack();
}
inline bool ClientGuildWarEndMsg::is_attack() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarEndMsg.is_attack)
  return is_attack_;
}
inline void ClientGuildWarEndMsg::set_is_attack(bool value) {
  set_has_is_attack();
  is_attack_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarEndMsg.is_attack)
}

// required string enemy_guild_name = 2;
inline bool ClientGuildWarEndMsg::has_enemy_guild_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientGuildWarEndMsg::set_has_enemy_guild_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientGuildWarEndMsg::clear_has_enemy_guild_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientGuildWarEndMsg::clear_enemy_guild_name() {
  if (enemy_guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_->clear();
  }
  clear_has_enemy_guild_name();
}
inline const ::std::string& ClientGuildWarEndMsg::enemy_guild_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarEndMsg.enemy_guild_name)
  return *enemy_guild_name_;
}
inline void ClientGuildWarEndMsg::set_enemy_guild_name(const ::std::string& value) {
  set_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_ = new ::std::string;
  }
  enemy_guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarEndMsg.enemy_guild_name)
}
inline void ClientGuildWarEndMsg::set_enemy_guild_name(const char* value) {
  set_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_ = new ::std::string;
  }
  enemy_guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientGuildWarEndMsg.enemy_guild_name)
}
inline void ClientGuildWarEndMsg::set_enemy_guild_name(const char* value, size_t size) {
  set_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_ = new ::std::string;
  }
  enemy_guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientGuildWarEndMsg.enemy_guild_name)
}
inline ::std::string* ClientGuildWarEndMsg::mutable_enemy_guild_name() {
  set_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemy_guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientGuildWarEndMsg.enemy_guild_name)
  return enemy_guild_name_;
}
inline ::std::string* ClientGuildWarEndMsg::release_enemy_guild_name() {
  clear_has_enemy_guild_name();
  if (enemy_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = enemy_guild_name_;
    enemy_guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientGuildWarEndMsg::set_allocated_enemy_guild_name(::std::string* enemy_guild_name) {
  if (enemy_guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete enemy_guild_name_;
  }
  if (enemy_guild_name) {
    set_has_enemy_guild_name();
    enemy_guild_name_ = enemy_guild_name;
  } else {
    clear_has_enemy_guild_name();
    enemy_guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientGuildWarEndMsg.enemy_guild_name)
}

// required uint32 exp = 3;
inline bool ClientGuildWarEndMsg::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientGuildWarEndMsg::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientGuildWarEndMsg::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientGuildWarEndMsg::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 ClientGuildWarEndMsg::exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarEndMsg.exp)
  return exp_;
}
inline void ClientGuildWarEndMsg::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarEndMsg.exp)
}

// required uint32 attack_total = 4;
inline bool ClientGuildWarEndMsg::has_attack_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientGuildWarEndMsg::set_has_attack_total() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientGuildWarEndMsg::clear_has_attack_total() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientGuildWarEndMsg::clear_attack_total() {
  attack_total_ = 0u;
  clear_has_attack_total();
}
inline ::google::protobuf::uint32 ClientGuildWarEndMsg::attack_total() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarEndMsg.attack_total)
  return attack_total_;
}
inline void ClientGuildWarEndMsg::set_attack_total(::google::protobuf::uint32 value) {
  set_has_attack_total();
  attack_total_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarEndMsg.attack_total)
}

// required uint32 attack_win = 5;
inline bool ClientGuildWarEndMsg::has_attack_win() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientGuildWarEndMsg::set_has_attack_win() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientGuildWarEndMsg::clear_has_attack_win() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientGuildWarEndMsg::clear_attack_win() {
  attack_win_ = 0u;
  clear_has_attack_win();
}
inline ::google::protobuf::uint32 ClientGuildWarEndMsg::attack_win() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientGuildWarEndMsg.attack_win)
  return attack_win_;
}
inline void ClientGuildWarEndMsg::set_attack_win(::google::protobuf::uint32 value) {
  set_has_attack_win();
  attack_win_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientGuildWarEndMsg.attack_win)
}

// -------------------------------------------------------------------

// MonthCardEle

// required uint32 index = 1;
inline bool MonthCardEle::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthCardEle::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthCardEle::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthCardEle::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 MonthCardEle::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.MonthCardEle.index)
  return index_;
}
inline void MonthCardEle::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.MonthCardEle.index)
}

// required uint32 count = 2;
inline bool MonthCardEle::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonthCardEle::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonthCardEle::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonthCardEle::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 MonthCardEle::count() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.MonthCardEle.count)
  return count_;
}
inline void MonthCardEle::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.MonthCardEle.count)
}

// required uint32 startTime = 3;
inline bool MonthCardEle::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonthCardEle::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonthCardEle::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonthCardEle::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 MonthCardEle::starttime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.MonthCardEle.startTime)
  return starttime_;
}
inline void MonthCardEle::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.MonthCardEle.startTime)
}

// required uint32 repeat = 4;
inline bool MonthCardEle::has_repeat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MonthCardEle::set_has_repeat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MonthCardEle::clear_has_repeat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MonthCardEle::clear_repeat() {
  repeat_ = 0u;
  clear_has_repeat();
}
inline ::google::protobuf::uint32 MonthCardEle::repeat() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.MonthCardEle.repeat)
  return repeat_;
}
inline void MonthCardEle::set_repeat(::google::protobuf::uint32 value) {
  set_has_repeat();
  repeat_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.MonthCardEle.repeat)
}

// -------------------------------------------------------------------

// DbMonthCard

// repeated .TgsProtocol.MonthCardEle card = 1;
inline int DbMonthCard::card_size() const {
  return card_.size();
}
inline void DbMonthCard::clear_card() {
  card_.Clear();
}
inline const ::TgsProtocol::MonthCardEle& DbMonthCard::card(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbMonthCard.card)
  return card_.Get(index);
}
inline ::TgsProtocol::MonthCardEle* DbMonthCard::mutable_card(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbMonthCard.card)
  return card_.Mutable(index);
}
inline ::TgsProtocol::MonthCardEle* DbMonthCard::add_card() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DbMonthCard.card)
  return card_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::MonthCardEle >&
DbMonthCard::card() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbMonthCard.card)
  return card_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::MonthCardEle >*
DbMonthCard::mutable_card() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbMonthCard.card)
  return &card_;
}

// -------------------------------------------------------------------

// PrizeInfo

// required int32 type = 1;
inline bool PrizeInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrizeInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrizeInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrizeInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PrizeInfo::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PrizeInfo.type)
  return type_;
}
inline void PrizeInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PrizeInfo.type)
}

// required int32 got = 2;
inline bool PrizeInfo::has_got() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrizeInfo::set_has_got() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrizeInfo::clear_has_got() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrizeInfo::clear_got() {
  got_ = 0;
  clear_has_got();
}
inline ::google::protobuf::int32 PrizeInfo::got() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PrizeInfo.got)
  return got_;
}
inline void PrizeInfo::set_got(::google::protobuf::int32 value) {
  set_has_got();
  got_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PrizeInfo.got)
}

// required int32 value = 3;
inline bool PrizeInfo::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PrizeInfo::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PrizeInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PrizeInfo::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 PrizeInfo::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PrizeInfo.value)
  return value_;
}
inline void PrizeInfo::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PrizeInfo.value)
}

// optional uint32 reset = 4;
inline bool PrizeInfo::has_reset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PrizeInfo::set_has_reset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PrizeInfo::clear_has_reset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PrizeInfo::clear_reset() {
  reset_ = 0u;
  clear_has_reset();
}
inline ::google::protobuf::uint32 PrizeInfo::reset() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PrizeInfo.reset)
  return reset_;
}
inline void PrizeInfo::set_reset(::google::protobuf::uint32 value) {
  set_has_reset();
  reset_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PrizeInfo.reset)
}

// -------------------------------------------------------------------

// PrizeInfoList

// repeated .TgsProtocol.PrizeInfo item = 1;
inline int PrizeInfoList::item_size() const {
  return item_.size();
}
inline void PrizeInfoList::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::PrizeInfo& PrizeInfoList::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PrizeInfoList.item)
  return item_.Get(index);
}
inline ::TgsProtocol::PrizeInfo* PrizeInfoList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PrizeInfoList.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::PrizeInfo* PrizeInfoList::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.PrizeInfoList.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PrizeInfo >&
PrizeInfoList::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.PrizeInfoList.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PrizeInfo >*
PrizeInfoList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.PrizeInfoList.item)
  return &item_;
}

// -------------------------------------------------------------------

// GuildMapInfo

// required uint32 passed_chapterid = 1;
inline bool GuildMapInfo::has_passed_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMapInfo::set_has_passed_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMapInfo::clear_has_passed_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMapInfo::clear_passed_chapterid() {
  passed_chapterid_ = 0u;
  clear_has_passed_chapterid();
}
inline ::google::protobuf::uint32 GuildMapInfo::passed_chapterid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapInfo.passed_chapterid)
  return passed_chapterid_;
}
inline void GuildMapInfo::set_passed_chapterid(::google::protobuf::uint32 value) {
  set_has_passed_chapterid();
  passed_chapterid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapInfo.passed_chapterid)
}

// required uint32 select_chapterid = 2;
inline bool GuildMapInfo::has_select_chapterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMapInfo::set_has_select_chapterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMapInfo::clear_has_select_chapterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMapInfo::clear_select_chapterid() {
  select_chapterid_ = 0u;
  clear_has_select_chapterid();
}
inline ::google::protobuf::uint32 GuildMapInfo::select_chapterid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapInfo.select_chapterid)
  return select_chapterid_;
}
inline void GuildMapInfo::set_select_chapterid(::google::protobuf::uint32 value) {
  set_has_select_chapterid();
  select_chapterid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapInfo.select_chapterid)
}

// optional uint32 map_id = 3;
inline bool GuildMapInfo::has_map_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMapInfo::set_has_map_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMapInfo::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMapInfo::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 GuildMapInfo::map_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapInfo.map_id)
  return map_id_;
}
inline void GuildMapInfo::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapInfo.map_id)
}

// optional bool is_map_pass = 4;
inline bool GuildMapInfo::has_is_map_pass() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMapInfo::set_has_is_map_pass() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMapInfo::clear_has_is_map_pass() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMapInfo::clear_is_map_pass() {
  is_map_pass_ = false;
  clear_has_is_map_pass();
}
inline bool GuildMapInfo::is_map_pass() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapInfo.is_map_pass)
  return is_map_pass_;
}
inline void GuildMapInfo::set_is_map_pass(bool value) {
  set_has_is_map_pass();
  is_map_pass_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapInfo.is_map_pass)
}

// optional uint32 pass_time = 5;
inline bool GuildMapInfo::has_pass_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMapInfo::set_has_pass_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMapInfo::clear_has_pass_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMapInfo::clear_pass_time() {
  pass_time_ = 0u;
  clear_has_pass_time();
}
inline ::google::protobuf::uint32 GuildMapInfo::pass_time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapInfo.pass_time)
  return pass_time_;
}
inline void GuildMapInfo::set_pass_time(::google::protobuf::uint32 value) {
  set_has_pass_time();
  pass_time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapInfo.pass_time)
}

// -------------------------------------------------------------------

// GuildMapMonster

// required uint32 monster_id = 1;
inline bool GuildMapMonster::has_monster_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMapMonster::set_has_monster_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMapMonster::clear_has_monster_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMapMonster::clear_monster_id() {
  monster_id_ = 0u;
  clear_has_monster_id();
}
inline ::google::protobuf::uint32 GuildMapMonster::monster_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapMonster.monster_id)
  return monster_id_;
}
inline void GuildMapMonster::set_monster_id(::google::protobuf::uint32 value) {
  set_has_monster_id();
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapMonster.monster_id)
}

// required uint32 hp_per = 2;
inline bool GuildMapMonster::has_hp_per() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMapMonster::set_has_hp_per() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMapMonster::clear_has_hp_per() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMapMonster::clear_hp_per() {
  hp_per_ = 0u;
  clear_has_hp_per();
}
inline ::google::protobuf::uint32 GuildMapMonster::hp_per() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapMonster.hp_per)
  return hp_per_;
}
inline void GuildMapMonster::set_hp_per(::google::protobuf::uint32 value) {
  set_has_hp_per();
  hp_per_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapMonster.hp_per)
}

// optional uint32 hp_max = 3;
inline bool GuildMapMonster::has_hp_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMapMonster::set_has_hp_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMapMonster::clear_has_hp_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMapMonster::clear_hp_max() {
  hp_max_ = 0u;
  clear_has_hp_max();
}
inline ::google::protobuf::uint32 GuildMapMonster::hp_max() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapMonster.hp_max)
  return hp_max_;
}
inline void GuildMapMonster::set_hp_max(::google::protobuf::uint32 value) {
  set_has_hp_max();
  hp_max_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapMonster.hp_max)
}

// -------------------------------------------------------------------

// GuildMapItem

// optional .TgsProtocol.ClientSource source = 1;
inline bool GuildMapItem::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMapItem::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMapItem::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMapItem::clear_source() {
  if (source_ != NULL) source_->::TgsProtocol::ClientSource::Clear();
  clear_has_source();
}
inline const ::TgsProtocol::ClientSource& GuildMapItem::source() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapItem.source)
  return source_ != NULL ? *source_ : *default_instance_->source_;
}
inline ::TgsProtocol::ClientSource* GuildMapItem::mutable_source() {
  set_has_source();
  if (source_ == NULL) source_ = new ::TgsProtocol::ClientSource;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildMapItem.source)
  return source_;
}
inline ::TgsProtocol::ClientSource* GuildMapItem::release_source() {
  clear_has_source();
  ::TgsProtocol::ClientSource* temp = source_;
  source_ = NULL;
  return temp;
}
inline void GuildMapItem::set_allocated_source(::TgsProtocol::ClientSource* source) {
  delete source_;
  source_ = source;
  if (source) {
    set_has_source();
  } else {
    clear_has_source();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GuildMapItem.source)
}

// optional uint64 charid = 2;
inline bool GuildMapItem::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMapItem::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMapItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMapItem::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildMapItem::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapItem.charid)
  return charid_;
}
inline void GuildMapItem::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapItem.charid)
}

// optional string name = 3;
inline bool GuildMapItem::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMapItem::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMapItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMapItem::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildMapItem::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapItem.name)
  return *name_;
}
inline void GuildMapItem::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapItem.name)
}
inline void GuildMapItem::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.GuildMapItem.name)
}
inline void GuildMapItem::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.GuildMapItem.name)
}
inline ::std::string* GuildMapItem::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildMapItem.name)
  return name_;
}
inline ::std::string* GuildMapItem::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildMapItem::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GuildMapItem.name)
}

// optional uint32 photo = 4;
inline bool GuildMapItem::has_photo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMapItem::set_has_photo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMapItem::clear_has_photo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMapItem::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 GuildMapItem::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapItem.photo)
  return photo_;
}
inline void GuildMapItem::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapItem.photo)
}

// -------------------------------------------------------------------

// GuildMapReward

// required uint32 map_id = 1;
inline bool GuildMapReward::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMapReward::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMapReward::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMapReward::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 GuildMapReward::map_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapReward.map_id)
  return map_id_;
}
inline void GuildMapReward::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMapReward.map_id)
}

// repeated .TgsProtocol.GuildMapItem item = 2;
inline int GuildMapReward::item_size() const {
  return item_.size();
}
inline void GuildMapReward::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::GuildMapItem& GuildMapReward::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMapReward.item)
  return item_.Get(index);
}
inline ::TgsProtocol::GuildMapItem* GuildMapReward::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildMapReward.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::GuildMapItem* GuildMapReward::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildMapReward.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >&
GuildMapReward::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildMapReward.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >*
GuildMapReward::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildMapReward.item)
  return &item_;
}

// -------------------------------------------------------------------

// DBGuildMap

// optional .TgsProtocol.GuildMapInfo info = 1;
inline bool DBGuildMap::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBGuildMap::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBGuildMap::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBGuildMap::clear_info() {
  if (info_ != NULL) info_->::TgsProtocol::GuildMapInfo::Clear();
  clear_has_info();
}
inline const ::TgsProtocol::GuildMapInfo& DBGuildMap::info() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildMap.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::TgsProtocol::GuildMapInfo* DBGuildMap::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::TgsProtocol::GuildMapInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBGuildMap.info)
  return info_;
}
inline ::TgsProtocol::GuildMapInfo* DBGuildMap::release_info() {
  clear_has_info();
  ::TgsProtocol::GuildMapInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DBGuildMap::set_allocated_info(::TgsProtocol::GuildMapInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBGuildMap.info)
}

// repeated .TgsProtocol.GuildMapMonster monster = 2;
inline int DBGuildMap::monster_size() const {
  return monster_.size();
}
inline void DBGuildMap::clear_monster() {
  monster_.Clear();
}
inline const ::TgsProtocol::GuildMapMonster& DBGuildMap::monster(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildMap.monster)
  return monster_.Get(index);
}
inline ::TgsProtocol::GuildMapMonster* DBGuildMap::mutable_monster(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBGuildMap.monster)
  return monster_.Mutable(index);
}
inline ::TgsProtocol::GuildMapMonster* DBGuildMap::add_monster() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBGuildMap.monster)
  return monster_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster >&
DBGuildMap::monster() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBGuildMap.monster)
  return monster_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster >*
DBGuildMap::mutable_monster() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBGuildMap.monster)
  return &monster_;
}

// repeated .TgsProtocol.GuildMapItem item = 3;
inline int DBGuildMap::item_size() const {
  return item_.size();
}
inline void DBGuildMap::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::GuildMapItem& DBGuildMap::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildMap.item)
  return item_.Get(index);
}
inline ::TgsProtocol::GuildMapItem* DBGuildMap::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBGuildMap.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::GuildMapItem* DBGuildMap::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBGuildMap.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >&
DBGuildMap::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBGuildMap.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >*
DBGuildMap::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBGuildMap.item)
  return &item_;
}

// -------------------------------------------------------------------

// GuildNewMapInfo

// required uint32 map_id = 1;
inline bool GuildNewMapInfo::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildNewMapInfo::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildNewMapInfo::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildNewMapInfo::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 GuildNewMapInfo::map_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildNewMapInfo.map_id)
  return map_id_;
}
inline void GuildNewMapInfo::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildNewMapInfo.map_id)
}

// optional uint32 pass_time = 2;
inline bool GuildNewMapInfo::has_pass_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildNewMapInfo::set_has_pass_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildNewMapInfo::clear_has_pass_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildNewMapInfo::clear_pass_time() {
  pass_time_ = 0u;
  clear_has_pass_time();
}
inline ::google::protobuf::uint32 GuildNewMapInfo::pass_time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildNewMapInfo.pass_time)
  return pass_time_;
}
inline void GuildNewMapInfo::set_pass_time(::google::protobuf::uint32 value) {
  set_has_pass_time();
  pass_time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildNewMapInfo.pass_time)
}

// repeated .TgsProtocol.GuildMapMonster monster = 3;
inline int GuildNewMapInfo::monster_size() const {
  return monster_.size();
}
inline void GuildNewMapInfo::clear_monster() {
  monster_.Clear();
}
inline const ::TgsProtocol::GuildMapMonster& GuildNewMapInfo::monster(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildNewMapInfo.monster)
  return monster_.Get(index);
}
inline ::TgsProtocol::GuildMapMonster* GuildNewMapInfo::mutable_monster(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildNewMapInfo.monster)
  return monster_.Mutable(index);
}
inline ::TgsProtocol::GuildMapMonster* GuildNewMapInfo::add_monster() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildNewMapInfo.monster)
  return monster_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster >&
GuildNewMapInfo::monster() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildNewMapInfo.monster)
  return monster_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapMonster >*
GuildNewMapInfo::mutable_monster() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildNewMapInfo.monster)
  return &monster_;
}

// repeated .TgsProtocol.GuildMapItem item = 4;
inline int GuildNewMapInfo::item_size() const {
  return item_.size();
}
inline void GuildNewMapInfo::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::GuildMapItem& GuildNewMapInfo::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildNewMapInfo.item)
  return item_.Get(index);
}
inline ::TgsProtocol::GuildMapItem* GuildNewMapInfo::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildNewMapInfo.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::GuildMapItem* GuildNewMapInfo::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildNewMapInfo.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >&
GuildNewMapInfo::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildNewMapInfo.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildMapItem >*
GuildNewMapInfo::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildNewMapInfo.item)
  return &item_;
}

// optional string pass_name = 5;
inline bool GuildNewMapInfo::has_pass_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildNewMapInfo::set_has_pass_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildNewMapInfo::clear_has_pass_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildNewMapInfo::clear_pass_name() {
  if (pass_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_name_->clear();
  }
  clear_has_pass_name();
}
inline const ::std::string& GuildNewMapInfo::pass_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildNewMapInfo.pass_name)
  return *pass_name_;
}
inline void GuildNewMapInfo::set_pass_name(const ::std::string& value) {
  set_has_pass_name();
  if (pass_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_name_ = new ::std::string;
  }
  pass_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildNewMapInfo.pass_name)
}
inline void GuildNewMapInfo::set_pass_name(const char* value) {
  set_has_pass_name();
  if (pass_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_name_ = new ::std::string;
  }
  pass_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.GuildNewMapInfo.pass_name)
}
inline void GuildNewMapInfo::set_pass_name(const char* value, size_t size) {
  set_has_pass_name();
  if (pass_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_name_ = new ::std::string;
  }
  pass_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.GuildNewMapInfo.pass_name)
}
inline ::std::string* GuildNewMapInfo::mutable_pass_name() {
  set_has_pass_name();
  if (pass_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pass_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildNewMapInfo.pass_name)
  return pass_name_;
}
inline ::std::string* GuildNewMapInfo::release_pass_name() {
  clear_has_pass_name();
  if (pass_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pass_name_;
    pass_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildNewMapInfo::set_allocated_pass_name(::std::string* pass_name) {
  if (pass_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pass_name_;
  }
  if (pass_name) {
    set_has_pass_name();
    pass_name_ = pass_name;
  } else {
    clear_has_pass_name();
    pass_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GuildNewMapInfo.pass_name)
}

// -------------------------------------------------------------------

// GuildChapterMap

// required uint32 chapter_id = 1;
inline bool GuildChapterMap::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildChapterMap::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildChapterMap::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildChapterMap::clear_chapter_id() {
  chapter_id_ = 0u;
  clear_has_chapter_id();
}
inline ::google::protobuf::uint32 GuildChapterMap::chapter_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildChapterMap.chapter_id)
  return chapter_id_;
}
inline void GuildChapterMap::set_chapter_id(::google::protobuf::uint32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildChapterMap.chapter_id)
}

// repeated .TgsProtocol.GuildNewMapInfo map_item = 2;
inline int GuildChapterMap::map_item_size() const {
  return map_item_.size();
}
inline void GuildChapterMap::clear_map_item() {
  map_item_.Clear();
}
inline const ::TgsProtocol::GuildNewMapInfo& GuildChapterMap::map_item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildChapterMap.map_item)
  return map_item_.Get(index);
}
inline ::TgsProtocol::GuildNewMapInfo* GuildChapterMap::mutable_map_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildChapterMap.map_item)
  return map_item_.Mutable(index);
}
inline ::TgsProtocol::GuildNewMapInfo* GuildChapterMap::add_map_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildChapterMap.map_item)
  return map_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildNewMapInfo >&
GuildChapterMap::map_item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildChapterMap.map_item)
  return map_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildNewMapInfo >*
GuildChapterMap::mutable_map_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildChapterMap.map_item)
  return &map_item_;
}

// repeated uint64 attack_player = 3;
inline int GuildChapterMap::attack_player_size() const {
  return attack_player_.size();
}
inline void GuildChapterMap::clear_attack_player() {
  attack_player_.Clear();
}
inline ::google::protobuf::uint64 GuildChapterMap::attack_player(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildChapterMap.attack_player)
  return attack_player_.Get(index);
}
inline void GuildChapterMap::set_attack_player(int index, ::google::protobuf::uint64 value) {
  attack_player_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildChapterMap.attack_player)
}
inline void GuildChapterMap::add_attack_player(::google::protobuf::uint64 value) {
  attack_player_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildChapterMap.attack_player)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GuildChapterMap::attack_player() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildChapterMap.attack_player)
  return attack_player_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GuildChapterMap::mutable_attack_player() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildChapterMap.attack_player)
  return &attack_player_;
}

// optional bool self_attacked = 4;
inline bool GuildChapterMap::has_self_attacked() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildChapterMap::set_has_self_attacked() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildChapterMap::clear_has_self_attacked() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildChapterMap::clear_self_attacked() {
  self_attacked_ = false;
  clear_has_self_attacked();
}
inline bool GuildChapterMap::self_attacked() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildChapterMap.self_attacked)
  return self_attacked_;
}
inline void GuildChapterMap::set_self_attacked(bool value) {
  set_has_self_attacked();
  self_attacked_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildChapterMap.self_attacked)
}

// -------------------------------------------------------------------

// GuildChapterInfo

// required uint32 passed_chapterid = 1;
inline bool GuildChapterInfo::has_passed_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildChapterInfo::set_has_passed_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildChapterInfo::clear_has_passed_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildChapterInfo::clear_passed_chapterid() {
  passed_chapterid_ = 0u;
  clear_has_passed_chapterid();
}
inline ::google::protobuf::uint32 GuildChapterInfo::passed_chapterid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildChapterInfo.passed_chapterid)
  return passed_chapterid_;
}
inline void GuildChapterInfo::set_passed_chapterid(::google::protobuf::uint32 value) {
  set_has_passed_chapterid();
  passed_chapterid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildChapterInfo.passed_chapterid)
}

// optional bool chapter_back = 2;
inline bool GuildChapterInfo::has_chapter_back() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildChapterInfo::set_has_chapter_back() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildChapterInfo::clear_has_chapter_back() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildChapterInfo::clear_chapter_back() {
  chapter_back_ = false;
  clear_has_chapter_back();
}
inline bool GuildChapterInfo::chapter_back() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildChapterInfo.chapter_back)
  return chapter_back_;
}
inline void GuildChapterInfo::set_chapter_back(bool value) {
  set_has_chapter_back();
  chapter_back_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildChapterInfo.chapter_back)
}

// repeated .TgsProtocol.GuildChapterMap chapter_item = 3;
inline int GuildChapterInfo::chapter_item_size() const {
  return chapter_item_.size();
}
inline void GuildChapterInfo::clear_chapter_item() {
  chapter_item_.Clear();
}
inline const ::TgsProtocol::GuildChapterMap& GuildChapterInfo::chapter_item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildChapterInfo.chapter_item)
  return chapter_item_.Get(index);
}
inline ::TgsProtocol::GuildChapterMap* GuildChapterInfo::mutable_chapter_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildChapterInfo.chapter_item)
  return chapter_item_.Mutable(index);
}
inline ::TgsProtocol::GuildChapterMap* GuildChapterInfo::add_chapter_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildChapterInfo.chapter_item)
  return chapter_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildChapterMap >&
GuildChapterInfo::chapter_item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildChapterInfo.chapter_item)
  return chapter_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildChapterMap >*
GuildChapterInfo::mutable_chapter_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildChapterInfo.chapter_item)
  return &chapter_item_;
}

// optional uint32 attack_chapterid = 4;
inline bool GuildChapterInfo::has_attack_chapterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildChapterInfo::set_has_attack_chapterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildChapterInfo::clear_has_attack_chapterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildChapterInfo::clear_attack_chapterid() {
  attack_chapterid_ = 0u;
  clear_has_attack_chapterid();
}
inline ::google::protobuf::uint32 GuildChapterInfo::attack_chapterid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildChapterInfo.attack_chapterid)
  return attack_chapterid_;
}
inline void GuildChapterInfo::set_attack_chapterid(::google::protobuf::uint32 value) {
  set_has_attack_chapterid();
  attack_chapterid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildChapterInfo.attack_chapterid)
}

// -------------------------------------------------------------------

// GuildTerritoryEvent

// required uint32 id = 1;
inline bool GuildTerritoryEvent::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildTerritoryEvent::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildTerritoryEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildTerritoryEvent::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GuildTerritoryEvent::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryEvent.id)
  return id_;
}
inline void GuildTerritoryEvent::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryEvent.id)
}

// required .TgsProtocol.GuildTerritoryEventType type = 2;
inline bool GuildTerritoryEvent::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildTerritoryEvent::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildTerritoryEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildTerritoryEvent::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::GuildTerritoryEventType GuildTerritoryEvent::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryEvent.type)
  return static_cast< ::TgsProtocol::GuildTerritoryEventType >(type_);
}
inline void GuildTerritoryEvent::set_type(::TgsProtocol::GuildTerritoryEventType value) {
  assert(::TgsProtocol::GuildTerritoryEventType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryEvent.type)
}

// repeated .TgsProtocol.ClientSource sources = 3;
inline int GuildTerritoryEvent::sources_size() const {
  return sources_.size();
}
inline void GuildTerritoryEvent::clear_sources() {
  sources_.Clear();
}
inline const ::TgsProtocol::ClientSource& GuildTerritoryEvent::sources(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryEvent.sources)
  return sources_.Get(index);
}
inline ::TgsProtocol::ClientSource* GuildTerritoryEvent::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildTerritoryEvent.sources)
  return sources_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* GuildTerritoryEvent::add_sources() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildTerritoryEvent.sources)
  return sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
GuildTerritoryEvent::sources() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildTerritoryEvent.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
GuildTerritoryEvent::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildTerritoryEvent.sources)
  return &sources_;
}

// optional uint64 suppress_charid = 4;
inline bool GuildTerritoryEvent::has_suppress_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildTerritoryEvent::set_has_suppress_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildTerritoryEvent::clear_has_suppress_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildTerritoryEvent::clear_suppress_charid() {
  suppress_charid_ = GOOGLE_ULONGLONG(0);
  clear_has_suppress_charid();
}
inline ::google::protobuf::uint64 GuildTerritoryEvent::suppress_charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryEvent.suppress_charid)
  return suppress_charid_;
}
inline void GuildTerritoryEvent::set_suppress_charid(::google::protobuf::uint64 value) {
  set_has_suppress_charid();
  suppress_charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryEvent.suppress_charid)
}

// optional string suppress_name = 5;
inline bool GuildTerritoryEvent::has_suppress_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildTerritoryEvent::set_has_suppress_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildTerritoryEvent::clear_has_suppress_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildTerritoryEvent::clear_suppress_name() {
  if (suppress_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_->clear();
  }
  clear_has_suppress_name();
}
inline const ::std::string& GuildTerritoryEvent::suppress_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryEvent.suppress_name)
  return *suppress_name_;
}
inline void GuildTerritoryEvent::set_suppress_name(const ::std::string& value) {
  set_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_ = new ::std::string;
  }
  suppress_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryEvent.suppress_name)
}
inline void GuildTerritoryEvent::set_suppress_name(const char* value) {
  set_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_ = new ::std::string;
  }
  suppress_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.GuildTerritoryEvent.suppress_name)
}
inline void GuildTerritoryEvent::set_suppress_name(const char* value, size_t size) {
  set_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_ = new ::std::string;
  }
  suppress_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.GuildTerritoryEvent.suppress_name)
}
inline ::std::string* GuildTerritoryEvent::mutable_suppress_name() {
  set_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildTerritoryEvent.suppress_name)
  return suppress_name_;
}
inline ::std::string* GuildTerritoryEvent::release_suppress_name() {
  clear_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = suppress_name_;
    suppress_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildTerritoryEvent::set_allocated_suppress_name(::std::string* suppress_name) {
  if (suppress_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suppress_name_;
  }
  if (suppress_name) {
    set_has_suppress_name();
    suppress_name_ = suppress_name;
  } else {
    clear_has_suppress_name();
    suppress_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GuildTerritoryEvent.suppress_name)
}

// -------------------------------------------------------------------

// GuildTerritoryEventUpdate

// required uint32 id = 1;
inline bool GuildTerritoryEventUpdate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildTerritoryEventUpdate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildTerritoryEventUpdate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildTerritoryEventUpdate::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GuildTerritoryEventUpdate::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryEventUpdate.id)
  return id_;
}
inline void GuildTerritoryEventUpdate::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryEventUpdate.id)
}

// required .TgsProtocol.GuildTerritoryEventType type = 2;
inline bool GuildTerritoryEventUpdate::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildTerritoryEventUpdate::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildTerritoryEventUpdate::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildTerritoryEventUpdate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::GuildTerritoryEventType GuildTerritoryEventUpdate::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryEventUpdate.type)
  return static_cast< ::TgsProtocol::GuildTerritoryEventType >(type_);
}
inline void GuildTerritoryEventUpdate::set_type(::TgsProtocol::GuildTerritoryEventType value) {
  assert(::TgsProtocol::GuildTerritoryEventType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryEventUpdate.type)
}

// required uint32 index = 3;
inline bool GuildTerritoryEventUpdate::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildTerritoryEventUpdate::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildTerritoryEventUpdate::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildTerritoryEventUpdate::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GuildTerritoryEventUpdate::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryEventUpdate.index)
  return index_;
}
inline void GuildTerritoryEventUpdate::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryEventUpdate.index)
}

// -------------------------------------------------------------------

// GuildTerritoryChapter

// required uint32 chapter_id = 1;
inline bool GuildTerritoryChapter::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildTerritoryChapter::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildTerritoryChapter::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildTerritoryChapter::clear_chapter_id() {
  chapter_id_ = 0u;
  clear_has_chapter_id();
}
inline ::google::protobuf::uint32 GuildTerritoryChapter::chapter_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryChapter.chapter_id)
  return chapter_id_;
}
inline void GuildTerritoryChapter::set_chapter_id(::google::protobuf::uint32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryChapter.chapter_id)
}

// required uint32 hero_id = 2;
inline bool GuildTerritoryChapter::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildTerritoryChapter::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildTerritoryChapter::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildTerritoryChapter::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 GuildTerritoryChapter::hero_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryChapter.hero_id)
  return hero_id_;
}
inline void GuildTerritoryChapter::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryChapter.hero_id)
}

// required uint32 begin_time = 3;
inline bool GuildTerritoryChapter::has_begin_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildTerritoryChapter::set_has_begin_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildTerritoryChapter::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildTerritoryChapter::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 GuildTerritoryChapter::begin_time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryChapter.begin_time)
  return begin_time_;
}
inline void GuildTerritoryChapter::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryChapter.begin_time)
}

// repeated .TgsProtocol.GuildTerritoryEvent event = 4;
inline int GuildTerritoryChapter::event_size() const {
  return event_.size();
}
inline void GuildTerritoryChapter::clear_event() {
  event_.Clear();
}
inline const ::TgsProtocol::GuildTerritoryEvent& GuildTerritoryChapter::event(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryChapter.event)
  return event_.Get(index);
}
inline ::TgsProtocol::GuildTerritoryEvent* GuildTerritoryChapter::mutable_event(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildTerritoryChapter.event)
  return event_.Mutable(index);
}
inline ::TgsProtocol::GuildTerritoryEvent* GuildTerritoryChapter::add_event() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildTerritoryChapter.event)
  return event_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryEvent >&
GuildTerritoryChapter::event() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildTerritoryChapter.event)
  return event_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryEvent >*
GuildTerritoryChapter::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildTerritoryChapter.event)
  return &event_;
}

// repeated .TgsProtocol.ClientSource sources = 5;
inline int GuildTerritoryChapter::sources_size() const {
  return sources_.size();
}
inline void GuildTerritoryChapter::clear_sources() {
  sources_.Clear();
}
inline const ::TgsProtocol::ClientSource& GuildTerritoryChapter::sources(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryChapter.sources)
  return sources_.Get(index);
}
inline ::TgsProtocol::ClientSource* GuildTerritoryChapter::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildTerritoryChapter.sources)
  return sources_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* GuildTerritoryChapter::add_sources() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildTerritoryChapter.sources)
  return sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
GuildTerritoryChapter::sources() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildTerritoryChapter.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
GuildTerritoryChapter::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildTerritoryChapter.sources)
  return &sources_;
}

// required uint32 source_rate = 6;
inline bool GuildTerritoryChapter::has_source_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildTerritoryChapter::set_has_source_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildTerritoryChapter::clear_has_source_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildTerritoryChapter::clear_source_rate() {
  source_rate_ = 0u;
  clear_has_source_rate();
}
inline ::google::protobuf::uint32 GuildTerritoryChapter::source_rate() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryChapter.source_rate)
  return source_rate_;
}
inline void GuildTerritoryChapter::set_source_rate(::google::protobuf::uint32 value) {
  set_has_source_rate();
  source_rate_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryChapter.source_rate)
}

// -------------------------------------------------------------------

// GuildTerritoryInfo

// required uint32 passed_chapterid = 1;
inline bool GuildTerritoryInfo::has_passed_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildTerritoryInfo::set_has_passed_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildTerritoryInfo::clear_has_passed_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildTerritoryInfo::clear_passed_chapterid() {
  passed_chapterid_ = 0u;
  clear_has_passed_chapterid();
}
inline ::google::protobuf::uint32 GuildTerritoryInfo::passed_chapterid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryInfo.passed_chapterid)
  return passed_chapterid_;
}
inline void GuildTerritoryInfo::set_passed_chapterid(::google::protobuf::uint32 value) {
  set_has_passed_chapterid();
  passed_chapterid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildTerritoryInfo.passed_chapterid)
}

// repeated .TgsProtocol.GuildTerritoryChapter item = 2;
inline int GuildTerritoryInfo::item_size() const {
  return item_.size();
}
inline void GuildTerritoryInfo::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::GuildTerritoryChapter& GuildTerritoryInfo::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildTerritoryInfo.item)
  return item_.Get(index);
}
inline ::TgsProtocol::GuildTerritoryChapter* GuildTerritoryInfo::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildTerritoryInfo.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::GuildTerritoryChapter* GuildTerritoryInfo::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.GuildTerritoryInfo.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryChapter >&
GuildTerritoryInfo::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.GuildTerritoryInfo.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GuildTerritoryChapter >*
GuildTerritoryInfo::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.GuildTerritoryInfo.item)
  return &item_;
}

// -------------------------------------------------------------------

// GuildMemberTerritoryInfo

// required uint64 charid = 1;
inline bool GuildMemberTerritoryInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberTerritoryInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberTerritoryInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberTerritoryInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GuildMemberTerritoryInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMemberTerritoryInfo.charid)
  return charid_;
}
inline void GuildMemberTerritoryInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMemberTerritoryInfo.charid)
}

// required uint32 photo = 2;
inline bool GuildMemberTerritoryInfo::has_photo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberTerritoryInfo::set_has_photo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberTerritoryInfo::clear_has_photo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberTerritoryInfo::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 GuildMemberTerritoryInfo::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMemberTerritoryInfo.photo)
  return photo_;
}
inline void GuildMemberTerritoryInfo::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMemberTerritoryInfo.photo)
}

// required uint32 level = 3;
inline bool GuildMemberTerritoryInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberTerritoryInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberTerritoryInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberTerritoryInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 GuildMemberTerritoryInfo::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMemberTerritoryInfo.level)
  return level_;
}
inline void GuildMemberTerritoryInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMemberTerritoryInfo.level)
}

// required string name = 4;
inline bool GuildMemberTerritoryInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberTerritoryInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberTerritoryInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberTerritoryInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildMemberTerritoryInfo::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMemberTerritoryInfo.name)
  return *name_;
}
inline void GuildMemberTerritoryInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMemberTerritoryInfo.name)
}
inline void GuildMemberTerritoryInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.GuildMemberTerritoryInfo.name)
}
inline void GuildMemberTerritoryInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.GuildMemberTerritoryInfo.name)
}
inline ::std::string* GuildMemberTerritoryInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GuildMemberTerritoryInfo.name)
  return name_;
}
inline ::std::string* GuildMemberTerritoryInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildMemberTerritoryInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GuildMemberTerritoryInfo.name)
}

// required uint32 territoryCount = 5;
inline bool GuildMemberTerritoryInfo::has_territorycount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMemberTerritoryInfo::set_has_territorycount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMemberTerritoryInfo::clear_has_territorycount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMemberTerritoryInfo::clear_territorycount() {
  territorycount_ = 0u;
  clear_has_territorycount();
}
inline ::google::protobuf::uint32 GuildMemberTerritoryInfo::territorycount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMemberTerritoryInfo.territoryCount)
  return territorycount_;
}
inline void GuildMemberTerritoryInfo::set_territorycount(::google::protobuf::uint32 value) {
  set_has_territorycount();
  territorycount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMemberTerritoryInfo.territoryCount)
}

// required uint32 territoryRiotCount = 6;
inline bool GuildMemberTerritoryInfo::has_territoryriotcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildMemberTerritoryInfo::set_has_territoryriotcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildMemberTerritoryInfo::clear_has_territoryriotcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildMemberTerritoryInfo::clear_territoryriotcount() {
  territoryriotcount_ = 0u;
  clear_has_territoryriotcount();
}
inline ::google::protobuf::uint32 GuildMemberTerritoryInfo::territoryriotcount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GuildMemberTerritoryInfo.territoryRiotCount)
  return territoryriotcount_;
}
inline void GuildMemberTerritoryInfo::set_territoryriotcount(::google::protobuf::uint32 value) {
  set_has_territoryriotcount();
  territoryriotcount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GuildMemberTerritoryInfo.territoryRiotCount)
}

// -------------------------------------------------------------------

// PlayerTerritoryEvent

// required uint32 id = 1;
inline bool PlayerTerritoryEvent::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerTerritoryEvent::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerTerritoryEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerTerritoryEvent::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PlayerTerritoryEvent::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.id)
  return id_;
}
inline void PlayerTerritoryEvent::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryEvent.id)
}

// required .TgsProtocol.PlayerTerritoryEventType type = 2;
inline bool PlayerTerritoryEvent::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerTerritoryEvent::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerTerritoryEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerTerritoryEvent::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::PlayerTerritoryEventType PlayerTerritoryEvent::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.type)
  return static_cast< ::TgsProtocol::PlayerTerritoryEventType >(type_);
}
inline void PlayerTerritoryEvent::set_type(::TgsProtocol::PlayerTerritoryEventType value) {
  assert(::TgsProtocol::PlayerTerritoryEventType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryEvent.type)
}

// repeated .TgsProtocol.ClientSource sources = 3;
inline int PlayerTerritoryEvent::sources_size() const {
  return sources_.size();
}
inline void PlayerTerritoryEvent::clear_sources() {
  sources_.Clear();
}
inline const ::TgsProtocol::ClientSource& PlayerTerritoryEvent::sources(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.sources)
  return sources_.Get(index);
}
inline ::TgsProtocol::ClientSource* PlayerTerritoryEvent::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerTerritoryEvent.sources)
  return sources_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* PlayerTerritoryEvent::add_sources() {
  // @@protoc_insertion_point(field_add:TgsProtocol.PlayerTerritoryEvent.sources)
  return sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
PlayerTerritoryEvent::sources() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.PlayerTerritoryEvent.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
PlayerTerritoryEvent::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.PlayerTerritoryEvent.sources)
  return &sources_;
}

// optional uint64 suppress_charid = 4;
inline bool PlayerTerritoryEvent::has_suppress_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerTerritoryEvent::set_has_suppress_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerTerritoryEvent::clear_has_suppress_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerTerritoryEvent::clear_suppress_charid() {
  suppress_charid_ = GOOGLE_ULONGLONG(0);
  clear_has_suppress_charid();
}
inline ::google::protobuf::uint64 PlayerTerritoryEvent::suppress_charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.suppress_charid)
  return suppress_charid_;
}
inline void PlayerTerritoryEvent::set_suppress_charid(::google::protobuf::uint64 value) {
  set_has_suppress_charid();
  suppress_charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryEvent.suppress_charid)
}

// optional string suppress_name = 5;
inline bool PlayerTerritoryEvent::has_suppress_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerTerritoryEvent::set_has_suppress_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerTerritoryEvent::clear_has_suppress_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerTerritoryEvent::clear_suppress_name() {
  if (suppress_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_->clear();
  }
  clear_has_suppress_name();
}
inline const ::std::string& PlayerTerritoryEvent::suppress_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.suppress_name)
  return *suppress_name_;
}
inline void PlayerTerritoryEvent::set_suppress_name(const ::std::string& value) {
  set_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_ = new ::std::string;
  }
  suppress_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryEvent.suppress_name)
}
inline void PlayerTerritoryEvent::set_suppress_name(const char* value) {
  set_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_ = new ::std::string;
  }
  suppress_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.PlayerTerritoryEvent.suppress_name)
}
inline void PlayerTerritoryEvent::set_suppress_name(const char* value, size_t size) {
  set_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_ = new ::std::string;
  }
  suppress_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.PlayerTerritoryEvent.suppress_name)
}
inline ::std::string* PlayerTerritoryEvent::mutable_suppress_name() {
  set_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    suppress_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerTerritoryEvent.suppress_name)
  return suppress_name_;
}
inline ::std::string* PlayerTerritoryEvent::release_suppress_name() {
  clear_has_suppress_name();
  if (suppress_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = suppress_name_;
    suppress_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlayerTerritoryEvent::set_allocated_suppress_name(::std::string* suppress_name) {
  if (suppress_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suppress_name_;
  }
  if (suppress_name) {
    set_has_suppress_name();
    suppress_name_ = suppress_name;
  } else {
    clear_has_suppress_name();
    suppress_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.PlayerTerritoryEvent.suppress_name)
}

// optional uint32 begin_time = 6;
inline bool PlayerTerritoryEvent::has_begin_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerTerritoryEvent::set_has_begin_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerTerritoryEvent::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerTerritoryEvent::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 PlayerTerritoryEvent::begin_time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.begin_time)
  return begin_time_;
}
inline void PlayerTerritoryEvent::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryEvent.begin_time)
}

// optional uint32 rate = 7;
inline bool PlayerTerritoryEvent::has_rate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerTerritoryEvent::set_has_rate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerTerritoryEvent::clear_has_rate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerTerritoryEvent::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 PlayerTerritoryEvent::rate() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.rate)
  return rate_;
}
inline void PlayerTerritoryEvent::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryEvent.rate)
}

// repeated .TgsProtocol.ClientSource suppress_sources = 8;
inline int PlayerTerritoryEvent::suppress_sources_size() const {
  return suppress_sources_.size();
}
inline void PlayerTerritoryEvent::clear_suppress_sources() {
  suppress_sources_.Clear();
}
inline const ::TgsProtocol::ClientSource& PlayerTerritoryEvent::suppress_sources(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.suppress_sources)
  return suppress_sources_.Get(index);
}
inline ::TgsProtocol::ClientSource* PlayerTerritoryEvent::mutable_suppress_sources(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerTerritoryEvent.suppress_sources)
  return suppress_sources_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* PlayerTerritoryEvent::add_suppress_sources() {
  // @@protoc_insertion_point(field_add:TgsProtocol.PlayerTerritoryEvent.suppress_sources)
  return suppress_sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
PlayerTerritoryEvent::suppress_sources() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.PlayerTerritoryEvent.suppress_sources)
  return suppress_sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
PlayerTerritoryEvent::mutable_suppress_sources() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.PlayerTerritoryEvent.suppress_sources)
  return &suppress_sources_;
}

// optional uint32 patrol_words = 9;
inline bool PlayerTerritoryEvent::has_patrol_words() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerTerritoryEvent::set_has_patrol_words() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerTerritoryEvent::clear_has_patrol_words() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerTerritoryEvent::clear_patrol_words() {
  patrol_words_ = 0u;
  clear_has_patrol_words();
}
inline ::google::protobuf::uint32 PlayerTerritoryEvent::patrol_words() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.patrol_words)
  return patrol_words_;
}
inline void PlayerTerritoryEvent::set_patrol_words(::google::protobuf::uint32 value) {
  set_has_patrol_words();
  patrol_words_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryEvent.patrol_words)
}

// optional uint32 suppress_words = 10;
inline bool PlayerTerritoryEvent::has_suppress_words() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerTerritoryEvent::set_has_suppress_words() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerTerritoryEvent::clear_has_suppress_words() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerTerritoryEvent::clear_suppress_words() {
  suppress_words_ = 0u;
  clear_has_suppress_words();
}
inline ::google::protobuf::uint32 PlayerTerritoryEvent::suppress_words() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.suppress_words)
  return suppress_words_;
}
inline void PlayerTerritoryEvent::set_suppress_words(::google::protobuf::uint32 value) {
  set_has_suppress_words();
  suppress_words_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryEvent.suppress_words)
}

// optional uint32 suppress_time = 11;
inline bool PlayerTerritoryEvent::has_suppress_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerTerritoryEvent::set_has_suppress_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerTerritoryEvent::clear_has_suppress_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerTerritoryEvent::clear_suppress_time() {
  suppress_time_ = 0u;
  clear_has_suppress_time();
}
inline ::google::protobuf::uint32 PlayerTerritoryEvent::suppress_time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryEvent.suppress_time)
  return suppress_time_;
}
inline void PlayerTerritoryEvent::set_suppress_time(::google::protobuf::uint32 value) {
  set_has_suppress_time();
  suppress_time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryEvent.suppress_time)
}

// -------------------------------------------------------------------

// PlayerTerritoryChapter

// required uint32 chapter_id = 1;
inline bool PlayerTerritoryChapter::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerTerritoryChapter::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerTerritoryChapter::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerTerritoryChapter::clear_chapter_id() {
  chapter_id_ = 0u;
  clear_has_chapter_id();
}
inline ::google::protobuf::uint32 PlayerTerritoryChapter::chapter_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryChapter.chapter_id)
  return chapter_id_;
}
inline void PlayerTerritoryChapter::set_chapter_id(::google::protobuf::uint32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryChapter.chapter_id)
}

// required uint32 hero_id = 2;
inline bool PlayerTerritoryChapter::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerTerritoryChapter::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerTerritoryChapter::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerTerritoryChapter::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 PlayerTerritoryChapter::hero_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryChapter.hero_id)
  return hero_id_;
}
inline void PlayerTerritoryChapter::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryChapter.hero_id)
}

// required uint32 begin_time = 3;
inline bool PlayerTerritoryChapter::has_begin_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerTerritoryChapter::set_has_begin_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerTerritoryChapter::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerTerritoryChapter::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 PlayerTerritoryChapter::begin_time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryChapter.begin_time)
  return begin_time_;
}
inline void PlayerTerritoryChapter::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryChapter.begin_time)
}

// required uint32 end_time = 4;
inline bool PlayerTerritoryChapter::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerTerritoryChapter::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerTerritoryChapter::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerTerritoryChapter::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 PlayerTerritoryChapter::end_time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryChapter.end_time)
  return end_time_;
}
inline void PlayerTerritoryChapter::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryChapter.end_time)
}

// required uint32 patrol_type = 5;
inline bool PlayerTerritoryChapter::has_patrol_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerTerritoryChapter::set_has_patrol_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerTerritoryChapter::clear_has_patrol_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerTerritoryChapter::clear_patrol_type() {
  patrol_type_ = 0u;
  clear_has_patrol_type();
}
inline ::google::protobuf::uint32 PlayerTerritoryChapter::patrol_type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryChapter.patrol_type)
  return patrol_type_;
}
inline void PlayerTerritoryChapter::set_patrol_type(::google::protobuf::uint32 value) {
  set_has_patrol_type();
  patrol_type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryChapter.patrol_type)
}

// repeated .TgsProtocol.PlayerTerritoryEvent event = 6;
inline int PlayerTerritoryChapter::event_size() const {
  return event_.size();
}
inline void PlayerTerritoryChapter::clear_event() {
  event_.Clear();
}
inline const ::TgsProtocol::PlayerTerritoryEvent& PlayerTerritoryChapter::event(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryChapter.event)
  return event_.Get(index);
}
inline ::TgsProtocol::PlayerTerritoryEvent* PlayerTerritoryChapter::mutable_event(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerTerritoryChapter.event)
  return event_.Mutable(index);
}
inline ::TgsProtocol::PlayerTerritoryEvent* PlayerTerritoryChapter::add_event() {
  // @@protoc_insertion_point(field_add:TgsProtocol.PlayerTerritoryChapter.event)
  return event_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryEvent >&
PlayerTerritoryChapter::event() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.PlayerTerritoryChapter.event)
  return event_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryEvent >*
PlayerTerritoryChapter::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.PlayerTerritoryChapter.event)
  return &event_;
}

// repeated .TgsProtocol.ClientSource sources = 7;
inline int PlayerTerritoryChapter::sources_size() const {
  return sources_.size();
}
inline void PlayerTerritoryChapter::clear_sources() {
  sources_.Clear();
}
inline const ::TgsProtocol::ClientSource& PlayerTerritoryChapter::sources(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryChapter.sources)
  return sources_.Get(index);
}
inline ::TgsProtocol::ClientSource* PlayerTerritoryChapter::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerTerritoryChapter.sources)
  return sources_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* PlayerTerritoryChapter::add_sources() {
  // @@protoc_insertion_point(field_add:TgsProtocol.PlayerTerritoryChapter.sources)
  return sources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
PlayerTerritoryChapter::sources() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.PlayerTerritoryChapter.sources)
  return sources_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
PlayerTerritoryChapter::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.PlayerTerritoryChapter.sources)
  return &sources_;
}

// required uint32 next_event_time = 8;
inline bool PlayerTerritoryChapter::has_next_event_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerTerritoryChapter::set_has_next_event_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerTerritoryChapter::clear_has_next_event_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerTerritoryChapter::clear_next_event_time() {
  next_event_time_ = 0u;
  clear_has_next_event_time();
}
inline ::google::protobuf::uint32 PlayerTerritoryChapter::next_event_time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryChapter.next_event_time)
  return next_event_time_;
}
inline void PlayerTerritoryChapter::set_next_event_time(::google::protobuf::uint32 value) {
  set_has_next_event_time();
  next_event_time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryChapter.next_event_time)
}

// -------------------------------------------------------------------

// TerritorySkill

// required uint32 id = 1;
inline bool TerritorySkill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TerritorySkill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TerritorySkill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TerritorySkill::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TerritorySkill::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TerritorySkill.id)
  return id_;
}
inline void TerritorySkill::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TerritorySkill.id)
}

// required uint32 level = 2;
inline bool TerritorySkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TerritorySkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TerritorySkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TerritorySkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 TerritorySkill::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TerritorySkill.level)
  return level_;
}
inline void TerritorySkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TerritorySkill.level)
}

// -------------------------------------------------------------------

// PlayerTerritoryInfo

// required uint32 passed_chapterid = 1;
inline bool PlayerTerritoryInfo::has_passed_chapterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerTerritoryInfo::set_has_passed_chapterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerTerritoryInfo::clear_has_passed_chapterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerTerritoryInfo::clear_passed_chapterid() {
  passed_chapterid_ = 0u;
  clear_has_passed_chapterid();
}
inline ::google::protobuf::uint32 PlayerTerritoryInfo::passed_chapterid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryInfo.passed_chapterid)
  return passed_chapterid_;
}
inline void PlayerTerritoryInfo::set_passed_chapterid(::google::protobuf::uint32 value) {
  set_has_passed_chapterid();
  passed_chapterid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTerritoryInfo.passed_chapterid)
}

// repeated .TgsProtocol.PlayerTerritoryChapter item = 2;
inline int PlayerTerritoryInfo::item_size() const {
  return item_.size();
}
inline void PlayerTerritoryInfo::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::PlayerTerritoryChapter& PlayerTerritoryInfo::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryInfo.item)
  return item_.Get(index);
}
inline ::TgsProtocol::PlayerTerritoryChapter* PlayerTerritoryInfo::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerTerritoryInfo.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::PlayerTerritoryChapter* PlayerTerritoryInfo::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.PlayerTerritoryInfo.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryChapter >&
PlayerTerritoryInfo::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.PlayerTerritoryInfo.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PlayerTerritoryChapter >*
PlayerTerritoryInfo::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.PlayerTerritoryInfo.item)
  return &item_;
}

// repeated .TgsProtocol.TerritorySkill skill = 3;
inline int PlayerTerritoryInfo::skill_size() const {
  return skill_.size();
}
inline void PlayerTerritoryInfo::clear_skill() {
  skill_.Clear();
}
inline const ::TgsProtocol::TerritorySkill& PlayerTerritoryInfo::skill(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTerritoryInfo.skill)
  return skill_.Get(index);
}
inline ::TgsProtocol::TerritorySkill* PlayerTerritoryInfo::mutable_skill(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerTerritoryInfo.skill)
  return skill_.Mutable(index);
}
inline ::TgsProtocol::TerritorySkill* PlayerTerritoryInfo::add_skill() {
  // @@protoc_insertion_point(field_add:TgsProtocol.PlayerTerritoryInfo.skill)
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TerritorySkill >&
PlayerTerritoryInfo::skill() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.PlayerTerritoryInfo.skill)
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TerritorySkill >*
PlayerTerritoryInfo::mutable_skill() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.PlayerTerritoryInfo.skill)
  return &skill_;
}

// -------------------------------------------------------------------

// FriendTerritoryInfo

// required uint64 charid = 1;
inline bool FriendTerritoryInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendTerritoryInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendTerritoryInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendTerritoryInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 FriendTerritoryInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FriendTerritoryInfo.charid)
  return charid_;
}
inline void FriendTerritoryInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FriendTerritoryInfo.charid)
}

// required uint32 photo = 2;
inline bool FriendTerritoryInfo::has_photo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendTerritoryInfo::set_has_photo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendTerritoryInfo::clear_has_photo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendTerritoryInfo::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 FriendTerritoryInfo::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FriendTerritoryInfo.photo)
  return photo_;
}
inline void FriendTerritoryInfo::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FriendTerritoryInfo.photo)
}

// required uint32 level = 3;
inline bool FriendTerritoryInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendTerritoryInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendTerritoryInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendTerritoryInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FriendTerritoryInfo::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FriendTerritoryInfo.level)
  return level_;
}
inline void FriendTerritoryInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FriendTerritoryInfo.level)
}

// required string name = 4;
inline bool FriendTerritoryInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendTerritoryInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendTerritoryInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendTerritoryInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FriendTerritoryInfo::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FriendTerritoryInfo.name)
  return *name_;
}
inline void FriendTerritoryInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.FriendTerritoryInfo.name)
}
inline void FriendTerritoryInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.FriendTerritoryInfo.name)
}
inline void FriendTerritoryInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.FriendTerritoryInfo.name)
}
inline ::std::string* FriendTerritoryInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.FriendTerritoryInfo.name)
  return name_;
}
inline ::std::string* FriendTerritoryInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendTerritoryInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.FriendTerritoryInfo.name)
}

// required uint32 territoryCount = 5;
inline bool FriendTerritoryInfo::has_territorycount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendTerritoryInfo::set_has_territorycount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendTerritoryInfo::clear_has_territorycount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendTerritoryInfo::clear_territorycount() {
  territorycount_ = 0u;
  clear_has_territorycount();
}
inline ::google::protobuf::uint32 FriendTerritoryInfo::territorycount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FriendTerritoryInfo.territoryCount)
  return territorycount_;
}
inline void FriendTerritoryInfo::set_territorycount(::google::protobuf::uint32 value) {
  set_has_territorycount();
  territorycount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FriendTerritoryInfo.territoryCount)
}

// required uint32 territoryRiotCount = 6;
inline bool FriendTerritoryInfo::has_territoryriotcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendTerritoryInfo::set_has_territoryriotcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendTerritoryInfo::clear_has_territoryriotcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendTerritoryInfo::clear_territoryriotcount() {
  territoryriotcount_ = 0u;
  clear_has_territoryriotcount();
}
inline ::google::protobuf::uint32 FriendTerritoryInfo::territoryriotcount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FriendTerritoryInfo.territoryRiotCount)
  return territoryriotcount_;
}
inline void FriendTerritoryInfo::set_territoryriotcount(::google::protobuf::uint32 value) {
  set_has_territoryriotcount();
  territoryriotcount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FriendTerritoryInfo.territoryRiotCount)
}

// optional uint32 patrolCount = 7;
inline bool FriendTerritoryInfo::has_patrolcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FriendTerritoryInfo::set_has_patrolcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FriendTerritoryInfo::clear_has_patrolcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FriendTerritoryInfo::clear_patrolcount() {
  patrolcount_ = 0u;
  clear_has_patrolcount();
}
inline ::google::protobuf::uint32 FriendTerritoryInfo::patrolcount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FriendTerritoryInfo.patrolCount)
  return patrolcount_;
}
inline void FriendTerritoryInfo::set_patrolcount(::google::protobuf::uint32 value) {
  set_has_patrolcount();
  patrolcount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FriendTerritoryInfo.patrolCount)
}

// optional uint32 star = 8;
inline bool FriendTerritoryInfo::has_star() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FriendTerritoryInfo::set_has_star() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FriendTerritoryInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FriendTerritoryInfo::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 FriendTerritoryInfo::star() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FriendTerritoryInfo.star)
  return star_;
}
inline void FriendTerritoryInfo::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FriendTerritoryInfo.star)
}

// optional uint32 offlineTime = 9;
inline bool FriendTerritoryInfo::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FriendTerritoryInfo::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FriendTerritoryInfo::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FriendTerritoryInfo::clear_offlinetime() {
  offlinetime_ = 0u;
  clear_has_offlinetime();
}
inline ::google::protobuf::uint32 FriendTerritoryInfo::offlinetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FriendTerritoryInfo.offlineTime)
  return offlinetime_;
}
inline void FriendTerritoryInfo::set_offlinetime(::google::protobuf::uint32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FriendTerritoryInfo.offlineTime)
}

// -------------------------------------------------------------------

// ClientNoticeInfo

// required uint32 id = 1;
inline bool ClientNoticeInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientNoticeInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientNoticeInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientNoticeInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ClientNoticeInfo::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.id)
  return id_;
}
inline void ClientNoticeInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.id)
}

// required uint32 confid = 2;
inline bool ClientNoticeInfo::has_confid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientNoticeInfo::set_has_confid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientNoticeInfo::clear_has_confid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientNoticeInfo::clear_confid() {
  confid_ = 0u;
  clear_has_confid();
}
inline ::google::protobuf::uint32 ClientNoticeInfo::confid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.confid)
  return confid_;
}
inline void ClientNoticeInfo::set_confid(::google::protobuf::uint32 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.confid)
}

// required .TgsProtocol.eNoticeType type = 3;
inline bool ClientNoticeInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientNoticeInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientNoticeInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientNoticeInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::eNoticeType ClientNoticeInfo::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.type)
  return static_cast< ::TgsProtocol::eNoticeType >(type_);
}
inline void ClientNoticeInfo::set_type(::TgsProtocol::eNoticeType value) {
  assert(::TgsProtocol::eNoticeType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.type)
}

// required uint32 templateid = 4;
inline bool ClientNoticeInfo::has_templateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientNoticeInfo::set_has_templateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientNoticeInfo::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientNoticeInfo::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 ClientNoticeInfo::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.templateid)
  return templateid_;
}
inline void ClientNoticeInfo::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.templateid)
}

// optional uint32 value = 5;
inline bool ClientNoticeInfo::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientNoticeInfo::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientNoticeInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientNoticeInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ClientNoticeInfo::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.value)
  return value_;
}
inline void ClientNoticeInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.value)
}

// optional string playername = 6;
inline bool ClientNoticeInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientNoticeInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientNoticeInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientNoticeInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& ClientNoticeInfo::playername() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.playername)
  return *playername_;
}
inline void ClientNoticeInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.playername)
}
inline void ClientNoticeInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientNoticeInfo.playername)
}
inline void ClientNoticeInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientNoticeInfo.playername)
}
inline ::std::string* ClientNoticeInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientNoticeInfo.playername)
  return playername_;
}
inline ::std::string* ClientNoticeInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientNoticeInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientNoticeInfo.playername)
}

// optional uint32 playerstar = 7;
inline bool ClientNoticeInfo::has_playerstar() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientNoticeInfo::set_has_playerstar() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientNoticeInfo::clear_has_playerstar() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientNoticeInfo::clear_playerstar() {
  playerstar_ = 0u;
  clear_has_playerstar();
}
inline ::google::protobuf::uint32 ClientNoticeInfo::playerstar() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.playerstar)
  return playerstar_;
}
inline void ClientNoticeInfo::set_playerstar(::google::protobuf::uint32 value) {
  set_has_playerstar();
  playerstar_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.playerstar)
}

// required bool hasitem = 8;
inline bool ClientNoticeInfo::has_hasitem() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientNoticeInfo::set_has_hasitem() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientNoticeInfo::clear_has_hasitem() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientNoticeInfo::clear_hasitem() {
  hasitem_ = false;
  clear_has_hasitem();
}
inline bool ClientNoticeInfo::hasitem() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.hasitem)
  return hasitem_;
}
inline void ClientNoticeInfo::set_hasitem(bool value) {
  set_has_hasitem();
  hasitem_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.hasitem)
}

// required uint32 wordsid = 9;
inline bool ClientNoticeInfo::has_wordsid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientNoticeInfo::set_has_wordsid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientNoticeInfo::clear_has_wordsid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientNoticeInfo::clear_wordsid() {
  wordsid_ = 0u;
  clear_has_wordsid();
}
inline ::google::protobuf::uint32 ClientNoticeInfo::wordsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.wordsid)
  return wordsid_;
}
inline void ClientNoticeInfo::set_wordsid(::google::protobuf::uint32 value) {
  set_has_wordsid();
  wordsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.wordsid)
}

// optional uint32 reason = 10;
inline bool ClientNoticeInfo::has_reason() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientNoticeInfo::set_has_reason() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientNoticeInfo::clear_has_reason() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientNoticeInfo::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 ClientNoticeInfo::reason() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.reason)
  return reason_;
}
inline void ClientNoticeInfo::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.reason)
}

// optional uint32 charid = 11;
inline bool ClientNoticeInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientNoticeInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientNoticeInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientNoticeInfo::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 ClientNoticeInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.charid)
  return charid_;
}
inline void ClientNoticeInfo::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.charid)
}

// repeated string str = 12;
inline int ClientNoticeInfo::str_size() const {
  return str_.size();
}
inline void ClientNoticeInfo::clear_str() {
  str_.Clear();
}
inline const ::std::string& ClientNoticeInfo::str(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.str)
  return str_.Get(index);
}
inline ::std::string* ClientNoticeInfo::mutable_str(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientNoticeInfo.str)
  return str_.Mutable(index);
}
inline void ClientNoticeInfo::set_str(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.str)
  str_.Mutable(index)->assign(value);
}
inline void ClientNoticeInfo::set_str(int index, const char* value) {
  str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientNoticeInfo.str)
}
inline void ClientNoticeInfo::set_str(int index, const char* value, size_t size) {
  str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientNoticeInfo.str)
}
inline ::std::string* ClientNoticeInfo::add_str() {
  return str_.Add();
}
inline void ClientNoticeInfo::add_str(const ::std::string& value) {
  str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientNoticeInfo.str)
}
inline void ClientNoticeInfo::add_str(const char* value) {
  str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TgsProtocol.ClientNoticeInfo.str)
}
inline void ClientNoticeInfo::add_str(const char* value, size_t size) {
  str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TgsProtocol.ClientNoticeInfo.str)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientNoticeInfo::str() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientNoticeInfo.str)
  return str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientNoticeInfo::mutable_str() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientNoticeInfo.str)
  return &str_;
}

// required .TgsProtocol.SourceType sourcetype = 13;
inline bool ClientNoticeInfo::has_sourcetype() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ClientNoticeInfo::set_has_sourcetype() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ClientNoticeInfo::clear_has_sourcetype() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ClientNoticeInfo::clear_sourcetype() {
  sourcetype_ = 0;
  clear_has_sourcetype();
}
inline ::TgsProtocol::SourceType ClientNoticeInfo::sourcetype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientNoticeInfo.sourcetype)
  return static_cast< ::TgsProtocol::SourceType >(sourcetype_);
}
inline void ClientNoticeInfo::set_sourcetype(::TgsProtocol::SourceType value) {
  assert(::TgsProtocol::SourceType_IsValid(value));
  set_has_sourcetype();
  sourcetype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientNoticeInfo.sourcetype)
}

// -------------------------------------------------------------------

// DbTreasureInfo

// required uint32 charid = 1;
inline bool DbTreasureInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbTreasureInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbTreasureInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbTreasureInfo::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 DbTreasureInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbTreasureInfo.charid)
  return charid_;
}
inline void DbTreasureInfo::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbTreasureInfo.charid)
}

// required uint32 level = 2;
inline bool DbTreasureInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbTreasureInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbTreasureInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbTreasureInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 DbTreasureInfo::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbTreasureInfo.level)
  return level_;
}
inline void DbTreasureInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbTreasureInfo.level)
}

// required string playername = 3;
inline bool DbTreasureInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbTreasureInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbTreasureInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbTreasureInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& DbTreasureInfo::playername() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbTreasureInfo.playername)
  return *playername_;
}
inline void DbTreasureInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbTreasureInfo.playername)
}
inline void DbTreasureInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbTreasureInfo.playername)
}
inline void DbTreasureInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbTreasureInfo.playername)
}
inline ::std::string* DbTreasureInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbTreasureInfo.playername)
  return playername_;
}
inline ::std::string* DbTreasureInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbTreasureInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbTreasureInfo.playername)
}

// repeated uint32 itemlist = 4;
inline int DbTreasureInfo::itemlist_size() const {
  return itemlist_.size();
}
inline void DbTreasureInfo::clear_itemlist() {
  itemlist_.Clear();
}
inline ::google::protobuf::uint32 DbTreasureInfo::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbTreasureInfo.itemlist)
  return itemlist_.Get(index);
}
inline void DbTreasureInfo::set_itemlist(int index, ::google::protobuf::uint32 value) {
  itemlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbTreasureInfo.itemlist)
}
inline void DbTreasureInfo::add_itemlist(::google::protobuf::uint32 value) {
  itemlist_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DbTreasureInfo.itemlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DbTreasureInfo::itemlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbTreasureInfo.itemlist)
  return itemlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DbTreasureInfo::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbTreasureInfo.itemlist)
  return &itemlist_;
}

// -------------------------------------------------------------------

// DbDropEle

// required uint32 type = 1;
inline bool DbDropEle::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbDropEle::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbDropEle::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbDropEle::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 DbDropEle::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbDropEle.type)
  return type_;
}
inline void DbDropEle::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbDropEle.type)
}

// required uint32 key = 2;
inline bool DbDropEle::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbDropEle::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbDropEle::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbDropEle::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 DbDropEle::key() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbDropEle.key)
  return key_;
}
inline void DbDropEle::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbDropEle.key)
}

// required uint32 val = 3;
inline bool DbDropEle::has_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbDropEle::set_has_val() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbDropEle::clear_has_val() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbDropEle::clear_val() {
  val_ = 0u;
  clear_has_val();
}
inline ::google::protobuf::uint32 DbDropEle::val() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbDropEle.val)
  return val_;
}
inline void DbDropEle::set_val(::google::protobuf::uint32 value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbDropEle.val)
}

// -------------------------------------------------------------------

// DbDrop

// repeated .TgsProtocol.DbDropEle one = 1;
inline int DbDrop::one_size() const {
  return one_.size();
}
inline void DbDrop::clear_one() {
  one_.Clear();
}
inline const ::TgsProtocol::DbDropEle& DbDrop::one(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbDrop.one)
  return one_.Get(index);
}
inline ::TgsProtocol::DbDropEle* DbDrop::mutable_one(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbDrop.one)
  return one_.Mutable(index);
}
inline ::TgsProtocol::DbDropEle* DbDrop::add_one() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DbDrop.one)
  return one_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbDropEle >&
DbDrop::one() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbDrop.one)
  return one_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbDropEle >*
DbDrop::mutable_one() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbDrop.one)
  return &one_;
}

// -------------------------------------------------------------------

// RobotEffect

// required uint32 id = 1;
inline bool RobotEffect::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotEffect::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotEffect::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotEffect::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RobotEffect::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.RobotEffect.id)
  return id_;
}
inline void RobotEffect::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.RobotEffect.id)
}

// required uint64 effect = 2;
inline bool RobotEffect::has_effect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotEffect::set_has_effect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotEffect::clear_has_effect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotEffect::clear_effect() {
  effect_ = GOOGLE_ULONGLONG(0);
  clear_has_effect();
}
inline ::google::protobuf::uint64 RobotEffect::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.RobotEffect.effect)
  return effect_;
}
inline void RobotEffect::set_effect(::google::protobuf::uint64 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.RobotEffect.effect)
}

// -------------------------------------------------------------------

// ClientChargeShopConf

// required uint32 goodsid = 1;
inline bool ClientChargeShopConf::has_goodsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientChargeShopConf::set_has_goodsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientChargeShopConf::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientChargeShopConf::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::goodsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.goodsid)
  return goodsid_;
}
inline void ClientChargeShopConf::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.goodsid)
}

// required uint32 shopType = 2;
inline bool ClientChargeShopConf::has_shoptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientChargeShopConf::set_has_shoptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientChargeShopConf::clear_has_shoptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientChargeShopConf::clear_shoptype() {
  shoptype_ = 0u;
  clear_has_shoptype();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::shoptype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.shopType)
  return shoptype_;
}
inline void ClientChargeShopConf::set_shoptype(::google::protobuf::uint32 value) {
  set_has_shoptype();
  shoptype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.shopType)
}

// repeated .TgsProtocol.ClientSource buy = 3;
inline int ClientChargeShopConf::buy_size() const {
  return buy_.size();
}
inline void ClientChargeShopConf::clear_buy() {
  buy_.Clear();
}
inline const ::TgsProtocol::ClientSource& ClientChargeShopConf::buy(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.buy)
  return buy_.Get(index);
}
inline ::TgsProtocol::ClientSource* ClientChargeShopConf::mutable_buy(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.buy)
  return buy_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* ClientChargeShopConf::add_buy() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientChargeShopConf.buy)
  return buy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
ClientChargeShopConf::buy() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientChargeShopConf.buy)
  return buy_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
ClientChargeShopConf::mutable_buy() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientChargeShopConf.buy)
  return &buy_;
}

// required .TgsProtocol.ClientSource cost = 4;
inline bool ClientChargeShopConf::has_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientChargeShopConf::set_has_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientChargeShopConf::clear_has_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientChargeShopConf::clear_cost() {
  if (cost_ != NULL) cost_->::TgsProtocol::ClientSource::Clear();
  clear_has_cost();
}
inline const ::TgsProtocol::ClientSource& ClientChargeShopConf::cost() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.cost)
  return cost_ != NULL ? *cost_ : *default_instance_->cost_;
}
inline ::TgsProtocol::ClientSource* ClientChargeShopConf::mutable_cost() {
  set_has_cost();
  if (cost_ == NULL) cost_ = new ::TgsProtocol::ClientSource;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.cost)
  return cost_;
}
inline ::TgsProtocol::ClientSource* ClientChargeShopConf::release_cost() {
  clear_has_cost();
  ::TgsProtocol::ClientSource* temp = cost_;
  cost_ = NULL;
  return temp;
}
inline void ClientChargeShopConf::set_allocated_cost(::TgsProtocol::ClientSource* cost) {
  delete cost_;
  cost_ = cost;
  if (cost) {
    set_has_cost();
  } else {
    clear_has_cost();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.cost)
}

// required uint32 status = 5;
inline bool ClientChargeShopConf::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientChargeShopConf::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientChargeShopConf::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientChargeShopConf::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::status() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.status)
  return status_;
}
inline void ClientChargeShopConf::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.status)
}

// required uint32 platformtype = 6;
inline bool ClientChargeShopConf::has_platformtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientChargeShopConf::set_has_platformtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientChargeShopConf::clear_has_platformtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientChargeShopConf::clear_platformtype() {
  platformtype_ = 0u;
  clear_has_platformtype();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::platformtype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.platformtype)
  return platformtype_;
}
inline void ClientChargeShopConf::set_platformtype(::google::protobuf::uint32 value) {
  set_has_platformtype();
  platformtype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.platformtype)
}

// required bytes limitNumber = 7;
inline bool ClientChargeShopConf::has_limitnumber() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientChargeShopConf::set_has_limitnumber() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientChargeShopConf::clear_has_limitnumber() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientChargeShopConf::clear_limitnumber() {
  if (limitnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_->clear();
  }
  clear_has_limitnumber();
}
inline const ::std::string& ClientChargeShopConf::limitnumber() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.limitNumber)
  return *limitnumber_;
}
inline void ClientChargeShopConf::set_limitnumber(const ::std::string& value) {
  set_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_ = new ::std::string;
  }
  limitnumber_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.limitNumber)
}
inline void ClientChargeShopConf::set_limitnumber(const char* value) {
  set_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_ = new ::std::string;
  }
  limitnumber_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientChargeShopConf.limitNumber)
}
inline void ClientChargeShopConf::set_limitnumber(const void* value, size_t size) {
  set_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_ = new ::std::string;
  }
  limitnumber_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientChargeShopConf.limitNumber)
}
inline ::std::string* ClientChargeShopConf::mutable_limitnumber() {
  set_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    limitnumber_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.limitNumber)
  return limitnumber_;
}
inline ::std::string* ClientChargeShopConf::release_limitnumber() {
  clear_has_limitnumber();
  if (limitnumber_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = limitnumber_;
    limitnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientChargeShopConf::set_allocated_limitnumber(::std::string* limitnumber) {
  if (limitnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete limitnumber_;
  }
  if (limitnumber) {
    set_has_limitnumber();
    limitnumber_ = limitnumber;
  } else {
    clear_has_limitnumber();
    limitnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.limitNumber)
}

// required uint32 limitType = 8;
inline bool ClientChargeShopConf::has_limittype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientChargeShopConf::set_has_limittype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientChargeShopConf::clear_has_limittype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientChargeShopConf::clear_limittype() {
  limittype_ = 0u;
  clear_has_limittype();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::limittype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.limitType)
  return limittype_;
}
inline void ClientChargeShopConf::set_limittype(::google::protobuf::uint32 value) {
  set_has_limittype();
  limittype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.limitType)
}

// required uint32 prizeFloat = 9;
inline bool ClientChargeShopConf::has_prizefloat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientChargeShopConf::set_has_prizefloat() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientChargeShopConf::clear_has_prizefloat() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientChargeShopConf::clear_prizefloat() {
  prizefloat_ = 0u;
  clear_has_prizefloat();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::prizefloat() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.prizeFloat)
  return prizefloat_;
}
inline void ClientChargeShopConf::set_prizefloat(::google::protobuf::uint32 value) {
  set_has_prizefloat();
  prizefloat_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.prizeFloat)
}

// required uint32 isDouble = 10;
inline bool ClientChargeShopConf::has_isdouble() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientChargeShopConf::set_has_isdouble() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientChargeShopConf::clear_has_isdouble() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientChargeShopConf::clear_isdouble() {
  isdouble_ = 0u;
  clear_has_isdouble();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::isdouble() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.isDouble)
  return isdouble_;
}
inline void ClientChargeShopConf::set_isdouble(::google::protobuf::uint32 value) {
  set_has_isdouble();
  isdouble_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.isDouble)
}

// required bytes IOSGoodId = 11;
inline bool ClientChargeShopConf::has_iosgoodid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientChargeShopConf::set_has_iosgoodid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientChargeShopConf::clear_has_iosgoodid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientChargeShopConf::clear_iosgoodid() {
  if (iosgoodid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iosgoodid_->clear();
  }
  clear_has_iosgoodid();
}
inline const ::std::string& ClientChargeShopConf::iosgoodid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.IOSGoodId)
  return *iosgoodid_;
}
inline void ClientChargeShopConf::set_iosgoodid(const ::std::string& value) {
  set_has_iosgoodid();
  if (iosgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iosgoodid_ = new ::std::string;
  }
  iosgoodid_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.IOSGoodId)
}
inline void ClientChargeShopConf::set_iosgoodid(const char* value) {
  set_has_iosgoodid();
  if (iosgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iosgoodid_ = new ::std::string;
  }
  iosgoodid_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientChargeShopConf.IOSGoodId)
}
inline void ClientChargeShopConf::set_iosgoodid(const void* value, size_t size) {
  set_has_iosgoodid();
  if (iosgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iosgoodid_ = new ::std::string;
  }
  iosgoodid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientChargeShopConf.IOSGoodId)
}
inline ::std::string* ClientChargeShopConf::mutable_iosgoodid() {
  set_has_iosgoodid();
  if (iosgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iosgoodid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.IOSGoodId)
  return iosgoodid_;
}
inline ::std::string* ClientChargeShopConf::release_iosgoodid() {
  clear_has_iosgoodid();
  if (iosgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = iosgoodid_;
    iosgoodid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientChargeShopConf::set_allocated_iosgoodid(::std::string* iosgoodid) {
  if (iosgoodid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete iosgoodid_;
  }
  if (iosgoodid) {
    set_has_iosgoodid();
    iosgoodid_ = iosgoodid;
  } else {
    clear_has_iosgoodid();
    iosgoodid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.IOSGoodId)
}

// required bytes AndroidGoodId = 12;
inline bool ClientChargeShopConf::has_androidgoodid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientChargeShopConf::set_has_androidgoodid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientChargeShopConf::clear_has_androidgoodid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientChargeShopConf::clear_androidgoodid() {
  if (androidgoodid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    androidgoodid_->clear();
  }
  clear_has_androidgoodid();
}
inline const ::std::string& ClientChargeShopConf::androidgoodid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.AndroidGoodId)
  return *androidgoodid_;
}
inline void ClientChargeShopConf::set_androidgoodid(const ::std::string& value) {
  set_has_androidgoodid();
  if (androidgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    androidgoodid_ = new ::std::string;
  }
  androidgoodid_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.AndroidGoodId)
}
inline void ClientChargeShopConf::set_androidgoodid(const char* value) {
  set_has_androidgoodid();
  if (androidgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    androidgoodid_ = new ::std::string;
  }
  androidgoodid_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientChargeShopConf.AndroidGoodId)
}
inline void ClientChargeShopConf::set_androidgoodid(const void* value, size_t size) {
  set_has_androidgoodid();
  if (androidgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    androidgoodid_ = new ::std::string;
  }
  androidgoodid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientChargeShopConf.AndroidGoodId)
}
inline ::std::string* ClientChargeShopConf::mutable_androidgoodid() {
  set_has_androidgoodid();
  if (androidgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    androidgoodid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.AndroidGoodId)
  return androidgoodid_;
}
inline ::std::string* ClientChargeShopConf::release_androidgoodid() {
  clear_has_androidgoodid();
  if (androidgoodid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = androidgoodid_;
    androidgoodid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientChargeShopConf::set_allocated_androidgoodid(::std::string* androidgoodid) {
  if (androidgoodid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete androidgoodid_;
  }
  if (androidgoodid) {
    set_has_androidgoodid();
    androidgoodid_ = androidgoodid;
  } else {
    clear_has_androidgoodid();
    androidgoodid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.AndroidGoodId)
}

// required bytes currency = 13;
inline bool ClientChargeShopConf::has_currency() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ClientChargeShopConf::set_has_currency() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ClientChargeShopConf::clear_has_currency() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ClientChargeShopConf::clear_currency() {
  if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_->clear();
  }
  clear_has_currency();
}
inline const ::std::string& ClientChargeShopConf::currency() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.currency)
  return *currency_;
}
inline void ClientChargeShopConf::set_currency(const ::std::string& value) {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_ = new ::std::string;
  }
  currency_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.currency)
}
inline void ClientChargeShopConf::set_currency(const char* value) {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_ = new ::std::string;
  }
  currency_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientChargeShopConf.currency)
}
inline void ClientChargeShopConf::set_currency(const void* value, size_t size) {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_ = new ::std::string;
  }
  currency_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientChargeShopConf.currency)
}
inline ::std::string* ClientChargeShopConf::mutable_currency() {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.currency)
  return currency_;
}
inline ::std::string* ClientChargeShopConf::release_currency() {
  clear_has_currency();
  if (currency_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = currency_;
    currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientChargeShopConf::set_allocated_currency(::std::string* currency) {
  if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currency_;
  }
  if (currency) {
    set_has_currency();
    currency_ = currency;
  } else {
    clear_has_currency();
    currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.currency)
}

// required uint32 goodGift = 14;
inline bool ClientChargeShopConf::has_goodgift() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ClientChargeShopConf::set_has_goodgift() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ClientChargeShopConf::clear_has_goodgift() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ClientChargeShopConf::clear_goodgift() {
  goodgift_ = 0u;
  clear_has_goodgift();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::goodgift() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.goodGift)
  return goodgift_;
}
inline void ClientChargeShopConf::set_goodgift(::google::protobuf::uint32 value) {
  set_has_goodgift();
  goodgift_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.goodGift)
}

// required bytes itemIcon = 15;
inline bool ClientChargeShopConf::has_itemicon() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ClientChargeShopConf::set_has_itemicon() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ClientChargeShopConf::clear_has_itemicon() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ClientChargeShopConf::clear_itemicon() {
  if (itemicon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemicon_->clear();
  }
  clear_has_itemicon();
}
inline const ::std::string& ClientChargeShopConf::itemicon() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.itemIcon)
  return *itemicon_;
}
inline void ClientChargeShopConf::set_itemicon(const ::std::string& value) {
  set_has_itemicon();
  if (itemicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemicon_ = new ::std::string;
  }
  itemicon_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.itemIcon)
}
inline void ClientChargeShopConf::set_itemicon(const char* value) {
  set_has_itemicon();
  if (itemicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemicon_ = new ::std::string;
  }
  itemicon_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientChargeShopConf.itemIcon)
}
inline void ClientChargeShopConf::set_itemicon(const void* value, size_t size) {
  set_has_itemicon();
  if (itemicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemicon_ = new ::std::string;
  }
  itemicon_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientChargeShopConf.itemIcon)
}
inline ::std::string* ClientChargeShopConf::mutable_itemicon() {
  set_has_itemicon();
  if (itemicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemicon_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.itemIcon)
  return itemicon_;
}
inline ::std::string* ClientChargeShopConf::release_itemicon() {
  clear_has_itemicon();
  if (itemicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemicon_;
    itemicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientChargeShopConf::set_allocated_itemicon(::std::string* itemicon) {
  if (itemicon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemicon_;
  }
  if (itemicon) {
    set_has_itemicon();
    itemicon_ = itemicon;
  } else {
    clear_has_itemicon();
    itemicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.itemIcon)
}

// required bytes collectionIcon = 16;
inline bool ClientChargeShopConf::has_collectionicon() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ClientChargeShopConf::set_has_collectionicon() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ClientChargeShopConf::clear_has_collectionicon() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ClientChargeShopConf::clear_collectionicon() {
  if (collectionicon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    collectionicon_->clear();
  }
  clear_has_collectionicon();
}
inline const ::std::string& ClientChargeShopConf::collectionicon() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.collectionIcon)
  return *collectionicon_;
}
inline void ClientChargeShopConf::set_collectionicon(const ::std::string& value) {
  set_has_collectionicon();
  if (collectionicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    collectionicon_ = new ::std::string;
  }
  collectionicon_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.collectionIcon)
}
inline void ClientChargeShopConf::set_collectionicon(const char* value) {
  set_has_collectionicon();
  if (collectionicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    collectionicon_ = new ::std::string;
  }
  collectionicon_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientChargeShopConf.collectionIcon)
}
inline void ClientChargeShopConf::set_collectionicon(const void* value, size_t size) {
  set_has_collectionicon();
  if (collectionicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    collectionicon_ = new ::std::string;
  }
  collectionicon_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientChargeShopConf.collectionIcon)
}
inline ::std::string* ClientChargeShopConf::mutable_collectionicon() {
  set_has_collectionicon();
  if (collectionicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    collectionicon_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.collectionIcon)
  return collectionicon_;
}
inline ::std::string* ClientChargeShopConf::release_collectionicon() {
  clear_has_collectionicon();
  if (collectionicon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = collectionicon_;
    collectionicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientChargeShopConf::set_allocated_collectionicon(::std::string* collectionicon) {
  if (collectionicon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete collectionicon_;
  }
  if (collectionicon) {
    set_has_collectionicon();
    collectionicon_ = collectionicon;
  } else {
    clear_has_collectionicon();
    collectionicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.collectionIcon)
}

// required bytes strName = 17;
inline bool ClientChargeShopConf::has_strname() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ClientChargeShopConf::set_has_strname() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ClientChargeShopConf::clear_has_strname() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ClientChargeShopConf::clear_strname() {
  if (strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& ClientChargeShopConf::strname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.strName)
  return *strname_;
}
inline void ClientChargeShopConf::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.strName)
}
inline void ClientChargeShopConf::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientChargeShopConf.strName)
}
inline void ClientChargeShopConf::set_strname(const void* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientChargeShopConf.strName)
}
inline ::std::string* ClientChargeShopConf::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.strName)
  return strname_;
}
inline ::std::string* ClientChargeShopConf::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientChargeShopConf::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.strName)
}

// required bytes strDescription = 18;
inline bool ClientChargeShopConf::has_strdescription() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ClientChargeShopConf::set_has_strdescription() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ClientChargeShopConf::clear_has_strdescription() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ClientChargeShopConf::clear_strdescription() {
  if (strdescription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strdescription_->clear();
  }
  clear_has_strdescription();
}
inline const ::std::string& ClientChargeShopConf::strdescription() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.strDescription)
  return *strdescription_;
}
inline void ClientChargeShopConf::set_strdescription(const ::std::string& value) {
  set_has_strdescription();
  if (strdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strdescription_ = new ::std::string;
  }
  strdescription_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.strDescription)
}
inline void ClientChargeShopConf::set_strdescription(const char* value) {
  set_has_strdescription();
  if (strdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strdescription_ = new ::std::string;
  }
  strdescription_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientChargeShopConf.strDescription)
}
inline void ClientChargeShopConf::set_strdescription(const void* value, size_t size) {
  set_has_strdescription();
  if (strdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strdescription_ = new ::std::string;
  }
  strdescription_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientChargeShopConf.strDescription)
}
inline ::std::string* ClientChargeShopConf::mutable_strdescription() {
  set_has_strdescription();
  if (strdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strdescription_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.strDescription)
  return strdescription_;
}
inline ::std::string* ClientChargeShopConf::release_strdescription() {
  clear_has_strdescription();
  if (strdescription_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = strdescription_;
    strdescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientChargeShopConf::set_allocated_strdescription(::std::string* strdescription) {
  if (strdescription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strdescription_;
  }
  if (strdescription) {
    set_has_strdescription();
    strdescription_ = strdescription;
  } else {
    clear_has_strdescription();
    strdescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.strDescription)
}

// required uint32 startTime = 19;
inline bool ClientChargeShopConf::has_starttime() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ClientChargeShopConf::set_has_starttime() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ClientChargeShopConf::clear_has_starttime() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ClientChargeShopConf::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::starttime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.startTime)
  return starttime_;
}
inline void ClientChargeShopConf::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.startTime)
}

// required uint32 endTime = 20;
inline bool ClientChargeShopConf::has_endtime() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ClientChargeShopConf::set_has_endtime() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ClientChargeShopConf::clear_has_endtime() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ClientChargeShopConf::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::endtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.endTime)
  return endtime_;
}
inline void ClientChargeShopConf::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.endTime)
}

// optional uint32 monthCardType = 21;
inline bool ClientChargeShopConf::has_monthcardtype() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ClientChargeShopConf::set_has_monthcardtype() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ClientChargeShopConf::clear_has_monthcardtype() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ClientChargeShopConf::clear_monthcardtype() {
  monthcardtype_ = 0u;
  clear_has_monthcardtype();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::monthcardtype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.monthCardType)
  return monthcardtype_;
}
inline void ClientChargeShopConf::set_monthcardtype(::google::protobuf::uint32 value) {
  set_has_monthcardtype();
  monthcardtype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.monthCardType)
}

// repeated .TgsProtocol.ClientSource extra = 22;
inline int ClientChargeShopConf::extra_size() const {
  return extra_.size();
}
inline void ClientChargeShopConf::clear_extra() {
  extra_.Clear();
}
inline const ::TgsProtocol::ClientSource& ClientChargeShopConf::extra(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.extra)
  return extra_.Get(index);
}
inline ::TgsProtocol::ClientSource* ClientChargeShopConf::mutable_extra(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.extra)
  return extra_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* ClientChargeShopConf::add_extra() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientChargeShopConf.extra)
  return extra_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
ClientChargeShopConf::extra() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientChargeShopConf.extra)
  return extra_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
ClientChargeShopConf::mutable_extra() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientChargeShopConf.extra)
  return &extra_;
}

// optional .TgsProtocol.ClientSource oldPrice = 23;
inline bool ClientChargeShopConf::has_oldprice() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ClientChargeShopConf::set_has_oldprice() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ClientChargeShopConf::clear_has_oldprice() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ClientChargeShopConf::clear_oldprice() {
  if (oldprice_ != NULL) oldprice_->::TgsProtocol::ClientSource::Clear();
  clear_has_oldprice();
}
inline const ::TgsProtocol::ClientSource& ClientChargeShopConf::oldprice() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.oldPrice)
  return oldprice_ != NULL ? *oldprice_ : *default_instance_->oldprice_;
}
inline ::TgsProtocol::ClientSource* ClientChargeShopConf::mutable_oldprice() {
  set_has_oldprice();
  if (oldprice_ == NULL) oldprice_ = new ::TgsProtocol::ClientSource;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientChargeShopConf.oldPrice)
  return oldprice_;
}
inline ::TgsProtocol::ClientSource* ClientChargeShopConf::release_oldprice() {
  clear_has_oldprice();
  ::TgsProtocol::ClientSource* temp = oldprice_;
  oldprice_ = NULL;
  return temp;
}
inline void ClientChargeShopConf::set_allocated_oldprice(::TgsProtocol::ClientSource* oldprice) {
  delete oldprice_;
  oldprice_ = oldprice;
  if (oldprice) {
    set_has_oldprice();
  } else {
    clear_has_oldprice();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientChargeShopConf.oldPrice)
}

// optional uint32 rate = 24;
inline bool ClientChargeShopConf::has_rate() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ClientChargeShopConf::set_has_rate() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ClientChargeShopConf::clear_has_rate() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ClientChargeShopConf::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::rate() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.rate)
  return rate_;
}
inline void ClientChargeShopConf::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.rate)
}

// optional uint32 monthCardPrize = 25;
inline bool ClientChargeShopConf::has_monthcardprize() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ClientChargeShopConf::set_has_monthcardprize() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ClientChargeShopConf::clear_has_monthcardprize() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ClientChargeShopConf::clear_monthcardprize() {
  monthcardprize_ = 0u;
  clear_has_monthcardprize();
}
inline ::google::protobuf::uint32 ClientChargeShopConf::monthcardprize() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientChargeShopConf.monthCardPrize)
  return monthcardprize_;
}
inline void ClientChargeShopConf::set_monthcardprize(::google::protobuf::uint32 value) {
  set_has_monthcardprize();
  monthcardprize_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientChargeShopConf.monthCardPrize)
}

// -------------------------------------------------------------------

// ClientSevenDayRankEle

// required uint32 rank = 1;
inline bool ClientSevenDayRankEle::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSevenDayRankEle::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSevenDayRankEle::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSevenDayRankEle::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 ClientSevenDayRankEle::rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSevenDayRankEle.rank)
  return rank_;
}
inline void ClientSevenDayRankEle::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSevenDayRankEle.rank)
}

// required uint64 charid = 2;
inline bool ClientSevenDayRankEle::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSevenDayRankEle::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSevenDayRankEle::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSevenDayRankEle::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ClientSevenDayRankEle::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSevenDayRankEle.charid)
  return charid_;
}
inline void ClientSevenDayRankEle::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSevenDayRankEle.charid)
}

// required string name = 3;
inline bool ClientSevenDayRankEle::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSevenDayRankEle::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSevenDayRankEle::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSevenDayRankEle::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ClientSevenDayRankEle::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSevenDayRankEle.name)
  return *name_;
}
inline void ClientSevenDayRankEle::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSevenDayRankEle.name)
}
inline void ClientSevenDayRankEle::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientSevenDayRankEle.name)
}
inline void ClientSevenDayRankEle::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientSevenDayRankEle.name)
}
inline ::std::string* ClientSevenDayRankEle::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientSevenDayRankEle.name)
  return name_;
}
inline ::std::string* ClientSevenDayRankEle::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientSevenDayRankEle::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientSevenDayRankEle.name)
}

// required uint32 value = 4;
inline bool ClientSevenDayRankEle::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientSevenDayRankEle::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientSevenDayRankEle::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientSevenDayRankEle::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ClientSevenDayRankEle::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSevenDayRankEle.value)
  return value_;
}
inline void ClientSevenDayRankEle::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSevenDayRankEle.value)
}

// required uint32 photo = 5;
inline bool ClientSevenDayRankEle::has_photo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientSevenDayRankEle::set_has_photo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientSevenDayRankEle::clear_has_photo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientSevenDayRankEle::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 ClientSevenDayRankEle::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSevenDayRankEle.photo)
  return photo_;
}
inline void ClientSevenDayRankEle::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSevenDayRankEle.photo)
}

// required uint32 level = 6;
inline bool ClientSevenDayRankEle::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientSevenDayRankEle::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientSevenDayRankEle::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientSevenDayRankEle::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 ClientSevenDayRankEle::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSevenDayRankEle.level)
  return level_;
}
inline void ClientSevenDayRankEle::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSevenDayRankEle.level)
}

// -------------------------------------------------------------------

// ClientSevenDayRank

// required uint32 day = 1;
inline bool ClientSevenDayRank::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSevenDayRank::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSevenDayRank::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSevenDayRank::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 ClientSevenDayRank::day() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSevenDayRank.day)
  return day_;
}
inline void ClientSevenDayRank::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSevenDayRank.day)
}

// required uint32 seconds = 2;
inline bool ClientSevenDayRank::has_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSevenDayRank::set_has_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSevenDayRank::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSevenDayRank::clear_seconds() {
  seconds_ = 0u;
  clear_has_seconds();
}
inline ::google::protobuf::uint32 ClientSevenDayRank::seconds() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSevenDayRank.seconds)
  return seconds_;
}
inline void ClientSevenDayRank::set_seconds(::google::protobuf::uint32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientSevenDayRank.seconds)
}

// repeated .TgsProtocol.ClientSevenDayRankEle item = 3;
inline int ClientSevenDayRank::item_size() const {
  return item_.size();
}
inline void ClientSevenDayRank::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::ClientSevenDayRankEle& ClientSevenDayRank::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientSevenDayRank.item)
  return item_.Get(index);
}
inline ::TgsProtocol::ClientSevenDayRankEle* ClientSevenDayRank::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientSevenDayRank.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::ClientSevenDayRankEle* ClientSevenDayRank::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientSevenDayRank.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSevenDayRankEle >&
ClientSevenDayRank::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientSevenDayRank.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSevenDayRankEle >*
ClientSevenDayRank::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientSevenDayRank.item)
  return &item_;
}

// -------------------------------------------------------------------

// DbNoticeEle

// required uint32 id = 1;
inline bool DbNoticeEle::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbNoticeEle::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbNoticeEle::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbNoticeEle::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DbNoticeEle::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.id)
  return id_;
}
inline void DbNoticeEle::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.id)
}

// required .TgsProtocol.eNoticeType type = 2;
inline bool DbNoticeEle::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbNoticeEle::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbNoticeEle::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbNoticeEle::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::eNoticeType DbNoticeEle::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.type)
  return static_cast< ::TgsProtocol::eNoticeType >(type_);
}
inline void DbNoticeEle::set_type(::TgsProtocol::eNoticeType value) {
  assert(::TgsProtocol::eNoticeType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.type)
}

// required uint32 values = 3;
inline bool DbNoticeEle::has_values() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbNoticeEle::set_has_values() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbNoticeEle::clear_has_values() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbNoticeEle::clear_values() {
  values_ = 0u;
  clear_has_values();
}
inline ::google::protobuf::uint32 DbNoticeEle::values() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.values)
  return values_;
}
inline void DbNoticeEle::set_values(::google::protobuf::uint32 value) {
  set_has_values();
  values_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.values)
}

// required uint32 wordsid = 4;
inline bool DbNoticeEle::has_wordsid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbNoticeEle::set_has_wordsid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbNoticeEle::clear_has_wordsid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbNoticeEle::clear_wordsid() {
  wordsid_ = 0u;
  clear_has_wordsid();
}
inline ::google::protobuf::uint32 DbNoticeEle::wordsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.wordsid)
  return wordsid_;
}
inline void DbNoticeEle::set_wordsid(::google::protobuf::uint32 value) {
  set_has_wordsid();
  wordsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.wordsid)
}

// required uint32 pro = 5;
inline bool DbNoticeEle::has_pro() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbNoticeEle::set_has_pro() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbNoticeEle::clear_has_pro() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbNoticeEle::clear_pro() {
  pro_ = 0u;
  clear_has_pro();
}
inline ::google::protobuf::uint32 DbNoticeEle::pro() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.pro)
  return pro_;
}
inline void DbNoticeEle::set_pro(::google::protobuf::uint32 value) {
  set_has_pro();
  pro_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.pro)
}

// repeated .TgsProtocol.ClientSource reward = 6;
inline int DbNoticeEle::reward_size() const {
  return reward_.size();
}
inline void DbNoticeEle::clear_reward() {
  reward_.Clear();
}
inline const ::TgsProtocol::ClientSource& DbNoticeEle::reward(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.reward)
  return reward_.Get(index);
}
inline ::TgsProtocol::ClientSource* DbNoticeEle::mutable_reward(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbNoticeEle.reward)
  return reward_.Mutable(index);
}
inline ::TgsProtocol::ClientSource* DbNoticeEle::add_reward() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DbNoticeEle.reward)
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >&
DbNoticeEle::reward() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbNoticeEle.reward)
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientSource >*
DbNoticeEle::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbNoticeEle.reward)
  return &reward_;
}

// required uint32 number = 7;
inline bool DbNoticeEle::has_number() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DbNoticeEle::set_has_number() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DbNoticeEle::clear_has_number() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DbNoticeEle::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 DbNoticeEle::number() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.number)
  return number_;
}
inline void DbNoticeEle::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.number)
}

// required uint32 timeout = 8;
inline bool DbNoticeEle::has_timeout() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DbNoticeEle::set_has_timeout() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DbNoticeEle::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DbNoticeEle::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 DbNoticeEle::timeout() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.timeout)
  return timeout_;
}
inline void DbNoticeEle::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.timeout)
}

// required uint32 reason = 9;
inline bool DbNoticeEle::has_reason() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DbNoticeEle::set_has_reason() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DbNoticeEle::clear_has_reason() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DbNoticeEle::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 DbNoticeEle::reason() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.reason)
  return reason_;
}
inline void DbNoticeEle::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.reason)
}

// required uint32 rate = 10;
inline bool DbNoticeEle::has_rate() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DbNoticeEle::set_has_rate() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DbNoticeEle::clear_has_rate() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DbNoticeEle::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 DbNoticeEle::rate() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.rate)
  return rate_;
}
inline void DbNoticeEle::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.rate)
}

// required uint32 sendNumber = 11;
inline bool DbNoticeEle::has_sendnumber() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DbNoticeEle::set_has_sendnumber() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DbNoticeEle::clear_has_sendnumber() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DbNoticeEle::clear_sendnumber() {
  sendnumber_ = 0u;
  clear_has_sendnumber();
}
inline ::google::protobuf::uint32 DbNoticeEle::sendnumber() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.sendNumber)
  return sendnumber_;
}
inline void DbNoticeEle::set_sendnumber(::google::protobuf::uint32 value) {
  set_has_sendnumber();
  sendnumber_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.sendNumber)
}

// required uint32 createTime = 12;
inline bool DbNoticeEle::has_createtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DbNoticeEle::set_has_createtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DbNoticeEle::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DbNoticeEle::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 DbNoticeEle::createtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.createTime)
  return createtime_;
}
inline void DbNoticeEle::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.createTime)
}

// required string content = 13;
inline bool DbNoticeEle::has_content() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DbNoticeEle::set_has_content() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DbNoticeEle::clear_has_content() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DbNoticeEle::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& DbNoticeEle::content() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbNoticeEle.content)
  return *content_;
}
inline void DbNoticeEle::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbNoticeEle.content)
}
inline void DbNoticeEle::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbNoticeEle.content)
}
inline void DbNoticeEle::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbNoticeEle.content)
}
inline ::std::string* DbNoticeEle::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbNoticeEle.content)
  return content_;
}
inline ::std::string* DbNoticeEle::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbNoticeEle::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbNoticeEle.content)
}

// -------------------------------------------------------------------

// OptGlobal

// repeated .TgsProtocol.DbNoticeEle notice = 1;
inline int OptGlobal::notice_size() const {
  return notice_.size();
}
inline void OptGlobal::clear_notice() {
  notice_.Clear();
}
inline const ::TgsProtocol::DbNoticeEle& OptGlobal::notice(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.OptGlobal.notice)
  return notice_.Get(index);
}
inline ::TgsProtocol::DbNoticeEle* OptGlobal::mutable_notice(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.OptGlobal.notice)
  return notice_.Mutable(index);
}
inline ::TgsProtocol::DbNoticeEle* OptGlobal::add_notice() {
  // @@protoc_insertion_point(field_add:TgsProtocol.OptGlobal.notice)
  return notice_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbNoticeEle >&
OptGlobal::notice() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.OptGlobal.notice)
  return notice_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbNoticeEle >*
OptGlobal::mutable_notice() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.OptGlobal.notice)
  return &notice_;
}

// -------------------------------------------------------------------

// ClientContinueCharge

// required uint32 index = 1;
inline bool ClientContinueCharge::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientContinueCharge::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientContinueCharge::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientContinueCharge::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ClientContinueCharge::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.index)
  return index_;
}
inline void ClientContinueCharge::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientContinueCharge.index)
}

// required uint32 cd = 2;
inline bool ClientContinueCharge::has_cd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientContinueCharge::set_has_cd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientContinueCharge::clear_has_cd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientContinueCharge::clear_cd() {
  cd_ = 0u;
  clear_has_cd();
}
inline ::google::protobuf::uint32 ClientContinueCharge::cd() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.cd)
  return cd_;
}
inline void ClientContinueCharge::set_cd(::google::protobuf::uint32 value) {
  set_has_cd();
  cd_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientContinueCharge.cd)
}

// required string name = 3;
inline bool ClientContinueCharge::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientContinueCharge::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientContinueCharge::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientContinueCharge::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ClientContinueCharge::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.name)
  return *name_;
}
inline void ClientContinueCharge::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientContinueCharge.name)
}
inline void ClientContinueCharge::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ClientContinueCharge.name)
}
inline void ClientContinueCharge::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ClientContinueCharge.name)
}
inline ::std::string* ClientContinueCharge::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientContinueCharge.name)
  return name_;
}
inline ::std::string* ClientContinueCharge::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientContinueCharge::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientContinueCharge.name)
}

// repeated uint32 line = 4;
inline int ClientContinueCharge::line_size() const {
  return line_.size();
}
inline void ClientContinueCharge::clear_line() {
  line_.Clear();
}
inline ::google::protobuf::uint32 ClientContinueCharge::line(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.line)
  return line_.Get(index);
}
inline void ClientContinueCharge::set_line(int index, ::google::protobuf::uint32 value) {
  line_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientContinueCharge.line)
}
inline void ClientContinueCharge::add_line(::google::protobuf::uint32 value) {
  line_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientContinueCharge.line)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientContinueCharge::line() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientContinueCharge.line)
  return line_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientContinueCharge::mutable_line() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientContinueCharge.line)
  return &line_;
}

// repeated uint32 skillIndex = 5;
inline int ClientContinueCharge::skillindex_size() const {
  return skillindex_.size();
}
inline void ClientContinueCharge::clear_skillindex() {
  skillindex_.Clear();
}
inline ::google::protobuf::uint32 ClientContinueCharge::skillindex(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.skillIndex)
  return skillindex_.Get(index);
}
inline void ClientContinueCharge::set_skillindex(int index, ::google::protobuf::uint32 value) {
  skillindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientContinueCharge.skillIndex)
}
inline void ClientContinueCharge::add_skillindex(::google::protobuf::uint32 value) {
  skillindex_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientContinueCharge.skillIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientContinueCharge::skillindex() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientContinueCharge.skillIndex)
  return skillindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientContinueCharge::mutable_skillindex() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientContinueCharge.skillIndex)
  return &skillindex_;
}

// required uint32 chargeType = 6;
inline bool ClientContinueCharge::has_chargetype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientContinueCharge::set_has_chargetype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientContinueCharge::clear_has_chargetype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientContinueCharge::clear_chargetype() {
  chargetype_ = 0u;
  clear_has_chargetype();
}
inline ::google::protobuf::uint32 ClientContinueCharge::chargetype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.chargeType)
  return chargetype_;
}
inline void ClientContinueCharge::set_chargetype(::google::protobuf::uint32 value) {
  set_has_chargetype();
  chargetype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientContinueCharge.chargeType)
}

// repeated uint32 chargeValue = 7;
inline int ClientContinueCharge::chargevalue_size() const {
  return chargevalue_.size();
}
inline void ClientContinueCharge::clear_chargevalue() {
  chargevalue_.Clear();
}
inline ::google::protobuf::uint32 ClientContinueCharge::chargevalue(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.chargeValue)
  return chargevalue_.Get(index);
}
inline void ClientContinueCharge::set_chargevalue(int index, ::google::protobuf::uint32 value) {
  chargevalue_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientContinueCharge.chargeValue)
}
inline void ClientContinueCharge::add_chargevalue(::google::protobuf::uint32 value) {
  chargevalue_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientContinueCharge.chargeValue)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientContinueCharge::chargevalue() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientContinueCharge.chargeValue)
  return chargevalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientContinueCharge::mutable_chargevalue() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientContinueCharge.chargeValue)
  return &chargevalue_;
}

// repeated .TgsProtocol.SourceList chargePrize = 8;
inline int ClientContinueCharge::chargeprize_size() const {
  return chargeprize_.size();
}
inline void ClientContinueCharge::clear_chargeprize() {
  chargeprize_.Clear();
}
inline const ::TgsProtocol::SourceList& ClientContinueCharge::chargeprize(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.chargePrize)
  return chargeprize_.Get(index);
}
inline ::TgsProtocol::SourceList* ClientContinueCharge::mutable_chargeprize(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientContinueCharge.chargePrize)
  return chargeprize_.Mutable(index);
}
inline ::TgsProtocol::SourceList* ClientContinueCharge::add_chargeprize() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientContinueCharge.chargePrize)
  return chargeprize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
ClientContinueCharge::chargeprize() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientContinueCharge.chargePrize)
  return chargeprize_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
ClientContinueCharge::mutable_chargeprize() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientContinueCharge.chargePrize)
  return &chargeprize_;
}

// repeated .TgsProtocol.SourceList chargePrize2 = 9;
inline int ClientContinueCharge::chargeprize2_size() const {
  return chargeprize2_.size();
}
inline void ClientContinueCharge::clear_chargeprize2() {
  chargeprize2_.Clear();
}
inline const ::TgsProtocol::SourceList& ClientContinueCharge::chargeprize2(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.chargePrize2)
  return chargeprize2_.Get(index);
}
inline ::TgsProtocol::SourceList* ClientContinueCharge::mutable_chargeprize2(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientContinueCharge.chargePrize2)
  return chargeprize2_.Mutable(index);
}
inline ::TgsProtocol::SourceList* ClientContinueCharge::add_chargeprize2() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientContinueCharge.chargePrize2)
  return chargeprize2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
ClientContinueCharge::chargeprize2() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientContinueCharge.chargePrize2)
  return chargeprize2_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
ClientContinueCharge::mutable_chargeprize2() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientContinueCharge.chargePrize2)
  return &chargeprize2_;
}

// repeated .TgsProtocol.SourceList chargePrize3 = 10;
inline int ClientContinueCharge::chargeprize3_size() const {
  return chargeprize3_.size();
}
inline void ClientContinueCharge::clear_chargeprize3() {
  chargeprize3_.Clear();
}
inline const ::TgsProtocol::SourceList& ClientContinueCharge::chargeprize3(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.chargePrize3)
  return chargeprize3_.Get(index);
}
inline ::TgsProtocol::SourceList* ClientContinueCharge::mutable_chargeprize3(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientContinueCharge.chargePrize3)
  return chargeprize3_.Mutable(index);
}
inline ::TgsProtocol::SourceList* ClientContinueCharge::add_chargeprize3() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientContinueCharge.chargePrize3)
  return chargeprize3_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
ClientContinueCharge::chargeprize3() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientContinueCharge.chargePrize3)
  return chargeprize3_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
ClientContinueCharge::mutable_chargeprize3() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientContinueCharge.chargePrize3)
  return &chargeprize3_;
}

// repeated .TgsProtocol.SourceList chargePrize4 = 11;
inline int ClientContinueCharge::chargeprize4_size() const {
  return chargeprize4_.size();
}
inline void ClientContinueCharge::clear_chargeprize4() {
  chargeprize4_.Clear();
}
inline const ::TgsProtocol::SourceList& ClientContinueCharge::chargeprize4(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientContinueCharge.chargePrize4)
  return chargeprize4_.Get(index);
}
inline ::TgsProtocol::SourceList* ClientContinueCharge::mutable_chargeprize4(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientContinueCharge.chargePrize4)
  return chargeprize4_.Mutable(index);
}
inline ::TgsProtocol::SourceList* ClientContinueCharge::add_chargeprize4() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientContinueCharge.chargePrize4)
  return chargeprize4_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >&
ClientContinueCharge::chargeprize4() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientContinueCharge.chargePrize4)
  return chargeprize4_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SourceList >*
ClientContinueCharge::mutable_chargeprize4() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientContinueCharge.chargePrize4)
  return &chargeprize4_;
}

// -------------------------------------------------------------------

// DbHandBookEle

// required uint32 key = 1;
inline bool DbHandBookEle::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbHandBookEle::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbHandBookEle::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbHandBookEle::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 DbHandBookEle::key() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbHandBookEle.key)
  return key_;
}
inline void DbHandBookEle::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbHandBookEle.key)
}

// required uint32 val = 2;
inline bool DbHandBookEle::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbHandBookEle::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbHandBookEle::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbHandBookEle::clear_val() {
  val_ = 0u;
  clear_has_val();
}
inline ::google::protobuf::uint32 DbHandBookEle::val() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbHandBookEle.val)
  return val_;
}
inline void DbHandBookEle::set_val(::google::protobuf::uint32 value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbHandBookEle.val)
}

// -------------------------------------------------------------------

// DbHandBook

// repeated .TgsProtocol.DbHandBookEle one = 1;
inline int DbHandBook::one_size() const {
  return one_.size();
}
inline void DbHandBook::clear_one() {
  one_.Clear();
}
inline const ::TgsProtocol::DbHandBookEle& DbHandBook::one(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbHandBook.one)
  return one_.Get(index);
}
inline ::TgsProtocol::DbHandBookEle* DbHandBook::mutable_one(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbHandBook.one)
  return one_.Mutable(index);
}
inline ::TgsProtocol::DbHandBookEle* DbHandBook::add_one() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DbHandBook.one)
  return one_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbHandBookEle >&
DbHandBook::one() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbHandBook.one)
  return one_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbHandBookEle >*
DbHandBook::mutable_one() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbHandBook.one)
  return &one_;
}

// -------------------------------------------------------------------

// ClientHandBook

// required uint32 key = 1;
inline bool ClientHandBook::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientHandBook::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientHandBook::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientHandBook::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ClientHandBook::key() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHandBook.key)
  return key_;
}
inline void ClientHandBook::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHandBook.key)
}

// required uint32 val = 2;
inline bool ClientHandBook::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientHandBook::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientHandBook::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientHandBook::clear_val() {
  val_ = 0u;
  clear_has_val();
}
inline ::google::protobuf::uint32 ClientHandBook::val() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientHandBook.val)
  return val_;
}
inline void ClientHandBook::set_val(::google::protobuf::uint32 value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientHandBook.val)
}

// -------------------------------------------------------------------

// PlayerTurntableData

// optional uint32 server_id = 1;
inline bool PlayerTurntableData::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerTurntableData::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerTurntableData::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerTurntableData::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 PlayerTurntableData::server_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.server_id)
  return server_id_;
}
inline void PlayerTurntableData::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.server_id)
}

// optional string server_name = 2;
inline bool PlayerTurntableData::has_server_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerTurntableData::set_has_server_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerTurntableData::clear_has_server_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerTurntableData::clear_server_name() {
  if (server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_->clear();
  }
  clear_has_server_name();
}
inline const ::std::string& PlayerTurntableData::server_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.server_name)
  return *server_name_;
}
inline void PlayerTurntableData::set_server_name(const ::std::string& value) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.server_name)
}
inline void PlayerTurntableData::set_server_name(const char* value) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.PlayerTurntableData.server_name)
}
inline void PlayerTurntableData::set_server_name(const char* value, size_t size) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.PlayerTurntableData.server_name)
}
inline ::std::string* PlayerTurntableData::mutable_server_name() {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerTurntableData.server_name)
  return server_name_;
}
inline ::std::string* PlayerTurntableData::release_server_name() {
  clear_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = server_name_;
    server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlayerTurntableData::set_allocated_server_name(::std::string* server_name) {
  if (server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete server_name_;
  }
  if (server_name) {
    set_has_server_name();
    server_name_ = server_name;
  } else {
    clear_has_server_name();
    server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.PlayerTurntableData.server_name)
}

// required uint64 charid = 3;
inline bool PlayerTurntableData::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerTurntableData::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerTurntableData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerTurntableData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 PlayerTurntableData::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.charid)
  return charid_;
}
inline void PlayerTurntableData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.charid)
}

// required uint32 photo = 4;
inline bool PlayerTurntableData::has_photo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerTurntableData::set_has_photo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerTurntableData::clear_has_photo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerTurntableData::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 PlayerTurntableData::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.photo)
  return photo_;
}
inline void PlayerTurntableData::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.photo)
}

// required string name = 5;
inline bool PlayerTurntableData::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerTurntableData::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerTurntableData::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerTurntableData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PlayerTurntableData::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.name)
  return *name_;
}
inline void PlayerTurntableData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.name)
}
inline void PlayerTurntableData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.PlayerTurntableData.name)
}
inline void PlayerTurntableData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.PlayerTurntableData.name)
}
inline ::std::string* PlayerTurntableData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerTurntableData.name)
  return name_;
}
inline ::std::string* PlayerTurntableData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlayerTurntableData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.PlayerTurntableData.name)
}

// required uint32 actid = 6;
inline bool PlayerTurntableData::has_actid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerTurntableData::set_has_actid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerTurntableData::clear_has_actid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerTurntableData::clear_actid() {
  actid_ = 0u;
  clear_has_actid();
}
inline ::google::protobuf::uint32 PlayerTurntableData::actid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.actid)
  return actid_;
}
inline void PlayerTurntableData::set_actid(::google::protobuf::uint32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.actid)
}

// required uint32 turnnum = 7;
inline bool PlayerTurntableData::has_turnnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerTurntableData::set_has_turnnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerTurntableData::clear_has_turnnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerTurntableData::clear_turnnum() {
  turnnum_ = 0u;
  clear_has_turnnum();
}
inline ::google::protobuf::uint32 PlayerTurntableData::turnnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.turnnum)
  return turnnum_;
}
inline void PlayerTurntableData::set_turnnum(::google::protobuf::uint32 value) {
  set_has_turnnum();
  turnnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.turnnum)
}

// optional uint32 mailtime = 8;
inline bool PlayerTurntableData::has_mailtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerTurntableData::set_has_mailtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerTurntableData::clear_has_mailtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerTurntableData::clear_mailtime() {
  mailtime_ = 0u;
  clear_has_mailtime();
}
inline ::google::protobuf::uint32 PlayerTurntableData::mailtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.mailtime)
  return mailtime_;
}
inline void PlayerTurntableData::set_mailtime(::google::protobuf::uint32 value) {
  set_has_mailtime();
  mailtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.mailtime)
}

// required uint64 uid = 9;
inline bool PlayerTurntableData::has_uid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerTurntableData::set_has_uid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerTurntableData::clear_has_uid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerTurntableData::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 PlayerTurntableData::uid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.uid)
  return uid_;
}
inline void PlayerTurntableData::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.uid)
}

// optional uint32 nationalId = 10;
inline bool PlayerTurntableData::has_nationalid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerTurntableData::set_has_nationalid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerTurntableData::clear_has_nationalid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerTurntableData::clear_nationalid() {
  nationalid_ = 0u;
  clear_has_nationalid();
}
inline ::google::protobuf::uint32 PlayerTurntableData::nationalid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerTurntableData.nationalId)
  return nationalid_;
}
inline void PlayerTurntableData::set_nationalid(::google::protobuf::uint32 value) {
  set_has_nationalid();
  nationalid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerTurntableData.nationalId)
}

// -------------------------------------------------------------------

// GlobalGoodsConf

// required uint32 goodsid = 1;
inline bool GlobalGoodsConf::has_goodsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalGoodsConf::set_has_goodsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalGoodsConf::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalGoodsConf::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 GlobalGoodsConf::goodsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GlobalGoodsConf.goodsid)
  return goodsid_;
}
inline void GlobalGoodsConf::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GlobalGoodsConf.goodsid)
}

// required uint32 num = 2;
inline bool GlobalGoodsConf::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalGoodsConf::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalGoodsConf::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalGoodsConf::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 GlobalGoodsConf::num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GlobalGoodsConf.num)
  return num_;
}
inline void GlobalGoodsConf::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GlobalGoodsConf.num)
}

// -------------------------------------------------------------------

// ServerWarConf

// optional uint32 score_open_day = 1;
inline bool ServerWarConf::has_score_open_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerWarConf::set_has_score_open_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerWarConf::clear_has_score_open_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerWarConf::clear_score_open_day() {
  score_open_day_ = 0u;
  clear_has_score_open_day();
}
inline ::google::protobuf::uint32 ServerWarConf::score_open_day() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_open_day)
  return score_open_day_;
}
inline void ServerWarConf::set_score_open_day(::google::protobuf::uint32 value) {
  set_has_score_open_day();
  score_open_day_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_open_day)
}

// optional uint32 score_open_hour = 2;
inline bool ServerWarConf::has_score_open_hour() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerWarConf::set_has_score_open_hour() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerWarConf::clear_has_score_open_hour() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerWarConf::clear_score_open_hour() {
  score_open_hour_ = 0u;
  clear_has_score_open_hour();
}
inline ::google::protobuf::uint32 ServerWarConf::score_open_hour() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_open_hour)
  return score_open_hour_;
}
inline void ServerWarConf::set_score_open_hour(::google::protobuf::uint32 value) {
  set_has_score_open_hour();
  score_open_hour_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_open_hour)
}

// optional uint32 score_close_day = 3;
inline bool ServerWarConf::has_score_close_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerWarConf::set_has_score_close_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerWarConf::clear_has_score_close_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerWarConf::clear_score_close_day() {
  score_close_day_ = 0u;
  clear_has_score_close_day();
}
inline ::google::protobuf::uint32 ServerWarConf::score_close_day() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_close_day)
  return score_close_day_;
}
inline void ServerWarConf::set_score_close_day(::google::protobuf::uint32 value) {
  set_has_score_close_day();
  score_close_day_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_close_day)
}

// optional uint32 score_close_hour = 4;
inline bool ServerWarConf::has_score_close_hour() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerWarConf::set_has_score_close_hour() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerWarConf::clear_has_score_close_hour() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerWarConf::clear_score_close_hour() {
  score_close_hour_ = 0u;
  clear_has_score_close_hour();
}
inline ::google::protobuf::uint32 ServerWarConf::score_close_hour() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_close_hour)
  return score_close_hour_;
}
inline void ServerWarConf::set_score_close_hour(::google::protobuf::uint32 value) {
  set_has_score_close_hour();
  score_close_hour_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_close_hour)
}

// optional uint32 fight_open_day = 5;
inline bool ServerWarConf::has_fight_open_day() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerWarConf::set_has_fight_open_day() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerWarConf::clear_has_fight_open_day() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerWarConf::clear_fight_open_day() {
  fight_open_day_ = 0u;
  clear_has_fight_open_day();
}
inline ::google::protobuf::uint32 ServerWarConf::fight_open_day() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.fight_open_day)
  return fight_open_day_;
}
inline void ServerWarConf::set_fight_open_day(::google::protobuf::uint32 value) {
  set_has_fight_open_day();
  fight_open_day_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.fight_open_day)
}

// optional uint32 fight_open_hour = 6;
inline bool ServerWarConf::has_fight_open_hour() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerWarConf::set_has_fight_open_hour() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerWarConf::clear_has_fight_open_hour() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerWarConf::clear_fight_open_hour() {
  fight_open_hour_ = 0u;
  clear_has_fight_open_hour();
}
inline ::google::protobuf::uint32 ServerWarConf::fight_open_hour() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.fight_open_hour)
  return fight_open_hour_;
}
inline void ServerWarConf::set_fight_open_hour(::google::protobuf::uint32 value) {
  set_has_fight_open_hour();
  fight_open_hour_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.fight_open_hour)
}

// optional uint32 fight_close_day = 7;
inline bool ServerWarConf::has_fight_close_day() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServerWarConf::set_has_fight_close_day() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServerWarConf::clear_has_fight_close_day() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServerWarConf::clear_fight_close_day() {
  fight_close_day_ = 0u;
  clear_has_fight_close_day();
}
inline ::google::protobuf::uint32 ServerWarConf::fight_close_day() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.fight_close_day)
  return fight_close_day_;
}
inline void ServerWarConf::set_fight_close_day(::google::protobuf::uint32 value) {
  set_has_fight_close_day();
  fight_close_day_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.fight_close_day)
}

// optional uint32 fight_close_hour = 8;
inline bool ServerWarConf::has_fight_close_hour() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServerWarConf::set_has_fight_close_hour() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServerWarConf::clear_has_fight_close_hour() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServerWarConf::clear_fight_close_hour() {
  fight_close_hour_ = 0u;
  clear_has_fight_close_hour();
}
inline ::google::protobuf::uint32 ServerWarConf::fight_close_hour() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.fight_close_hour)
  return fight_close_hour_;
}
inline void ServerWarConf::set_fight_close_hour(::google::protobuf::uint32 value) {
  set_has_fight_close_hour();
  fight_close_hour_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.fight_close_hour)
}

// optional uint32 country_fight_num = 9;
inline bool ServerWarConf::has_country_fight_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ServerWarConf::set_has_country_fight_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ServerWarConf::clear_has_country_fight_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ServerWarConf::clear_country_fight_num() {
  country_fight_num_ = 0u;
  clear_has_country_fight_num();
}
inline ::google::protobuf::uint32 ServerWarConf::country_fight_num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.country_fight_num)
  return country_fight_num_;
}
inline void ServerWarConf::set_country_fight_num(::google::protobuf::uint32 value) {
  set_has_country_fight_num();
  country_fight_num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.country_fight_num)
}

// optional uint32 fight_show_topnum = 10;
inline bool ServerWarConf::has_fight_show_topnum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ServerWarConf::set_has_fight_show_topnum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ServerWarConf::clear_has_fight_show_topnum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ServerWarConf::clear_fight_show_topnum() {
  fight_show_topnum_ = 0u;
  clear_has_fight_show_topnum();
}
inline ::google::protobuf::uint32 ServerWarConf::fight_show_topnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.fight_show_topnum)
  return fight_show_topnum_;
}
inline void ServerWarConf::set_fight_show_topnum(::google::protobuf::uint32 value) {
  set_has_fight_show_topnum();
  fight_show_topnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.fight_show_topnum)
}

// optional uint32 fight_enemy_num = 11;
inline bool ServerWarConf::has_fight_enemy_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ServerWarConf::set_has_fight_enemy_num() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ServerWarConf::clear_has_fight_enemy_num() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ServerWarConf::clear_fight_enemy_num() {
  fight_enemy_num_ = 0u;
  clear_has_fight_enemy_num();
}
inline ::google::protobuf::uint32 ServerWarConf::fight_enemy_num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.fight_enemy_num)
  return fight_enemy_num_;
}
inline void ServerWarConf::set_fight_enemy_num(::google::protobuf::uint32 value) {
  set_has_fight_enemy_num();
  fight_enemy_num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.fight_enemy_num)
}

// optional uint32 score_rank_country_num = 12;
inline bool ServerWarConf::has_score_rank_country_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ServerWarConf::set_has_score_rank_country_num() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ServerWarConf::clear_has_score_rank_country_num() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ServerWarConf::clear_score_rank_country_num() {
  score_rank_country_num_ = 0u;
  clear_has_score_rank_country_num();
}
inline ::google::protobuf::uint32 ServerWarConf::score_rank_country_num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_rank_country_num)
  return score_rank_country_num_;
}
inline void ServerWarConf::set_score_rank_country_num(::google::protobuf::uint32 value) {
  set_has_score_rank_country_num();
  score_rank_country_num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_rank_country_num)
}

// optional uint32 fight_rank_num = 13;
inline bool ServerWarConf::has_fight_rank_num() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ServerWarConf::set_has_fight_rank_num() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ServerWarConf::clear_has_fight_rank_num() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ServerWarConf::clear_fight_rank_num() {
  fight_rank_num_ = 0u;
  clear_has_fight_rank_num();
}
inline ::google::protobuf::uint32 ServerWarConf::fight_rank_num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.fight_rank_num)
  return fight_rank_num_;
}
inline void ServerWarConf::set_fight_rank_num(::google::protobuf::uint32 value) {
  set_has_fight_rank_num();
  fight_rank_num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.fight_rank_num)
}

// optional uint32 score_win_score = 14;
inline bool ServerWarConf::has_score_win_score() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ServerWarConf::set_has_score_win_score() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ServerWarConf::clear_has_score_win_score() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ServerWarConf::clear_score_win_score() {
  score_win_score_ = 0u;
  clear_has_score_win_score();
}
inline ::google::protobuf::uint32 ServerWarConf::score_win_score() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_win_score)
  return score_win_score_;
}
inline void ServerWarConf::set_score_win_score(::google::protobuf::uint32 value) {
  set_has_score_win_score();
  score_win_score_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_win_score)
}

// optional uint32 score_win_scoremin = 15;
inline bool ServerWarConf::has_score_win_scoremin() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ServerWarConf::set_has_score_win_scoremin() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ServerWarConf::clear_has_score_win_scoremin() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ServerWarConf::clear_score_win_scoremin() {
  score_win_scoremin_ = 0u;
  clear_has_score_win_scoremin();
}
inline ::google::protobuf::uint32 ServerWarConf::score_win_scoremin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_win_scoremin)
  return score_win_scoremin_;
}
inline void ServerWarConf::set_score_win_scoremin(::google::protobuf::uint32 value) {
  set_has_score_win_scoremin();
  score_win_scoremin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_win_scoremin)
}

// optional uint32 score_win_scoremax = 16;
inline bool ServerWarConf::has_score_win_scoremax() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ServerWarConf::set_has_score_win_scoremax() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ServerWarConf::clear_has_score_win_scoremax() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ServerWarConf::clear_score_win_scoremax() {
  score_win_scoremax_ = 0u;
  clear_has_score_win_scoremax();
}
inline ::google::protobuf::uint32 ServerWarConf::score_win_scoremax() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_win_scoremax)
  return score_win_scoremax_;
}
inline void ServerWarConf::set_score_win_scoremax(::google::protobuf::uint32 value) {
  set_has_score_win_scoremax();
  score_win_scoremax_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_win_scoremax)
}

// optional uint32 score_win_honor = 17;
inline bool ServerWarConf::has_score_win_honor() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ServerWarConf::set_has_score_win_honor() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ServerWarConf::clear_has_score_win_honor() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ServerWarConf::clear_score_win_honor() {
  score_win_honor_ = 0u;
  clear_has_score_win_honor();
}
inline ::google::protobuf::uint32 ServerWarConf::score_win_honor() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_win_honor)
  return score_win_honor_;
}
inline void ServerWarConf::set_score_win_honor(::google::protobuf::uint32 value) {
  set_has_score_win_honor();
  score_win_honor_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_win_honor)
}

// optional uint32 score_win_honormin = 18;
inline bool ServerWarConf::has_score_win_honormin() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ServerWarConf::set_has_score_win_honormin() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ServerWarConf::clear_has_score_win_honormin() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ServerWarConf::clear_score_win_honormin() {
  score_win_honormin_ = 0u;
  clear_has_score_win_honormin();
}
inline ::google::protobuf::uint32 ServerWarConf::score_win_honormin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_win_honormin)
  return score_win_honormin_;
}
inline void ServerWarConf::set_score_win_honormin(::google::protobuf::uint32 value) {
  set_has_score_win_honormin();
  score_win_honormin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_win_honormin)
}

// optional uint32 score_win_honormax = 19;
inline bool ServerWarConf::has_score_win_honormax() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ServerWarConf::set_has_score_win_honormax() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ServerWarConf::clear_has_score_win_honormax() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ServerWarConf::clear_score_win_honormax() {
  score_win_honormax_ = 0u;
  clear_has_score_win_honormax();
}
inline ::google::protobuf::uint32 ServerWarConf::score_win_honormax() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_win_honormax)
  return score_win_honormax_;
}
inline void ServerWarConf::set_score_win_honormax(::google::protobuf::uint32 value) {
  set_has_score_win_honormax();
  score_win_honormax_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_win_honormax)
}

// optional uint32 score_lose_score = 20;
inline bool ServerWarConf::has_score_lose_score() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ServerWarConf::set_has_score_lose_score() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ServerWarConf::clear_has_score_lose_score() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ServerWarConf::clear_score_lose_score() {
  score_lose_score_ = 0u;
  clear_has_score_lose_score();
}
inline ::google::protobuf::uint32 ServerWarConf::score_lose_score() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_lose_score)
  return score_lose_score_;
}
inline void ServerWarConf::set_score_lose_score(::google::protobuf::uint32 value) {
  set_has_score_lose_score();
  score_lose_score_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_lose_score)
}

// optional uint32 score_lose_honor = 21;
inline bool ServerWarConf::has_score_lose_honor() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ServerWarConf::set_has_score_lose_honor() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ServerWarConf::clear_has_score_lose_honor() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ServerWarConf::clear_score_lose_honor() {
  score_lose_honor_ = 0u;
  clear_has_score_lose_honor();
}
inline ::google::protobuf::uint32 ServerWarConf::score_lose_honor() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_lose_honor)
  return score_lose_honor_;
}
inline void ServerWarConf::set_score_lose_honor(::google::protobuf::uint32 value) {
  set_has_score_lose_honor();
  score_lose_honor_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_lose_honor)
}

// optional float effect_check_per = 22;
inline bool ServerWarConf::has_effect_check_per() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ServerWarConf::set_has_effect_check_per() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ServerWarConf::clear_has_effect_check_per() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ServerWarConf::clear_effect_check_per() {
  effect_check_per_ = 0;
  clear_has_effect_check_per();
}
inline float ServerWarConf::effect_check_per() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.effect_check_per)
  return effect_check_per_;
}
inline void ServerWarConf::set_effect_check_per(float value) {
  set_has_effect_check_per();
  effect_check_per_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.effect_check_per)
}

// optional uint32 effect_skip_per = 23;
inline bool ServerWarConf::has_effect_skip_per() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ServerWarConf::set_has_effect_skip_per() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ServerWarConf::clear_has_effect_skip_per() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ServerWarConf::clear_effect_skip_per() {
  effect_skip_per_ = 0u;
  clear_has_effect_skip_per();
}
inline ::google::protobuf::uint32 ServerWarConf::effect_skip_per() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.effect_skip_per)
  return effect_skip_per_;
}
inline void ServerWarConf::set_effect_skip_per(::google::protobuf::uint32 value) {
  set_has_effect_skip_per();
  effect_skip_per_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.effect_skip_per)
}

// optional uint32 fight_win_honor = 24;
inline bool ServerWarConf::has_fight_win_honor() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ServerWarConf::set_has_fight_win_honor() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ServerWarConf::clear_has_fight_win_honor() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ServerWarConf::clear_fight_win_honor() {
  fight_win_honor_ = 0u;
  clear_has_fight_win_honor();
}
inline ::google::protobuf::uint32 ServerWarConf::fight_win_honor() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.fight_win_honor)
  return fight_win_honor_;
}
inline void ServerWarConf::set_fight_win_honor(::google::protobuf::uint32 value) {
  set_has_fight_win_honor();
  fight_win_honor_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.fight_win_honor)
}

// optional uint32 fight_lose_honor = 25;
inline bool ServerWarConf::has_fight_lose_honor() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ServerWarConf::set_has_fight_lose_honor() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ServerWarConf::clear_has_fight_lose_honor() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ServerWarConf::clear_fight_lose_honor() {
  fight_lose_honor_ = 0u;
  clear_has_fight_lose_honor();
}
inline ::google::protobuf::uint32 ServerWarConf::fight_lose_honor() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.fight_lose_honor)
  return fight_lose_honor_;
}
inline void ServerWarConf::set_fight_lose_honor(::google::protobuf::uint32 value) {
  set_has_fight_lose_honor();
  fight_lose_honor_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.fight_lose_honor)
}

// repeated uint64 score_enemy_effect = 26;
inline int ServerWarConf::score_enemy_effect_size() const {
  return score_enemy_effect_.size();
}
inline void ServerWarConf::clear_score_enemy_effect() {
  score_enemy_effect_.Clear();
}
inline ::google::protobuf::uint64 ServerWarConf::score_enemy_effect(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_enemy_effect)
  return score_enemy_effect_.Get(index);
}
inline void ServerWarConf::set_score_enemy_effect(int index, ::google::protobuf::uint64 value) {
  score_enemy_effect_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_enemy_effect)
}
inline void ServerWarConf::add_score_enemy_effect(::google::protobuf::uint64 value) {
  score_enemy_effect_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerWarConf.score_enemy_effect)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerWarConf::score_enemy_effect() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerWarConf.score_enemy_effect)
  return score_enemy_effect_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerWarConf::mutable_score_enemy_effect() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerWarConf.score_enemy_effect)
  return &score_enemy_effect_;
}

// optional uint32 score_open_players = 27;
inline bool ServerWarConf::has_score_open_players() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ServerWarConf::set_has_score_open_players() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ServerWarConf::clear_has_score_open_players() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ServerWarConf::clear_score_open_players() {
  score_open_players_ = 0u;
  clear_has_score_open_players();
}
inline ::google::protobuf::uint32 ServerWarConf::score_open_players() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerWarConf.score_open_players)
  return score_open_players_;
}
inline void ServerWarConf::set_score_open_players(::google::protobuf::uint32 value) {
  set_has_score_open_players();
  score_open_players_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerWarConf.score_open_players)
}

// -------------------------------------------------------------------

// STeamWinProperty

// required uint32 times = 1;
inline bool STeamWinProperty::has_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STeamWinProperty::set_has_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STeamWinProperty::clear_has_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STeamWinProperty::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 STeamWinProperty::times() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.STeamWinProperty.times)
  return times_;
}
inline void STeamWinProperty::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.STeamWinProperty.times)
}

// optional uint32 atkHurt = 2;
inline bool STeamWinProperty::has_atkhurt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STeamWinProperty::set_has_atkhurt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STeamWinProperty::clear_has_atkhurt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STeamWinProperty::clear_atkhurt() {
  atkhurt_ = 0u;
  clear_has_atkhurt();
}
inline ::google::protobuf::uint32 STeamWinProperty::atkhurt() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.STeamWinProperty.atkHurt)
  return atkhurt_;
}
inline void STeamWinProperty::set_atkhurt(::google::protobuf::uint32 value) {
  set_has_atkhurt();
  atkhurt_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.STeamWinProperty.atkHurt)
}

// optional uint32 defHurt = 3;
inline bool STeamWinProperty::has_defhurt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STeamWinProperty::set_has_defhurt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STeamWinProperty::clear_has_defhurt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STeamWinProperty::clear_defhurt() {
  defhurt_ = 0u;
  clear_has_defhurt();
}
inline ::google::protobuf::uint32 STeamWinProperty::defhurt() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.STeamWinProperty.defHurt)
  return defhurt_;
}
inline void STeamWinProperty::set_defhurt(::google::protobuf::uint32 value) {
  set_has_defhurt();
  defhurt_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.STeamWinProperty.defHurt)
}

// -------------------------------------------------------------------

// ServerTeamConf

// optional .TgsProtocol.TodayTime TeamOpenTime = 1;
inline bool ServerTeamConf::has_teamopentime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerTeamConf::set_has_teamopentime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerTeamConf::clear_has_teamopentime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerTeamConf::clear_teamopentime() {
  if (teamopentime_ != NULL) teamopentime_->::TgsProtocol::TodayTime::Clear();
  clear_has_teamopentime();
}
inline const ::TgsProtocol::TodayTime& ServerTeamConf::teamopentime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.TeamOpenTime)
  return teamopentime_ != NULL ? *teamopentime_ : *default_instance_->teamopentime_;
}
inline ::TgsProtocol::TodayTime* ServerTeamConf::mutable_teamopentime() {
  set_has_teamopentime();
  if (teamopentime_ == NULL) teamopentime_ = new ::TgsProtocol::TodayTime;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ServerTeamConf.TeamOpenTime)
  return teamopentime_;
}
inline ::TgsProtocol::TodayTime* ServerTeamConf::release_teamopentime() {
  clear_has_teamopentime();
  ::TgsProtocol::TodayTime* temp = teamopentime_;
  teamopentime_ = NULL;
  return temp;
}
inline void ServerTeamConf::set_allocated_teamopentime(::TgsProtocol::TodayTime* teamopentime) {
  delete teamopentime_;
  teamopentime_ = teamopentime;
  if (teamopentime) {
    set_has_teamopentime();
  } else {
    clear_has_teamopentime();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ServerTeamConf.TeamOpenTime)
}

// repeated .TgsProtocol.TodayTime TeamHonorDoubleTime = 2;
inline int ServerTeamConf::teamhonordoubletime_size() const {
  return teamhonordoubletime_.size();
}
inline void ServerTeamConf::clear_teamhonordoubletime() {
  teamhonordoubletime_.Clear();
}
inline const ::TgsProtocol::TodayTime& ServerTeamConf::teamhonordoubletime(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.TeamHonorDoubleTime)
  return teamhonordoubletime_.Get(index);
}
inline ::TgsProtocol::TodayTime* ServerTeamConf::mutable_teamhonordoubletime(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ServerTeamConf.TeamHonorDoubleTime)
  return teamhonordoubletime_.Mutable(index);
}
inline ::TgsProtocol::TodayTime* ServerTeamConf::add_teamhonordoubletime() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerTeamConf.TeamHonorDoubleTime)
  return teamhonordoubletime_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime >&
ServerTeamConf::teamhonordoubletime() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerTeamConf.TeamHonorDoubleTime)
  return teamhonordoubletime_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::TodayTime >*
ServerTeamConf::mutable_teamhonordoubletime() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerTeamConf.TeamHonorDoubleTime)
  return &teamhonordoubletime_;
}

// repeated uint32 TeamScoreAddPer = 3;
inline int ServerTeamConf::teamscoreaddper_size() const {
  return teamscoreaddper_.size();
}
inline void ServerTeamConf::clear_teamscoreaddper() {
  teamscoreaddper_.Clear();
}
inline ::google::protobuf::uint32 ServerTeamConf::teamscoreaddper(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.TeamScoreAddPer)
  return teamscoreaddper_.Get(index);
}
inline void ServerTeamConf::set_teamscoreaddper(int index, ::google::protobuf::uint32 value) {
  teamscoreaddper_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamConf.TeamScoreAddPer)
}
inline void ServerTeamConf::add_teamscoreaddper(::google::protobuf::uint32 value) {
  teamscoreaddper_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerTeamConf.TeamScoreAddPer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerTeamConf::teamscoreaddper() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerTeamConf.TeamScoreAddPer)
  return teamscoreaddper_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerTeamConf::mutable_teamscoreaddper() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerTeamConf.TeamScoreAddPer)
  return &teamscoreaddper_;
}

// repeated uint32 TeamScore = 4;
inline int ServerTeamConf::teamscore_size() const {
  return teamscore_.size();
}
inline void ServerTeamConf::clear_teamscore() {
  teamscore_.Clear();
}
inline ::google::protobuf::uint32 ServerTeamConf::teamscore(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.TeamScore)
  return teamscore_.Get(index);
}
inline void ServerTeamConf::set_teamscore(int index, ::google::protobuf::uint32 value) {
  teamscore_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamConf.TeamScore)
}
inline void ServerTeamConf::add_teamscore(::google::protobuf::uint32 value) {
  teamscore_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerTeamConf.TeamScore)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerTeamConf::teamscore() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerTeamConf.TeamScore)
  return teamscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerTeamConf::mutable_teamscore() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerTeamConf.TeamScore)
  return &teamscore_;
}

// repeated uint32 TeamHonor = 5;
inline int ServerTeamConf::teamhonor_size() const {
  return teamhonor_.size();
}
inline void ServerTeamConf::clear_teamhonor() {
  teamhonor_.Clear();
}
inline ::google::protobuf::uint32 ServerTeamConf::teamhonor(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.TeamHonor)
  return teamhonor_.Get(index);
}
inline void ServerTeamConf::set_teamhonor(int index, ::google::protobuf::uint32 value) {
  teamhonor_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamConf.TeamHonor)
}
inline void ServerTeamConf::add_teamhonor(::google::protobuf::uint32 value) {
  teamhonor_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerTeamConf.TeamHonor)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerTeamConf::teamhonor() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerTeamConf.TeamHonor)
  return teamhonor_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerTeamConf::mutable_teamhonor() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerTeamConf.TeamHonor)
  return &teamhonor_;
}

// repeated uint32 TeamFightEffectPer = 6;
inline int ServerTeamConf::teamfighteffectper_size() const {
  return teamfighteffectper_.size();
}
inline void ServerTeamConf::clear_teamfighteffectper() {
  teamfighteffectper_.Clear();
}
inline ::google::protobuf::uint32 ServerTeamConf::teamfighteffectper(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.TeamFightEffectPer)
  return teamfighteffectper_.Get(index);
}
inline void ServerTeamConf::set_teamfighteffectper(int index, ::google::protobuf::uint32 value) {
  teamfighteffectper_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamConf.TeamFightEffectPer)
}
inline void ServerTeamConf::add_teamfighteffectper(::google::protobuf::uint32 value) {
  teamfighteffectper_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerTeamConf.TeamFightEffectPer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerTeamConf::teamfighteffectper() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerTeamConf.TeamFightEffectPer)
  return teamfighteffectper_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerTeamConf::mutable_teamfighteffectper() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerTeamConf.TeamFightEffectPer)
  return &teamfighteffectper_;
}

// repeated uint32 TeamFightAttr = 7;
inline int ServerTeamConf::teamfightattr_size() const {
  return teamfightattr_.size();
}
inline void ServerTeamConf::clear_teamfightattr() {
  teamfightattr_.Clear();
}
inline ::google::protobuf::uint32 ServerTeamConf::teamfightattr(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.TeamFightAttr)
  return teamfightattr_.Get(index);
}
inline void ServerTeamConf::set_teamfightattr(int index, ::google::protobuf::uint32 value) {
  teamfightattr_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamConf.TeamFightAttr)
}
inline void ServerTeamConf::add_teamfightattr(::google::protobuf::uint32 value) {
  teamfightattr_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerTeamConf.TeamFightAttr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerTeamConf::teamfightattr() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerTeamConf.TeamFightAttr)
  return teamfightattr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerTeamConf::mutable_teamfightattr() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerTeamConf.TeamFightAttr)
  return &teamfightattr_;
}

// repeated uint32 TeamFightFactor = 8;
inline int ServerTeamConf::teamfightfactor_size() const {
  return teamfightfactor_.size();
}
inline void ServerTeamConf::clear_teamfightfactor() {
  teamfightfactor_.Clear();
}
inline ::google::protobuf::uint32 ServerTeamConf::teamfightfactor(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.TeamFightFactor)
  return teamfightfactor_.Get(index);
}
inline void ServerTeamConf::set_teamfightfactor(int index, ::google::protobuf::uint32 value) {
  teamfightfactor_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamConf.TeamFightFactor)
}
inline void ServerTeamConf::add_teamfightfactor(::google::protobuf::uint32 value) {
  teamfightfactor_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerTeamConf.TeamFightFactor)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerTeamConf::teamfightfactor() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerTeamConf.TeamFightFactor)
  return teamfightfactor_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerTeamConf::mutable_teamfightfactor() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerTeamConf.TeamFightFactor)
  return &teamfightfactor_;
}

// repeated uint32 TeamRobotEffectPer = 9;
inline int ServerTeamConf::teamroboteffectper_size() const {
  return teamroboteffectper_.size();
}
inline void ServerTeamConf::clear_teamroboteffectper() {
  teamroboteffectper_.Clear();
}
inline ::google::protobuf::uint32 ServerTeamConf::teamroboteffectper(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.TeamRobotEffectPer)
  return teamroboteffectper_.Get(index);
}
inline void ServerTeamConf::set_teamroboteffectper(int index, ::google::protobuf::uint32 value) {
  teamroboteffectper_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamConf.TeamRobotEffectPer)
}
inline void ServerTeamConf::add_teamroboteffectper(::google::protobuf::uint32 value) {
  teamroboteffectper_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerTeamConf.TeamRobotEffectPer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerTeamConf::teamroboteffectper() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerTeamConf.TeamRobotEffectPer)
  return teamroboteffectper_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerTeamConf::mutable_teamroboteffectper() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerTeamConf.TeamRobotEffectPer)
  return &teamroboteffectper_;
}

// repeated .TgsProtocol.STeamWinProperty property = 10;
inline int ServerTeamConf::property_size() const {
  return property_.size();
}
inline void ServerTeamConf::clear_property() {
  property_.Clear();
}
inline const ::TgsProtocol::STeamWinProperty& ServerTeamConf::property(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamConf.property)
  return property_.Get(index);
}
inline ::TgsProtocol::STeamWinProperty* ServerTeamConf::mutable_property(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ServerTeamConf.property)
  return property_.Mutable(index);
}
inline ::TgsProtocol::STeamWinProperty* ServerTeamConf::add_property() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerTeamConf.property)
  return property_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::STeamWinProperty >&
ServerTeamConf::property() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerTeamConf.property)
  return property_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::STeamWinProperty >*
ServerTeamConf::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerTeamConf.property)
  return &property_;
}

// -------------------------------------------------------------------

// ClientServerWarPlayer

// required .TgsProtocol.ClientBattlePlayer battle_player = 1;
inline bool ClientServerWarPlayer::has_battle_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientServerWarPlayer::set_has_battle_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientServerWarPlayer::clear_has_battle_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientServerWarPlayer::clear_battle_player() {
  if (battle_player_ != NULL) battle_player_->::TgsProtocol::ClientBattlePlayer::Clear();
  clear_has_battle_player();
}
inline const ::TgsProtocol::ClientBattlePlayer& ClientServerWarPlayer::battle_player() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerWarPlayer.battle_player)
  return battle_player_ != NULL ? *battle_player_ : *default_instance_->battle_player_;
}
inline ::TgsProtocol::ClientBattlePlayer* ClientServerWarPlayer::mutable_battle_player() {
  set_has_battle_player();
  if (battle_player_ == NULL) battle_player_ = new ::TgsProtocol::ClientBattlePlayer;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientServerWarPlayer.battle_player)
  return battle_player_;
}
inline ::TgsProtocol::ClientBattlePlayer* ClientServerWarPlayer::release_battle_player() {
  clear_has_battle_player();
  ::TgsProtocol::ClientBattlePlayer* temp = battle_player_;
  battle_player_ = NULL;
  return temp;
}
inline void ClientServerWarPlayer::set_allocated_battle_player(::TgsProtocol::ClientBattlePlayer* battle_player) {
  delete battle_player_;
  battle_player_ = battle_player;
  if (battle_player) {
    set_has_battle_player();
  } else {
    clear_has_battle_player();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientServerWarPlayer.battle_player)
}

// optional uint32 country = 2;
inline bool ClientServerWarPlayer::has_country() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientServerWarPlayer::set_has_country() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientServerWarPlayer::clear_has_country() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientServerWarPlayer::clear_country() {
  country_ = 0u;
  clear_has_country();
}
inline ::google::protobuf::uint32 ClientServerWarPlayer::country() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerWarPlayer.country)
  return country_;
}
inline void ClientServerWarPlayer::set_country(::google::protobuf::uint32 value) {
  set_has_country();
  country_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerWarPlayer.country)
}

// optional uint32 rank = 3;
inline bool ClientServerWarPlayer::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientServerWarPlayer::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientServerWarPlayer::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientServerWarPlayer::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 ClientServerWarPlayer::rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerWarPlayer.rank)
  return rank_;
}
inline void ClientServerWarPlayer::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerWarPlayer.rank)
}

// optional uint32 score = 4;
inline bool ClientServerWarPlayer::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientServerWarPlayer::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientServerWarPlayer::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientServerWarPlayer::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 ClientServerWarPlayer::score() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerWarPlayer.score)
  return score_;
}
inline void ClientServerWarPlayer::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerWarPlayer.score)
}

// optional bool win = 5;
inline bool ClientServerWarPlayer::has_win() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientServerWarPlayer::set_has_win() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientServerWarPlayer::clear_has_win() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientServerWarPlayer::clear_win() {
  win_ = false;
  clear_has_win();
}
inline bool ClientServerWarPlayer::win() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerWarPlayer.win)
  return win_;
}
inline void ClientServerWarPlayer::set_win(bool value) {
  set_has_win();
  win_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerWarPlayer.win)
}

// -------------------------------------------------------------------

// TombImp

// required uint32 id = 1;
inline bool TombImp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TombImp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TombImp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TombImp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TombImp::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TombImp.id)
  return id_;
}
inline void TombImp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TombImp.id)
}

// optional uint32 event = 2;
inline bool TombImp::has_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TombImp::set_has_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TombImp::clear_has_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TombImp::clear_event() {
  event_ = 0u;
  clear_has_event();
}
inline ::google::protobuf::uint32 TombImp::event() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TombImp.event)
  return event_;
}
inline void TombImp::set_event(::google::protobuf::uint32 value) {
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TombImp.event)
}

// optional .TgsProtocol.ClientBattlePlayer opponent = 3;
inline bool TombImp::has_opponent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TombImp::set_has_opponent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TombImp::clear_has_opponent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TombImp::clear_opponent() {
  if (opponent_ != NULL) opponent_->::TgsProtocol::ClientBattlePlayer::Clear();
  clear_has_opponent();
}
inline const ::TgsProtocol::ClientBattlePlayer& TombImp::opponent() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TombImp.opponent)
  return opponent_ != NULL ? *opponent_ : *default_instance_->opponent_;
}
inline ::TgsProtocol::ClientBattlePlayer* TombImp::mutable_opponent() {
  set_has_opponent();
  if (opponent_ == NULL) opponent_ = new ::TgsProtocol::ClientBattlePlayer;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.TombImp.opponent)
  return opponent_;
}
inline ::TgsProtocol::ClientBattlePlayer* TombImp::release_opponent() {
  clear_has_opponent();
  ::TgsProtocol::ClientBattlePlayer* temp = opponent_;
  opponent_ = NULL;
  return temp;
}
inline void TombImp::set_allocated_opponent(::TgsProtocol::ClientBattlePlayer* opponent) {
  delete opponent_;
  opponent_ = opponent;
  if (opponent) {
    set_has_opponent();
  } else {
    clear_has_opponent();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.TombImp.opponent)
}

// optional uint32 step = 4;
inline bool TombImp::has_step() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TombImp::set_has_step() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TombImp::clear_has_step() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TombImp::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 TombImp::step() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TombImp.step)
  return step_;
}
inline void TombImp::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TombImp.step)
}

// optional uint32 rate = 5;
inline bool TombImp::has_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TombImp::set_has_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TombImp::clear_has_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TombImp::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 TombImp::rate() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.TombImp.rate)
  return rate_;
}
inline void TombImp::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.TombImp.rate)
}

// -------------------------------------------------------------------

// ServerTeamBattle

// required uint32 hp = 1;
inline bool ServerTeamBattle::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerTeamBattle::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerTeamBattle::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerTeamBattle::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 ServerTeamBattle::hp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamBattle.hp)
  return hp_;
}
inline void ServerTeamBattle::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamBattle.hp)
}

// required uint32 atk = 2;
inline bool ServerTeamBattle::has_atk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerTeamBattle::set_has_atk() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerTeamBattle::clear_has_atk() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerTeamBattle::clear_atk() {
  atk_ = 0u;
  clear_has_atk();
}
inline ::google::protobuf::uint32 ServerTeamBattle::atk() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamBattle.atk)
  return atk_;
}
inline void ServerTeamBattle::set_atk(::google::protobuf::uint32 value) {
  set_has_atk();
  atk_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamBattle.atk)
}

// required uint32 forceLevel = 3;
inline bool ServerTeamBattle::has_forcelevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerTeamBattle::set_has_forcelevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerTeamBattle::clear_has_forcelevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerTeamBattle::clear_forcelevel() {
  forcelevel_ = 0u;
  clear_has_forcelevel();
}
inline ::google::protobuf::uint32 ServerTeamBattle::forcelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamBattle.forceLevel)
  return forcelevel_;
}
inline void ServerTeamBattle::set_forcelevel(::google::protobuf::uint32 value) {
  set_has_forcelevel();
  forcelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamBattle.forceLevel)
}

// required uint32 refineLevel = 4;
inline bool ServerTeamBattle::has_refinelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerTeamBattle::set_has_refinelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerTeamBattle::clear_has_refinelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerTeamBattle::clear_refinelevel() {
  refinelevel_ = 0u;
  clear_has_refinelevel();
}
inline ::google::protobuf::uint32 ServerTeamBattle::refinelevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamBattle.refineLevel)
  return refinelevel_;
}
inline void ServerTeamBattle::set_refinelevel(::google::protobuf::uint32 value) {
  set_has_refinelevel();
  refinelevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamBattle.refineLevel)
}

// required uint32 nature = 5;
inline bool ServerTeamBattle::has_nature() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerTeamBattle::set_has_nature() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerTeamBattle::clear_has_nature() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerTeamBattle::clear_nature() {
  nature_ = 0u;
  clear_has_nature();
}
inline ::google::protobuf::uint32 ServerTeamBattle::nature() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamBattle.nature)
  return nature_;
}
inline void ServerTeamBattle::set_nature(::google::protobuf::uint32 value) {
  set_has_nature();
  nature_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamBattle.nature)
}

// required uint32 equipStar = 6;
inline bool ServerTeamBattle::has_equipstar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerTeamBattle::set_has_equipstar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerTeamBattle::clear_has_equipstar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerTeamBattle::clear_equipstar() {
  equipstar_ = 0u;
  clear_has_equipstar();
}
inline ::google::protobuf::uint32 ServerTeamBattle::equipstar() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamBattle.equipStar)
  return equipstar_;
}
inline void ServerTeamBattle::set_equipstar(::google::protobuf::uint32 value) {
  set_has_equipstar();
  equipstar_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamBattle.equipStar)
}

// optional uint64 hp64 = 7;
inline bool ServerTeamBattle::has_hp64() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServerTeamBattle::set_has_hp64() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServerTeamBattle::clear_has_hp64() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServerTeamBattle::clear_hp64() {
  hp64_ = GOOGLE_ULONGLONG(0);
  clear_has_hp64();
}
inline ::google::protobuf::uint64 ServerTeamBattle::hp64() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamBattle.hp64)
  return hp64_;
}
inline void ServerTeamBattle::set_hp64(::google::protobuf::uint64 value) {
  set_has_hp64();
  hp64_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamBattle.hp64)
}

// optional uint64 atk64 = 8;
inline bool ServerTeamBattle::has_atk64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServerTeamBattle::set_has_atk64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServerTeamBattle::clear_has_atk64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServerTeamBattle::clear_atk64() {
  atk64_ = GOOGLE_ULONGLONG(0);
  clear_has_atk64();
}
inline ::google::protobuf::uint64 ServerTeamBattle::atk64() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamBattle.atk64)
  return atk64_;
}
inline void ServerTeamBattle::set_atk64(::google::protobuf::uint64 value) {
  set_has_atk64();
  atk64_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamBattle.atk64)
}

// -------------------------------------------------------------------

// ClientServerTeamPlayer

// required .TgsProtocol.ClientBattlePlayer battle_player = 1;
inline bool ClientServerTeamPlayer::has_battle_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientServerTeamPlayer::set_has_battle_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientServerTeamPlayer::clear_has_battle_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientServerTeamPlayer::clear_battle_player() {
  if (battle_player_ != NULL) battle_player_->::TgsProtocol::ClientBattlePlayer::Clear();
  clear_has_battle_player();
}
inline const ::TgsProtocol::ClientBattlePlayer& ClientServerTeamPlayer::battle_player() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamPlayer.battle_player)
  return battle_player_ != NULL ? *battle_player_ : *default_instance_->battle_player_;
}
inline ::TgsProtocol::ClientBattlePlayer* ClientServerTeamPlayer::mutable_battle_player() {
  set_has_battle_player();
  if (battle_player_ == NULL) battle_player_ = new ::TgsProtocol::ClientBattlePlayer;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientServerTeamPlayer.battle_player)
  return battle_player_;
}
inline ::TgsProtocol::ClientBattlePlayer* ClientServerTeamPlayer::release_battle_player() {
  clear_has_battle_player();
  ::TgsProtocol::ClientBattlePlayer* temp = battle_player_;
  battle_player_ = NULL;
  return temp;
}
inline void ClientServerTeamPlayer::set_allocated_battle_player(::TgsProtocol::ClientBattlePlayer* battle_player) {
  delete battle_player_;
  battle_player_ = battle_player;
  if (battle_player) {
    set_has_battle_player();
  } else {
    clear_has_battle_player();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientServerTeamPlayer.battle_player)
}

// optional bool isleader = 2;
inline bool ClientServerTeamPlayer::has_isleader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientServerTeamPlayer::set_has_isleader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientServerTeamPlayer::clear_has_isleader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientServerTeamPlayer::clear_isleader() {
  isleader_ = false;
  clear_has_isleader();
}
inline bool ClientServerTeamPlayer::isleader() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamPlayer.isleader)
  return isleader_;
}
inline void ClientServerTeamPlayer::set_isleader(bool value) {
  set_has_isleader();
  isleader_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamPlayer.isleader)
}

// optional uint32 pos = 3;
inline bool ClientServerTeamPlayer::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientServerTeamPlayer::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientServerTeamPlayer::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientServerTeamPlayer::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 ClientServerTeamPlayer::pos() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamPlayer.pos)
  return pos_;
}
inline void ClientServerTeamPlayer::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamPlayer.pos)
}

// optional bool isready = 4;
inline bool ClientServerTeamPlayer::has_isready() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientServerTeamPlayer::set_has_isready() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientServerTeamPlayer::clear_has_isready() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientServerTeamPlayer::clear_isready() {
  isready_ = false;
  clear_has_isready();
}
inline bool ClientServerTeamPlayer::isready() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamPlayer.isready)
  return isready_;
}
inline void ClientServerTeamPlayer::set_isready(bool value) {
  set_has_isready();
  isready_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamPlayer.isready)
}

// optional bool isrobot = 5;
inline bool ClientServerTeamPlayer::has_isrobot() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientServerTeamPlayer::set_has_isrobot() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientServerTeamPlayer::clear_has_isrobot() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientServerTeamPlayer::clear_isrobot() {
  isrobot_ = false;
  clear_has_isrobot();
}
inline bool ClientServerTeamPlayer::isrobot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamPlayer.isrobot)
  return isrobot_;
}
inline void ClientServerTeamPlayer::set_isrobot(bool value) {
  set_has_isrobot();
  isrobot_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamPlayer.isrobot)
}

// optional .TgsProtocol.ServerTeamBattle battle_attr = 6;
inline bool ClientServerTeamPlayer::has_battle_attr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientServerTeamPlayer::set_has_battle_attr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientServerTeamPlayer::clear_has_battle_attr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientServerTeamPlayer::clear_battle_attr() {
  if (battle_attr_ != NULL) battle_attr_->::TgsProtocol::ServerTeamBattle::Clear();
  clear_has_battle_attr();
}
inline const ::TgsProtocol::ServerTeamBattle& ClientServerTeamPlayer::battle_attr() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamPlayer.battle_attr)
  return battle_attr_ != NULL ? *battle_attr_ : *default_instance_->battle_attr_;
}
inline ::TgsProtocol::ServerTeamBattle* ClientServerTeamPlayer::mutable_battle_attr() {
  set_has_battle_attr();
  if (battle_attr_ == NULL) battle_attr_ = new ::TgsProtocol::ServerTeamBattle;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientServerTeamPlayer.battle_attr)
  return battle_attr_;
}
inline ::TgsProtocol::ServerTeamBattle* ClientServerTeamPlayer::release_battle_attr() {
  clear_has_battle_attr();
  ::TgsProtocol::ServerTeamBattle* temp = battle_attr_;
  battle_attr_ = NULL;
  return temp;
}
inline void ClientServerTeamPlayer::set_allocated_battle_attr(::TgsProtocol::ServerTeamBattle* battle_attr) {
  delete battle_attr_;
  battle_attr_ = battle_attr;
  if (battle_attr) {
    set_has_battle_attr();
  } else {
    clear_has_battle_attr();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ClientServerTeamPlayer.battle_attr)
}

// optional uint32 honor = 7;
inline bool ClientServerTeamPlayer::has_honor() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientServerTeamPlayer::set_has_honor() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientServerTeamPlayer::clear_has_honor() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientServerTeamPlayer::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 ClientServerTeamPlayer::honor() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamPlayer.honor)
  return honor_;
}
inline void ClientServerTeamPlayer::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamPlayer.honor)
}

// optional uint32 honor_rank = 8;
inline bool ClientServerTeamPlayer::has_honor_rank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientServerTeamPlayer::set_has_honor_rank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientServerTeamPlayer::clear_has_honor_rank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientServerTeamPlayer::clear_honor_rank() {
  honor_rank_ = 0u;
  clear_has_honor_rank();
}
inline ::google::protobuf::uint32 ClientServerTeamPlayer::honor_rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamPlayer.honor_rank)
  return honor_rank_;
}
inline void ClientServerTeamPlayer::set_honor_rank(::google::protobuf::uint32 value) {
  set_has_honor_rank();
  honor_rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamPlayer.honor_rank)
}

// -------------------------------------------------------------------

// ServerTeamPos

// required uint32 pos = 1;
inline bool ServerTeamPos::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerTeamPos::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerTeamPos::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerTeamPos::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 ServerTeamPos::pos() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamPos.pos)
  return pos_;
}
inline void ServerTeamPos::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamPos.pos)
}

// required uint64 charid = 2;
inline bool ServerTeamPos::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerTeamPos::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerTeamPos::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerTeamPos::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ServerTeamPos::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerTeamPos.charid)
  return charid_;
}
inline void ServerTeamPos::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerTeamPos.charid)
}

// -------------------------------------------------------------------

// ClientServerTeamFightTurn

// required uint32 pos1 = 1;
inline bool ClientServerTeamFightTurn::has_pos1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientServerTeamFightTurn::set_has_pos1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientServerTeamFightTurn::clear_has_pos1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientServerTeamFightTurn::clear_pos1() {
  pos1_ = 0u;
  clear_has_pos1();
}
inline ::google::protobuf::uint32 ClientServerTeamFightTurn::pos1() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamFightTurn.pos1)
  return pos1_;
}
inline void ClientServerTeamFightTurn::set_pos1(::google::protobuf::uint32 value) {
  set_has_pos1();
  pos1_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamFightTurn.pos1)
}

// required uint32 pos2 = 2;
inline bool ClientServerTeamFightTurn::has_pos2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientServerTeamFightTurn::set_has_pos2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientServerTeamFightTurn::clear_has_pos2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientServerTeamFightTurn::clear_pos2() {
  pos2_ = 0u;
  clear_has_pos2();
}
inline ::google::protobuf::uint32 ClientServerTeamFightTurn::pos2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamFightTurn.pos2)
  return pos2_;
}
inline void ClientServerTeamFightTurn::set_pos2(::google::protobuf::uint32 value) {
  set_has_pos2();
  pos2_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamFightTurn.pos2)
}

// required uint64 hp1 = 3;
inline bool ClientServerTeamFightTurn::has_hp1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientServerTeamFightTurn::set_has_hp1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientServerTeamFightTurn::clear_has_hp1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientServerTeamFightTurn::clear_hp1() {
  hp1_ = GOOGLE_ULONGLONG(0);
  clear_has_hp1();
}
inline ::google::protobuf::uint64 ClientServerTeamFightTurn::hp1() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamFightTurn.hp1)
  return hp1_;
}
inline void ClientServerTeamFightTurn::set_hp1(::google::protobuf::uint64 value) {
  set_has_hp1();
  hp1_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamFightTurn.hp1)
}

// required uint64 hp2 = 4;
inline bool ClientServerTeamFightTurn::has_hp2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientServerTeamFightTurn::set_has_hp2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientServerTeamFightTurn::clear_has_hp2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientServerTeamFightTurn::clear_hp2() {
  hp2_ = GOOGLE_ULONGLONG(0);
  clear_has_hp2();
}
inline ::google::protobuf::uint64 ClientServerTeamFightTurn::hp2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamFightTurn.hp2)
  return hp2_;
}
inline void ClientServerTeamFightTurn::set_hp2(::google::protobuf::uint64 value) {
  set_has_hp2();
  hp2_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamFightTurn.hp2)
}

// optional bool dead1 = 5;
inline bool ClientServerTeamFightTurn::has_dead1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientServerTeamFightTurn::set_has_dead1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientServerTeamFightTurn::clear_has_dead1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientServerTeamFightTurn::clear_dead1() {
  dead1_ = false;
  clear_has_dead1();
}
inline bool ClientServerTeamFightTurn::dead1() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamFightTurn.dead1)
  return dead1_;
}
inline void ClientServerTeamFightTurn::set_dead1(bool value) {
  set_has_dead1();
  dead1_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamFightTurn.dead1)
}

// optional bool dead2 = 6;
inline bool ClientServerTeamFightTurn::has_dead2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientServerTeamFightTurn::set_has_dead2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientServerTeamFightTurn::clear_has_dead2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientServerTeamFightTurn::clear_dead2() {
  dead2_ = false;
  clear_has_dead2();
}
inline bool ClientServerTeamFightTurn::dead2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamFightTurn.dead2)
  return dead2_;
}
inline void ClientServerTeamFightTurn::set_dead2(bool value) {
  set_has_dead2();
  dead2_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamFightTurn.dead2)
}

// -------------------------------------------------------------------

// ClientServerTeamBattleResult

// repeated .TgsProtocol.ClientServerTeamPlayer item1 = 1;
inline int ClientServerTeamBattleResult::item1_size() const {
  return item1_.size();
}
inline void ClientServerTeamBattleResult::clear_item1() {
  item1_.Clear();
}
inline const ::TgsProtocol::ClientServerTeamPlayer& ClientServerTeamBattleResult::item1(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamBattleResult.item1)
  return item1_.Get(index);
}
inline ::TgsProtocol::ClientServerTeamPlayer* ClientServerTeamBattleResult::mutable_item1(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientServerTeamBattleResult.item1)
  return item1_.Mutable(index);
}
inline ::TgsProtocol::ClientServerTeamPlayer* ClientServerTeamBattleResult::add_item1() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientServerTeamBattleResult.item1)
  return item1_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer >&
ClientServerTeamBattleResult::item1() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientServerTeamBattleResult.item1)
  return item1_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer >*
ClientServerTeamBattleResult::mutable_item1() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientServerTeamBattleResult.item1)
  return &item1_;
}

// repeated .TgsProtocol.ClientServerTeamPlayer item2 = 2;
inline int ClientServerTeamBattleResult::item2_size() const {
  return item2_.size();
}
inline void ClientServerTeamBattleResult::clear_item2() {
  item2_.Clear();
}
inline const ::TgsProtocol::ClientServerTeamPlayer& ClientServerTeamBattleResult::item2(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamBattleResult.item2)
  return item2_.Get(index);
}
inline ::TgsProtocol::ClientServerTeamPlayer* ClientServerTeamBattleResult::mutable_item2(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientServerTeamBattleResult.item2)
  return item2_.Mutable(index);
}
inline ::TgsProtocol::ClientServerTeamPlayer* ClientServerTeamBattleResult::add_item2() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientServerTeamBattleResult.item2)
  return item2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer >&
ClientServerTeamBattleResult::item2() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientServerTeamBattleResult.item2)
  return item2_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamPlayer >*
ClientServerTeamBattleResult::mutable_item2() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientServerTeamBattleResult.item2)
  return &item2_;
}

// required uint32 winteam = 3;
inline bool ClientServerTeamBattleResult::has_winteam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientServerTeamBattleResult::set_has_winteam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientServerTeamBattleResult::clear_has_winteam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientServerTeamBattleResult::clear_winteam() {
  winteam_ = 0u;
  clear_has_winteam();
}
inline ::google::protobuf::uint32 ClientServerTeamBattleResult::winteam() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamBattleResult.winteam)
  return winteam_;
}
inline void ClientServerTeamBattleResult::set_winteam(::google::protobuf::uint32 value) {
  set_has_winteam();
  winteam_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamBattleResult.winteam)
}

// repeated uint64 mvp = 4;
inline int ClientServerTeamBattleResult::mvp_size() const {
  return mvp_.size();
}
inline void ClientServerTeamBattleResult::clear_mvp() {
  mvp_.Clear();
}
inline ::google::protobuf::uint64 ClientServerTeamBattleResult::mvp(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamBattleResult.mvp)
  return mvp_.Get(index);
}
inline void ClientServerTeamBattleResult::set_mvp(int index, ::google::protobuf::uint64 value) {
  mvp_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamBattleResult.mvp)
}
inline void ClientServerTeamBattleResult::add_mvp(::google::protobuf::uint64 value) {
  mvp_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientServerTeamBattleResult.mvp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ClientServerTeamBattleResult::mvp() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientServerTeamBattleResult.mvp)
  return mvp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ClientServerTeamBattleResult::mutable_mvp() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientServerTeamBattleResult.mvp)
  return &mvp_;
}

// repeated .TgsProtocol.ClientServerTeamFightTurn turn = 5;
inline int ClientServerTeamBattleResult::turn_size() const {
  return turn_.size();
}
inline void ClientServerTeamBattleResult::clear_turn() {
  turn_.Clear();
}
inline const ::TgsProtocol::ClientServerTeamFightTurn& ClientServerTeamBattleResult::turn(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamBattleResult.turn)
  return turn_.Get(index);
}
inline ::TgsProtocol::ClientServerTeamFightTurn* ClientServerTeamBattleResult::mutable_turn(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ClientServerTeamBattleResult.turn)
  return turn_.Mutable(index);
}
inline ::TgsProtocol::ClientServerTeamFightTurn* ClientServerTeamBattleResult::add_turn() {
  // @@protoc_insertion_point(field_add:TgsProtocol.ClientServerTeamBattleResult.turn)
  return turn_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamFightTurn >&
ClientServerTeamBattleResult::turn() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ClientServerTeamBattleResult.turn)
  return turn_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientServerTeamFightTurn >*
ClientServerTeamBattleResult::mutable_turn() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ClientServerTeamBattleResult.turn)
  return &turn_;
}

// required uint32 myteam = 6;
inline bool ClientServerTeamBattleResult::has_myteam() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientServerTeamBattleResult::set_has_myteam() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientServerTeamBattleResult::clear_has_myteam() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientServerTeamBattleResult::clear_myteam() {
  myteam_ = 0u;
  clear_has_myteam();
}
inline ::google::protobuf::uint32 ClientServerTeamBattleResult::myteam() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ClientServerTeamBattleResult.myteam)
  return myteam_;
}
inline void ClientServerTeamBattleResult::set_myteam(::google::protobuf::uint32 value) {
  set_has_myteam();
  myteam_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ClientServerTeamBattleResult.myteam)
}

// -------------------------------------------------------------------

// SecretHole

// required uint32 id = 1;
inline bool SecretHole::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SecretHole::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SecretHole::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SecretHole::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SecretHole::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SecretHole.id)
  return id_;
}
inline void SecretHole::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.SecretHole.id)
}

// repeated uint32 star = 2;
inline int SecretHole::star_size() const {
  return star_.size();
}
inline void SecretHole::clear_star() {
  star_.Clear();
}
inline ::google::protobuf::uint32 SecretHole::star(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SecretHole.star)
  return star_.Get(index);
}
inline void SecretHole::set_star(int index, ::google::protobuf::uint32 value) {
  star_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.SecretHole.star)
}
inline void SecretHole::add_star(::google::protobuf::uint32 value) {
  star_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.SecretHole.star)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SecretHole::star() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.SecretHole.star)
  return star_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SecretHole::mutable_star() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.SecretHole.star)
  return &star_;
}

// optional uint32 totalstar = 3;
inline bool SecretHole::has_totalstar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SecretHole::set_has_totalstar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SecretHole::clear_has_totalstar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SecretHole::clear_totalstar() {
  totalstar_ = 0u;
  clear_has_totalstar();
}
inline ::google::protobuf::uint32 SecretHole::totalstar() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SecretHole.totalstar)
  return totalstar_;
}
inline void SecretHole::set_totalstar(::google::protobuf::uint32 value) {
  set_has_totalstar();
  totalstar_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.SecretHole.totalstar)
}

// -------------------------------------------------------------------

// DBSecretHole

// required uint32 id = 1;
inline bool DBSecretHole::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBSecretHole::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBSecretHole::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBSecretHole::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DBSecretHole::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBSecretHole.id)
  return id_;
}
inline void DBSecretHole::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBSecretHole.id)
}

// required uint32 floor = 2;
inline bool DBSecretHole::has_floor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBSecretHole::set_has_floor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBSecretHole::clear_has_floor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBSecretHole::clear_floor() {
  floor_ = 0u;
  clear_has_floor();
}
inline ::google::protobuf::uint32 DBSecretHole::floor() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBSecretHole.floor)
  return floor_;
}
inline void DBSecretHole::set_floor(::google::protobuf::uint32 value) {
  set_has_floor();
  floor_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBSecretHole.floor)
}

// required uint32 boxtimes = 3;
inline bool DBSecretHole::has_boxtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBSecretHole::set_has_boxtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBSecretHole::clear_has_boxtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBSecretHole::clear_boxtimes() {
  boxtimes_ = 0u;
  clear_has_boxtimes();
}
inline ::google::protobuf::uint32 DBSecretHole::boxtimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBSecretHole.boxtimes)
  return boxtimes_;
}
inline void DBSecretHole::set_boxtimes(::google::protobuf::uint32 value) {
  set_has_boxtimes();
  boxtimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBSecretHole.boxtimes)
}

// repeated uint32 buff = 4;
inline int DBSecretHole::buff_size() const {
  return buff_.size();
}
inline void DBSecretHole::clear_buff() {
  buff_.Clear();
}
inline ::google::protobuf::uint32 DBSecretHole::buff(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBSecretHole.buff)
  return buff_.Get(index);
}
inline void DBSecretHole::set_buff(int index, ::google::protobuf::uint32 value) {
  buff_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBSecretHole.buff)
}
inline void DBSecretHole::add_buff(::google::protobuf::uint32 value) {
  buff_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBSecretHole.buff)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBSecretHole::buff() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBSecretHole.buff)
  return buff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBSecretHole::mutable_buff() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBSecretHole.buff)
  return &buff_;
}

// repeated .TgsProtocol.SecretHole hole = 5;
inline int DBSecretHole::hole_size() const {
  return hole_.size();
}
inline void DBSecretHole::clear_hole() {
  hole_.Clear();
}
inline const ::TgsProtocol::SecretHole& DBSecretHole::hole(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBSecretHole.hole)
  return hole_.Get(index);
}
inline ::TgsProtocol::SecretHole* DBSecretHole::mutable_hole(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBSecretHole.hole)
  return hole_.Mutable(index);
}
inline ::TgsProtocol::SecretHole* DBSecretHole::add_hole() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBSecretHole.hole)
  return hole_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SecretHole >&
DBSecretHole::hole() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBSecretHole.hole)
  return hole_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SecretHole >*
DBSecretHole::mutable_hole() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBSecretHole.hole)
  return &hole_;
}

// required uint32 goodsid = 6;
inline bool DBSecretHole::has_goodsid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBSecretHole::set_has_goodsid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBSecretHole::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBSecretHole::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 DBSecretHole::goodsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBSecretHole.goodsid)
  return goodsid_;
}
inline void DBSecretHole::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBSecretHole.goodsid)
}

// required uint32 stars = 7;
inline bool DBSecretHole::has_stars() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBSecretHole::set_has_stars() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBSecretHole::clear_has_stars() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBSecretHole::clear_stars() {
  stars_ = 0u;
  clear_has_stars();
}
inline ::google::protobuf::uint32 DBSecretHole::stars() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBSecretHole.stars)
  return stars_;
}
inline void DBSecretHole::set_stars(::google::protobuf::uint32 value) {
  set_has_stars();
  stars_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBSecretHole.stars)
}

// optional uint32 floor_stars = 8;
inline bool DBSecretHole::has_floor_stars() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBSecretHole::set_has_floor_stars() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBSecretHole::clear_has_floor_stars() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBSecretHole::clear_floor_stars() {
  floor_stars_ = 0u;
  clear_has_floor_stars();
}
inline ::google::protobuf::uint32 DBSecretHole::floor_stars() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBSecretHole.floor_stars)
  return floor_stars_;
}
inline void DBSecretHole::set_floor_stars(::google::protobuf::uint32 value) {
  set_has_floor_stars();
  floor_stars_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBSecretHole.floor_stars)
}

// -------------------------------------------------------------------

// AuctionInfo

// required uint32 photo = 1;
inline bool AuctionInfo::has_photo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionInfo::set_has_photo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionInfo::clear_has_photo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionInfo::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 AuctionInfo::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionInfo.photo)
  return photo_;
}
inline void AuctionInfo::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionInfo.photo)
}

// required string name = 2;
inline bool AuctionInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AuctionInfo::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionInfo.name)
  return *name_;
}
inline void AuctionInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionInfo.name)
}
inline void AuctionInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.AuctionInfo.name)
}
inline void AuctionInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.AuctionInfo.name)
}
inline ::std::string* AuctionInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionInfo.name)
  return name_;
}
inline ::std::string* AuctionInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuctionInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.AuctionInfo.name)
}

// required uint32 num = 3;
inline bool AuctionInfo::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionInfo::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 AuctionInfo::num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionInfo.num)
  return num_;
}
inline void AuctionInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionInfo.num)
}

// required .TgsProtocol.ClientSource source = 4;
inline bool AuctionInfo::has_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuctionInfo::set_has_source() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuctionInfo::clear_has_source() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuctionInfo::clear_source() {
  if (source_ != NULL) source_->::TgsProtocol::ClientSource::Clear();
  clear_has_source();
}
inline const ::TgsProtocol::ClientSource& AuctionInfo::source() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionInfo.source)
  return source_ != NULL ? *source_ : *default_instance_->source_;
}
inline ::TgsProtocol::ClientSource* AuctionInfo::mutable_source() {
  set_has_source();
  if (source_ == NULL) source_ = new ::TgsProtocol::ClientSource;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionInfo.source)
  return source_;
}
inline ::TgsProtocol::ClientSource* AuctionInfo::release_source() {
  clear_has_source();
  ::TgsProtocol::ClientSource* temp = source_;
  source_ = NULL;
  return temp;
}
inline void AuctionInfo::set_allocated_source(::TgsProtocol::ClientSource* source) {
  delete source_;
  source_ = source;
  if (source) {
    set_has_source();
  } else {
    clear_has_source();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.AuctionInfo.source)
}

// required uint32 serverid = 5;
inline bool AuctionInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuctionInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuctionInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuctionInfo::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 AuctionInfo::serverid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionInfo.serverid)
  return serverid_;
}
inline void AuctionInfo::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionInfo.serverid)
}

// required string servername = 6;
inline bool AuctionInfo::has_servername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuctionInfo::set_has_servername() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuctionInfo::clear_has_servername() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuctionInfo::clear_servername() {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_->clear();
  }
  clear_has_servername();
}
inline const ::std::string& AuctionInfo::servername() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionInfo.servername)
  return *servername_;
}
inline void AuctionInfo::set_servername(const ::std::string& value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionInfo.servername)
}
inline void AuctionInfo::set_servername(const char* value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.AuctionInfo.servername)
}
inline void AuctionInfo::set_servername(const char* value, size_t size) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.AuctionInfo.servername)
}
inline ::std::string* AuctionInfo::mutable_servername() {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionInfo.servername)
  return servername_;
}
inline ::std::string* AuctionInfo::release_servername() {
  clear_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = servername_;
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuctionInfo::set_allocated_servername(::std::string* servername) {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete servername_;
  }
  if (servername) {
    set_has_servername();
    servername_ = servername;
  } else {
    clear_has_servername();
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.AuctionInfo.servername)
}

// -------------------------------------------------------------------

// AuctionConfig

// required uint32 id = 1;
inline bool AuctionConfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionConfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionConfig::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AuctionConfig::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionConfig.id)
  return id_;
}
inline void AuctionConfig::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionConfig.id)
}

// required uint32 sourceType = 2;
inline bool AuctionConfig::has_sourcetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionConfig::set_has_sourcetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionConfig::clear_has_sourcetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionConfig::clear_sourcetype() {
  sourcetype_ = 0u;
  clear_has_sourcetype();
}
inline ::google::protobuf::uint32 AuctionConfig::sourcetype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionConfig.sourceType)
  return sourcetype_;
}
inline void AuctionConfig::set_sourcetype(::google::protobuf::uint32 value) {
  set_has_sourcetype();
  sourcetype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionConfig.sourceType)
}

// required uint32 sourceId = 3;
inline bool AuctionConfig::has_sourceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionConfig::set_has_sourceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionConfig::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionConfig::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 AuctionConfig::sourceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionConfig.sourceId)
  return sourceid_;
}
inline void AuctionConfig::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionConfig.sourceId)
}

// required uint32 sourceNum = 4;
inline bool AuctionConfig::has_sourcenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuctionConfig::set_has_sourcenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuctionConfig::clear_has_sourcenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuctionConfig::clear_sourcenum() {
  sourcenum_ = 0u;
  clear_has_sourcenum();
}
inline ::google::protobuf::uint32 AuctionConfig::sourcenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionConfig.sourceNum)
  return sourcenum_;
}
inline void AuctionConfig::set_sourcenum(::google::protobuf::uint32 value) {
  set_has_sourcenum();
  sourcenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionConfig.sourceNum)
}

// required uint32 maxNum = 5;
inline bool AuctionConfig::has_maxnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuctionConfig::set_has_maxnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuctionConfig::clear_has_maxnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuctionConfig::clear_maxnum() {
  maxnum_ = 0u;
  clear_has_maxnum();
}
inline ::google::protobuf::uint32 AuctionConfig::maxnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionConfig.maxNum)
  return maxnum_;
}
inline void AuctionConfig::set_maxnum(::google::protobuf::uint32 value) {
  set_has_maxnum();
  maxnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionConfig.maxNum)
}

// required uint32 limit = 6;
inline bool AuctionConfig::has_limit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuctionConfig::set_has_limit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuctionConfig::clear_has_limit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuctionConfig::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 AuctionConfig::limit() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionConfig.limit)
  return limit_;
}
inline void AuctionConfig::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionConfig.limit)
}

// required uint32 buyNum = 7;
inline bool AuctionConfig::has_buynum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AuctionConfig::set_has_buynum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AuctionConfig::clear_has_buynum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AuctionConfig::clear_buynum() {
  buynum_ = 0u;
  clear_has_buynum();
}
inline ::google::protobuf::uint32 AuctionConfig::buynum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionConfig.buyNum)
  return buynum_;
}
inline void AuctionConfig::set_buynum(::google::protobuf::uint32 value) {
  set_has_buynum();
  buynum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionConfig.buyNum)
}

// -------------------------------------------------------------------

// AuctionRecords

// required uint32 id = 1;
inline bool AuctionRecords::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionRecords::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionRecords::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionRecords::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AuctionRecords::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.id)
  return id_;
}
inline void AuctionRecords::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.id)
}

// required uint32 sourceType = 2;
inline bool AuctionRecords::has_sourcetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionRecords::set_has_sourcetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionRecords::clear_has_sourcetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionRecords::clear_sourcetype() {
  sourcetype_ = 0u;
  clear_has_sourcetype();
}
inline ::google::protobuf::uint32 AuctionRecords::sourcetype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.sourceType)
  return sourcetype_;
}
inline void AuctionRecords::set_sourcetype(::google::protobuf::uint32 value) {
  set_has_sourcetype();
  sourcetype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.sourceType)
}

// required uint32 sourceId = 3;
inline bool AuctionRecords::has_sourceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionRecords::set_has_sourceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionRecords::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionRecords::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 AuctionRecords::sourceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.sourceId)
  return sourceid_;
}
inline void AuctionRecords::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.sourceId)
}

// required uint32 sourceNum = 4;
inline bool AuctionRecords::has_sourcenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuctionRecords::set_has_sourcenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuctionRecords::clear_has_sourcenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuctionRecords::clear_sourcenum() {
  sourcenum_ = 0u;
  clear_has_sourcenum();
}
inline ::google::protobuf::uint32 AuctionRecords::sourcenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.sourceNum)
  return sourcenum_;
}
inline void AuctionRecords::set_sourcenum(::google::protobuf::uint32 value) {
  set_has_sourcenum();
  sourcenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.sourceNum)
}

// required uint32 charid = 5;
inline bool AuctionRecords::has_charid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuctionRecords::set_has_charid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuctionRecords::clear_has_charid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuctionRecords::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 AuctionRecords::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.charid)
  return charid_;
}
inline void AuctionRecords::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.charid)
}

// required uint32 photo = 6;
inline bool AuctionRecords::has_photo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuctionRecords::set_has_photo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuctionRecords::clear_has_photo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuctionRecords::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 AuctionRecords::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.photo)
  return photo_;
}
inline void AuctionRecords::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.photo)
}

// required string name = 7;
inline bool AuctionRecords::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AuctionRecords::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AuctionRecords::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AuctionRecords::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AuctionRecords::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.name)
  return *name_;
}
inline void AuctionRecords::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.name)
}
inline void AuctionRecords::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.AuctionRecords.name)
}
inline void AuctionRecords::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.AuctionRecords.name)
}
inline ::std::string* AuctionRecords::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionRecords.name)
  return name_;
}
inline ::std::string* AuctionRecords::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuctionRecords::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.AuctionRecords.name)
}

// required uint32 serverid = 8;
inline bool AuctionRecords::has_serverid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AuctionRecords::set_has_serverid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AuctionRecords::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AuctionRecords::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 AuctionRecords::serverid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.serverid)
  return serverid_;
}
inline void AuctionRecords::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.serverid)
}

// required string servername = 9;
inline bool AuctionRecords::has_servername() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AuctionRecords::set_has_servername() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AuctionRecords::clear_has_servername() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AuctionRecords::clear_servername() {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_->clear();
  }
  clear_has_servername();
}
inline const ::std::string& AuctionRecords::servername() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.servername)
  return *servername_;
}
inline void AuctionRecords::set_servername(const ::std::string& value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.servername)
}
inline void AuctionRecords::set_servername(const char* value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.AuctionRecords.servername)
}
inline void AuctionRecords::set_servername(const char* value, size_t size) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.AuctionRecords.servername)
}
inline ::std::string* AuctionRecords::mutable_servername() {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionRecords.servername)
  return servername_;
}
inline ::std::string* AuctionRecords::release_servername() {
  clear_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = servername_;
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuctionRecords::set_allocated_servername(::std::string* servername) {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete servername_;
  }
  if (servername) {
    set_has_servername();
    servername_ = servername;
  } else {
    clear_has_servername();
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.AuctionRecords.servername)
}

// required uint32 num = 10;
inline bool AuctionRecords::has_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AuctionRecords::set_has_num() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AuctionRecords::clear_has_num() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AuctionRecords::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 AuctionRecords::num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRecords.num)
  return num_;
}
inline void AuctionRecords::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRecords.num)
}

// -------------------------------------------------------------------

// AuctionRoleInfo

// required uint32 charid = 1;
inline bool AuctionRoleInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionRoleInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionRoleInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionRoleInfo::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 AuctionRoleInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRoleInfo.charid)
  return charid_;
}
inline void AuctionRoleInfo::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRoleInfo.charid)
}

// required uint32 serverid = 2;
inline bool AuctionRoleInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionRoleInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionRoleInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionRoleInfo::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 AuctionRoleInfo::serverid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRoleInfo.serverid)
  return serverid_;
}
inline void AuctionRoleInfo::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRoleInfo.serverid)
}

// required uint32 photo = 3;
inline bool AuctionRoleInfo::has_photo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionRoleInfo::set_has_photo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionRoleInfo::clear_has_photo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionRoleInfo::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 AuctionRoleInfo::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRoleInfo.photo)
  return photo_;
}
inline void AuctionRoleInfo::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRoleInfo.photo)
}

// required string name = 4;
inline bool AuctionRoleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuctionRoleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuctionRoleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuctionRoleInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AuctionRoleInfo::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRoleInfo.name)
  return *name_;
}
inline void AuctionRoleInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRoleInfo.name)
}
inline void AuctionRoleInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.AuctionRoleInfo.name)
}
inline void AuctionRoleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.AuctionRoleInfo.name)
}
inline ::std::string* AuctionRoleInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionRoleInfo.name)
  return name_;
}
inline ::std::string* AuctionRoleInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuctionRoleInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.AuctionRoleInfo.name)
}

// required uint32 num = 5;
inline bool AuctionRoleInfo::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuctionRoleInfo::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuctionRoleInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuctionRoleInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 AuctionRoleInfo::num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRoleInfo.num)
  return num_;
}
inline void AuctionRoleInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRoleInfo.num)
}

// -------------------------------------------------------------------

// AuctionRoleMap

// required uint32 index = 1;
inline bool AuctionRoleMap::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionRoleMap::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionRoleMap::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionRoleMap::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 AuctionRoleMap::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRoleMap.index)
  return index_;
}
inline void AuctionRoleMap::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionRoleMap.index)
}

// repeated .TgsProtocol.AuctionRoleInfo info = 2;
inline int AuctionRoleMap::info_size() const {
  return info_.size();
}
inline void AuctionRoleMap::clear_info() {
  info_.Clear();
}
inline const ::TgsProtocol::AuctionRoleInfo& AuctionRoleMap::info(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionRoleMap.info)
  return info_.Get(index);
}
inline ::TgsProtocol::AuctionRoleInfo* AuctionRoleMap::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionRoleMap.info)
  return info_.Mutable(index);
}
inline ::TgsProtocol::AuctionRoleInfo* AuctionRoleMap::add_info() {
  // @@protoc_insertion_point(field_add:TgsProtocol.AuctionRoleMap.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleInfo >&
AuctionRoleMap::info() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.AuctionRoleMap.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleInfo >*
AuctionRoleMap::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.AuctionRoleMap.info)
  return &info_;
}

// -------------------------------------------------------------------

// AuctionSerialize

// required uint32 status = 1;
inline bool AuctionSerialize::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionSerialize::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionSerialize::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionSerialize::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 AuctionSerialize::status() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionSerialize.status)
  return status_;
}
inline void AuctionSerialize::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionSerialize.status)
}

// required uint32 activityid = 2;
inline bool AuctionSerialize::has_activityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionSerialize::set_has_activityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionSerialize::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionSerialize::clear_activityid() {
  activityid_ = 0u;
  clear_has_activityid();
}
inline ::google::protobuf::uint32 AuctionSerialize::activityid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionSerialize.activityid)
  return activityid_;
}
inline void AuctionSerialize::set_activityid(::google::protobuf::uint32 value) {
  set_has_activityid();
  activityid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionSerialize.activityid)
}

// required uint32 endTime = 3;
inline bool AuctionSerialize::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionSerialize::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionSerialize::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionSerialize::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 AuctionSerialize::endtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionSerialize.endTime)
  return endtime_;
}
inline void AuctionSerialize::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.AuctionSerialize.endTime)
}

// repeated .TgsProtocol.AuctionConfig conf = 4;
inline int AuctionSerialize::conf_size() const {
  return conf_.size();
}
inline void AuctionSerialize::clear_conf() {
  conf_.Clear();
}
inline const ::TgsProtocol::AuctionConfig& AuctionSerialize::conf(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionSerialize.conf)
  return conf_.Get(index);
}
inline ::TgsProtocol::AuctionConfig* AuctionSerialize::mutable_conf(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionSerialize.conf)
  return conf_.Mutable(index);
}
inline ::TgsProtocol::AuctionConfig* AuctionSerialize::add_conf() {
  // @@protoc_insertion_point(field_add:TgsProtocol.AuctionSerialize.conf)
  return conf_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionConfig >&
AuctionSerialize::conf() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.AuctionSerialize.conf)
  return conf_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionConfig >*
AuctionSerialize::mutable_conf() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.AuctionSerialize.conf)
  return &conf_;
}

// repeated .TgsProtocol.AuctionRecords cur = 5;
inline int AuctionSerialize::cur_size() const {
  return cur_.size();
}
inline void AuctionSerialize::clear_cur() {
  cur_.Clear();
}
inline const ::TgsProtocol::AuctionRecords& AuctionSerialize::cur(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionSerialize.cur)
  return cur_.Get(index);
}
inline ::TgsProtocol::AuctionRecords* AuctionSerialize::mutable_cur(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionSerialize.cur)
  return cur_.Mutable(index);
}
inline ::TgsProtocol::AuctionRecords* AuctionSerialize::add_cur() {
  // @@protoc_insertion_point(field_add:TgsProtocol.AuctionSerialize.cur)
  return cur_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords >&
AuctionSerialize::cur() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.AuctionSerialize.cur)
  return cur_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords >*
AuctionSerialize::mutable_cur() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.AuctionSerialize.cur)
  return &cur_;
}

// repeated .TgsProtocol.AuctionRecords last = 6;
inline int AuctionSerialize::last_size() const {
  return last_.size();
}
inline void AuctionSerialize::clear_last() {
  last_.Clear();
}
inline const ::TgsProtocol::AuctionRecords& AuctionSerialize::last(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionSerialize.last)
  return last_.Get(index);
}
inline ::TgsProtocol::AuctionRecords* AuctionSerialize::mutable_last(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionSerialize.last)
  return last_.Mutable(index);
}
inline ::TgsProtocol::AuctionRecords* AuctionSerialize::add_last() {
  // @@protoc_insertion_point(field_add:TgsProtocol.AuctionSerialize.last)
  return last_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords >&
AuctionSerialize::last() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.AuctionSerialize.last)
  return last_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRecords >*
AuctionSerialize::mutable_last() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.AuctionSerialize.last)
  return &last_;
}

// repeated .TgsProtocol.AuctionRoleMap inf = 7;
inline int AuctionSerialize::inf_size() const {
  return inf_.size();
}
inline void AuctionSerialize::clear_inf() {
  inf_.Clear();
}
inline const ::TgsProtocol::AuctionRoleMap& AuctionSerialize::inf(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.AuctionSerialize.inf)
  return inf_.Get(index);
}
inline ::TgsProtocol::AuctionRoleMap* AuctionSerialize::mutable_inf(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.AuctionSerialize.inf)
  return inf_.Mutable(index);
}
inline ::TgsProtocol::AuctionRoleMap* AuctionSerialize::add_inf() {
  // @@protoc_insertion_point(field_add:TgsProtocol.AuctionSerialize.inf)
  return inf_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleMap >&
AuctionSerialize::inf() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.AuctionSerialize.inf)
  return inf_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::AuctionRoleMap >*
AuctionSerialize::mutable_inf() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.AuctionSerialize.inf)
  return &inf_;
}

// -------------------------------------------------------------------

// ReturnTask

// required uint32 id = 1;
inline bool ReturnTask::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnTask::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnTask::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnTask::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ReturnTask::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ReturnTask.id)
  return id_;
}
inline void ReturnTask::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ReturnTask.id)
}

// required uint32 status = 2;
inline bool ReturnTask::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnTask::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnTask::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnTask::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ReturnTask::status() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ReturnTask.status)
  return status_;
}
inline void ReturnTask::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ReturnTask.status)
}

// required uint32 step = 3;
inline bool ReturnTask::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnTask::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnTask::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnTask::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 ReturnTask::step() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ReturnTask.step)
  return step_;
}
inline void ReturnTask::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ReturnTask.step)
}

// optional uint64 step64 = 4;
inline bool ReturnTask::has_step64() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnTask::set_has_step64() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnTask::clear_has_step64() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnTask::clear_step64() {
  step64_ = GOOGLE_ULONGLONG(0);
  clear_has_step64();
}
inline ::google::protobuf::uint64 ReturnTask::step64() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ReturnTask.step64)
  return step64_;
}
inline void ReturnTask::set_step64(::google::protobuf::uint64 value) {
  set_has_step64();
  step64_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ReturnTask.step64)
}

// -------------------------------------------------------------------

// DBReturnTask

// repeated .TgsProtocol.ReturnTask task = 1;
inline int DBReturnTask::task_size() const {
  return task_.size();
}
inline void DBReturnTask::clear_task() {
  task_.Clear();
}
inline const ::TgsProtocol::ReturnTask& DBReturnTask::task(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBReturnTask.task)
  return task_.Get(index);
}
inline ::TgsProtocol::ReturnTask* DBReturnTask::mutable_task(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBReturnTask.task)
  return task_.Mutable(index);
}
inline ::TgsProtocol::ReturnTask* DBReturnTask::add_task() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBReturnTask.task)
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ReturnTask >&
DBReturnTask::task() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBReturnTask.task)
  return task_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ReturnTask >*
DBReturnTask::mutable_task() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBReturnTask.task)
  return &task_;
}

// -------------------------------------------------------------------

// RefineEquipImp

// required uint32 type = 1;
inline bool RefineEquipImp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefineEquipImp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefineEquipImp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefineEquipImp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RefineEquipImp::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.RefineEquipImp.type)
  return type_;
}
inline void RefineEquipImp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.RefineEquipImp.type)
}

// required uint64 id = 2;
inline bool RefineEquipImp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefineEquipImp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefineEquipImp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefineEquipImp::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RefineEquipImp::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.RefineEquipImp.id)
  return id_;
}
inline void RefineEquipImp::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.RefineEquipImp.id)
}

// required uint32 num = 3;
inline bool RefineEquipImp::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RefineEquipImp::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RefineEquipImp::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RefineEquipImp::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 RefineEquipImp::num() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.RefineEquipImp.num)
  return num_;
}
inline void RefineEquipImp::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.RefineEquipImp.num)
}

// -------------------------------------------------------------------

// PlayerRankData

// optional uint32 server_id = 1;
inline bool PlayerRankData::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerRankData::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerRankData::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerRankData::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 PlayerRankData::server_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerRankData.server_id)
  return server_id_;
}
inline void PlayerRankData::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerRankData.server_id)
}

// required uint32 type = 2;
inline bool PlayerRankData::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerRankData::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerRankData::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerRankData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PlayerRankData::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerRankData.type)
  return type_;
}
inline void PlayerRankData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerRankData.type)
}

// required uint64 charid = 3;
inline bool PlayerRankData::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerRankData::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerRankData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerRankData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 PlayerRankData::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerRankData.charid)
  return charid_;
}
inline void PlayerRankData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerRankData.charid)
}

// optional string server_name = 4;
inline bool PlayerRankData::has_server_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerRankData::set_has_server_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerRankData::clear_has_server_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerRankData::clear_server_name() {
  if (server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_->clear();
  }
  clear_has_server_name();
}
inline const ::std::string& PlayerRankData::server_name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerRankData.server_name)
  return *server_name_;
}
inline void PlayerRankData::set_server_name(const ::std::string& value) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerRankData.server_name)
}
inline void PlayerRankData::set_server_name(const char* value) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.PlayerRankData.server_name)
}
inline void PlayerRankData::set_server_name(const char* value, size_t size) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.PlayerRankData.server_name)
}
inline ::std::string* PlayerRankData::mutable_server_name() {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerRankData.server_name)
  return server_name_;
}
inline ::std::string* PlayerRankData::release_server_name() {
  clear_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = server_name_;
    server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlayerRankData::set_allocated_server_name(::std::string* server_name) {
  if (server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete server_name_;
  }
  if (server_name) {
    set_has_server_name();
    server_name_ = server_name;
  } else {
    clear_has_server_name();
    server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.PlayerRankData.server_name)
}

// required uint64 rank_value = 5;
inline bool PlayerRankData::has_rank_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerRankData::set_has_rank_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerRankData::clear_has_rank_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerRankData::clear_rank_value() {
  rank_value_ = GOOGLE_ULONGLONG(0);
  clear_has_rank_value();
}
inline ::google::protobuf::uint64 PlayerRankData::rank_value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerRankData.rank_value)
  return rank_value_;
}
inline void PlayerRankData::set_rank_value(::google::protobuf::uint64 value) {
  set_has_rank_value();
  rank_value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerRankData.rank_value)
}

// optional uint64 value1 = 6;
inline bool PlayerRankData::has_value1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerRankData::set_has_value1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerRankData::clear_has_value1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerRankData::clear_value1() {
  value1_ = GOOGLE_ULONGLONG(0);
  clear_has_value1();
}
inline ::google::protobuf::uint64 PlayerRankData::value1() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerRankData.value1)
  return value1_;
}
inline void PlayerRankData::set_value1(::google::protobuf::uint64 value) {
  set_has_value1();
  value1_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerRankData.value1)
}

// optional uint64 value2 = 7;
inline bool PlayerRankData::has_value2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerRankData::set_has_value2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerRankData::clear_has_value2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerRankData::clear_value2() {
  value2_ = GOOGLE_ULONGLONG(0);
  clear_has_value2();
}
inline ::google::protobuf::uint64 PlayerRankData::value2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerRankData.value2)
  return value2_;
}
inline void PlayerRankData::set_value2(::google::protobuf::uint64 value) {
  set_has_value2();
  value2_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerRankData.value2)
}

// optional uint32 rank = 8;
inline bool PlayerRankData::has_rank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerRankData::set_has_rank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerRankData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerRankData::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 PlayerRankData::rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerRankData.rank)
  return rank_;
}
inline void PlayerRankData::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.PlayerRankData.rank)
}

// optional .TgsProtocol.ClientBattlePlayer battle_player = 9;
inline bool PlayerRankData::has_battle_player() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerRankData::set_has_battle_player() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerRankData::clear_has_battle_player() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerRankData::clear_battle_player() {
  if (battle_player_ != NULL) battle_player_->::TgsProtocol::ClientBattlePlayer::Clear();
  clear_has_battle_player();
}
inline const ::TgsProtocol::ClientBattlePlayer& PlayerRankData::battle_player() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.PlayerRankData.battle_player)
  return battle_player_ != NULL ? *battle_player_ : *default_instance_->battle_player_;
}
inline ::TgsProtocol::ClientBattlePlayer* PlayerRankData::mutable_battle_player() {
  set_has_battle_player();
  if (battle_player_ == NULL) battle_player_ = new ::TgsProtocol::ClientBattlePlayer;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.PlayerRankData.battle_player)
  return battle_player_;
}
inline ::TgsProtocol::ClientBattlePlayer* PlayerRankData::release_battle_player() {
  clear_has_battle_player();
  ::TgsProtocol::ClientBattlePlayer* temp = battle_player_;
  battle_player_ = NULL;
  return temp;
}
inline void PlayerRankData::set_allocated_battle_player(::TgsProtocol::ClientBattlePlayer* battle_player) {
  delete battle_player_;
  battle_player_ = battle_player;
  if (battle_player) {
    set_has_battle_player();
  } else {
    clear_has_battle_player();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.PlayerRankData.battle_player)
}

// -------------------------------------------------------------------

// ServerCompareInfo

// required uint32 id = 1;
inline bool ServerCompareInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerCompareInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerCompareInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerCompareInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ServerCompareInfo::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerCompareInfo.id)
  return id_;
}
inline void ServerCompareInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerCompareInfo.id)
}

// required uint64 first_rank_charid = 2;
inline bool ServerCompareInfo::has_first_rank_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerCompareInfo::set_has_first_rank_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerCompareInfo::clear_has_first_rank_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerCompareInfo::clear_first_rank_charid() {
  first_rank_charid_ = GOOGLE_ULONGLONG(0);
  clear_has_first_rank_charid();
}
inline ::google::protobuf::uint64 ServerCompareInfo::first_rank_charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerCompareInfo.first_rank_charid)
  return first_rank_charid_;
}
inline void ServerCompareInfo::set_first_rank_charid(::google::protobuf::uint64 value) {
  set_has_first_rank_charid();
  first_rank_charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerCompareInfo.first_rank_charid)
}

// required string first_rank_charname = 3;
inline bool ServerCompareInfo::has_first_rank_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerCompareInfo::set_has_first_rank_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerCompareInfo::clear_has_first_rank_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerCompareInfo::clear_first_rank_charname() {
  if (first_rank_charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_rank_charname_->clear();
  }
  clear_has_first_rank_charname();
}
inline const ::std::string& ServerCompareInfo::first_rank_charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerCompareInfo.first_rank_charname)
  return *first_rank_charname_;
}
inline void ServerCompareInfo::set_first_rank_charname(const ::std::string& value) {
  set_has_first_rank_charname();
  if (first_rank_charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_rank_charname_ = new ::std::string;
  }
  first_rank_charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerCompareInfo.first_rank_charname)
}
inline void ServerCompareInfo::set_first_rank_charname(const char* value) {
  set_has_first_rank_charname();
  if (first_rank_charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_rank_charname_ = new ::std::string;
  }
  first_rank_charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.ServerCompareInfo.first_rank_charname)
}
inline void ServerCompareInfo::set_first_rank_charname(const char* value, size_t size) {
  set_has_first_rank_charname();
  if (first_rank_charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_rank_charname_ = new ::std::string;
  }
  first_rank_charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.ServerCompareInfo.first_rank_charname)
}
inline ::std::string* ServerCompareInfo::mutable_first_rank_charname() {
  set_has_first_rank_charname();
  if (first_rank_charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    first_rank_charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.ServerCompareInfo.first_rank_charname)
  return first_rank_charname_;
}
inline ::std::string* ServerCompareInfo::release_first_rank_charname() {
  clear_has_first_rank_charname();
  if (first_rank_charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = first_rank_charname_;
    first_rank_charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerCompareInfo::set_allocated_first_rank_charname(::std::string* first_rank_charname) {
  if (first_rank_charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete first_rank_charname_;
  }
  if (first_rank_charname) {
    set_has_first_rank_charname();
    first_rank_charname_ = first_rank_charname;
  } else {
    clear_has_first_rank_charname();
    first_rank_charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.ServerCompareInfo.first_rank_charname)
}

// required uint32 my_rank = 4;
inline bool ServerCompareInfo::has_my_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerCompareInfo::set_has_my_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerCompareInfo::clear_has_my_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerCompareInfo::clear_my_rank() {
  my_rank_ = 0u;
  clear_has_my_rank();
}
inline ::google::protobuf::uint32 ServerCompareInfo::my_rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerCompareInfo.my_rank)
  return my_rank_;
}
inline void ServerCompareInfo::set_my_rank(::google::protobuf::uint32 value) {
  set_has_my_rank();
  my_rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerCompareInfo.my_rank)
}

// repeated uint32 get_reward_indexs = 5;
inline int ServerCompareInfo::get_reward_indexs_size() const {
  return get_reward_indexs_.size();
}
inline void ServerCompareInfo::clear_get_reward_indexs() {
  get_reward_indexs_.Clear();
}
inline ::google::protobuf::uint32 ServerCompareInfo::get_reward_indexs(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerCompareInfo.get_reward_indexs)
  return get_reward_indexs_.Get(index);
}
inline void ServerCompareInfo::set_get_reward_indexs(int index, ::google::protobuf::uint32 value) {
  get_reward_indexs_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerCompareInfo.get_reward_indexs)
}
inline void ServerCompareInfo::add_get_reward_indexs(::google::protobuf::uint32 value) {
  get_reward_indexs_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerCompareInfo.get_reward_indexs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerCompareInfo::get_reward_indexs() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerCompareInfo.get_reward_indexs)
  return get_reward_indexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerCompareInfo::mutable_get_reward_indexs() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerCompareInfo.get_reward_indexs)
  return &get_reward_indexs_;
}

// -------------------------------------------------------------------

// ServerCompareGot

// required uint32 day = 1;
inline bool ServerCompareGot::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerCompareGot::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerCompareGot::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerCompareGot::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 ServerCompareGot::day() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerCompareGot.day)
  return day_;
}
inline void ServerCompareGot::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerCompareGot.day)
}

// repeated uint32 index = 2;
inline int ServerCompareGot::index_size() const {
  return index_.size();
}
inline void ServerCompareGot::clear_index() {
  index_.Clear();
}
inline ::google::protobuf::uint32 ServerCompareGot::index(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.ServerCompareGot.index)
  return index_.Get(index);
}
inline void ServerCompareGot::set_index(int index, ::google::protobuf::uint32 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.ServerCompareGot.index)
}
inline void ServerCompareGot::add_index(::google::protobuf::uint32 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.ServerCompareGot.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerCompareGot::index() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.ServerCompareGot.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerCompareGot::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.ServerCompareGot.index)
  return &index_;
}

// -------------------------------------------------------------------

// CenterRankInfo

// required .TgsProtocol.ECenterRankType type = 1;
inline bool CenterRankInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterRankInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterRankInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterRankInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::ECenterRankType CenterRankInfo::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.CenterRankInfo.type)
  return static_cast< ::TgsProtocol::ECenterRankType >(type_);
}
inline void CenterRankInfo::set_type(::TgsProtocol::ECenterRankType value) {
  assert(::TgsProtocol::ECenterRankType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.CenterRankInfo.type)
}

// required uint64 charid = 2;
inline bool CenterRankInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterRankInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterRankInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterRankInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CenterRankInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.CenterRankInfo.charid)
  return charid_;
}
inline void CenterRankInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.CenterRankInfo.charid)
}

// required uint64 value = 3;
inline bool CenterRankInfo::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterRankInfo::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterRankInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterRankInfo::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 CenterRankInfo::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.CenterRankInfo.value)
  return value_;
}
inline void CenterRankInfo::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.CenterRankInfo.value)
}

// required string charname = 4;
inline bool CenterRankInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterRankInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterRankInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterRankInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& CenterRankInfo::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.CenterRankInfo.charname)
  return *charname_;
}
inline void CenterRankInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.CenterRankInfo.charname)
}
inline void CenterRankInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.CenterRankInfo.charname)
}
inline void CenterRankInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.CenterRankInfo.charname)
}
inline ::std::string* CenterRankInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.CenterRankInfo.charname)
  return charname_;
}
inline ::std::string* CenterRankInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CenterRankInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.CenterRankInfo.charname)
}

// required string servername = 5;
inline bool CenterRankInfo::has_servername() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CenterRankInfo::set_has_servername() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CenterRankInfo::clear_has_servername() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CenterRankInfo::clear_servername() {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_->clear();
  }
  clear_has_servername();
}
inline const ::std::string& CenterRankInfo::servername() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.CenterRankInfo.servername)
  return *servername_;
}
inline void CenterRankInfo::set_servername(const ::std::string& value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.CenterRankInfo.servername)
}
inline void CenterRankInfo::set_servername(const char* value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.CenterRankInfo.servername)
}
inline void CenterRankInfo::set_servername(const char* value, size_t size) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.CenterRankInfo.servername)
}
inline ::std::string* CenterRankInfo::mutable_servername() {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.CenterRankInfo.servername)
  return servername_;
}
inline ::std::string* CenterRankInfo::release_servername() {
  clear_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = servername_;
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CenterRankInfo::set_allocated_servername(::std::string* servername) {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete servername_;
  }
  if (servername) {
    set_has_servername();
    servername_ = servername;
  } else {
    clear_has_servername();
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.CenterRankInfo.servername)
}

// required uint32 rank = 6;
inline bool CenterRankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CenterRankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CenterRankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CenterRankInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CenterRankInfo::rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.CenterRankInfo.rank)
  return rank_;
}
inline void CenterRankInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.CenterRankInfo.rank)
}

// optional uint32 nationalId = 7;
inline bool CenterRankInfo::has_nationalid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CenterRankInfo::set_has_nationalid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CenterRankInfo::clear_has_nationalid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CenterRankInfo::clear_nationalid() {
  nationalid_ = 0u;
  clear_has_nationalid();
}
inline ::google::protobuf::uint32 CenterRankInfo::nationalid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.CenterRankInfo.nationalId)
  return nationalid_;
}
inline void CenterRankInfo::set_nationalid(::google::protobuf::uint32 value) {
  set_has_nationalid();
  nationalid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.CenterRankInfo.nationalId)
}

// -------------------------------------------------------------------

// SeedInfo

// required uint32 seedId = 1;
inline bool SeedInfo::has_seedid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeedInfo::set_has_seedid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeedInfo::clear_has_seedid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeedInfo::clear_seedid() {
  seedid_ = 0u;
  clear_has_seedid();
}
inline ::google::protobuf::uint32 SeedInfo::seedid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SeedInfo.seedId)
  return seedid_;
}
inline void SeedInfo::set_seedid(::google::protobuf::uint32 value) {
  set_has_seedid();
  seedid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.SeedInfo.seedId)
}

// required uint32 plantTime = 2;
inline bool SeedInfo::has_planttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeedInfo::set_has_planttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeedInfo::clear_has_planttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeedInfo::clear_planttime() {
  planttime_ = 0u;
  clear_has_planttime();
}
inline ::google::protobuf::uint32 SeedInfo::planttime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SeedInfo.plantTime)
  return planttime_;
}
inline void SeedInfo::set_planttime(::google::protobuf::uint32 value) {
  set_has_planttime();
  planttime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.SeedInfo.plantTime)
}

// -------------------------------------------------------------------

// GroundInfo

// required uint32 GroundId = 1;
inline bool GroundInfo::has_groundid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroundInfo::set_has_groundid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroundInfo::clear_has_groundid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroundInfo::clear_groundid() {
  groundid_ = 0u;
  clear_has_groundid();
}
inline ::google::protobuf::uint32 GroundInfo::groundid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GroundInfo.GroundId)
  return groundid_;
}
inline void GroundInfo::set_groundid(::google::protobuf::uint32 value) {
  set_has_groundid();
  groundid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GroundInfo.GroundId)
}

// required bool isReclaimed = 2;
inline bool GroundInfo::has_isreclaimed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroundInfo::set_has_isreclaimed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroundInfo::clear_has_isreclaimed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroundInfo::clear_isreclaimed() {
  isreclaimed_ = false;
  clear_has_isreclaimed();
}
inline bool GroundInfo::isreclaimed() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GroundInfo.isReclaimed)
  return isreclaimed_;
}
inline void GroundInfo::set_isreclaimed(bool value) {
  set_has_isreclaimed();
  isreclaimed_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.GroundInfo.isReclaimed)
}

// optional .TgsProtocol.SeedInfo seed = 3;
inline bool GroundInfo::has_seed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroundInfo::set_has_seed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroundInfo::clear_has_seed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroundInfo::clear_seed() {
  if (seed_ != NULL) seed_->::TgsProtocol::SeedInfo::Clear();
  clear_has_seed();
}
inline const ::TgsProtocol::SeedInfo& GroundInfo::seed() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.GroundInfo.seed)
  return seed_ != NULL ? *seed_ : *default_instance_->seed_;
}
inline ::TgsProtocol::SeedInfo* GroundInfo::mutable_seed() {
  set_has_seed();
  if (seed_ == NULL) seed_ = new ::TgsProtocol::SeedInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.GroundInfo.seed)
  return seed_;
}
inline ::TgsProtocol::SeedInfo* GroundInfo::release_seed() {
  clear_has_seed();
  ::TgsProtocol::SeedInfo* temp = seed_;
  seed_ = NULL;
  return temp;
}
inline void GroundInfo::set_allocated_seed(::TgsProtocol::SeedInfo* seed) {
  delete seed_;
  seed_ = seed;
  if (seed) {
    set_has_seed();
  } else {
    clear_has_seed();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.GroundInfo.seed)
}

// -------------------------------------------------------------------

// FarmNoticeInfo

// required uint64 id = 1;
inline bool FarmNoticeInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FarmNoticeInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FarmNoticeInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FarmNoticeInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 FarmNoticeInfo::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmNoticeInfo.id)
  return id_;
}
inline void FarmNoticeInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmNoticeInfo.id)
}

// required uint32 time = 2;
inline bool FarmNoticeInfo::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FarmNoticeInfo::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FarmNoticeInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FarmNoticeInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 FarmNoticeInfo::time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmNoticeInfo.time)
  return time_;
}
inline void FarmNoticeInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmNoticeInfo.time)
}

// required uint64 charId = 3;
inline bool FarmNoticeInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FarmNoticeInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FarmNoticeInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FarmNoticeInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 FarmNoticeInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmNoticeInfo.charId)
  return charid_;
}
inline void FarmNoticeInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmNoticeInfo.charId)
}

// required string charname = 4;
inline bool FarmNoticeInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FarmNoticeInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FarmNoticeInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FarmNoticeInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& FarmNoticeInfo::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmNoticeInfo.charname)
  return *charname_;
}
inline void FarmNoticeInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmNoticeInfo.charname)
}
inline void FarmNoticeInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.FarmNoticeInfo.charname)
}
inline void FarmNoticeInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.FarmNoticeInfo.charname)
}
inline ::std::string* FarmNoticeInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.FarmNoticeInfo.charname)
  return charname_;
}
inline ::std::string* FarmNoticeInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FarmNoticeInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.FarmNoticeInfo.charname)
}

// required .TgsProtocol.FarmNoticeType type = 5;
inline bool FarmNoticeInfo::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FarmNoticeInfo::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FarmNoticeInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FarmNoticeInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::FarmNoticeType FarmNoticeInfo::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmNoticeInfo.type)
  return static_cast< ::TgsProtocol::FarmNoticeType >(type_);
}
inline void FarmNoticeInfo::set_type(::TgsProtocol::FarmNoticeType value) {
  assert(::TgsProtocol::FarmNoticeType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmNoticeInfo.type)
}

// required .TgsProtocol.FarmNoticeStatus status = 6;
inline bool FarmNoticeInfo::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FarmNoticeInfo::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FarmNoticeInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FarmNoticeInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::TgsProtocol::FarmNoticeStatus FarmNoticeInfo::status() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmNoticeInfo.status)
  return static_cast< ::TgsProtocol::FarmNoticeStatus >(status_);
}
inline void FarmNoticeInfo::set_status(::TgsProtocol::FarmNoticeStatus value) {
  assert(::TgsProtocol::FarmNoticeStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmNoticeInfo.status)
}

// -------------------------------------------------------------------

// FarmWell

// required uint32 level = 1;
inline bool FarmWell::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FarmWell::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FarmWell::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FarmWell::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FarmWell::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmWell.level)
  return level_;
}
inline void FarmWell::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmWell.level)
}

// required uint32 water = 2;
inline bool FarmWell::has_water() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FarmWell::set_has_water() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FarmWell::clear_has_water() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FarmWell::clear_water() {
  water_ = 0u;
  clear_has_water();
}
inline ::google::protobuf::uint32 FarmWell::water() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmWell.water)
  return water_;
}
inline void FarmWell::set_water(::google::protobuf::uint32 value) {
  set_has_water();
  water_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmWell.water)
}

// required uint32 exp = 3;
inline bool FarmWell::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FarmWell::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FarmWell::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FarmWell::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 FarmWell::exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmWell.exp)
  return exp_;
}
inline void FarmWell::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmWell.exp)
}

// -------------------------------------------------------------------

// FarmInfo

// required uint64 charid = 1;
inline bool FarmInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FarmInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FarmInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FarmInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 FarmInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmInfo.charid)
  return charid_;
}
inline void FarmInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmInfo.charid)
}

// required string charname = 2;
inline bool FarmInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FarmInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FarmInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FarmInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& FarmInfo::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmInfo.charname)
  return *charname_;
}
inline void FarmInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmInfo.charname)
}
inline void FarmInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.FarmInfo.charname)
}
inline void FarmInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.FarmInfo.charname)
}
inline ::std::string* FarmInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.FarmInfo.charname)
  return charname_;
}
inline ::std::string* FarmInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FarmInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.FarmInfo.charname)
}

// repeated .TgsProtocol.GroundInfo grounds = 3;
inline int FarmInfo::grounds_size() const {
  return grounds_.size();
}
inline void FarmInfo::clear_grounds() {
  grounds_.Clear();
}
inline const ::TgsProtocol::GroundInfo& FarmInfo::grounds(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmInfo.grounds)
  return grounds_.Get(index);
}
inline ::TgsProtocol::GroundInfo* FarmInfo::mutable_grounds(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.FarmInfo.grounds)
  return grounds_.Mutable(index);
}
inline ::TgsProtocol::GroundInfo* FarmInfo::add_grounds() {
  // @@protoc_insertion_point(field_add:TgsProtocol.FarmInfo.grounds)
  return grounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo >&
FarmInfo::grounds() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.FarmInfo.grounds)
  return grounds_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo >*
FarmInfo::mutable_grounds() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.FarmInfo.grounds)
  return &grounds_;
}

// required .TgsProtocol.FarmWell well = 4;
inline bool FarmInfo::has_well() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FarmInfo::set_has_well() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FarmInfo::clear_has_well() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FarmInfo::clear_well() {
  if (well_ != NULL) well_->::TgsProtocol::FarmWell::Clear();
  clear_has_well();
}
inline const ::TgsProtocol::FarmWell& FarmInfo::well() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmInfo.well)
  return well_ != NULL ? *well_ : *default_instance_->well_;
}
inline ::TgsProtocol::FarmWell* FarmInfo::mutable_well() {
  set_has_well();
  if (well_ == NULL) well_ = new ::TgsProtocol::FarmWell;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.FarmInfo.well)
  return well_;
}
inline ::TgsProtocol::FarmWell* FarmInfo::release_well() {
  clear_has_well();
  ::TgsProtocol::FarmWell* temp = well_;
  well_ = NULL;
  return temp;
}
inline void FarmInfo::set_allocated_well(::TgsProtocol::FarmWell* well) {
  delete well_;
  well_ = well;
  if (well) {
    set_has_well();
  } else {
    clear_has_well();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.FarmInfo.well)
}

// -------------------------------------------------------------------

// MonthCardPrize

// required uint32 wordsid = 1;
inline bool MonthCardPrize::has_wordsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthCardPrize::set_has_wordsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthCardPrize::clear_has_wordsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthCardPrize::clear_wordsid() {
  wordsid_ = 0u;
  clear_has_wordsid();
}
inline ::google::protobuf::uint32 MonthCardPrize::wordsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.MonthCardPrize.wordsid)
  return wordsid_;
}
inline void MonthCardPrize::set_wordsid(::google::protobuf::uint32 value) {
  set_has_wordsid();
  wordsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.MonthCardPrize.wordsid)
}

// required uint32 value = 2;
inline bool MonthCardPrize::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonthCardPrize::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonthCardPrize::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonthCardPrize::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 MonthCardPrize::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.MonthCardPrize.value)
  return value_;
}
inline void MonthCardPrize::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.MonthCardPrize.value)
}

// -------------------------------------------------------------------

// FarmDB

// repeated .TgsProtocol.GroundInfo grounds = 1;
inline int FarmDB::grounds_size() const {
  return grounds_.size();
}
inline void FarmDB::clear_grounds() {
  grounds_.Clear();
}
inline const ::TgsProtocol::GroundInfo& FarmDB::grounds(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmDB.grounds)
  return grounds_.Get(index);
}
inline ::TgsProtocol::GroundInfo* FarmDB::mutable_grounds(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.FarmDB.grounds)
  return grounds_.Mutable(index);
}
inline ::TgsProtocol::GroundInfo* FarmDB::add_grounds() {
  // @@protoc_insertion_point(field_add:TgsProtocol.FarmDB.grounds)
  return grounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo >&
FarmDB::grounds() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.FarmDB.grounds)
  return grounds_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::GroundInfo >*
FarmDB::mutable_grounds() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.FarmDB.grounds)
  return &grounds_;
}

// optional .TgsProtocol.FarmWell well = 2;
inline bool FarmDB::has_well() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FarmDB::set_has_well() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FarmDB::clear_has_well() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FarmDB::clear_well() {
  if (well_ != NULL) well_->::TgsProtocol::FarmWell::Clear();
  clear_has_well();
}
inline const ::TgsProtocol::FarmWell& FarmDB::well() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmDB.well)
  return well_ != NULL ? *well_ : *default_instance_->well_;
}
inline ::TgsProtocol::FarmWell* FarmDB::mutable_well() {
  set_has_well();
  if (well_ == NULL) well_ = new ::TgsProtocol::FarmWell;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.FarmDB.well)
  return well_;
}
inline ::TgsProtocol::FarmWell* FarmDB::release_well() {
  clear_has_well();
  ::TgsProtocol::FarmWell* temp = well_;
  well_ = NULL;
  return temp;
}
inline void FarmDB::set_allocated_well(::TgsProtocol::FarmWell* well) {
  delete well_;
  well_ = well;
  if (well) {
    set_has_well();
  } else {
    clear_has_well();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.FarmDB.well)
}

// repeated .TgsProtocol.FarmNoticeInfo notice = 3;
inline int FarmDB::notice_size() const {
  return notice_.size();
}
inline void FarmDB::clear_notice() {
  notice_.Clear();
}
inline const ::TgsProtocol::FarmNoticeInfo& FarmDB::notice(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmDB.notice)
  return notice_.Get(index);
}
inline ::TgsProtocol::FarmNoticeInfo* FarmDB::mutable_notice(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.FarmDB.notice)
  return notice_.Mutable(index);
}
inline ::TgsProtocol::FarmNoticeInfo* FarmDB::add_notice() {
  // @@protoc_insertion_point(field_add:TgsProtocol.FarmDB.notice)
  return notice_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::FarmNoticeInfo >&
FarmDB::notice() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.FarmDB.notice)
  return notice_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::FarmNoticeInfo >*
FarmDB::mutable_notice() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.FarmDB.notice)
  return &notice_;
}

// optional string signature = 4;
inline bool FarmDB::has_signature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FarmDB::set_has_signature() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FarmDB::clear_has_signature() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FarmDB::clear_signature() {
  if (signature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& FarmDB::signature() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.FarmDB.signature)
  return *signature_;
}
inline void FarmDB::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.FarmDB.signature)
}
inline void FarmDB::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.FarmDB.signature)
}
inline void FarmDB::set_signature(const char* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.FarmDB.signature)
}
inline ::std::string* FarmDB::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signature_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.FarmDB.signature)
  return signature_;
}
inline ::std::string* FarmDB::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FarmDB::set_allocated_signature(::std::string* signature) {
  if (signature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete signature_;
  }
  if (signature) {
    set_has_signature();
    signature_ = signature;
  } else {
    clear_has_signature();
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.FarmDB.signature)
}

// -------------------------------------------------------------------

// SeedBag

// repeated .TgsProtocol.SeedSource seeds = 1;
inline int SeedBag::seeds_size() const {
  return seeds_.size();
}
inline void SeedBag::clear_seeds() {
  seeds_.Clear();
}
inline const ::TgsProtocol::SeedSource& SeedBag::seeds(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SeedBag.seeds)
  return seeds_.Get(index);
}
inline ::TgsProtocol::SeedSource* SeedBag::mutable_seeds(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.SeedBag.seeds)
  return seeds_.Mutable(index);
}
inline ::TgsProtocol::SeedSource* SeedBag::add_seeds() {
  // @@protoc_insertion_point(field_add:TgsProtocol.SeedBag.seeds)
  return seeds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SeedSource >&
SeedBag::seeds() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.SeedBag.seeds)
  return seeds_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SeedSource >*
SeedBag::mutable_seeds() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.SeedBag.seeds)
  return &seeds_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace TgsProtocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TgsProtocol::PacketDef> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::PacketDef>() {
  return ::TgsProtocol::PacketDef_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::ChatType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::ChatType>() {
  return ::TgsProtocol::ChatType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eItemUseRestrict> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eItemUseRestrict>() {
  return ::TgsProtocol::eItemUseRestrict_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::RetrieveActivity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::RetrieveActivity>() {
  return ::TgsProtocol::RetrieveActivity_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eRefershType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eRefershType>() {
  return ::TgsProtocol::eRefershType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::SourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::SourceType>() {
  return ::TgsProtocol::SourceType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::CoinType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::CoinType>() {
  return ::TgsProtocol::CoinType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::ShopType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::ShopType>() {
  return ::TgsProtocol::ShopType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::emLobby2ClientErr> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::emLobby2ClientErr>() {
  return ::TgsProtocol::emLobby2ClientErr_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EActTargetTimesType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EActTargetTimesType>() {
  return ::TgsProtocol::EActTargetTimesType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::ERankType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::ERankType>() {
  return ::TgsProtocol::ERankType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eActionType>() {
  return ::TgsProtocol::eActionType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eGuildJob> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eGuildJob>() {
  return ::TgsProtocol::eGuildJob_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::RaidTeamOpt> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::RaidTeamOpt>() {
  return ::TgsProtocol::RaidTeamOpt_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::RaidTeamNtf> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::RaidTeamNtf>() {
  return ::TgsProtocol::RaidTeamNtf_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::RaidTeamStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::RaidTeamStatus>() {
  return ::TgsProtocol::RaidTeamStatus_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eGuildMemberType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eGuildMemberType>() {
  return ::TgsProtocol::eGuildMemberType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eGuildStateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eGuildStateType>() {
  return ::TgsProtocol::eGuildStateType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::ePrizeGet> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::ePrizeGet>() {
  return ::TgsProtocol::ePrizeGet_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::GuildTerritoryEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::GuildTerritoryEventType>() {
  return ::TgsProtocol::GuildTerritoryEventType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::PlayerTerritoryEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::PlayerTerritoryEventType>() {
  return ::TgsProtocol::PlayerTerritoryEventType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eItemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eItemType>() {
  return ::TgsProtocol::eItemType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eUseItem> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eUseItem>() {
  return ::TgsProtocol::eUseItem_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EReason>() {
  return ::TgsProtocol::EReason_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eNoticeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eNoticeType>() {
  return ::TgsProtocol::eNoticeType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eGameModuleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eGameModuleType>() {
  return ::TgsProtocol::eGameModuleType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::eDropType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::eDropType>() {
  return ::TgsProtocol::eDropType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EServerWarStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EServerWarStatus>() {
  return ::TgsProtocol::EServerWarStatus_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::ECountryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::ECountryType>() {
  return ::TgsProtocol::ECountryType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::ETombEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::ETombEventType>() {
  return ::TgsProtocol::ETombEventType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EServerTeamOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EServerTeamOpType>() {
  return ::TgsProtocol::EServerTeamOpType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::ELanguage> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::ELanguage>() {
  return ::TgsProtocol::ELanguage_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EReturnType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EReturnType>() {
  return ::TgsProtocol::EReturnType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EReturnPrivilegeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EReturnPrivilegeType>() {
  return ::TgsProtocol::EReturnPrivilegeType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EServerRankType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EServerRankType>() {
  return ::TgsProtocol::EServerRankType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EModuleOldFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EModuleOldFlag>() {
  return ::TgsProtocol::EModuleOldFlag_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EPrivilegeCard> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EPrivilegeCard>() {
  return ::TgsProtocol::EPrivilegeCard_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::EPrivilege> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::EPrivilege>() {
  return ::TgsProtocol::EPrivilege_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::ServerCompareType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::ServerCompareType>() {
  return ::TgsProtocol::ServerCompareType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::ECenterRankType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::ECenterRankType>() {
  return ::TgsProtocol::ECenterRankType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::FarmNoticeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::FarmNoticeType>() {
  return ::TgsProtocol::FarmNoticeType_descriptor();
}
template <> struct is_proto_enum< ::TgsProtocol::FarmNoticeStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TgsProtocol::FarmNoticeStatus>() {
  return ::TgsProtocol::FarmNoticeStatus_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PacketDef_2eproto__INCLUDED
