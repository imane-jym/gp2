// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol_lobby_db.proto

#ifndef PROTOBUF_protocol_5flobby_5fdb_2eproto__INCLUDED
#define PROTOBUF_protocol_5flobby_5fdb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PacketDef.pb.h"
// @@protoc_insertion_point(includes)

namespace TgsProtocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

class DbSystemSetting;
class LOBBY2DB_LoadCharReq;
class NationalDB;
class DB2LOBBY_LoadCharRet;
class LOBBY2DB_CharAdvancedInfo;
class DbSevenDayActive;
class DbSevenDayActiveElement;
class DbRebelArmy;
class DbActionRecord;
class DbRaidTeam;
class DBServerCompareGot;
class DB2LOBBY_CharAdvancedInfo;
class LOBBY2DB_LoadCharListReq;
class SimpleDBCharInfo;
class DB2LOBBY_LoadCharListRet;
class LOBBY2DB_CreateCharReq;
class DB2LOBBY_CreateCharRet;
class LOBBY2DB_SaveCharReq;
class DB2LOBBY_SaveCharRet;
class LOBBY2DB_SaveAdvancedCharReq;
class RetrieveDB;
class DB2LOBBY_SaveAdvancedCharRet;
class LOBBY2DB_LoadBagReq;
class DB2LOBBY_LoadBagRet;
class DB2LOBBY_CheckTokenRet;
class LOBBY2DB_SaveBagReq;
class LOBBY2DB_AddDiamondReq;
class LOBBY2DB_ChangeNameCheckReq;
class DB2LOBBY_ChangeNameCheckRet;
class LOBBY2DBLoadWorldReq;
class DB2LOBBYLoadWorldRet;
class DB2LOBBY_Server;
class LOBBY2DB_UpdateSupremeHotBox;
class LOBBY2DB_UpdateArenaRank;
class LOBBY2DB_UpdateArenaLog;
class LOBBY2DB_OfflineMail;
class DB2LOBBY_LoadOfflineMail;
class LOBBY2DB_LoadOfflineMail;
class LOBBY2DB_CheckTokenReq;
class LOBBY2DB_Server;
class LOBBY2DB_ApplyFriend;
class DB2LOBBY_ApplyFriend;
class LOBBY2DB_AddFriend;
class DB2LOBBY_AddFriend;
class LOBBY2DB_DelFriend;
class DB2LOBBY_DelFriend;
class LOBBY2DB_SendEnergy;
class LOBBY2DB_PurchaseInfo;
class DB2LOBBY_Shop;
class LOBBY2DB_GetTargetFriendInfo;
class DB2LOBBY_GetTargetFriendInfo;
class LOBBY2DBGetTargetUserinfoReq;
class DB2LOBBYGetTargetUserinfoRet;
class LOBBY2DBGetRecommandFriendReq;
class DB2LOBBYGetRecommandFriendRet;
class DbActivity;
class LOBBY2DB_LoadActivityReq;
class DB2LOBBY_LoadActivityRet;
class LOBBY2DB_UpdateActivityReq;
class DbRank;
class LOBBY2DB_LoadRankReq;
class DB2LOBBY_LoadRankRet;
class LOBBY2DB_UpdateRankReq;
class LOBBY2DB_ClearRankReq;
class LOBBY2DB_ClearPlayerRank_Req;
class DbArena;
class LOBBY2DB_LoadArenaReq;
class DB2LOBBY_LoadArenaRet;
class LOBBY2DB_UpdateArenaReq;
class DBServerCompare;
class LOBBY2DB_LoadServerCompare_Req;
class DB2LOBBY_LoadServerCompare_Ret;
class LOBBY2DB_UpdateServerCompare_Req;
class LOBBY2DB_ClearServerCompare_Req;
class DBGuildPlayer;
class DBGuildApply;
class DBGuildInfo;
class LOBBY2DB_LoadGuild_Req;
class DB2LOBBY_GuildInfo_Ret;
class DB2LOBBY_GuildPlayers_Ret;
class DB2LOBBY_GuildApplys_Ret;
class LOBBY2DB_UpdateGuildInfo_Req;
class LOBBY2DB_UpdateGuildPlayer_Req;
class LOBBY2DB_UpdateGuildApply_Req;
class LOBBY2DB_UpdateGuildRitual_Req;
class LOBBY2DB_UpdateGuildNewDay_Req;
class LOBBY2DBLoadTreasureReq;
class DB2LOBBYLoadTreasureRet;
class LOBBY2DBLoadRobotReq;
class DB2LOBBYLoadRobotRet;
class LOBBY2DBCreateRobotReq;
class DB2LOBBYCreateRobotRet;
class LOBBY2DBSaveRobotReq;
class DB2LOBBYSaveRobotRet;

// ===================================================================

class DbSystemSetting : public ::google::protobuf::Message {
 public:
  DbSystemSetting();
  virtual ~DbSystemSetting();

  DbSystemSetting(const DbSystemSetting& from);

  inline DbSystemSetting& operator=(const DbSystemSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbSystemSetting& default_instance();

  void Swap(DbSystemSetting* other);

  // implements Message ----------------------------------------------

  DbSystemSetting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbSystemSetting& from);
  void MergeFrom(const DbSystemSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 modeMask = 1;
  inline bool has_modemask() const;
  inline void clear_modemask();
  static const int kModeMaskFieldNumber = 1;
  inline ::google::protobuf::uint64 modemask() const;
  inline void set_modemask(::google::protobuf::uint64 value);

  // required uint64 modeReserver = 2;
  inline bool has_modereserver() const;
  inline void clear_modereserver();
  static const int kModeReserverFieldNumber = 2;
  inline ::google::protobuf::uint64 modereserver() const;
  inline void set_modereserver(::google::protobuf::uint64 value);

  // required uint32 showCharId = 3;
  inline bool has_showcharid() const;
  inline void clear_showcharid();
  static const int kShowCharIdFieldNumber = 3;
  inline ::google::protobuf::uint32 showcharid() const;
  inline void set_showcharid(::google::protobuf::uint32 value);

  // required uint32 rcvInvite = 4;
  inline bool has_rcvinvite() const;
  inline void clear_rcvinvite();
  static const int kRcvInviteFieldNumber = 4;
  inline ::google::protobuf::uint32 rcvinvite() const;
  inline void set_rcvinvite(::google::protobuf::uint32 value);

  // required uint32 showAudioeff = 5;
  inline bool has_showaudioeff() const;
  inline void clear_showaudioeff();
  static const int kShowAudioeffFieldNumber = 5;
  inline ::google::protobuf::uint32 showaudioeff() const;
  inline void set_showaudioeff(::google::protobuf::uint32 value);

  // required uint32 showMusic = 6;
  inline bool has_showmusic() const;
  inline void clear_showmusic();
  static const int kShowMusicFieldNumber = 6;
  inline ::google::protobuf::uint32 showmusic() const;
  inline void set_showmusic(::google::protobuf::uint32 value);

  // required uint32 showEffect = 7;
  inline bool has_showeffect() const;
  inline void clear_showeffect();
  static const int kShowEffectFieldNumber = 7;
  inline ::google::protobuf::uint32 showeffect() const;
  inline void set_showeffect(::google::protobuf::uint32 value);

  // required uint32 hidDensuit = 8;
  inline bool has_hiddensuit() const;
  inline void clear_hiddensuit();
  static const int kHidDensuitFieldNumber = 8;
  inline ::google::protobuf::uint32 hiddensuit() const;
  inline void set_hiddensuit(::google::protobuf::uint32 value);

  // required bytes reserveBuff = 9;
  inline bool has_reservebuff() const;
  inline void clear_reservebuff();
  static const int kReserveBuffFieldNumber = 9;
  inline const ::std::string& reservebuff() const;
  inline void set_reservebuff(const ::std::string& value);
  inline void set_reservebuff(const char* value);
  inline void set_reservebuff(const void* value, size_t size);
  inline ::std::string* mutable_reservebuff();
  inline ::std::string* release_reservebuff();
  inline void set_allocated_reservebuff(::std::string* reservebuff);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbSystemSetting)
 private:
  inline void set_has_modemask();
  inline void clear_has_modemask();
  inline void set_has_modereserver();
  inline void clear_has_modereserver();
  inline void set_has_showcharid();
  inline void clear_has_showcharid();
  inline void set_has_rcvinvite();
  inline void clear_has_rcvinvite();
  inline void set_has_showaudioeff();
  inline void clear_has_showaudioeff();
  inline void set_has_showmusic();
  inline void clear_has_showmusic();
  inline void set_has_showeffect();
  inline void clear_has_showeffect();
  inline void set_has_hiddensuit();
  inline void clear_has_hiddensuit();
  inline void set_has_reservebuff();
  inline void clear_has_reservebuff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 modemask_;
  ::google::protobuf::uint64 modereserver_;
  ::google::protobuf::uint32 showcharid_;
  ::google::protobuf::uint32 rcvinvite_;
  ::google::protobuf::uint32 showaudioeff_;
  ::google::protobuf::uint32 showmusic_;
  ::google::protobuf::uint32 showeffect_;
  ::google::protobuf::uint32 hiddensuit_;
  ::std::string* reservebuff_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DbSystemSetting* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_LoadCharReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_LoadCharReq();
  virtual ~LOBBY2DB_LoadCharReq();

  LOBBY2DB_LoadCharReq(const LOBBY2DB_LoadCharReq& from);

  inline LOBBY2DB_LoadCharReq& operator=(const LOBBY2DB_LoadCharReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_LoadCharReq& default_instance();

  void Swap(LOBBY2DB_LoadCharReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_LoadCharReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_LoadCharReq& from);
  void MergeFrom(const LOBBY2DB_LoadCharReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_CHARACTER_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 CharId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_LoadCharReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_LoadCharReq* default_instance_;
};
// -------------------------------------------------------------------

class NationalDB : public ::google::protobuf::Message {
 public:
  NationalDB();
  virtual ~NationalDB();

  NationalDB(const NationalDB& from);

  inline NationalDB& operator=(const NationalDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NationalDB& default_instance();

  void Swap(NationalDB* other);

  // implements Message ----------------------------------------------

  NationalDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NationalDB& from);
  void MergeFrom(const NationalDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 nationalId = 1;
  inline bool has_nationalid() const;
  inline void clear_nationalid();
  static const int kNationalIdFieldNumber = 1;
  inline ::google::protobuf::uint32 nationalid() const;
  inline void set_nationalid(::google::protobuf::uint32 value);

  // required uint32 lastChangeTime = 2;
  inline bool has_lastchangetime() const;
  inline void clear_lastchangetime();
  static const int kLastChangeTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 lastchangetime() const;
  inline void set_lastchangetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.NationalDB)
 private:
  inline void set_has_nationalid();
  inline void clear_has_nationalid();
  inline void set_has_lastchangetime();
  inline void clear_has_lastchangetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 nationalid_;
  ::google::protobuf::uint32 lastchangetime_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static NationalDB* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_LoadCharRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_LoadCharRet();
  virtual ~DB2LOBBY_LoadCharRet();

  DB2LOBBY_LoadCharRet(const DB2LOBBY_LoadCharRet& from);

  inline DB2LOBBY_LoadCharRet& operator=(const DB2LOBBY_LoadCharRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_LoadCharRet& default_instance();

  void Swap(DB2LOBBY_LoadCharRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_LoadCharRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_LoadCharRet& from);
  void MergeFrom(const DB2LOBBY_LoadCharRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_CHARACTER_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes charName = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 cash = 5;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 5;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // optional uint32 gold = 6;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 6;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 8;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 8;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 curStamina = 9;
  inline bool has_curstamina() const;
  inline void clear_curstamina();
  static const int kCurStaminaFieldNumber = 9;
  inline ::google::protobuf::uint32 curstamina() const;
  inline void set_curstamina(::google::protobuf::uint32 value);

  // optional uint32 maxStamina = 10;
  inline bool has_maxstamina() const;
  inline void clear_maxstamina();
  static const int kMaxStaminaFieldNumber = 10;
  inline ::google::protobuf::uint32 maxstamina() const;
  inline void set_maxstamina(::google::protobuf::uint32 value);

  // optional uint32 createTime = 11;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // optional uint32 offlineTime = 12;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint32 value);

  // optional uint32 updateStaminaTime = 13;
  inline bool has_updatestaminatime() const;
  inline void clear_updatestaminatime();
  static const int kUpdateStaminaTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 updatestaminatime() const;
  inline void set_updatestaminatime(::google::protobuf::uint32 value);

  // optional uint32 bitFlag = 14;
  inline bool has_bitflag() const;
  inline void clear_bitflag();
  static const int kBitFlagFieldNumber = 14;
  inline ::google::protobuf::uint32 bitflag() const;
  inline void set_bitflag(::google::protobuf::uint32 value);

  // optional bytes quest = 15;
  inline bool has_quest() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 15;
  inline const ::std::string& quest() const;
  inline void set_quest(const ::std::string& value);
  inline void set_quest(const char* value);
  inline void set_quest(const void* value, size_t size);
  inline ::std::string* mutable_quest();
  inline ::std::string* release_quest();
  inline void set_allocated_quest(::std::string* quest);

  // optional bytes evaluation = 16;
  inline bool has_evaluation() const;
  inline void clear_evaluation();
  static const int kEvaluationFieldNumber = 16;
  inline const ::std::string& evaluation() const;
  inline void set_evaluation(const ::std::string& value);
  inline void set_evaluation(const char* value);
  inline void set_evaluation(const void* value, size_t size);
  inline ::std::string* mutable_evaluation();
  inline ::std::string* release_evaluation();
  inline void set_allocated_evaluation(::std::string* evaluation);

  // optional bytes chapterReward = 17;
  inline bool has_chapterreward() const;
  inline void clear_chapterreward();
  static const int kChapterRewardFieldNumber = 17;
  inline const ::std::string& chapterreward() const;
  inline void set_chapterreward(const ::std::string& value);
  inline void set_chapterreward(const char* value);
  inline void set_chapterreward(const void* value, size_t size);
  inline ::std::string* mutable_chapterreward();
  inline ::std::string* release_chapterreward();
  inline void set_allocated_chapterreward(::std::string* chapterreward);

  // optional uint32 vipExp = 18;
  inline bool has_vipexp() const;
  inline void clear_vipexp();
  static const int kVipExpFieldNumber = 18;
  inline ::google::protobuf::uint32 vipexp() const;
  inline void set_vipexp(::google::protobuf::uint32 value);

  // optional uint32 vipLevel = 19;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 19;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // repeated uint32 formation = 20;
  inline int formation_size() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 20;
  inline ::google::protobuf::uint32 formation(int index) const;
  inline void set_formation(int index, ::google::protobuf::uint32 value);
  inline void add_formation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      formation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_formation();

  // optional uint32 heroBagNum = 21;
  inline bool has_herobagnum() const;
  inline void clear_herobagnum();
  static const int kHeroBagNumFieldNumber = 21;
  inline ::google::protobuf::uint32 herobagnum() const;
  inline void set_herobagnum(::google::protobuf::uint32 value);

  // optional bytes heroList = 22;
  inline bool has_herolist() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 22;
  inline const ::std::string& herolist() const;
  inline void set_herolist(const ::std::string& value);
  inline void set_herolist(const char* value);
  inline void set_herolist(const void* value, size_t size);
  inline ::std::string* mutable_herolist();
  inline ::std::string* release_herolist();
  inline void set_allocated_herolist(::std::string* herolist);

  // optional uint32 gender = 23;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 23;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);

  // optional uint32 photo = 24;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 24;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // optional bytes essenceItem = 25;
  inline bool has_essenceitem() const;
  inline void clear_essenceitem();
  static const int kEssenceItemFieldNumber = 25;
  inline const ::std::string& essenceitem() const;
  inline void set_essenceitem(const ::std::string& value);
  inline void set_essenceitem(const char* value);
  inline void set_essenceitem(const void* value, size_t size);
  inline ::std::string* mutable_essenceitem();
  inline ::std::string* release_essenceitem();
  inline void set_allocated_essenceitem(::std::string* essenceitem);

  // repeated uint32 RefreshPrice = 26;
  inline int refreshprice_size() const;
  inline void clear_refreshprice();
  static const int kRefreshPriceFieldNumber = 26;
  inline ::google::protobuf::uint32 refreshprice(int index) const;
  inline void set_refreshprice(int index, ::google::protobuf::uint32 value);
  inline void add_refreshprice(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      refreshprice() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_refreshprice();

  // optional bytes festivity = 27;
  inline bool has_festivity() const;
  inline void clear_festivity();
  static const int kFestivityFieldNumber = 27;
  inline const ::std::string& festivity() const;
  inline void set_festivity(const ::std::string& value);
  inline void set_festivity(const char* value);
  inline void set_festivity(const void* value, size_t size);
  inline ::std::string* mutable_festivity();
  inline ::std::string* release_festivity();
  inline void set_allocated_festivity(::std::string* festivity);

  // optional uint32 lockChatEndTime = 28;
  inline bool has_lockchatendtime() const;
  inline void clear_lockchatendtime();
  static const int kLockChatEndTimeFieldNumber = 28;
  inline ::google::protobuf::uint32 lockchatendtime() const;
  inline void set_lockchatendtime(::google::protobuf::uint32 value);

  // optional uint32 dayChatTimes = 29;
  inline bool has_daychattimes() const;
  inline void clear_daychattimes();
  static const int kDayChatTimesFieldNumber = 29;
  inline ::google::protobuf::uint32 daychattimes() const;
  inline void set_daychattimes(::google::protobuf::uint32 value);

  // optional uint32 skillPoint = 30;
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillPointFieldNumber = 30;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);

  // optional uint32 updateSkillPointTime = 31;
  inline bool has_updateskillpointtime() const;
  inline void clear_updateskillpointtime();
  static const int kUpdateSkillPointTimeFieldNumber = 31;
  inline ::google::protobuf::uint32 updateskillpointtime() const;
  inline void set_updateskillpointtime(::google::protobuf::uint32 value);

  // optional uint32 energy = 32;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 32;
  inline ::google::protobuf::uint32 energy() const;
  inline void set_energy(::google::protobuf::uint32 value);

  // optional uint32 updateEnergyTime = 33;
  inline bool has_updateenergytime() const;
  inline void clear_updateenergytime();
  static const int kUpdateEnergyTimeFieldNumber = 33;
  inline ::google::protobuf::uint32 updateenergytime() const;
  inline void set_updateenergytime(::google::protobuf::uint32 value);

  // optional bytes equipNew = 34;
  inline bool has_equipnew() const;
  inline void clear_equipnew();
  static const int kEquipNewFieldNumber = 34;
  inline const ::std::string& equipnew() const;
  inline void set_equipnew(const ::std::string& value);
  inline void set_equipnew(const char* value);
  inline void set_equipnew(const void* value, size_t size);
  inline ::std::string* mutable_equipnew();
  inline ::std::string* release_equipnew();
  inline void set_allocated_equipnew(::std::string* equipnew);

  // repeated uint32 arenaFormation = 35;
  inline int arenaformation_size() const;
  inline void clear_arenaformation();
  static const int kArenaFormationFieldNumber = 35;
  inline ::google::protobuf::uint32 arenaformation(int index) const;
  inline void set_arenaformation(int index, ::google::protobuf::uint32 value);
  inline void add_arenaformation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arenaformation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arenaformation();

  // optional uint32 recharge = 36;
  inline bool has_recharge() const;
  inline void clear_recharge();
  static const int kRechargeFieldNumber = 36;
  inline ::google::protobuf::uint32 recharge() const;
  inline void set_recharge(::google::protobuf::uint32 value);

  // optional uint32 progress = 37;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 37;
  inline ::google::protobuf::uint32 progress() const;
  inline void set_progress(::google::protobuf::uint32 value);

  // optional bytes activity = 38;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 38;
  inline const ::std::string& activity() const;
  inline void set_activity(const ::std::string& value);
  inline void set_activity(const char* value);
  inline void set_activity(const void* value, size_t size);
  inline ::std::string* mutable_activity();
  inline ::std::string* release_activity();
  inline void set_allocated_activity(::std::string* activity);

  // optional string assistFormation = 39;
  inline bool has_assistformation() const;
  inline void clear_assistformation();
  static const int kAssistFormationFieldNumber = 39;
  inline const ::std::string& assistformation() const;
  inline void set_assistformation(const ::std::string& value);
  inline void set_assistformation(const char* value);
  inline void set_assistformation(const char* value, size_t size);
  inline ::std::string* mutable_assistformation();
  inline ::std::string* release_assistformation();
  inline void set_allocated_assistformation(::std::string* assistformation);

  // optional bytes chapterBox = 40;
  inline bool has_chapterbox() const;
  inline void clear_chapterbox();
  static const int kChapterBoxFieldNumber = 40;
  inline const ::std::string& chapterbox() const;
  inline void set_chapterbox(const ::std::string& value);
  inline void set_chapterbox(const char* value);
  inline void set_chapterbox(const void* value, size_t size);
  inline ::std::string* mutable_chapterbox();
  inline ::std::string* release_chapterbox();
  inline void set_allocated_chapterbox(::std::string* chapterbox);

  // optional string coins = 41;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 41;
  inline const ::std::string& coins() const;
  inline void set_coins(const ::std::string& value);
  inline void set_coins(const char* value);
  inline void set_coins(const char* value, size_t size);
  inline ::std::string* mutable_coins();
  inline ::std::string* release_coins();
  inline void set_allocated_coins(::std::string* coins);

  // optional uint32 leavePoint = 42;
  inline bool has_leavepoint() const;
  inline void clear_leavepoint();
  static const int kLeavePointFieldNumber = 42;
  inline ::google::protobuf::uint32 leavepoint() const;
  inline void set_leavepoint(::google::protobuf::uint32 value);

  // optional uint32 onlinetime = 43;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlinetimeFieldNumber = 43;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);

  // optional uint32 gmFlushTime = 44;
  inline bool has_gmflushtime() const;
  inline void clear_gmflushtime();
  static const int kGmFlushTimeFieldNumber = 44;
  inline ::google::protobuf::uint32 gmflushtime() const;
  inline void set_gmflushtime(::google::protobuf::uint32 value);

  // optional uint32 isshopbuy = 45;
  inline bool has_isshopbuy() const;
  inline void clear_isshopbuy();
  static const int kIsshopbuyFieldNumber = 45;
  inline ::google::protobuf::uint32 isshopbuy() const;
  inline void set_isshopbuy(::google::protobuf::uint32 value);

  // optional string deviceid = 46;
  inline bool has_deviceid() const;
  inline void clear_deviceid();
  static const int kDeviceidFieldNumber = 46;
  inline const ::std::string& deviceid() const;
  inline void set_deviceid(const ::std::string& value);
  inline void set_deviceid(const char* value);
  inline void set_deviceid(const char* value, size_t size);
  inline ::std::string* mutable_deviceid();
  inline ::std::string* release_deviceid();
  inline void set_allocated_deviceid(::std::string* deviceid);

  // optional uint32 diamondPay = 47;
  inline bool has_diamondpay() const;
  inline void clear_diamondpay();
  static const int kDiamondPayFieldNumber = 47;
  inline ::google::protobuf::uint32 diamondpay() const;
  inline void set_diamondpay(::google::protobuf::uint32 value);

  // optional string recommfriends = 48;
  inline bool has_recommfriends() const;
  inline void clear_recommfriends();
  static const int kRecommfriendsFieldNumber = 48;
  inline const ::std::string& recommfriends() const;
  inline void set_recommfriends(const ::std::string& value);
  inline void set_recommfriends(const char* value);
  inline void set_recommfriends(const char* value, size_t size);
  inline ::std::string* mutable_recommfriends();
  inline ::std::string* release_recommfriends();
  inline void set_allocated_recommfriends(::std::string* recommfriends);

  // optional bytes prizeInfo = 49;
  inline bool has_prizeinfo() const;
  inline void clear_prizeinfo();
  static const int kPrizeInfoFieldNumber = 49;
  inline const ::std::string& prizeinfo() const;
  inline void set_prizeinfo(const ::std::string& value);
  inline void set_prizeinfo(const char* value);
  inline void set_prizeinfo(const void* value, size_t size);
  inline ::std::string* mutable_prizeinfo();
  inline ::std::string* release_prizeinfo();
  inline void set_allocated_prizeinfo(::std::string* prizeinfo);

  // optional uint32 avoidBattle = 50;
  inline bool has_avoidbattle() const;
  inline void clear_avoidbattle();
  static const int kAvoidBattleFieldNumber = 50;
  inline ::google::protobuf::uint32 avoidbattle() const;
  inline void set_avoidbattle(::google::protobuf::uint32 value);

  // optional uint32 accOnlineTime = 51;
  inline bool has_acconlinetime() const;
  inline void clear_acconlinetime();
  static const int kAccOnlineTimeFieldNumber = 51;
  inline ::google::protobuf::uint32 acconlinetime() const;
  inline void set_acconlinetime(::google::protobuf::uint32 value);

  // optional string itemGot = 52;
  inline bool has_itemgot() const;
  inline void clear_itemgot();
  static const int kItemGotFieldNumber = 52;
  inline const ::std::string& itemgot() const;
  inline void set_itemgot(const ::std::string& value);
  inline void set_itemgot(const char* value);
  inline void set_itemgot(const char* value, size_t size);
  inline ::std::string* mutable_itemgot();
  inline ::std::string* release_itemgot();
  inline void set_allocated_itemgot(::std::string* itemgot);

  // repeated uint32 buyedPrice = 53;
  inline int buyedprice_size() const;
  inline void clear_buyedprice();
  static const int kBuyedPriceFieldNumber = 53;
  inline ::google::protobuf::uint32 buyedprice(int index) const;
  inline void set_buyedprice(int index, ::google::protobuf::uint32 value);
  inline void add_buyedprice(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buyedprice() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buyedprice();

  // optional uint32 position = 54;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 54;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // optional uint32 lastUpdateTime = 55;
  inline bool has_lastupdatetime() const;
  inline void clear_lastupdatetime();
  static const int kLastUpdateTimeFieldNumber = 55;
  inline ::google::protobuf::uint32 lastupdatetime() const;
  inline void set_lastupdatetime(::google::protobuf::uint32 value);

  // optional uint32 crusadeMaxId = 56;
  inline bool has_crusademaxid() const;
  inline void clear_crusademaxid();
  static const int kCrusadeMaxIdFieldNumber = 56;
  inline ::google::protobuf::uint32 crusademaxid() const;
  inline void set_crusademaxid(::google::protobuf::uint32 value);

  // optional uint32 crusadeCurId = 57;
  inline bool has_crusadecurid() const;
  inline void clear_crusadecurid();
  static const int kCrusadeCurIdFieldNumber = 57;
  inline ::google::protobuf::uint32 crusadecurid() const;
  inline void set_crusadecurid(::google::protobuf::uint32 value);

  // optional string int32attr = 58;
  inline bool has_int32attr() const;
  inline void clear_int32attr();
  static const int kInt32AttrFieldNumber = 58;
  inline const ::std::string& int32attr() const;
  inline void set_int32attr(const ::std::string& value);
  inline void set_int32attr(const char* value);
  inline void set_int32attr(const char* value, size_t size);
  inline ::std::string* mutable_int32attr();
  inline ::std::string* release_int32attr();
  inline void set_allocated_int32attr(::std::string* int32attr);

  // optional string AwakeHeroes = 59;
  inline bool has_awakeheroes() const;
  inline void clear_awakeheroes();
  static const int kAwakeHeroesFieldNumber = 59;
  inline const ::std::string& awakeheroes() const;
  inline void set_awakeheroes(const ::std::string& value);
  inline void set_awakeheroes(const char* value);
  inline void set_awakeheroes(const char* value, size_t size);
  inline ::std::string* mutable_awakeheroes();
  inline ::std::string* release_awakeheroes();
  inline void set_allocated_awakeheroes(::std::string* awakeheroes);

  // optional string tombinfo = 60;
  inline bool has_tombinfo() const;
  inline void clear_tombinfo();
  static const int kTombinfoFieldNumber = 60;
  inline const ::std::string& tombinfo() const;
  inline void set_tombinfo(const ::std::string& value);
  inline void set_tombinfo(const char* value);
  inline void set_tombinfo(const char* value, size_t size);
  inline ::std::string* mutable_tombinfo();
  inline ::std::string* release_tombinfo();
  inline void set_allocated_tombinfo(::std::string* tombinfo);

  // repeated uint32 markList = 61;
  inline int marklist_size() const;
  inline void clear_marklist();
  static const int kMarkListFieldNumber = 61;
  inline ::google::protobuf::uint32 marklist(int index) const;
  inline void set_marklist(int index, ::google::protobuf::uint32 value);
  inline void add_marklist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      marklist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_marklist();

  // optional string rechargeChoose = 62;
  inline bool has_rechargechoose() const;
  inline void clear_rechargechoose();
  static const int kRechargeChooseFieldNumber = 62;
  inline const ::std::string& rechargechoose() const;
  inline void set_rechargechoose(const ::std::string& value);
  inline void set_rechargechoose(const char* value);
  inline void set_rechargechoose(const char* value, size_t size);
  inline ::std::string* mutable_rechargechoose();
  inline ::std::string* release_rechargechoose();
  inline void set_allocated_rechargechoose(::std::string* rechargechoose);

  // optional .TgsProtocol.NationalDB national = 63;
  inline bool has_national() const;
  inline void clear_national();
  static const int kNationalFieldNumber = 63;
  inline const ::TgsProtocol::NationalDB& national() const;
  inline ::TgsProtocol::NationalDB* mutable_national();
  inline ::TgsProtocol::NationalDB* release_national();
  inline void set_allocated_national(::TgsProtocol::NationalDB* national);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_LoadCharRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_curstamina();
  inline void clear_has_curstamina();
  inline void set_has_maxstamina();
  inline void clear_has_maxstamina();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_updatestaminatime();
  inline void clear_has_updatestaminatime();
  inline void set_has_bitflag();
  inline void clear_has_bitflag();
  inline void set_has_quest();
  inline void clear_has_quest();
  inline void set_has_evaluation();
  inline void clear_has_evaluation();
  inline void set_has_chapterreward();
  inline void clear_has_chapterreward();
  inline void set_has_vipexp();
  inline void clear_has_vipexp();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_herobagnum();
  inline void clear_has_herobagnum();
  inline void set_has_herolist();
  inline void clear_has_herolist();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_essenceitem();
  inline void clear_has_essenceitem();
  inline void set_has_festivity();
  inline void clear_has_festivity();
  inline void set_has_lockchatendtime();
  inline void clear_has_lockchatendtime();
  inline void set_has_daychattimes();
  inline void clear_has_daychattimes();
  inline void set_has_skillpoint();
  inline void clear_has_skillpoint();
  inline void set_has_updateskillpointtime();
  inline void clear_has_updateskillpointtime();
  inline void set_has_energy();
  inline void clear_has_energy();
  inline void set_has_updateenergytime();
  inline void clear_has_updateenergytime();
  inline void set_has_equipnew();
  inline void clear_has_equipnew();
  inline void set_has_recharge();
  inline void clear_has_recharge();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_assistformation();
  inline void clear_has_assistformation();
  inline void set_has_chapterbox();
  inline void clear_has_chapterbox();
  inline void set_has_coins();
  inline void clear_has_coins();
  inline void set_has_leavepoint();
  inline void clear_has_leavepoint();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();
  inline void set_has_gmflushtime();
  inline void clear_has_gmflushtime();
  inline void set_has_isshopbuy();
  inline void clear_has_isshopbuy();
  inline void set_has_deviceid();
  inline void clear_has_deviceid();
  inline void set_has_diamondpay();
  inline void clear_has_diamondpay();
  inline void set_has_recommfriends();
  inline void clear_has_recommfriends();
  inline void set_has_prizeinfo();
  inline void clear_has_prizeinfo();
  inline void set_has_avoidbattle();
  inline void clear_has_avoidbattle();
  inline void set_has_acconlinetime();
  inline void clear_has_acconlinetime();
  inline void set_has_itemgot();
  inline void clear_has_itemgot();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_lastupdatetime();
  inline void clear_has_lastupdatetime();
  inline void set_has_crusademaxid();
  inline void clear_has_crusademaxid();
  inline void set_has_crusadecurid();
  inline void clear_has_crusadecurid();
  inline void set_has_int32attr();
  inline void clear_has_int32attr();
  inline void set_has_awakeheroes();
  inline void clear_has_awakeheroes();
  inline void set_has_tombinfo();
  inline void clear_has_tombinfo();
  inline void set_has_rechargechoose();
  inline void clear_has_rechargechoose();
  inline void set_has_national();
  inline void clear_has_national();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 curstamina_;
  ::google::protobuf::uint32 maxstamina_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 offlinetime_;
  ::google::protobuf::uint32 updatestaminatime_;
  ::google::protobuf::uint32 bitflag_;
  ::std::string* quest_;
  ::std::string* evaluation_;
  ::std::string* chapterreward_;
  ::google::protobuf::uint32 vipexp_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > formation_;
  ::std::string* herolist_;
  ::google::protobuf::uint32 herobagnum_;
  ::google::protobuf::uint32 gender_;
  ::std::string* essenceitem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > refreshprice_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 lockchatendtime_;
  ::std::string* festivity_;
  ::google::protobuf::uint32 daychattimes_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::uint32 updateskillpointtime_;
  ::google::protobuf::uint32 energy_;
  ::std::string* equipnew_;
  ::google::protobuf::uint32 updateenergytime_;
  ::google::protobuf::uint32 recharge_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arenaformation_;
  ::std::string* activity_;
  ::std::string* assistformation_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint32 leavepoint_;
  ::std::string* chapterbox_;
  ::std::string* coins_;
  ::google::protobuf::uint32 onlinetime_;
  ::google::protobuf::uint32 gmflushtime_;
  ::std::string* deviceid_;
  ::google::protobuf::uint32 isshopbuy_;
  ::google::protobuf::uint32 diamondpay_;
  ::std::string* recommfriends_;
  ::std::string* prizeinfo_;
  ::google::protobuf::uint32 avoidbattle_;
  ::google::protobuf::uint32 acconlinetime_;
  ::std::string* itemgot_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buyedprice_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 lastupdatetime_;
  ::google::protobuf::uint32 crusademaxid_;
  ::google::protobuf::uint32 crusadecurid_;
  ::std::string* int32attr_;
  ::std::string* awakeheroes_;
  ::std::string* tombinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > marklist_;
  ::std::string* rechargechoose_;
  ::TgsProtocol::NationalDB* national_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_LoadCharRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_CharAdvancedInfo : public ::google::protobuf::Message {
 public:
  LOBBY2DB_CharAdvancedInfo();
  virtual ~LOBBY2DB_CharAdvancedInfo();

  LOBBY2DB_CharAdvancedInfo(const LOBBY2DB_CharAdvancedInfo& from);

  inline LOBBY2DB_CharAdvancedInfo& operator=(const LOBBY2DB_CharAdvancedInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_CharAdvancedInfo& default_instance();

  void Swap(LOBBY2DB_CharAdvancedInfo* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_CharAdvancedInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_CharAdvancedInfo& from);
  void MergeFrom(const LOBBY2DB_CharAdvancedInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_GET_ADVANCED_CHARINFO_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_CharAdvancedInfo)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_CharAdvancedInfo* default_instance_;
};
// -------------------------------------------------------------------

class DbSevenDayActive : public ::google::protobuf::Message {
 public:
  DbSevenDayActive();
  virtual ~DbSevenDayActive();

  DbSevenDayActive(const DbSevenDayActive& from);

  inline DbSevenDayActive& operator=(const DbSevenDayActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbSevenDayActive& default_instance();

  void Swap(DbSevenDayActive* other);

  // implements Message ----------------------------------------------

  DbSevenDayActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbSevenDayActive& from);
  void MergeFrom(const DbSevenDayActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.DbSevenDayActiveElement mission = 1;
  inline int mission_size() const;
  inline void clear_mission();
  static const int kMissionFieldNumber = 1;
  inline const ::TgsProtocol::DbSevenDayActiveElement& mission(int index) const;
  inline ::TgsProtocol::DbSevenDayActiveElement* mutable_mission(int index);
  inline ::TgsProtocol::DbSevenDayActiveElement* add_mission();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbSevenDayActiveElement >&
      mission() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbSevenDayActiveElement >*
      mutable_mission();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbSevenDayActive)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbSevenDayActiveElement > mission_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DbSevenDayActive* default_instance_;
};
// -------------------------------------------------------------------

class DbSevenDayActiveElement : public ::google::protobuf::Message {
 public:
  DbSevenDayActiveElement();
  virtual ~DbSevenDayActiveElement();

  DbSevenDayActiveElement(const DbSevenDayActiveElement& from);

  inline DbSevenDayActiveElement& operator=(const DbSevenDayActiveElement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbSevenDayActiveElement& default_instance();

  void Swap(DbSevenDayActiveElement* other);

  // implements Message ----------------------------------------------

  DbSevenDayActiveElement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbSevenDayActiveElement& from);
  void MergeFrom(const DbSevenDayActiveElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 step = 3;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 3;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbSevenDayActiveElement)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_step();
  inline void clear_has_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 step_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DbSevenDayActiveElement* default_instance_;
};
// -------------------------------------------------------------------

class DbRebelArmy : public ::google::protobuf::Message {
 public:
  DbRebelArmy();
  virtual ~DbRebelArmy();

  DbRebelArmy(const DbRebelArmy& from);

  inline DbRebelArmy& operator=(const DbRebelArmy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbRebelArmy& default_instance();

  void Swap(DbRebelArmy* other);

  // implements Message ----------------------------------------------

  DbRebelArmy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbRebelArmy& from);
  void MergeFrom(const DbRebelArmy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ownerUserId = 1;
  inline bool has_owneruserid() const;
  inline void clear_owneruserid();
  static const int kOwnerUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 owneruserid() const;
  inline void set_owneruserid(::google::protobuf::uint64 value);

  // required uint32 curHealth = 2;
  inline bool has_curhealth() const;
  inline void clear_curhealth();
  static const int kCurHealthFieldNumber = 2;
  inline ::google::protobuf::uint32 curhealth() const;
  inline void set_curhealth(::google::protobuf::uint32 value);

  // required uint32 createTime = 3;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // required uint32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // required uint32 attackTime = 6;
  inline bool has_attacktime() const;
  inline void clear_attacktime();
  static const int kAttackTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 attacktime() const;
  inline void set_attacktime(::google::protobuf::uint32 value);

  // required uint32 bIsShare = 7;
  inline bool has_bisshare() const;
  inline void clear_bisshare();
  static const int kBIsShareFieldNumber = 7;
  inline ::google::protobuf::uint32 bisshare() const;
  inline void set_bisshare(::google::protobuf::uint32 value);

  // required uint32 lv = 8;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 8;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // required uint32 battleValue = 9;
  inline bool has_battlevalue() const;
  inline void clear_battlevalue();
  static const int kBattleValueFieldNumber = 9;
  inline ::google::protobuf::uint32 battlevalue() const;
  inline void set_battlevalue(::google::protobuf::uint32 value);

  // required uint32 freeCount = 10;
  inline bool has_freecount() const;
  inline void clear_freecount();
  static const int kFreeCountFieldNumber = 10;
  inline ::google::protobuf::uint32 freecount() const;
  inline void set_freecount(::google::protobuf::uint32 value);

  // required uint32 countRecoverTime = 11;
  inline bool has_countrecovertime() const;
  inline void clear_countrecovertime();
  static const int kCountRecoverTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 countrecovertime() const;
  inline void set_countrecovertime(::google::protobuf::uint32 value);

  // required uint32 startLv = 12;
  inline bool has_startlv() const;
  inline void clear_startlv();
  static const int kStartLvFieldNumber = 12;
  inline ::google::protobuf::uint32 startlv() const;
  inline void set_startlv(::google::protobuf::uint32 value);

  // required uint32 happenTime = 13;
  inline bool has_happentime() const;
  inline void clear_happentime();
  static const int kHappenTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 happentime() const;
  inline void set_happentime(::google::protobuf::uint32 value);

  // required uint32 happenCount = 14;
  inline bool has_happencount() const;
  inline void clear_happencount();
  static const int kHappenCountFieldNumber = 14;
  inline ::google::protobuf::uint32 happencount() const;
  inline void set_happencount(::google::protobuf::uint32 value);

  // optional uint32 dayharm = 15;
  inline bool has_dayharm() const;
  inline void clear_dayharm();
  static const int kDayharmFieldNumber = 15;
  inline ::google::protobuf::uint32 dayharm() const;
  inline void set_dayharm(::google::protobuf::uint32 value);

  // optional uint32 dayexploits = 16;
  inline bool has_dayexploits() const;
  inline void clear_dayexploits();
  static const int kDayexploitsFieldNumber = 16;
  inline ::google::protobuf::uint32 dayexploits() const;
  inline void set_dayexploits(::google::protobuf::uint32 value);

  // optional uint64 dayharmBig = 17;
  inline bool has_dayharmbig() const;
  inline void clear_dayharmbig();
  static const int kDayharmBigFieldNumber = 17;
  inline ::google::protobuf::uint64 dayharmbig() const;
  inline void set_dayharmbig(::google::protobuf::uint64 value);

  // optional uint64 curHealthBig = 18;
  inline bool has_curhealthbig() const;
  inline void clear_curhealthbig();
  static const int kCurHealthBigFieldNumber = 18;
  inline ::google::protobuf::uint64 curhealthbig() const;
  inline void set_curhealthbig(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbRebelArmy)
 private:
  inline void set_has_owneruserid();
  inline void clear_has_owneruserid();
  inline void set_has_curhealth();
  inline void clear_has_curhealth();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_attacktime();
  inline void clear_has_attacktime();
  inline void set_has_bisshare();
  inline void clear_has_bisshare();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_battlevalue();
  inline void clear_has_battlevalue();
  inline void set_has_freecount();
  inline void clear_has_freecount();
  inline void set_has_countrecovertime();
  inline void clear_has_countrecovertime();
  inline void set_has_startlv();
  inline void clear_has_startlv();
  inline void set_has_happentime();
  inline void clear_has_happentime();
  inline void set_has_happencount();
  inline void clear_has_happencount();
  inline void set_has_dayharm();
  inline void clear_has_dayharm();
  inline void set_has_dayexploits();
  inline void clear_has_dayexploits();
  inline void set_has_dayharmbig();
  inline void clear_has_dayharmbig();
  inline void set_has_curhealthbig();
  inline void clear_has_curhealthbig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 owneruserid_;
  ::google::protobuf::uint32 curhealth_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 attacktime_;
  ::google::protobuf::uint32 bisshare_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 battlevalue_;
  ::google::protobuf::uint32 freecount_;
  ::google::protobuf::uint32 countrecovertime_;
  ::google::protobuf::uint32 startlv_;
  ::google::protobuf::uint32 happentime_;
  ::google::protobuf::uint32 happencount_;
  ::google::protobuf::uint32 dayharm_;
  ::google::protobuf::uint64 dayharmbig_;
  ::google::protobuf::uint64 curhealthbig_;
  ::google::protobuf::uint32 dayexploits_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DbRebelArmy* default_instance_;
};
// -------------------------------------------------------------------

class DbActionRecord : public ::google::protobuf::Message {
 public:
  DbActionRecord();
  virtual ~DbActionRecord();

  DbActionRecord(const DbActionRecord& from);

  inline DbActionRecord& operator=(const DbActionRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbActionRecord& default_instance();

  void Swap(DbActionRecord* other);

  // implements Message ----------------------------------------------

  DbActionRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbActionRecord& from);
  void MergeFrom(const DbActionRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.ActionRecord action = 1;
  inline int action_size() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline const ::TgsProtocol::ActionRecord& action(int index) const;
  inline ::TgsProtocol::ActionRecord* mutable_action(int index);
  inline ::TgsProtocol::ActionRecord* add_action();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ActionRecord >&
      action() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ActionRecord >*
      mutable_action();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbActionRecord)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ActionRecord > action_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DbActionRecord* default_instance_;
};
// -------------------------------------------------------------------

class DbRaidTeam : public ::google::protobuf::Message {
 public:
  DbRaidTeam();
  virtual ~DbRaidTeam();

  DbRaidTeam(const DbRaidTeam& from);

  inline DbRaidTeam& operator=(const DbRaidTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbRaidTeam& default_instance();

  void Swap(DbRaidTeam* other);

  // implements Message ----------------------------------------------

  DbRaidTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbRaidTeam& from);
  void MergeFrom(const DbRaidTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 lucky = 2;
  inline bool has_lucky() const;
  inline void clear_lucky();
  static const int kLuckyFieldNumber = 2;
  inline ::google::protobuf::uint32 lucky() const;
  inline void set_lucky(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbRaidTeam)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_lucky();
  inline void clear_has_lucky();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 lucky_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DbRaidTeam* default_instance_;
};
// -------------------------------------------------------------------

class DBServerCompareGot : public ::google::protobuf::Message {
 public:
  DBServerCompareGot();
  virtual ~DBServerCompareGot();

  DBServerCompareGot(const DBServerCompareGot& from);

  inline DBServerCompareGot& operator=(const DBServerCompareGot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBServerCompareGot& default_instance();

  void Swap(DBServerCompareGot* other);

  // implements Message ----------------------------------------------

  DBServerCompareGot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBServerCompareGot& from);
  void MergeFrom(const DBServerCompareGot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required uint32 mergeTimes = 2;
  inline bool has_mergetimes() const;
  inline void clear_mergetimes();
  static const int kMergeTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 mergetimes() const;
  inline void set_mergetimes(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.ServerCompareGot gots = 3;
  inline int gots_size() const;
  inline void clear_gots();
  static const int kGotsFieldNumber = 3;
  inline const ::TgsProtocol::ServerCompareGot& gots(int index) const;
  inline ::TgsProtocol::ServerCompareGot* mutable_gots(int index);
  inline ::TgsProtocol::ServerCompareGot* add_gots();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ServerCompareGot >&
      gots() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ServerCompareGot >*
      mutable_gots();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBServerCompareGot)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_mergetimes();
  inline void clear_has_mergetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 mergetimes_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ServerCompareGot > gots_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DBServerCompareGot* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_CharAdvancedInfo : public ::google::protobuf::Message {
 public:
  DB2LOBBY_CharAdvancedInfo();
  virtual ~DB2LOBBY_CharAdvancedInfo();

  DB2LOBBY_CharAdvancedInfo(const DB2LOBBY_CharAdvancedInfo& from);

  inline DB2LOBBY_CharAdvancedInfo& operator=(const DB2LOBBY_CharAdvancedInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_CharAdvancedInfo& default_instance();

  void Swap(DB2LOBBY_CharAdvancedInfo* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_CharAdvancedInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_CharAdvancedInfo& from);
  void MergeFrom(const DB2LOBBY_CharAdvancedInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GET_ADVANCED_CHARINFO_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional bytes goods = 4;
  inline bool has_goods() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 4;
  inline const ::std::string& goods() const;
  inline void set_goods(const ::std::string& value);
  inline void set_goods(const char* value);
  inline void set_goods(const void* value, size_t size);
  inline ::std::string* mutable_goods();
  inline ::std::string* release_goods();
  inline void set_allocated_goods(::std::string* goods);

  // optional uint32 openCopperBoxNum = 5;
  inline bool has_opencopperboxnum() const;
  inline void clear_opencopperboxnum();
  static const int kOpenCopperBoxNumFieldNumber = 5;
  inline ::google::protobuf::uint32 opencopperboxnum() const;
  inline void set_opencopperboxnum(::google::protobuf::uint32 value);

  // optional uint32 lastOpenCopperBoxTime = 6;
  inline bool has_lastopencopperboxtime() const;
  inline void clear_lastopencopperboxtime();
  static const int kLastOpenCopperBoxTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 lastopencopperboxtime() const;
  inline void set_lastopencopperboxtime(::google::protobuf::uint32 value);

  // optional uint32 lastOpenDiamondBoxTime = 7;
  inline bool has_lastopendiamondboxtime() const;
  inline void clear_lastopendiamondboxtime();
  static const int kLastOpenDiamondBoxTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 lastopendiamondboxtime() const;
  inline void set_lastopendiamondboxtime(::google::protobuf::uint32 value);

  // optional uint32 totalOpenCopperBoxTimes = 8;
  inline bool has_totalopencopperboxtimes() const;
  inline void clear_totalopencopperboxtimes();
  static const int kTotalOpenCopperBoxTimesFieldNumber = 8;
  inline ::google::protobuf::uint32 totalopencopperboxtimes() const;
  inline void set_totalopencopperboxtimes(::google::protobuf::uint32 value);

  // optional uint32 totalOpenDiamondBoxTimes = 9;
  inline bool has_totalopendiamondboxtimes() const;
  inline void clear_totalopendiamondboxtimes();
  static const int kTotalOpenDiamondBoxTimesFieldNumber = 9;
  inline ::google::protobuf::uint32 totalopendiamondboxtimes() const;
  inline void set_totalopendiamondboxtimes(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.DBMailInfo mailList = 10;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMailListFieldNumber = 10;
  inline const ::TgsProtocol::DBMailInfo& maillist(int index) const;
  inline ::TgsProtocol::DBMailInfo* mutable_maillist(int index);
  inline ::TgsProtocol::DBMailInfo* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >*
      mutable_maillist();

  // optional uint32 skillPoint = 11;
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillPointFieldNumber = 11;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);

  // optional uint32 updateSkillPointTime = 12;
  inline bool has_updateskillpointtime() const;
  inline void clear_updateskillpointtime();
  static const int kUpdateSkillPointTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 updateskillpointtime() const;
  inline void set_updateskillpointtime(::google::protobuf::uint32 value);

  // repeated uint32 exFormation = 13;
  inline int exformation_size() const;
  inline void clear_exformation();
  static const int kExFormationFieldNumber = 13;
  inline ::google::protobuf::uint32 exformation(int index) const;
  inline void set_exformation(int index, ::google::protobuf::uint32 value);
  inline void add_exformation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      exformation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_exformation();

  // optional bytes myHeros = 14;
  inline bool has_myheros() const;
  inline void clear_myheros();
  static const int kMyHerosFieldNumber = 14;
  inline const ::std::string& myheros() const;
  inline void set_myheros(const ::std::string& value);
  inline void set_myheros(const char* value);
  inline void set_myheros(const void* value, size_t size);
  inline ::std::string* mutable_myheros();
  inline ::std::string* release_myheros();
  inline void set_allocated_myheros(::std::string* myheros);

  // optional bytes DefenseHeros = 15;
  inline bool has_defenseheros() const;
  inline void clear_defenseheros();
  static const int kDefenseHerosFieldNumber = 15;
  inline const ::std::string& defenseheros() const;
  inline void set_defenseheros(const ::std::string& value);
  inline void set_defenseheros(const char* value);
  inline void set_defenseheros(const void* value, size_t size);
  inline ::std::string* mutable_defenseheros();
  inline ::std::string* release_defenseheros();
  inline void set_allocated_defenseheros(::std::string* defenseheros);

  // optional uint32 difficulty = 16;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 16;
  inline ::google::protobuf::uint32 difficulty() const;
  inline void set_difficulty(::google::protobuf::uint32 value);

  // optional uint32 lastArenaTime = 17;
  inline bool has_lastarenatime() const;
  inline void clear_lastarenatime();
  static const int kLastArenaTimeFieldNumber = 17;
  inline ::google::protobuf::uint32 lastarenatime() const;
  inline void set_lastarenatime(::google::protobuf::uint32 value);

  // optional uint32 dailyArenaTimes = 18;
  inline bool has_dailyarenatimes() const;
  inline void clear_dailyarenatimes();
  static const int kDailyArenaTimesFieldNumber = 18;
  inline ::google::protobuf::uint32 dailyarenatimes() const;
  inline void set_dailyarenatimes(::google::protobuf::uint32 value);

  // optional uint32 bestArenaRank = 19;
  inline bool has_bestarenarank() const;
  inline void clear_bestarenarank();
  static const int kBestArenaRankFieldNumber = 19;
  inline ::google::protobuf::uint32 bestarenarank() const;
  inline void set_bestarenarank(::google::protobuf::uint32 value);

  // repeated uint32 arFormation = 20;
  inline int arformation_size() const;
  inline void clear_arformation();
  static const int kArFormationFieldNumber = 20;
  inline ::google::protobuf::uint32 arformation(int index) const;
  inline void set_arformation(int index, ::google::protobuf::uint32 value);
  inline void add_arformation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arformation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arformation();

  // optional uint32 totalArenaWin = 21;
  inline bool has_totalarenawin() const;
  inline void clear_totalarenawin();
  static const int kTotalArenaWinFieldNumber = 21;
  inline ::google::protobuf::uint32 totalarenawin() const;
  inline void set_totalarenawin(::google::protobuf::uint32 value);

  // optional bytes arenaLog = 22;
  inline bool has_arenalog() const;
  inline void clear_arenalog();
  static const int kArenaLogFieldNumber = 22;
  inline const ::std::string& arenalog() const;
  inline void set_arenalog(const ::std::string& value);
  inline void set_arenalog(const char* value);
  inline void set_arenalog(const void* value, size_t size);
  inline ::std::string* mutable_arenalog();
  inline ::std::string* release_arenalog();
  inline void set_allocated_arenalog(::std::string* arenalog);

  // optional uint32 topThreeTime = 23;
  inline bool has_topthreetime() const;
  inline void clear_topthreetime();
  static const int kTopThreeTimeFieldNumber = 23;
  inline ::google::protobuf::uint32 topthreetime() const;
  inline void set_topthreetime(::google::protobuf::uint32 value);

  // repeated uint32 ackFormation = 24;
  inline int ackformation_size() const;
  inline void clear_ackformation();
  static const int kAckFormationFieldNumber = 24;
  inline ::google::protobuf::uint32 ackformation(int index) const;
  inline void set_ackformation(int index, ::google::protobuf::uint32 value);
  inline void add_ackformation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ackformation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ackformation();

  // optional uint32 dailyOpenDiamondBoxTimes = 25;
  inline bool has_dailyopendiamondboxtimes() const;
  inline void clear_dailyopendiamondboxtimes();
  static const int kDailyOpenDiamondBoxTimesFieldNumber = 25;
  inline ::google::protobuf::uint32 dailyopendiamondboxtimes() const;
  inline void set_dailyopendiamondboxtimes(::google::protobuf::uint32 value);

  // optional uint32 signIn = 26;
  inline bool has_signin() const;
  inline void clear_signin();
  static const int kSignInFieldNumber = 26;
  inline ::google::protobuf::uint32 signin() const;
  inline void set_signin(::google::protobuf::uint32 value);

  // optional uint32 totalCopperMineNum = 29;
  inline bool has_totalcopperminenum() const;
  inline void clear_totalcopperminenum();
  static const int kTotalCopperMineNumFieldNumber = 29;
  inline ::google::protobuf::uint32 totalcopperminenum() const;
  inline void set_totalcopperminenum(::google::protobuf::uint32 value);

  // optional uint32 totalSilverMineNum = 30;
  inline bool has_totalsilverminenum() const;
  inline void clear_totalsilverminenum();
  static const int kTotalSilverMineNumFieldNumber = 30;
  inline ::google::protobuf::uint32 totalsilverminenum() const;
  inline void set_totalsilverminenum(::google::protobuf::uint32 value);

  // optional uint32 totalDiamondMineNum = 31;
  inline bool has_totaldiamondminenum() const;
  inline void clear_totaldiamondminenum();
  static const int kTotalDiamondMineNumFieldNumber = 31;
  inline ::google::protobuf::uint32 totaldiamondminenum() const;
  inline void set_totaldiamondminenum(::google::protobuf::uint32 value);

  // optional uint32 dailyCopperMineNum = 32;
  inline bool has_dailycopperminenum() const;
  inline void clear_dailycopperminenum();
  static const int kDailyCopperMineNumFieldNumber = 32;
  inline ::google::protobuf::uint32 dailycopperminenum() const;
  inline void set_dailycopperminenum(::google::protobuf::uint32 value);

  // optional uint32 dailySilverMineNum = 33;
  inline bool has_dailysilverminenum() const;
  inline void clear_dailysilverminenum();
  static const int kDailySilverMineNumFieldNumber = 33;
  inline ::google::protobuf::uint32 dailysilverminenum() const;
  inline void set_dailysilverminenum(::google::protobuf::uint32 value);

  // optional uint32 dailyDiamondMineNum = 34;
  inline bool has_dailydiamondminenum() const;
  inline void clear_dailydiamondminenum();
  static const int kDailyDiamondMineNumFieldNumber = 34;
  inline ::google::protobuf::uint32 dailydiamondminenum() const;
  inline void set_dailydiamondminenum(::google::protobuf::uint32 value);

  // optional bytes friendInfo = 35;
  inline bool has_friendinfo() const;
  inline void clear_friendinfo();
  static const int kFriendInfoFieldNumber = 35;
  inline const ::std::string& friendinfo() const;
  inline void set_friendinfo(const ::std::string& value);
  inline void set_friendinfo(const char* value);
  inline void set_friendinfo(const void* value, size_t size);
  inline ::std::string* mutable_friendinfo();
  inline ::std::string* release_friendinfo();
  inline void set_allocated_friendinfo(::std::string* friendinfo);

  // optional bytes shopFlush = 36;
  inline bool has_shopflush() const;
  inline void clear_shopflush();
  static const int kShopFlushFieldNumber = 36;
  inline const ::std::string& shopflush() const;
  inline void set_shopflush(const ::std::string& value);
  inline void set_shopflush(const char* value);
  inline void set_shopflush(const void* value, size_t size);
  inline ::std::string* mutable_shopflush();
  inline ::std::string* release_shopflush();
  inline void set_allocated_shopflush(::std::string* shopflush);

  // optional .TgsProtocol.DbSevenDayActive sevenDay = 37;
  inline bool has_sevenday() const;
  inline void clear_sevenday();
  static const int kSevenDayFieldNumber = 37;
  inline const ::TgsProtocol::DbSevenDayActive& sevenday() const;
  inline ::TgsProtocol::DbSevenDayActive* mutable_sevenday();
  inline ::TgsProtocol::DbSevenDayActive* release_sevenday();
  inline void set_allocated_sevenday(::TgsProtocol::DbSevenDayActive* sevenday);

  // optional .TgsProtocol.DbRebelArmy rebelArmy = 38;
  inline bool has_rebelarmy() const;
  inline void clear_rebelarmy();
  static const int kRebelArmyFieldNumber = 38;
  inline const ::TgsProtocol::DbRebelArmy& rebelarmy() const;
  inline ::TgsProtocol::DbRebelArmy* mutable_rebelarmy();
  inline ::TgsProtocol::DbRebelArmy* release_rebelarmy();
  inline void set_allocated_rebelarmy(::TgsProtocol::DbRebelArmy* rebelarmy);

  // optional .TgsProtocol.DbActionRecord action = 39;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 39;
  inline const ::TgsProtocol::DbActionRecord& action() const;
  inline ::TgsProtocol::DbActionRecord* mutable_action();
  inline ::TgsProtocol::DbActionRecord* release_action();
  inline void set_allocated_action(::TgsProtocol::DbActionRecord* action);

  // optional .TgsProtocol.DbRaidTeam raidTeam = 40;
  inline bool has_raidteam() const;
  inline void clear_raidteam();
  static const int kRaidTeamFieldNumber = 40;
  inline const ::TgsProtocol::DbRaidTeam& raidteam() const;
  inline ::TgsProtocol::DbRaidTeam* mutable_raidteam();
  inline ::TgsProtocol::DbRaidTeam* release_raidteam();
  inline void set_allocated_raidteam(::TgsProtocol::DbRaidTeam* raidteam);

  // optional .TgsProtocol.DbMonthCard card = 41;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 41;
  inline const ::TgsProtocol::DbMonthCard& card() const;
  inline ::TgsProtocol::DbMonthCard* mutable_card();
  inline ::TgsProtocol::DbMonthCard* release_card();
  inline void set_allocated_card(::TgsProtocol::DbMonthCard* card);

  // optional .TgsProtocol.DbDrop drop = 42;
  inline bool has_drop() const;
  inline void clear_drop();
  static const int kDropFieldNumber = 42;
  inline const ::TgsProtocol::DbDrop& drop() const;
  inline ::TgsProtocol::DbDrop* mutable_drop();
  inline ::TgsProtocol::DbDrop* release_drop();
  inline void set_allocated_drop(::TgsProtocol::DbDrop* drop);

  // optional string goodsBuyed = 43;
  inline bool has_goodsbuyed() const;
  inline void clear_goodsbuyed();
  static const int kGoodsBuyedFieldNumber = 43;
  inline const ::std::string& goodsbuyed() const;
  inline void set_goodsbuyed(const ::std::string& value);
  inline void set_goodsbuyed(const char* value);
  inline void set_goodsbuyed(const char* value, size_t size);
  inline ::std::string* mutable_goodsbuyed();
  inline ::std::string* release_goodsbuyed();
  inline void set_allocated_goodsbuyed(::std::string* goodsbuyed);

  // optional uint32 firstChargeChoose = 44;
  inline bool has_firstchargechoose() const;
  inline void clear_firstchargechoose();
  static const int kFirstChargeChooseFieldNumber = 44;
  inline ::google::protobuf::uint32 firstchargechoose() const;
  inline void set_firstchargechoose(::google::protobuf::uint32 value);

  // optional uint32 continueChargeChoose = 45;
  inline bool has_continuechargechoose() const;
  inline void clear_continuechargechoose();
  static const int kContinueChargeChooseFieldNumber = 45;
  inline ::google::protobuf::uint32 continuechargechoose() const;
  inline void set_continuechargechoose(::google::protobuf::uint32 value);

  // optional string continueCharge = 46;
  inline bool has_continuecharge() const;
  inline void clear_continuecharge();
  static const int kContinueChargeFieldNumber = 46;
  inline const ::std::string& continuecharge() const;
  inline void set_continuecharge(const ::std::string& value);
  inline void set_continuecharge(const char* value);
  inline void set_continuecharge(const char* value, size_t size);
  inline ::std::string* mutable_continuecharge();
  inline ::std::string* release_continuecharge();
  inline void set_allocated_continuecharge(::std::string* continuecharge);

  // optional .TgsProtocol.DbHandBook handbook = 47;
  inline bool has_handbook() const;
  inline void clear_handbook();
  static const int kHandbookFieldNumber = 47;
  inline const ::TgsProtocol::DbHandBook& handbook() const;
  inline ::TgsProtocol::DbHandBook* mutable_handbook();
  inline ::TgsProtocol::DbHandBook* release_handbook();
  inline void set_allocated_handbook(::TgsProtocol::DbHandBook* handbook);

  // optional .TgsProtocol.DBSecretHole secrethole = 48;
  inline bool has_secrethole() const;
  inline void clear_secrethole();
  static const int kSecretholeFieldNumber = 48;
  inline const ::TgsProtocol::DBSecretHole& secrethole() const;
  inline ::TgsProtocol::DBSecretHole* mutable_secrethole();
  inline ::TgsProtocol::DBSecretHole* release_secrethole();
  inline void set_allocated_secrethole(::TgsProtocol::DBSecretHole* secrethole);

  // optional .TgsProtocol.DBReturnTask returntask = 49;
  inline bool has_returntask() const;
  inline void clear_returntask();
  static const int kReturntaskFieldNumber = 49;
  inline const ::TgsProtocol::DBReturnTask& returntask() const;
  inline ::TgsProtocol::DBReturnTask* mutable_returntask();
  inline ::TgsProtocol::DBReturnTask* release_returntask();
  inline void set_allocated_returntask(::TgsProtocol::DBReturnTask* returntask);

  // optional .TgsProtocol.PlayerTerritoryInfo territory = 50;
  inline bool has_territory() const;
  inline void clear_territory();
  static const int kTerritoryFieldNumber = 50;
  inline const ::TgsProtocol::PlayerTerritoryInfo& territory() const;
  inline ::TgsProtocol::PlayerTerritoryInfo* mutable_territory();
  inline ::TgsProtocol::PlayerTerritoryInfo* release_territory();
  inline void set_allocated_territory(::TgsProtocol::PlayerTerritoryInfo* territory);

  // optional .TgsProtocol.DiagramMap diagramMap = 51;
  inline bool has_diagrammap() const;
  inline void clear_diagrammap();
  static const int kDiagramMapFieldNumber = 51;
  inline const ::TgsProtocol::DiagramMap& diagrammap() const;
  inline ::TgsProtocol::DiagramMap* mutable_diagrammap();
  inline ::TgsProtocol::DiagramMap* release_diagrammap();
  inline void set_allocated_diagrammap(::TgsProtocol::DiagramMap* diagrammap);

  // optional .TgsProtocol.GhostList ghostActiveList = 52;
  inline bool has_ghostactivelist() const;
  inline void clear_ghostactivelist();
  static const int kGhostActiveListFieldNumber = 52;
  inline const ::TgsProtocol::GhostList& ghostactivelist() const;
  inline ::TgsProtocol::GhostList* mutable_ghostactivelist();
  inline ::TgsProtocol::GhostList* release_ghostactivelist();
  inline void set_allocated_ghostactivelist(::TgsProtocol::GhostList* ghostactivelist);

  // optional uint32 cheerId = 53;
  inline bool has_cheerid() const;
  inline void clear_cheerid();
  static const int kCheerIdFieldNumber = 53;
  inline ::google::protobuf::uint32 cheerid() const;
  inline void set_cheerid(::google::protobuf::uint32 value);

  // repeated uint32 titleList = 54;
  inline int titlelist_size() const;
  inline void clear_titlelist();
  static const int kTitleListFieldNumber = 54;
  inline ::google::protobuf::uint32 titlelist(int index) const;
  inline void set_titlelist(int index, ::google::protobuf::uint32 value);
  inline void add_titlelist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      titlelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_titlelist();

  // optional .TgsProtocol.EpicBossList epicbosslist = 55;
  inline bool has_epicbosslist() const;
  inline void clear_epicbosslist();
  static const int kEpicbosslistFieldNumber = 55;
  inline const ::TgsProtocol::EpicBossList& epicbosslist() const;
  inline ::TgsProtocol::EpicBossList* mutable_epicbosslist();
  inline ::TgsProtocol::EpicBossList* release_epicbosslist();
  inline void set_allocated_epicbosslist(::TgsProtocol::EpicBossList* epicbosslist);

  // repeated uint32 sevengifts = 57;
  inline int sevengifts_size() const;
  inline void clear_sevengifts();
  static const int kSevengiftsFieldNumber = 57;
  inline ::google::protobuf::uint32 sevengifts(int index) const;
  inline void set_sevengifts(int index, ::google::protobuf::uint32 value);
  inline void add_sevengifts(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sevengifts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sevengifts();

  // repeated uint32 onlineRewards = 58;
  inline int onlinerewards_size() const;
  inline void clear_onlinerewards();
  static const int kOnlineRewardsFieldNumber = 58;
  inline ::google::protobuf::uint32 onlinerewards(int index) const;
  inline void set_onlinerewards(int index, ::google::protobuf::uint32 value);
  inline void add_onlinerewards(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      onlinerewards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_onlinerewards();

  // optional .TgsProtocol.RetrieveDB retrieve = 59;
  inline bool has_retrieve() const;
  inline void clear_retrieve();
  static const int kRetrieveFieldNumber = 59;
  inline const ::TgsProtocol::RetrieveDB& retrieve() const;
  inline ::TgsProtocol::RetrieveDB* mutable_retrieve();
  inline ::TgsProtocol::RetrieveDB* release_retrieve();
  inline void set_allocated_retrieve(::TgsProtocol::RetrieveDB* retrieve);

  // repeated .TgsProtocol.PassWordState chatpasswd = 60;
  inline int chatpasswd_size() const;
  inline void clear_chatpasswd();
  static const int kChatpasswdFieldNumber = 60;
  inline const ::TgsProtocol::PassWordState& chatpasswd(int index) const;
  inline ::TgsProtocol::PassWordState* mutable_chatpasswd(int index);
  inline ::TgsProtocol::PassWordState* add_chatpasswd();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState >&
      chatpasswd() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState >*
      mutable_chatpasswd();

  // repeated uint32 chatCount = 61;
  inline int chatcount_size() const;
  inline void clear_chatcount();
  static const int kChatCountFieldNumber = 61;
  inline ::google::protobuf::uint32 chatcount(int index) const;
  inline void set_chatcount(int index, ::google::protobuf::uint32 value);
  inline void add_chatcount(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      chatcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_chatcount();

  // optional .TgsProtocol.DBServerCompareGot compare_gots = 62;
  inline bool has_compare_gots() const;
  inline void clear_compare_gots();
  static const int kCompareGotsFieldNumber = 62;
  inline const ::TgsProtocol::DBServerCompareGot& compare_gots() const;
  inline ::TgsProtocol::DBServerCompareGot* mutable_compare_gots();
  inline ::TgsProtocol::DBServerCompareGot* release_compare_gots();
  inline void set_allocated_compare_gots(::TgsProtocol::DBServerCompareGot* compare_gots);

  // optional .TgsProtocol.FarmDB farm = 63;
  inline bool has_farm() const;
  inline void clear_farm();
  static const int kFarmFieldNumber = 63;
  inline const ::TgsProtocol::FarmDB& farm() const;
  inline ::TgsProtocol::FarmDB* mutable_farm();
  inline ::TgsProtocol::FarmDB* release_farm();
  inline void set_allocated_farm(::TgsProtocol::FarmDB* farm);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_CharAdvancedInfo)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_goods();
  inline void clear_has_goods();
  inline void set_has_opencopperboxnum();
  inline void clear_has_opencopperboxnum();
  inline void set_has_lastopencopperboxtime();
  inline void clear_has_lastopencopperboxtime();
  inline void set_has_lastopendiamondboxtime();
  inline void clear_has_lastopendiamondboxtime();
  inline void set_has_totalopencopperboxtimes();
  inline void clear_has_totalopencopperboxtimes();
  inline void set_has_totalopendiamondboxtimes();
  inline void clear_has_totalopendiamondboxtimes();
  inline void set_has_skillpoint();
  inline void clear_has_skillpoint();
  inline void set_has_updateskillpointtime();
  inline void clear_has_updateskillpointtime();
  inline void set_has_myheros();
  inline void clear_has_myheros();
  inline void set_has_defenseheros();
  inline void clear_has_defenseheros();
  inline void set_has_difficulty();
  inline void clear_has_difficulty();
  inline void set_has_lastarenatime();
  inline void clear_has_lastarenatime();
  inline void set_has_dailyarenatimes();
  inline void clear_has_dailyarenatimes();
  inline void set_has_bestarenarank();
  inline void clear_has_bestarenarank();
  inline void set_has_totalarenawin();
  inline void clear_has_totalarenawin();
  inline void set_has_arenalog();
  inline void clear_has_arenalog();
  inline void set_has_topthreetime();
  inline void clear_has_topthreetime();
  inline void set_has_dailyopendiamondboxtimes();
  inline void clear_has_dailyopendiamondboxtimes();
  inline void set_has_signin();
  inline void clear_has_signin();
  inline void set_has_totalcopperminenum();
  inline void clear_has_totalcopperminenum();
  inline void set_has_totalsilverminenum();
  inline void clear_has_totalsilverminenum();
  inline void set_has_totaldiamondminenum();
  inline void clear_has_totaldiamondminenum();
  inline void set_has_dailycopperminenum();
  inline void clear_has_dailycopperminenum();
  inline void set_has_dailysilverminenum();
  inline void clear_has_dailysilverminenum();
  inline void set_has_dailydiamondminenum();
  inline void clear_has_dailydiamondminenum();
  inline void set_has_friendinfo();
  inline void clear_has_friendinfo();
  inline void set_has_shopflush();
  inline void clear_has_shopflush();
  inline void set_has_sevenday();
  inline void clear_has_sevenday();
  inline void set_has_rebelarmy();
  inline void clear_has_rebelarmy();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_raidteam();
  inline void clear_has_raidteam();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_drop();
  inline void clear_has_drop();
  inline void set_has_goodsbuyed();
  inline void clear_has_goodsbuyed();
  inline void set_has_firstchargechoose();
  inline void clear_has_firstchargechoose();
  inline void set_has_continuechargechoose();
  inline void clear_has_continuechargechoose();
  inline void set_has_continuecharge();
  inline void clear_has_continuecharge();
  inline void set_has_handbook();
  inline void clear_has_handbook();
  inline void set_has_secrethole();
  inline void clear_has_secrethole();
  inline void set_has_returntask();
  inline void clear_has_returntask();
  inline void set_has_territory();
  inline void clear_has_territory();
  inline void set_has_diagrammap();
  inline void clear_has_diagrammap();
  inline void set_has_ghostactivelist();
  inline void clear_has_ghostactivelist();
  inline void set_has_cheerid();
  inline void clear_has_cheerid();
  inline void set_has_epicbosslist();
  inline void clear_has_epicbosslist();
  inline void set_has_retrieve();
  inline void clear_has_retrieve();
  inline void set_has_compare_gots();
  inline void clear_has_compare_gots();
  inline void set_has_farm();
  inline void clear_has_farm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::std::string* goods_;
  ::google::protobuf::uint32 opencopperboxnum_;
  ::google::protobuf::uint32 lastopencopperboxtime_;
  ::google::protobuf::uint32 lastopendiamondboxtime_;
  ::google::protobuf::uint32 totalopencopperboxtimes_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo > maillist_;
  ::google::protobuf::uint32 totalopendiamondboxtimes_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exformation_;
  ::std::string* myheros_;
  ::google::protobuf::uint32 updateskillpointtime_;
  ::google::protobuf::uint32 difficulty_;
  ::std::string* defenseheros_;
  ::google::protobuf::uint32 lastarenatime_;
  ::google::protobuf::uint32 dailyarenatimes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arformation_;
  ::google::protobuf::uint32 bestarenarank_;
  ::google::protobuf::uint32 totalarenawin_;
  ::std::string* arenalog_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ackformation_;
  ::google::protobuf::uint32 topthreetime_;
  ::google::protobuf::uint32 dailyopendiamondboxtimes_;
  ::google::protobuf::uint32 signin_;
  ::google::protobuf::uint32 totalcopperminenum_;
  ::google::protobuf::uint32 totalsilverminenum_;
  ::google::protobuf::uint32 totaldiamondminenum_;
  ::google::protobuf::uint32 dailycopperminenum_;
  ::google::protobuf::uint32 dailysilverminenum_;
  ::std::string* friendinfo_;
  ::std::string* shopflush_;
  ::TgsProtocol::DbSevenDayActive* sevenday_;
  ::TgsProtocol::DbRebelArmy* rebelarmy_;
  ::TgsProtocol::DbActionRecord* action_;
  ::google::protobuf::uint32 dailydiamondminenum_;
  ::google::protobuf::uint32 firstchargechoose_;
  ::TgsProtocol::DbRaidTeam* raidteam_;
  ::TgsProtocol::DbMonthCard* card_;
  ::TgsProtocol::DbDrop* drop_;
  ::std::string* goodsbuyed_;
  ::std::string* continuecharge_;
  ::TgsProtocol::DbHandBook* handbook_;
  ::TgsProtocol::DBSecretHole* secrethole_;
  ::TgsProtocol::DBReturnTask* returntask_;
  ::google::protobuf::uint32 continuechargechoose_;
  ::google::protobuf::uint32 cheerid_;
  ::TgsProtocol::PlayerTerritoryInfo* territory_;
  ::TgsProtocol::DiagramMap* diagrammap_;
  ::TgsProtocol::GhostList* ghostactivelist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > titlelist_;
  ::TgsProtocol::EpicBossList* epicbosslist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sevengifts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > onlinerewards_;
  ::TgsProtocol::RetrieveDB* retrieve_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState > chatpasswd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > chatcount_;
  ::TgsProtocol::DBServerCompareGot* compare_gots_;
  ::TgsProtocol::FarmDB* farm_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_CharAdvancedInfo* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_LoadCharListReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_LoadCharListReq();
  virtual ~LOBBY2DB_LoadCharListReq();

  LOBBY2DB_LoadCharListReq(const LOBBY2DB_LoadCharListReq& from);

  inline LOBBY2DB_LoadCharListReq& operator=(const LOBBY2DB_LoadCharListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_LoadCharListReq& default_instance();

  void Swap(LOBBY2DB_LoadCharListReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_LoadCharListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_LoadCharListReq& from);
  void MergeFrom(const LOBBY2DB_LoadCharListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_CHARLIST_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 accountId = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint64 accountid() const;
  inline void set_accountid(::google::protobuf::uint64 value);

  // required uint64 sessionid = 3;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  inline ::google::protobuf::uint64 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_LoadCharListReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_LoadCharListReq* default_instance_;
};
// -------------------------------------------------------------------

class SimpleDBCharInfo : public ::google::protobuf::Message {
 public:
  SimpleDBCharInfo();
  virtual ~SimpleDBCharInfo();

  SimpleDBCharInfo(const SimpleDBCharInfo& from);

  inline SimpleDBCharInfo& operator=(const SimpleDBCharInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimpleDBCharInfo& default_instance();

  void Swap(SimpleDBCharInfo* other);

  // implements Message ----------------------------------------------

  SimpleDBCharInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimpleDBCharInfo& from);
  void MergeFrom(const SimpleDBCharInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes charName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 profession = 3;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 3;
  inline ::google::protobuf::uint32 profession() const;
  inline void set_profession(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional bytes avatar = 5;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 5;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const void* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // @@protoc_insertion_point(class_scope:TgsProtocol.SimpleDBCharInfo)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_avatar();
  inline void clear_has_avatar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint32 level_;
  ::std::string* avatar_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static SimpleDBCharInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_LoadCharListRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_LoadCharListRet();
  virtual ~DB2LOBBY_LoadCharListRet();

  DB2LOBBY_LoadCharListRet(const DB2LOBBY_LoadCharListRet& from);

  inline DB2LOBBY_LoadCharListRet& operator=(const DB2LOBBY_LoadCharListRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_LoadCharListRet& default_instance();

  void Swap(DB2LOBBY_LoadCharListRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_LoadCharListRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_LoadCharListRet& from);
  void MergeFrom(const DB2LOBBY_LoadCharListRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_CHARLIST_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 sessionid = 3;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  inline ::google::protobuf::uint64 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint64 value);

  // repeated .TgsProtocol.SimpleDBCharInfo charList = 4;
  inline int charlist_size() const;
  inline void clear_charlist();
  static const int kCharListFieldNumber = 4;
  inline const ::TgsProtocol::SimpleDBCharInfo& charlist(int index) const;
  inline ::TgsProtocol::SimpleDBCharInfo* mutable_charlist(int index);
  inline ::TgsProtocol::SimpleDBCharInfo* add_charlist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SimpleDBCharInfo >&
      charlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SimpleDBCharInfo >*
      mutable_charlist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_LoadCharListRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SimpleDBCharInfo > charlist_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_LoadCharListRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_CreateCharReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_CreateCharReq();
  virtual ~LOBBY2DB_CreateCharReq();

  LOBBY2DB_CreateCharReq(const LOBBY2DB_CreateCharReq& from);

  inline LOBBY2DB_CreateCharReq& operator=(const LOBBY2DB_CreateCharReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_CreateCharReq& default_instance();

  void Swap(LOBBY2DB_CreateCharReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_CreateCharReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_CreateCharReq& from);
  void MergeFrom(const LOBBY2DB_CreateCharReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CREATE_CHARACTER_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes charName = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required string deviceId = 4;
  inline bool has_deviceid() const;
  inline void clear_deviceid();
  static const int kDeviceIdFieldNumber = 4;
  inline const ::std::string& deviceid() const;
  inline void set_deviceid(const ::std::string& value);
  inline void set_deviceid(const char* value);
  inline void set_deviceid(const char* value, size_t size);
  inline ::std::string* mutable_deviceid();
  inline ::std::string* release_deviceid();
  inline void set_allocated_deviceid(::std::string* deviceid);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_CreateCharReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_deviceid();
  inline void clear_has_deviceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::std::string* deviceid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_CreateCharReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_CreateCharRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_CreateCharRet();
  virtual ~DB2LOBBY_CreateCharRet();

  DB2LOBBY_CreateCharRet(const DB2LOBBY_CreateCharRet& from);

  inline DB2LOBBY_CreateCharRet& operator=(const DB2LOBBY_CreateCharRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_CreateCharRet& default_instance();

  void Swap(DB2LOBBY_CreateCharRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_CreateCharRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_CreateCharRet& from);
  void MergeFrom(const DB2LOBBY_CreateCharRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_CREATE_CHARACTER_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_CreateCharRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_CreateCharRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_SaveCharReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_SaveCharReq();
  virtual ~LOBBY2DB_SaveCharReq();

  LOBBY2DB_SaveCharReq(const LOBBY2DB_SaveCharReq& from);

  inline LOBBY2DB_SaveCharReq& operator=(const LOBBY2DB_SaveCharReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_SaveCharReq& default_instance();

  void Swap(LOBBY2DB_SaveCharReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_SaveCharReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_SaveCharReq& from);
  void MergeFrom(const LOBBY2DB_SaveCharReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SAVE_CHARACTER_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 serialno = 2;
  inline bool has_serialno() const;
  inline void clear_serialno();
  static const int kSerialnoFieldNumber = 2;
  inline ::google::protobuf::uint64 serialno() const;
  inline void set_serialno(::google::protobuf::uint64 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const void* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 cash = 7;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 7;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);

  // required uint32 gold = 8;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 8;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 curStamina = 9;
  inline bool has_curstamina() const;
  inline void clear_curstamina();
  static const int kCurStaminaFieldNumber = 9;
  inline ::google::protobuf::uint32 curstamina() const;
  inline void set_curstamina(::google::protobuf::uint32 value);

  // required uint32 maxStamina = 10;
  inline bool has_maxstamina() const;
  inline void clear_maxstamina();
  static const int kMaxStaminaFieldNumber = 10;
  inline ::google::protobuf::uint32 maxstamina() const;
  inline void set_maxstamina(::google::protobuf::uint32 value);

  // required uint32 vipLevel = 11;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 11;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // repeated uint32 formation = 12;
  inline int formation_size() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 12;
  inline ::google::protobuf::uint32 formation(int index) const;
  inline void set_formation(int index, ::google::protobuf::uint32 value);
  inline void add_formation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      formation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_formation();

  // required uint32 vipExp = 13;
  inline bool has_vipexp() const;
  inline void clear_vipexp();
  static const int kVipExpFieldNumber = 13;
  inline ::google::protobuf::uint32 vipexp() const;
  inline void set_vipexp(::google::protobuf::uint32 value);

  // required uint32 offlinetime = 14;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflinetimeFieldNumber = 14;
  inline ::google::protobuf::uint32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::uint32 value);

  // required uint32 updateStaminaTime = 15;
  inline bool has_updatestaminatime() const;
  inline void clear_updatestaminatime();
  static const int kUpdateStaminaTimeFieldNumber = 15;
  inline ::google::protobuf::uint32 updatestaminatime() const;
  inline void set_updatestaminatime(::google::protobuf::uint32 value);

  // required uint32 bitFlag = 16;
  inline bool has_bitflag() const;
  inline void clear_bitflag();
  static const int kBitFlagFieldNumber = 16;
  inline ::google::protobuf::uint32 bitflag() const;
  inline void set_bitflag(::google::protobuf::uint32 value);

  // optional bytes quest = 17;
  inline bool has_quest() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 17;
  inline const ::std::string& quest() const;
  inline void set_quest(const ::std::string& value);
  inline void set_quest(const char* value);
  inline void set_quest(const void* value, size_t size);
  inline ::std::string* mutable_quest();
  inline ::std::string* release_quest();
  inline void set_allocated_quest(::std::string* quest);

  // optional bytes evaluation = 18;
  inline bool has_evaluation() const;
  inline void clear_evaluation();
  static const int kEvaluationFieldNumber = 18;
  inline const ::std::string& evaluation() const;
  inline void set_evaluation(const ::std::string& value);
  inline void set_evaluation(const char* value);
  inline void set_evaluation(const void* value, size_t size);
  inline ::std::string* mutable_evaluation();
  inline ::std::string* release_evaluation();
  inline void set_allocated_evaluation(::std::string* evaluation);

  // optional bytes chapterReward = 19;
  inline bool has_chapterreward() const;
  inline void clear_chapterreward();
  static const int kChapterRewardFieldNumber = 19;
  inline const ::std::string& chapterreward() const;
  inline void set_chapterreward(const ::std::string& value);
  inline void set_chapterreward(const char* value);
  inline void set_chapterreward(const void* value, size_t size);
  inline ::std::string* mutable_chapterreward();
  inline ::std::string* release_chapterreward();
  inline void set_allocated_chapterreward(::std::string* chapterreward);

  // required uint32 heroBagNum = 20;
  inline bool has_herobagnum() const;
  inline void clear_herobagnum();
  static const int kHeroBagNumFieldNumber = 20;
  inline ::google::protobuf::uint32 herobagnum() const;
  inline void set_herobagnum(::google::protobuf::uint32 value);

  // optional bytes heroList = 21;
  inline bool has_herolist() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 21;
  inline const ::std::string& herolist() const;
  inline void set_herolist(const ::std::string& value);
  inline void set_herolist(const char* value);
  inline void set_herolist(const void* value, size_t size);
  inline ::std::string* mutable_herolist();
  inline ::std::string* release_herolist();
  inline void set_allocated_herolist(::std::string* herolist);

  // required uint32 gender = 22;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 22;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);

  // optional uint32 photo = 23;
  inline bool has_photo() const;
  inline void clear_photo();
  static const int kPhotoFieldNumber = 23;
  inline ::google::protobuf::uint32 photo() const;
  inline void set_photo(::google::protobuf::uint32 value);

  // optional bytes essenceItem = 24;
  inline bool has_essenceitem() const;
  inline void clear_essenceitem();
  static const int kEssenceItemFieldNumber = 24;
  inline const ::std::string& essenceitem() const;
  inline void set_essenceitem(const ::std::string& value);
  inline void set_essenceitem(const char* value);
  inline void set_essenceitem(const void* value, size_t size);
  inline ::std::string* mutable_essenceitem();
  inline ::std::string* release_essenceitem();
  inline void set_allocated_essenceitem(::std::string* essenceitem);

  // repeated uint32 RefreshPrice = 25;
  inline int refreshprice_size() const;
  inline void clear_refreshprice();
  static const int kRefreshPriceFieldNumber = 25;
  inline ::google::protobuf::uint32 refreshprice(int index) const;
  inline void set_refreshprice(int index, ::google::protobuf::uint32 value);
  inline void add_refreshprice(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      refreshprice() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_refreshprice();

  // optional bytes festivity = 26;
  inline bool has_festivity() const;
  inline void clear_festivity();
  static const int kFestivityFieldNumber = 26;
  inline const ::std::string& festivity() const;
  inline void set_festivity(const ::std::string& value);
  inline void set_festivity(const char* value);
  inline void set_festivity(const void* value, size_t size);
  inline ::std::string* mutable_festivity();
  inline ::std::string* release_festivity();
  inline void set_allocated_festivity(::std::string* festivity);

  // optional uint32 dayChatTimes = 27;
  inline bool has_daychattimes() const;
  inline void clear_daychattimes();
  static const int kDayChatTimesFieldNumber = 27;
  inline ::google::protobuf::uint32 daychattimes() const;
  inline void set_daychattimes(::google::protobuf::uint32 value);

  // optional uint32 skillPoint = 28;
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillPointFieldNumber = 28;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);

  // optional uint32 updateSkillPointTime = 29;
  inline bool has_updateskillpointtime() const;
  inline void clear_updateskillpointtime();
  static const int kUpdateSkillPointTimeFieldNumber = 29;
  inline ::google::protobuf::uint32 updateskillpointtime() const;
  inline void set_updateskillpointtime(::google::protobuf::uint32 value);

  // optional uint32 energy = 30;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 30;
  inline ::google::protobuf::uint32 energy() const;
  inline void set_energy(::google::protobuf::uint32 value);

  // optional uint32 updateEnergyTime = 31;
  inline bool has_updateenergytime() const;
  inline void clear_updateenergytime();
  static const int kUpdateEnergyTimeFieldNumber = 31;
  inline ::google::protobuf::uint32 updateenergytime() const;
  inline void set_updateenergytime(::google::protobuf::uint32 value);

  // optional bytes equipNew = 32;
  inline bool has_equipnew() const;
  inline void clear_equipnew();
  static const int kEquipNewFieldNumber = 32;
  inline const ::std::string& equipnew() const;
  inline void set_equipnew(const ::std::string& value);
  inline void set_equipnew(const char* value);
  inline void set_equipnew(const void* value, size_t size);
  inline ::std::string* mutable_equipnew();
  inline ::std::string* release_equipnew();
  inline void set_allocated_equipnew(::std::string* equipnew);

  // repeated uint32 arenaFormation = 33;
  inline int arenaformation_size() const;
  inline void clear_arenaformation();
  static const int kArenaFormationFieldNumber = 33;
  inline ::google::protobuf::uint32 arenaformation(int index) const;
  inline void set_arenaformation(int index, ::google::protobuf::uint32 value);
  inline void add_arenaformation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arenaformation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arenaformation();

  // optional uint32 recharge = 34;
  inline bool has_recharge() const;
  inline void clear_recharge();
  static const int kRechargeFieldNumber = 34;
  inline ::google::protobuf::uint32 recharge() const;
  inline void set_recharge(::google::protobuf::uint32 value);

  // optional uint32 progress = 35;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 35;
  inline ::google::protobuf::uint32 progress() const;
  inline void set_progress(::google::protobuf::uint32 value);

  // optional bytes activity = 36;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 36;
  inline const ::std::string& activity() const;
  inline void set_activity(const ::std::string& value);
  inline void set_activity(const char* value);
  inline void set_activity(const void* value, size_t size);
  inline ::std::string* mutable_activity();
  inline ::std::string* release_activity();
  inline void set_allocated_activity(::std::string* activity);

  // optional string assistFormation = 37;
  inline bool has_assistformation() const;
  inline void clear_assistformation();
  static const int kAssistFormationFieldNumber = 37;
  inline const ::std::string& assistformation() const;
  inline void set_assistformation(const ::std::string& value);
  inline void set_assistformation(const char* value);
  inline void set_assistformation(const char* value, size_t size);
  inline ::std::string* mutable_assistformation();
  inline ::std::string* release_assistformation();
  inline void set_allocated_assistformation(::std::string* assistformation);

  // optional uint64 effect = 38;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 38;
  inline ::google::protobuf::uint64 effect() const;
  inline void set_effect(::google::protobuf::uint64 value);

  // optional bytes chapterBox = 39;
  inline bool has_chapterbox() const;
  inline void clear_chapterbox();
  static const int kChapterBoxFieldNumber = 39;
  inline const ::std::string& chapterbox() const;
  inline void set_chapterbox(const ::std::string& value);
  inline void set_chapterbox(const char* value);
  inline void set_chapterbox(const void* value, size_t size);
  inline ::std::string* mutable_chapterbox();
  inline ::std::string* release_chapterbox();
  inline void set_allocated_chapterbox(::std::string* chapterbox);

  // optional string coins = 40;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 40;
  inline const ::std::string& coins() const;
  inline void set_coins(const ::std::string& value);
  inline void set_coins(const char* value);
  inline void set_coins(const char* value, size_t size);
  inline ::std::string* mutable_coins();
  inline ::std::string* release_coins();
  inline void set_allocated_coins(::std::string* coins);

  // required uint32 maxNormalChallenge = 41;
  inline bool has_maxnormalchallenge() const;
  inline void clear_maxnormalchallenge();
  static const int kMaxNormalChallengeFieldNumber = 41;
  inline ::google::protobuf::uint32 maxnormalchallenge() const;
  inline void set_maxnormalchallenge(::google::protobuf::uint32 value);

  // required uint32 maxEliteChallenge = 42;
  inline bool has_maxelitechallenge() const;
  inline void clear_maxelitechallenge();
  static const int kMaxEliteChallengeFieldNumber = 42;
  inline ::google::protobuf::uint32 maxelitechallenge() const;
  inline void set_maxelitechallenge(::google::protobuf::uint32 value);

  // required uint32 leavePoint = 43;
  inline bool has_leavepoint() const;
  inline void clear_leavepoint();
  static const int kLeavePointFieldNumber = 43;
  inline ::google::protobuf::uint32 leavepoint() const;
  inline void set_leavepoint(::google::protobuf::uint32 value);

  // required uint32 onlinetime = 44;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlinetimeFieldNumber = 44;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);

  // required uint32 gmflushtime = 45;
  inline bool has_gmflushtime() const;
  inline void clear_gmflushtime();
  static const int kGmflushtimeFieldNumber = 45;
  inline ::google::protobuf::uint32 gmflushtime() const;
  inline void set_gmflushtime(::google::protobuf::uint32 value);

  // optional uint32 isshopbuy = 46;
  inline bool has_isshopbuy() const;
  inline void clear_isshopbuy();
  static const int kIsshopbuyFieldNumber = 46;
  inline ::google::protobuf::uint32 isshopbuy() const;
  inline void set_isshopbuy(::google::protobuf::uint32 value);

  // required uint32 diamondPay = 47;
  inline bool has_diamondpay() const;
  inline void clear_diamondpay();
  static const int kDiamondPayFieldNumber = 47;
  inline ::google::protobuf::uint32 diamondpay() const;
  inline void set_diamondpay(::google::protobuf::uint32 value);

  // optional string recommfriends = 48;
  inline bool has_recommfriends() const;
  inline void clear_recommfriends();
  static const int kRecommfriendsFieldNumber = 48;
  inline const ::std::string& recommfriends() const;
  inline void set_recommfriends(const ::std::string& value);
  inline void set_recommfriends(const char* value);
  inline void set_recommfriends(const char* value, size_t size);
  inline ::std::string* mutable_recommfriends();
  inline ::std::string* release_recommfriends();
  inline void set_allocated_recommfriends(::std::string* recommfriends);

  // optional bytes prizeInfo = 49;
  inline bool has_prizeinfo() const;
  inline void clear_prizeinfo();
  static const int kPrizeInfoFieldNumber = 49;
  inline const ::std::string& prizeinfo() const;
  inline void set_prizeinfo(const ::std::string& value);
  inline void set_prizeinfo(const char* value);
  inline void set_prizeinfo(const void* value, size_t size);
  inline ::std::string* mutable_prizeinfo();
  inline ::std::string* release_prizeinfo();
  inline void set_allocated_prizeinfo(::std::string* prizeinfo);

  // optional uint32 avoidBattle = 50;
  inline bool has_avoidbattle() const;
  inline void clear_avoidbattle();
  static const int kAvoidBattleFieldNumber = 50;
  inline ::google::protobuf::uint32 avoidbattle() const;
  inline void set_avoidbattle(::google::protobuf::uint32 value);

  // optional uint32 accOnlineTime = 51;
  inline bool has_acconlinetime() const;
  inline void clear_acconlinetime();
  static const int kAccOnlineTimeFieldNumber = 51;
  inline ::google::protobuf::uint32 acconlinetime() const;
  inline void set_acconlinetime(::google::protobuf::uint32 value);

  // optional string itemGot = 52;
  inline bool has_itemgot() const;
  inline void clear_itemgot();
  static const int kItemGotFieldNumber = 52;
  inline const ::std::string& itemgot() const;
  inline void set_itemgot(const ::std::string& value);
  inline void set_itemgot(const char* value);
  inline void set_itemgot(const char* value, size_t size);
  inline ::std::string* mutable_itemgot();
  inline ::std::string* release_itemgot();
  inline void set_allocated_itemgot(::std::string* itemgot);

  // repeated uint32 buyedPrice = 53;
  inline int buyedprice_size() const;
  inline void clear_buyedprice();
  static const int kBuyedPriceFieldNumber = 53;
  inline ::google::protobuf::uint32 buyedprice(int index) const;
  inline void set_buyedprice(int index, ::google::protobuf::uint32 value);
  inline void add_buyedprice(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buyedprice() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buyedprice();

  // optional uint32 position = 54;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 54;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // optional uint32 lastUpdateTime = 55;
  inline bool has_lastupdatetime() const;
  inline void clear_lastupdatetime();
  static const int kLastUpdateTimeFieldNumber = 55;
  inline ::google::protobuf::uint32 lastupdatetime() const;
  inline void set_lastupdatetime(::google::protobuf::uint32 value);

  // optional uint32 crusadeMaxId = 56;
  inline bool has_crusademaxid() const;
  inline void clear_crusademaxid();
  static const int kCrusadeMaxIdFieldNumber = 56;
  inline ::google::protobuf::uint32 crusademaxid() const;
  inline void set_crusademaxid(::google::protobuf::uint32 value);

  // optional uint32 crusadeCurId = 57;
  inline bool has_crusadecurid() const;
  inline void clear_crusadecurid();
  static const int kCrusadeCurIdFieldNumber = 57;
  inline ::google::protobuf::uint32 crusadecurid() const;
  inline void set_crusadecurid(::google::protobuf::uint32 value);

  // optional string int32attr = 58;
  inline bool has_int32attr() const;
  inline void clear_int32attr();
  static const int kInt32AttrFieldNumber = 58;
  inline const ::std::string& int32attr() const;
  inline void set_int32attr(const ::std::string& value);
  inline void set_int32attr(const char* value);
  inline void set_int32attr(const char* value, size_t size);
  inline ::std::string* mutable_int32attr();
  inline ::std::string* release_int32attr();
  inline void set_allocated_int32attr(::std::string* int32attr);

  // optional string AwakeHeroes = 59;
  inline bool has_awakeheroes() const;
  inline void clear_awakeheroes();
  static const int kAwakeHeroesFieldNumber = 59;
  inline const ::std::string& awakeheroes() const;
  inline void set_awakeheroes(const ::std::string& value);
  inline void set_awakeheroes(const char* value);
  inline void set_awakeheroes(const char* value, size_t size);
  inline ::std::string* mutable_awakeheroes();
  inline ::std::string* release_awakeheroes();
  inline void set_allocated_awakeheroes(::std::string* awakeheroes);

  // optional string tombinfo = 60;
  inline bool has_tombinfo() const;
  inline void clear_tombinfo();
  static const int kTombinfoFieldNumber = 60;
  inline const ::std::string& tombinfo() const;
  inline void set_tombinfo(const ::std::string& value);
  inline void set_tombinfo(const char* value);
  inline void set_tombinfo(const char* value, size_t size);
  inline ::std::string* mutable_tombinfo();
  inline ::std::string* release_tombinfo();
  inline void set_allocated_tombinfo(::std::string* tombinfo);

  // repeated uint32 markList = 61;
  inline int marklist_size() const;
  inline void clear_marklist();
  static const int kMarkListFieldNumber = 61;
  inline ::google::protobuf::uint32 marklist(int index) const;
  inline void set_marklist(int index, ::google::protobuf::uint32 value);
  inline void add_marklist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      marklist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_marklist();

  // optional string rechargeChoose = 62;
  inline bool has_rechargechoose() const;
  inline void clear_rechargechoose();
  static const int kRechargeChooseFieldNumber = 62;
  inline const ::std::string& rechargechoose() const;
  inline void set_rechargechoose(const ::std::string& value);
  inline void set_rechargechoose(const char* value);
  inline void set_rechargechoose(const char* value, size_t size);
  inline ::std::string* mutable_rechargechoose();
  inline ::std::string* release_rechargechoose();
  inline void set_allocated_rechargechoose(::std::string* rechargechoose);

  // optional .TgsProtocol.NationalDB national = 63;
  inline bool has_national() const;
  inline void clear_national();
  static const int kNationalFieldNumber = 63;
  inline const ::TgsProtocol::NationalDB& national() const;
  inline ::TgsProtocol::NationalDB* mutable_national();
  inline ::TgsProtocol::NationalDB* release_national();
  inline void set_allocated_national(::TgsProtocol::NationalDB* national);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_SaveCharReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_serialno();
  inline void clear_has_serialno();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_curstamina();
  inline void clear_has_curstamina();
  inline void set_has_maxstamina();
  inline void clear_has_maxstamina();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_vipexp();
  inline void clear_has_vipexp();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();
  inline void set_has_updatestaminatime();
  inline void clear_has_updatestaminatime();
  inline void set_has_bitflag();
  inline void clear_has_bitflag();
  inline void set_has_quest();
  inline void clear_has_quest();
  inline void set_has_evaluation();
  inline void clear_has_evaluation();
  inline void set_has_chapterreward();
  inline void clear_has_chapterreward();
  inline void set_has_herobagnum();
  inline void clear_has_herobagnum();
  inline void set_has_herolist();
  inline void clear_has_herolist();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_photo();
  inline void clear_has_photo();
  inline void set_has_essenceitem();
  inline void clear_has_essenceitem();
  inline void set_has_festivity();
  inline void clear_has_festivity();
  inline void set_has_daychattimes();
  inline void clear_has_daychattimes();
  inline void set_has_skillpoint();
  inline void clear_has_skillpoint();
  inline void set_has_updateskillpointtime();
  inline void clear_has_updateskillpointtime();
  inline void set_has_energy();
  inline void clear_has_energy();
  inline void set_has_updateenergytime();
  inline void clear_has_updateenergytime();
  inline void set_has_equipnew();
  inline void clear_has_equipnew();
  inline void set_has_recharge();
  inline void clear_has_recharge();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_assistformation();
  inline void clear_has_assistformation();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_chapterbox();
  inline void clear_has_chapterbox();
  inline void set_has_coins();
  inline void clear_has_coins();
  inline void set_has_maxnormalchallenge();
  inline void clear_has_maxnormalchallenge();
  inline void set_has_maxelitechallenge();
  inline void clear_has_maxelitechallenge();
  inline void set_has_leavepoint();
  inline void clear_has_leavepoint();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();
  inline void set_has_gmflushtime();
  inline void clear_has_gmflushtime();
  inline void set_has_isshopbuy();
  inline void clear_has_isshopbuy();
  inline void set_has_diamondpay();
  inline void clear_has_diamondpay();
  inline void set_has_recommfriends();
  inline void clear_has_recommfriends();
  inline void set_has_prizeinfo();
  inline void clear_has_prizeinfo();
  inline void set_has_avoidbattle();
  inline void clear_has_avoidbattle();
  inline void set_has_acconlinetime();
  inline void clear_has_acconlinetime();
  inline void set_has_itemgot();
  inline void clear_has_itemgot();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_lastupdatetime();
  inline void clear_has_lastupdatetime();
  inline void set_has_crusademaxid();
  inline void clear_has_crusademaxid();
  inline void set_has_crusadecurid();
  inline void clear_has_crusadecurid();
  inline void set_has_int32attr();
  inline void clear_has_int32attr();
  inline void set_has_awakeheroes();
  inline void clear_has_awakeheroes();
  inline void set_has_tombinfo();
  inline void clear_has_tombinfo();
  inline void set_has_rechargechoose();
  inline void clear_has_rechargechoose();
  inline void set_has_national();
  inline void clear_has_national();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint64 serialno_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  ::google::protobuf::uint32 level_;
  ::std::string* charname_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 curstamina_;
  ::google::protobuf::uint32 maxstamina_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > formation_;
  ::google::protobuf::uint32 vipexp_;
  ::google::protobuf::uint32 offlinetime_;
  ::google::protobuf::uint32 updatestaminatime_;
  ::google::protobuf::uint32 bitflag_;
  ::std::string* quest_;
  ::std::string* evaluation_;
  ::std::string* chapterreward_;
  ::std::string* herolist_;
  ::google::protobuf::uint32 herobagnum_;
  ::google::protobuf::uint32 gender_;
  ::std::string* essenceitem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > refreshprice_;
  ::google::protobuf::uint32 photo_;
  ::google::protobuf::uint32 daychattimes_;
  ::std::string* festivity_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::uint32 updateskillpointtime_;
  ::google::protobuf::uint32 energy_;
  ::google::protobuf::uint32 updateenergytime_;
  ::std::string* equipnew_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arenaformation_;
  ::google::protobuf::uint32 recharge_;
  ::google::protobuf::uint32 progress_;
  ::std::string* activity_;
  ::std::string* assistformation_;
  ::google::protobuf::uint64 effect_;
  ::std::string* chapterbox_;
  ::std::string* coins_;
  ::google::protobuf::uint32 maxnormalchallenge_;
  ::google::protobuf::uint32 maxelitechallenge_;
  ::google::protobuf::uint32 leavepoint_;
  ::google::protobuf::uint32 onlinetime_;
  ::google::protobuf::uint32 gmflushtime_;
  ::google::protobuf::uint32 isshopbuy_;
  ::std::string* recommfriends_;
  ::google::protobuf::uint32 diamondpay_;
  ::google::protobuf::uint32 avoidbattle_;
  ::std::string* prizeinfo_;
  ::std::string* itemgot_;
  ::google::protobuf::uint32 acconlinetime_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buyedprice_;
  ::google::protobuf::uint32 lastupdatetime_;
  ::google::protobuf::uint32 crusademaxid_;
  ::std::string* int32attr_;
  ::std::string* awakeheroes_;
  ::std::string* tombinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > marklist_;
  ::std::string* rechargechoose_;
  ::TgsProtocol::NationalDB* national_;
  ::google::protobuf::uint32 crusadecurid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_SaveCharReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_SaveCharRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_SaveCharRet();
  virtual ~DB2LOBBY_SaveCharRet();

  DB2LOBBY_SaveCharRet(const DB2LOBBY_SaveCharRet& from);

  inline DB2LOBBY_SaveCharRet& operator=(const DB2LOBBY_SaveCharRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_SaveCharRet& default_instance();

  void Swap(DB2LOBBY_SaveCharRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_SaveCharRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_SaveCharRet& from);
  void MergeFrom(const DB2LOBBY_SaveCharRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SAVE_CHARACTER_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 serialno = 2;
  inline bool has_serialno() const;
  inline void clear_serialno();
  static const int kSerialnoFieldNumber = 2;
  inline ::google::protobuf::uint64 serialno() const;
  inline void set_serialno(::google::protobuf::uint64 value);

  // required uint32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charId = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_SaveCharRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_serialno();
  inline void clear_has_serialno();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 serialno_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_SaveCharRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_SaveAdvancedCharReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_SaveAdvancedCharReq();
  virtual ~LOBBY2DB_SaveAdvancedCharReq();

  LOBBY2DB_SaveAdvancedCharReq(const LOBBY2DB_SaveAdvancedCharReq& from);

  inline LOBBY2DB_SaveAdvancedCharReq& operator=(const LOBBY2DB_SaveAdvancedCharReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_SaveAdvancedCharReq& default_instance();

  void Swap(LOBBY2DB_SaveAdvancedCharReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_SaveAdvancedCharReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_SaveAdvancedCharReq& from);
  void MergeFrom(const LOBBY2DB_SaveAdvancedCharReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SAVE_ADVANCED_CHARACTER_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional bytes shopGoods = 3;
  inline bool has_shopgoods() const;
  inline void clear_shopgoods();
  static const int kShopGoodsFieldNumber = 3;
  inline const ::std::string& shopgoods() const;
  inline void set_shopgoods(const ::std::string& value);
  inline void set_shopgoods(const char* value);
  inline void set_shopgoods(const void* value, size_t size);
  inline ::std::string* mutable_shopgoods();
  inline ::std::string* release_shopgoods();
  inline void set_allocated_shopgoods(::std::string* shopgoods);

  // required uint32 openCopperBoxNum = 4;
  inline bool has_opencopperboxnum() const;
  inline void clear_opencopperboxnum();
  static const int kOpenCopperBoxNumFieldNumber = 4;
  inline ::google::protobuf::uint32 opencopperboxnum() const;
  inline void set_opencopperboxnum(::google::protobuf::uint32 value);

  // required uint32 lastOpenCopperBoxTime = 5;
  inline bool has_lastopencopperboxtime() const;
  inline void clear_lastopencopperboxtime();
  static const int kLastOpenCopperBoxTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 lastopencopperboxtime() const;
  inline void set_lastopencopperboxtime(::google::protobuf::uint32 value);

  // required uint32 lastOpenDiamondBoxTime = 6;
  inline bool has_lastopendiamondboxtime() const;
  inline void clear_lastopendiamondboxtime();
  static const int kLastOpenDiamondBoxTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 lastopendiamondboxtime() const;
  inline void set_lastopendiamondboxtime(::google::protobuf::uint32 value);

  // required uint32 totalOpenCopperBoxTimes = 7;
  inline bool has_totalopencopperboxtimes() const;
  inline void clear_totalopencopperboxtimes();
  static const int kTotalOpenCopperBoxTimesFieldNumber = 7;
  inline ::google::protobuf::uint32 totalopencopperboxtimes() const;
  inline void set_totalopencopperboxtimes(::google::protobuf::uint32 value);

  // required uint32 totalOpenDiamondBoxTimes = 8;
  inline bool has_totalopendiamondboxtimes() const;
  inline void clear_totalopendiamondboxtimes();
  static const int kTotalOpenDiamondBoxTimesFieldNumber = 8;
  inline ::google::protobuf::uint32 totalopendiamondboxtimes() const;
  inline void set_totalopendiamondboxtimes(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.DBMailInfo mailList = 9;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMailListFieldNumber = 9;
  inline const ::TgsProtocol::DBMailInfo& maillist(int index) const;
  inline ::TgsProtocol::DBMailInfo* mutable_maillist(int index);
  inline ::TgsProtocol::DBMailInfo* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >*
      mutable_maillist();

  // optional uint32 skillPoint = 10;
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillPointFieldNumber = 10;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);

  // optional uint32 updateSkillPointTime = 11;
  inline bool has_updateskillpointtime() const;
  inline void clear_updateskillpointtime();
  static const int kUpdateSkillPointTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 updateskillpointtime() const;
  inline void set_updateskillpointtime(::google::protobuf::uint32 value);

  // repeated uint32 exFormation = 12;
  inline int exformation_size() const;
  inline void clear_exformation();
  static const int kExFormationFieldNumber = 12;
  inline ::google::protobuf::uint32 exformation(int index) const;
  inline void set_exformation(int index, ::google::protobuf::uint32 value);
  inline void add_exformation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      exformation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_exformation();

  // optional bytes myHeros = 13;
  inline bool has_myheros() const;
  inline void clear_myheros();
  static const int kMyHerosFieldNumber = 13;
  inline const ::std::string& myheros() const;
  inline void set_myheros(const ::std::string& value);
  inline void set_myheros(const char* value);
  inline void set_myheros(const void* value, size_t size);
  inline ::std::string* mutable_myheros();
  inline ::std::string* release_myheros();
  inline void set_allocated_myheros(::std::string* myheros);

  // optional bytes DefenseHeros = 14;
  inline bool has_defenseheros() const;
  inline void clear_defenseheros();
  static const int kDefenseHerosFieldNumber = 14;
  inline const ::std::string& defenseheros() const;
  inline void set_defenseheros(const ::std::string& value);
  inline void set_defenseheros(const char* value);
  inline void set_defenseheros(const void* value, size_t size);
  inline ::std::string* mutable_defenseheros();
  inline ::std::string* release_defenseheros();
  inline void set_allocated_defenseheros(::std::string* defenseheros);

  // optional uint32 difficulty = 15;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 15;
  inline ::google::protobuf::uint32 difficulty() const;
  inline void set_difficulty(::google::protobuf::uint32 value);

  // optional uint32 lastArenaTime = 16;
  inline bool has_lastarenatime() const;
  inline void clear_lastarenatime();
  static const int kLastArenaTimeFieldNumber = 16;
  inline ::google::protobuf::uint32 lastarenatime() const;
  inline void set_lastarenatime(::google::protobuf::uint32 value);

  // optional uint32 dailyArenaTimes = 17;
  inline bool has_dailyarenatimes() const;
  inline void clear_dailyarenatimes();
  static const int kDailyArenaTimesFieldNumber = 17;
  inline ::google::protobuf::uint32 dailyarenatimes() const;
  inline void set_dailyarenatimes(::google::protobuf::uint32 value);

  // optional uint32 bestArenaRank = 18;
  inline bool has_bestarenarank() const;
  inline void clear_bestarenarank();
  static const int kBestArenaRankFieldNumber = 18;
  inline ::google::protobuf::uint32 bestarenarank() const;
  inline void set_bestarenarank(::google::protobuf::uint32 value);

  // repeated uint32 arFormation = 19;
  inline int arformation_size() const;
  inline void clear_arformation();
  static const int kArFormationFieldNumber = 19;
  inline ::google::protobuf::uint32 arformation(int index) const;
  inline void set_arformation(int index, ::google::protobuf::uint32 value);
  inline void add_arformation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arformation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arformation();

  // optional uint32 totalArenaWin = 20;
  inline bool has_totalarenawin() const;
  inline void clear_totalarenawin();
  static const int kTotalArenaWinFieldNumber = 20;
  inline ::google::protobuf::uint32 totalarenawin() const;
  inline void set_totalarenawin(::google::protobuf::uint32 value);

  // optional bytes arenaLog = 21;
  inline bool has_arenalog() const;
  inline void clear_arenalog();
  static const int kArenaLogFieldNumber = 21;
  inline const ::std::string& arenalog() const;
  inline void set_arenalog(const ::std::string& value);
  inline void set_arenalog(const char* value);
  inline void set_arenalog(const void* value, size_t size);
  inline ::std::string* mutable_arenalog();
  inline ::std::string* release_arenalog();
  inline void set_allocated_arenalog(::std::string* arenalog);

  // optional uint32 topThreeTime = 22;
  inline bool has_topthreetime() const;
  inline void clear_topthreetime();
  static const int kTopThreeTimeFieldNumber = 22;
  inline ::google::protobuf::uint32 topthreetime() const;
  inline void set_topthreetime(::google::protobuf::uint32 value);

  // repeated uint32 ackFormation = 23;
  inline int ackformation_size() const;
  inline void clear_ackformation();
  static const int kAckFormationFieldNumber = 23;
  inline ::google::protobuf::uint32 ackformation(int index) const;
  inline void set_ackformation(int index, ::google::protobuf::uint32 value);
  inline void add_ackformation(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ackformation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ackformation();

  // optional uint32 dailyOpenDiamondBoxTimes = 24;
  inline bool has_dailyopendiamondboxtimes() const;
  inline void clear_dailyopendiamondboxtimes();
  static const int kDailyOpenDiamondBoxTimesFieldNumber = 24;
  inline ::google::protobuf::uint32 dailyopendiamondboxtimes() const;
  inline void set_dailyopendiamondboxtimes(::google::protobuf::uint32 value);

  // optional uint32 signIn = 25;
  inline bool has_signin() const;
  inline void clear_signin();
  static const int kSignInFieldNumber = 25;
  inline ::google::protobuf::uint32 signin() const;
  inline void set_signin(::google::protobuf::uint32 value);

  // optional uint32 totalCopperMineNum = 28;
  inline bool has_totalcopperminenum() const;
  inline void clear_totalcopperminenum();
  static const int kTotalCopperMineNumFieldNumber = 28;
  inline ::google::protobuf::uint32 totalcopperminenum() const;
  inline void set_totalcopperminenum(::google::protobuf::uint32 value);

  // optional uint32 totalSilverMineNum = 29;
  inline bool has_totalsilverminenum() const;
  inline void clear_totalsilverminenum();
  static const int kTotalSilverMineNumFieldNumber = 29;
  inline ::google::protobuf::uint32 totalsilverminenum() const;
  inline void set_totalsilverminenum(::google::protobuf::uint32 value);

  // optional uint32 totalDiamondMineNum = 30;
  inline bool has_totaldiamondminenum() const;
  inline void clear_totaldiamondminenum();
  static const int kTotalDiamondMineNumFieldNumber = 30;
  inline ::google::protobuf::uint32 totaldiamondminenum() const;
  inline void set_totaldiamondminenum(::google::protobuf::uint32 value);

  // optional uint32 dailyCopperMineNum = 31;
  inline bool has_dailycopperminenum() const;
  inline void clear_dailycopperminenum();
  static const int kDailyCopperMineNumFieldNumber = 31;
  inline ::google::protobuf::uint32 dailycopperminenum() const;
  inline void set_dailycopperminenum(::google::protobuf::uint32 value);

  // optional uint32 dailySilverMineNum = 32;
  inline bool has_dailysilverminenum() const;
  inline void clear_dailysilverminenum();
  static const int kDailySilverMineNumFieldNumber = 32;
  inline ::google::protobuf::uint32 dailysilverminenum() const;
  inline void set_dailysilverminenum(::google::protobuf::uint32 value);

  // optional uint32 dailyDiamondMineNum = 33;
  inline bool has_dailydiamondminenum() const;
  inline void clear_dailydiamondminenum();
  static const int kDailyDiamondMineNumFieldNumber = 33;
  inline ::google::protobuf::uint32 dailydiamondminenum() const;
  inline void set_dailydiamondminenum(::google::protobuf::uint32 value);

  // optional bytes friendInfo = 34;
  inline bool has_friendinfo() const;
  inline void clear_friendinfo();
  static const int kFriendInfoFieldNumber = 34;
  inline const ::std::string& friendinfo() const;
  inline void set_friendinfo(const ::std::string& value);
  inline void set_friendinfo(const char* value);
  inline void set_friendinfo(const void* value, size_t size);
  inline ::std::string* mutable_friendinfo();
  inline ::std::string* release_friendinfo();
  inline void set_allocated_friendinfo(::std::string* friendinfo);

  // optional bytes shopFlush = 35;
  inline bool has_shopflush() const;
  inline void clear_shopflush();
  static const int kShopFlushFieldNumber = 35;
  inline const ::std::string& shopflush() const;
  inline void set_shopflush(const ::std::string& value);
  inline void set_shopflush(const char* value);
  inline void set_shopflush(const void* value, size_t size);
  inline ::std::string* mutable_shopflush();
  inline ::std::string* release_shopflush();
  inline void set_allocated_shopflush(::std::string* shopflush);

  // optional .TgsProtocol.DbSevenDayActive sevenDay = 36;
  inline bool has_sevenday() const;
  inline void clear_sevenday();
  static const int kSevenDayFieldNumber = 36;
  inline const ::TgsProtocol::DbSevenDayActive& sevenday() const;
  inline ::TgsProtocol::DbSevenDayActive* mutable_sevenday();
  inline ::TgsProtocol::DbSevenDayActive* release_sevenday();
  inline void set_allocated_sevenday(::TgsProtocol::DbSevenDayActive* sevenday);

  // optional .TgsProtocol.DbRebelArmy rebelArmy = 37;
  inline bool has_rebelarmy() const;
  inline void clear_rebelarmy();
  static const int kRebelArmyFieldNumber = 37;
  inline const ::TgsProtocol::DbRebelArmy& rebelarmy() const;
  inline ::TgsProtocol::DbRebelArmy* mutable_rebelarmy();
  inline ::TgsProtocol::DbRebelArmy* release_rebelarmy();
  inline void set_allocated_rebelarmy(::TgsProtocol::DbRebelArmy* rebelarmy);

  // optional .TgsProtocol.DbActionRecord action = 38;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 38;
  inline const ::TgsProtocol::DbActionRecord& action() const;
  inline ::TgsProtocol::DbActionRecord* mutable_action();
  inline ::TgsProtocol::DbActionRecord* release_action();
  inline void set_allocated_action(::TgsProtocol::DbActionRecord* action);

  // optional .TgsProtocol.DbRaidTeam raidTeam = 39;
  inline bool has_raidteam() const;
  inline void clear_raidteam();
  static const int kRaidTeamFieldNumber = 39;
  inline const ::TgsProtocol::DbRaidTeam& raidteam() const;
  inline ::TgsProtocol::DbRaidTeam* mutable_raidteam();
  inline ::TgsProtocol::DbRaidTeam* release_raidteam();
  inline void set_allocated_raidteam(::TgsProtocol::DbRaidTeam* raidteam);

  // optional .TgsProtocol.DbMonthCard card = 40;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 40;
  inline const ::TgsProtocol::DbMonthCard& card() const;
  inline ::TgsProtocol::DbMonthCard* mutable_card();
  inline ::TgsProtocol::DbMonthCard* release_card();
  inline void set_allocated_card(::TgsProtocol::DbMonthCard* card);

  // optional .TgsProtocol.DbDrop drop = 41;
  inline bool has_drop() const;
  inline void clear_drop();
  static const int kDropFieldNumber = 41;
  inline const ::TgsProtocol::DbDrop& drop() const;
  inline ::TgsProtocol::DbDrop* mutable_drop();
  inline ::TgsProtocol::DbDrop* release_drop();
  inline void set_allocated_drop(::TgsProtocol::DbDrop* drop);

  // optional string goodsBuyed = 42;
  inline bool has_goodsbuyed() const;
  inline void clear_goodsbuyed();
  static const int kGoodsBuyedFieldNumber = 42;
  inline const ::std::string& goodsbuyed() const;
  inline void set_goodsbuyed(const ::std::string& value);
  inline void set_goodsbuyed(const char* value);
  inline void set_goodsbuyed(const char* value, size_t size);
  inline ::std::string* mutable_goodsbuyed();
  inline ::std::string* release_goodsbuyed();
  inline void set_allocated_goodsbuyed(::std::string* goodsbuyed);

  // optional uint32 firstChargeChoose = 43;
  inline bool has_firstchargechoose() const;
  inline void clear_firstchargechoose();
  static const int kFirstChargeChooseFieldNumber = 43;
  inline ::google::protobuf::uint32 firstchargechoose() const;
  inline void set_firstchargechoose(::google::protobuf::uint32 value);

  // optional uint32 continueChargeChoose = 44;
  inline bool has_continuechargechoose() const;
  inline void clear_continuechargechoose();
  static const int kContinueChargeChooseFieldNumber = 44;
  inline ::google::protobuf::uint32 continuechargechoose() const;
  inline void set_continuechargechoose(::google::protobuf::uint32 value);

  // optional string continueCharge = 45;
  inline bool has_continuecharge() const;
  inline void clear_continuecharge();
  static const int kContinueChargeFieldNumber = 45;
  inline const ::std::string& continuecharge() const;
  inline void set_continuecharge(const ::std::string& value);
  inline void set_continuecharge(const char* value);
  inline void set_continuecharge(const char* value, size_t size);
  inline ::std::string* mutable_continuecharge();
  inline ::std::string* release_continuecharge();
  inline void set_allocated_continuecharge(::std::string* continuecharge);

  // optional .TgsProtocol.DbHandBook handbook = 46;
  inline bool has_handbook() const;
  inline void clear_handbook();
  static const int kHandbookFieldNumber = 46;
  inline const ::TgsProtocol::DbHandBook& handbook() const;
  inline ::TgsProtocol::DbHandBook* mutable_handbook();
  inline ::TgsProtocol::DbHandBook* release_handbook();
  inline void set_allocated_handbook(::TgsProtocol::DbHandBook* handbook);

  // optional .TgsProtocol.DBSecretHole secrethole = 47;
  inline bool has_secrethole() const;
  inline void clear_secrethole();
  static const int kSecretholeFieldNumber = 47;
  inline const ::TgsProtocol::DBSecretHole& secrethole() const;
  inline ::TgsProtocol::DBSecretHole* mutable_secrethole();
  inline ::TgsProtocol::DBSecretHole* release_secrethole();
  inline void set_allocated_secrethole(::TgsProtocol::DBSecretHole* secrethole);

  // optional .TgsProtocol.DBReturnTask returntask = 48;
  inline bool has_returntask() const;
  inline void clear_returntask();
  static const int kReturntaskFieldNumber = 48;
  inline const ::TgsProtocol::DBReturnTask& returntask() const;
  inline ::TgsProtocol::DBReturnTask* mutable_returntask();
  inline ::TgsProtocol::DBReturnTask* release_returntask();
  inline void set_allocated_returntask(::TgsProtocol::DBReturnTask* returntask);

  // optional .TgsProtocol.PlayerTerritoryInfo territory = 49;
  inline bool has_territory() const;
  inline void clear_territory();
  static const int kTerritoryFieldNumber = 49;
  inline const ::TgsProtocol::PlayerTerritoryInfo& territory() const;
  inline ::TgsProtocol::PlayerTerritoryInfo* mutable_territory();
  inline ::TgsProtocol::PlayerTerritoryInfo* release_territory();
  inline void set_allocated_territory(::TgsProtocol::PlayerTerritoryInfo* territory);

  // optional .TgsProtocol.DiagramMap diagramMap = 50;
  inline bool has_diagrammap() const;
  inline void clear_diagrammap();
  static const int kDiagramMapFieldNumber = 50;
  inline const ::TgsProtocol::DiagramMap& diagrammap() const;
  inline ::TgsProtocol::DiagramMap* mutable_diagrammap();
  inline ::TgsProtocol::DiagramMap* release_diagrammap();
  inline void set_allocated_diagrammap(::TgsProtocol::DiagramMap* diagrammap);

  // optional .TgsProtocol.GhostList ghostActiveList = 51;
  inline bool has_ghostactivelist() const;
  inline void clear_ghostactivelist();
  static const int kGhostActiveListFieldNumber = 51;
  inline const ::TgsProtocol::GhostList& ghostactivelist() const;
  inline ::TgsProtocol::GhostList* mutable_ghostactivelist();
  inline ::TgsProtocol::GhostList* release_ghostactivelist();
  inline void set_allocated_ghostactivelist(::TgsProtocol::GhostList* ghostactivelist);

  // optional uint32 cheerId = 52;
  inline bool has_cheerid() const;
  inline void clear_cheerid();
  static const int kCheerIdFieldNumber = 52;
  inline ::google::protobuf::uint32 cheerid() const;
  inline void set_cheerid(::google::protobuf::uint32 value);

  // repeated uint32 titleList = 53;
  inline int titlelist_size() const;
  inline void clear_titlelist();
  static const int kTitleListFieldNumber = 53;
  inline ::google::protobuf::uint32 titlelist(int index) const;
  inline void set_titlelist(int index, ::google::protobuf::uint32 value);
  inline void add_titlelist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      titlelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_titlelist();

  // optional .TgsProtocol.EpicBossList epicbosslist = 54;
  inline bool has_epicbosslist() const;
  inline void clear_epicbosslist();
  static const int kEpicbosslistFieldNumber = 54;
  inline const ::TgsProtocol::EpicBossList& epicbosslist() const;
  inline ::TgsProtocol::EpicBossList* mutable_epicbosslist();
  inline ::TgsProtocol::EpicBossList* release_epicbosslist();
  inline void set_allocated_epicbosslist(::TgsProtocol::EpicBossList* epicbosslist);

  // repeated uint32 sevengifts = 56;
  inline int sevengifts_size() const;
  inline void clear_sevengifts();
  static const int kSevengiftsFieldNumber = 56;
  inline ::google::protobuf::uint32 sevengifts(int index) const;
  inline void set_sevengifts(int index, ::google::protobuf::uint32 value);
  inline void add_sevengifts(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sevengifts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sevengifts();

  // repeated uint32 onlineRewards = 57;
  inline int onlinerewards_size() const;
  inline void clear_onlinerewards();
  static const int kOnlineRewardsFieldNumber = 57;
  inline ::google::protobuf::uint32 onlinerewards(int index) const;
  inline void set_onlinerewards(int index, ::google::protobuf::uint32 value);
  inline void add_onlinerewards(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      onlinerewards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_onlinerewards();

  // optional .TgsProtocol.RetrieveDB retrieve = 58;
  inline bool has_retrieve() const;
  inline void clear_retrieve();
  static const int kRetrieveFieldNumber = 58;
  inline const ::TgsProtocol::RetrieveDB& retrieve() const;
  inline ::TgsProtocol::RetrieveDB* mutable_retrieve();
  inline ::TgsProtocol::RetrieveDB* release_retrieve();
  inline void set_allocated_retrieve(::TgsProtocol::RetrieveDB* retrieve);

  // repeated .TgsProtocol.PassWordState chatpasswd = 59;
  inline int chatpasswd_size() const;
  inline void clear_chatpasswd();
  static const int kChatpasswdFieldNumber = 59;
  inline const ::TgsProtocol::PassWordState& chatpasswd(int index) const;
  inline ::TgsProtocol::PassWordState* mutable_chatpasswd(int index);
  inline ::TgsProtocol::PassWordState* add_chatpasswd();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState >&
      chatpasswd() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState >*
      mutable_chatpasswd();

  // repeated uint32 chatCount = 60;
  inline int chatcount_size() const;
  inline void clear_chatcount();
  static const int kChatCountFieldNumber = 60;
  inline ::google::protobuf::uint32 chatcount(int index) const;
  inline void set_chatcount(int index, ::google::protobuf::uint32 value);
  inline void add_chatcount(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      chatcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_chatcount();

  // optional .TgsProtocol.DBServerCompareGot compare_gots = 61;
  inline bool has_compare_gots() const;
  inline void clear_compare_gots();
  static const int kCompareGotsFieldNumber = 61;
  inline const ::TgsProtocol::DBServerCompareGot& compare_gots() const;
  inline ::TgsProtocol::DBServerCompareGot* mutable_compare_gots();
  inline ::TgsProtocol::DBServerCompareGot* release_compare_gots();
  inline void set_allocated_compare_gots(::TgsProtocol::DBServerCompareGot* compare_gots);

  // optional .TgsProtocol.FarmDB farm = 62;
  inline bool has_farm() const;
  inline void clear_farm();
  static const int kFarmFieldNumber = 62;
  inline const ::TgsProtocol::FarmDB& farm() const;
  inline ::TgsProtocol::FarmDB* mutable_farm();
  inline ::TgsProtocol::FarmDB* release_farm();
  inline void set_allocated_farm(::TgsProtocol::FarmDB* farm);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_shopgoods();
  inline void clear_has_shopgoods();
  inline void set_has_opencopperboxnum();
  inline void clear_has_opencopperboxnum();
  inline void set_has_lastopencopperboxtime();
  inline void clear_has_lastopencopperboxtime();
  inline void set_has_lastopendiamondboxtime();
  inline void clear_has_lastopendiamondboxtime();
  inline void set_has_totalopencopperboxtimes();
  inline void clear_has_totalopencopperboxtimes();
  inline void set_has_totalopendiamondboxtimes();
  inline void clear_has_totalopendiamondboxtimes();
  inline void set_has_skillpoint();
  inline void clear_has_skillpoint();
  inline void set_has_updateskillpointtime();
  inline void clear_has_updateskillpointtime();
  inline void set_has_myheros();
  inline void clear_has_myheros();
  inline void set_has_defenseheros();
  inline void clear_has_defenseheros();
  inline void set_has_difficulty();
  inline void clear_has_difficulty();
  inline void set_has_lastarenatime();
  inline void clear_has_lastarenatime();
  inline void set_has_dailyarenatimes();
  inline void clear_has_dailyarenatimes();
  inline void set_has_bestarenarank();
  inline void clear_has_bestarenarank();
  inline void set_has_totalarenawin();
  inline void clear_has_totalarenawin();
  inline void set_has_arenalog();
  inline void clear_has_arenalog();
  inline void set_has_topthreetime();
  inline void clear_has_topthreetime();
  inline void set_has_dailyopendiamondboxtimes();
  inline void clear_has_dailyopendiamondboxtimes();
  inline void set_has_signin();
  inline void clear_has_signin();
  inline void set_has_totalcopperminenum();
  inline void clear_has_totalcopperminenum();
  inline void set_has_totalsilverminenum();
  inline void clear_has_totalsilverminenum();
  inline void set_has_totaldiamondminenum();
  inline void clear_has_totaldiamondminenum();
  inline void set_has_dailycopperminenum();
  inline void clear_has_dailycopperminenum();
  inline void set_has_dailysilverminenum();
  inline void clear_has_dailysilverminenum();
  inline void set_has_dailydiamondminenum();
  inline void clear_has_dailydiamondminenum();
  inline void set_has_friendinfo();
  inline void clear_has_friendinfo();
  inline void set_has_shopflush();
  inline void clear_has_shopflush();
  inline void set_has_sevenday();
  inline void clear_has_sevenday();
  inline void set_has_rebelarmy();
  inline void clear_has_rebelarmy();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_raidteam();
  inline void clear_has_raidteam();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_drop();
  inline void clear_has_drop();
  inline void set_has_goodsbuyed();
  inline void clear_has_goodsbuyed();
  inline void set_has_firstchargechoose();
  inline void clear_has_firstchargechoose();
  inline void set_has_continuechargechoose();
  inline void clear_has_continuechargechoose();
  inline void set_has_continuecharge();
  inline void clear_has_continuecharge();
  inline void set_has_handbook();
  inline void clear_has_handbook();
  inline void set_has_secrethole();
  inline void clear_has_secrethole();
  inline void set_has_returntask();
  inline void clear_has_returntask();
  inline void set_has_territory();
  inline void clear_has_territory();
  inline void set_has_diagrammap();
  inline void clear_has_diagrammap();
  inline void set_has_ghostactivelist();
  inline void clear_has_ghostactivelist();
  inline void set_has_cheerid();
  inline void clear_has_cheerid();
  inline void set_has_epicbosslist();
  inline void clear_has_epicbosslist();
  inline void set_has_retrieve();
  inline void clear_has_retrieve();
  inline void set_has_compare_gots();
  inline void clear_has_compare_gots();
  inline void set_has_farm();
  inline void clear_has_farm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  ::google::protobuf::uint32 opencopperboxnum_;
  ::std::string* shopgoods_;
  ::google::protobuf::uint32 lastopencopperboxtime_;
  ::google::protobuf::uint32 lastopendiamondboxtime_;
  ::google::protobuf::uint32 totalopencopperboxtimes_;
  ::google::protobuf::uint32 totalopendiamondboxtimes_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo > maillist_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::uint32 updateskillpointtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exformation_;
  ::std::string* myheros_;
  ::std::string* defenseheros_;
  ::google::protobuf::uint32 difficulty_;
  ::google::protobuf::uint32 lastarenatime_;
  ::google::protobuf::uint32 dailyarenatimes_;
  ::google::protobuf::uint32 bestarenarank_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arformation_;
  ::std::string* arenalog_;
  ::google::protobuf::uint32 totalarenawin_;
  ::google::protobuf::uint32 topthreetime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ackformation_;
  ::google::protobuf::uint32 dailyopendiamondboxtimes_;
  ::google::protobuf::uint32 signin_;
  ::google::protobuf::uint32 totalcopperminenum_;
  ::google::protobuf::uint32 totalsilverminenum_;
  ::google::protobuf::uint32 totaldiamondminenum_;
  ::google::protobuf::uint32 dailycopperminenum_;
  ::google::protobuf::uint32 dailysilverminenum_;
  ::google::protobuf::uint32 dailydiamondminenum_;
  ::std::string* friendinfo_;
  ::std::string* shopflush_;
  ::TgsProtocol::DbSevenDayActive* sevenday_;
  ::TgsProtocol::DbRebelArmy* rebelarmy_;
  ::TgsProtocol::DbActionRecord* action_;
  ::TgsProtocol::DbRaidTeam* raidteam_;
  ::TgsProtocol::DbMonthCard* card_;
  ::TgsProtocol::DbDrop* drop_;
  ::std::string* goodsbuyed_;
  ::google::protobuf::uint32 firstchargechoose_;
  ::google::protobuf::uint32 continuechargechoose_;
  ::std::string* continuecharge_;
  ::TgsProtocol::DbHandBook* handbook_;
  ::TgsProtocol::DBSecretHole* secrethole_;
  ::TgsProtocol::DBReturnTask* returntask_;
  ::TgsProtocol::PlayerTerritoryInfo* territory_;
  ::TgsProtocol::DiagramMap* diagrammap_;
  ::TgsProtocol::GhostList* ghostactivelist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > titlelist_;
  ::TgsProtocol::EpicBossList* epicbosslist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sevengifts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > onlinerewards_;
  ::TgsProtocol::RetrieveDB* retrieve_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState > chatpasswd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > chatcount_;
  ::TgsProtocol::DBServerCompareGot* compare_gots_;
  ::TgsProtocol::FarmDB* farm_;
  ::google::protobuf::uint32 cheerid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_SaveAdvancedCharReq* default_instance_;
};
// -------------------------------------------------------------------

class RetrieveDB : public ::google::protobuf::Message {
 public:
  RetrieveDB();
  virtual ~RetrieveDB();

  RetrieveDB(const RetrieveDB& from);

  inline RetrieveDB& operator=(const RetrieveDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetrieveDB& default_instance();

  void Swap(RetrieveDB* other);

  // implements Message ----------------------------------------------

  RetrieveDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetrieveDB& from);
  void MergeFrom(const RetrieveDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TgsProtocol.RetrieveState today = 1;
  inline int today_size() const;
  inline void clear_today();
  static const int kTodayFieldNumber = 1;
  inline const ::TgsProtocol::RetrieveState& today(int index) const;
  inline ::TgsProtocol::RetrieveState* mutable_today(int index);
  inline ::TgsProtocol::RetrieveState* add_today();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState >&
      today() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState >*
      mutable_today();

  // repeated .TgsProtocol.RetrieveState yesterday = 2;
  inline int yesterday_size() const;
  inline void clear_yesterday();
  static const int kYesterdayFieldNumber = 2;
  inline const ::TgsProtocol::RetrieveState& yesterday(int index) const;
  inline ::TgsProtocol::RetrieveState* mutable_yesterday(int index);
  inline ::TgsProtocol::RetrieveState* add_yesterday();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState >&
      yesterday() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState >*
      mutable_yesterday();

  // @@protoc_insertion_point(class_scope:TgsProtocol.RetrieveDB)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState > today_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState > yesterday_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static RetrieveDB* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_SaveAdvancedCharRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_SaveAdvancedCharRet();
  virtual ~DB2LOBBY_SaveAdvancedCharRet();

  DB2LOBBY_SaveAdvancedCharRet(const DB2LOBBY_SaveAdvancedCharRet& from);

  inline DB2LOBBY_SaveAdvancedCharRet& operator=(const DB2LOBBY_SaveAdvancedCharRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_SaveAdvancedCharRet& default_instance();

  void Swap(DB2LOBBY_SaveAdvancedCharRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_SaveAdvancedCharRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_SaveAdvancedCharRet& from);
  void MergeFrom(const DB2LOBBY_SaveAdvancedCharRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SAVE_ADVANCED_CHARACTER_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_SaveAdvancedCharRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_SaveAdvancedCharRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_LoadBagReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_LoadBagReq();
  virtual ~LOBBY2DB_LoadBagReq();

  LOBBY2DB_LoadBagReq(const LOBBY2DB_LoadBagReq& from);

  inline LOBBY2DB_LoadBagReq& operator=(const LOBBY2DB_LoadBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_LoadBagReq& default_instance();

  void Swap(LOBBY2DB_LoadBagReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_LoadBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_LoadBagReq& from);
  void MergeFrom(const LOBBY2DB_LoadBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_BAG_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_LoadBagReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_LoadBagReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_LoadBagRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_LoadBagRet();
  virtual ~DB2LOBBY_LoadBagRet();

  DB2LOBBY_LoadBagRet(const DB2LOBBY_LoadBagRet& from);

  inline DB2LOBBY_LoadBagRet& operator=(const DB2LOBBY_LoadBagRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_LoadBagRet& default_instance();

  void Swap(DB2LOBBY_LoadBagRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_LoadBagRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_LoadBagRet& from);
  void MergeFrom(const DB2LOBBY_LoadBagRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_BAG_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 curBagNum = 4;
  inline bool has_curbagnum() const;
  inline void clear_curbagnum();
  static const int kCurBagNumFieldNumber = 4;
  inline ::google::protobuf::uint32 curbagnum() const;
  inline void set_curbagnum(::google::protobuf::uint32 value);

  // optional bytes bag = 5;
  inline bool has_bag() const;
  inline void clear_bag();
  static const int kBagFieldNumber = 5;
  inline const ::std::string& bag() const;
  inline void set_bag(const ::std::string& value);
  inline void set_bag(const char* value);
  inline void set_bag(const void* value, size_t size);
  inline ::std::string* mutable_bag();
  inline ::std::string* release_bag();
  inline void set_allocated_bag(::std::string* bag);

  // optional .TgsProtocol.SeedBag seedBag = 6;
  inline bool has_seedbag() const;
  inline void clear_seedbag();
  static const int kSeedBagFieldNumber = 6;
  inline const ::TgsProtocol::SeedBag& seedbag() const;
  inline ::TgsProtocol::SeedBag* mutable_seedbag();
  inline ::TgsProtocol::SeedBag* release_seedbag();
  inline void set_allocated_seedbag(::TgsProtocol::SeedBag* seedbag);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_LoadBagRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_curbagnum();
  inline void clear_has_curbagnum();
  inline void set_has_bag();
  inline void clear_has_bag();
  inline void set_has_seedbag();
  inline void clear_has_seedbag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  ::std::string* bag_;
  ::TgsProtocol::SeedBag* seedbag_;
  ::google::protobuf::uint32 curbagnum_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_LoadBagRet* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_CheckTokenRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_CheckTokenRet();
  virtual ~DB2LOBBY_CheckTokenRet();

  DB2LOBBY_CheckTokenRet(const DB2LOBBY_CheckTokenRet& from);

  inline DB2LOBBY_CheckTokenRet& operator=(const DB2LOBBY_CheckTokenRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_CheckTokenRet& default_instance();

  void Swap(DB2LOBBY_CheckTokenRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_CheckTokenRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_CheckTokenRet& from);
  void MergeFrom(const DB2LOBBY_CheckTokenRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_CHECKTOKEN_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes deviceName = 4;
  inline bool has_devicename() const;
  inline void clear_devicename();
  static const int kDeviceNameFieldNumber = 4;
  inline const ::std::string& devicename() const;
  inline void set_devicename(const ::std::string& value);
  inline void set_devicename(const char* value);
  inline void set_devicename(const void* value, size_t size);
  inline ::std::string* mutable_devicename();
  inline ::std::string* release_devicename();
  inline void set_allocated_devicename(::std::string* devicename);

  // required bytes deviceType = 5;
  inline bool has_devicetype() const;
  inline void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 5;
  inline const ::std::string& devicetype() const;
  inline void set_devicetype(const ::std::string& value);
  inline void set_devicetype(const char* value);
  inline void set_devicetype(const void* value, size_t size);
  inline ::std::string* mutable_devicetype();
  inline ::std::string* release_devicetype();
  inline void set_allocated_devicetype(::std::string* devicetype);

  // required bytes deviceUid = 6;
  inline bool has_deviceuid() const;
  inline void clear_deviceuid();
  static const int kDeviceUidFieldNumber = 6;
  inline const ::std::string& deviceuid() const;
  inline void set_deviceuid(const ::std::string& value);
  inline void set_deviceuid(const char* value);
  inline void set_deviceuid(const void* value, size_t size);
  inline ::std::string* mutable_deviceuid();
  inline ::std::string* release_deviceuid();
  inline void set_allocated_deviceuid(::std::string* deviceuid);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_CheckTokenRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_devicename();
  inline void clear_has_devicename();
  inline void set_has_devicetype();
  inline void clear_has_devicetype();
  inline void set_has_deviceuid();
  inline void clear_has_deviceuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  ::std::string* devicename_;
  ::std::string* devicetype_;
  ::std::string* deviceuid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_CheckTokenRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_SaveBagReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_SaveBagReq();
  virtual ~LOBBY2DB_SaveBagReq();

  LOBBY2DB_SaveBagReq(const LOBBY2DB_SaveBagReq& from);

  inline LOBBY2DB_SaveBagReq& operator=(const LOBBY2DB_SaveBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_SaveBagReq& default_instance();

  void Swap(LOBBY2DB_SaveBagReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_SaveBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_SaveBagReq& from);
  void MergeFrom(const LOBBY2DB_SaveBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SAVE_BAG_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 isSaveBag = 3;
  inline bool has_issavebag() const;
  inline void clear_issavebag();
  static const int kIsSaveBagFieldNumber = 3;
  inline ::google::protobuf::uint32 issavebag() const;
  inline void set_issavebag(::google::protobuf::uint32 value);

  // optional uint32 curBagNum = 4;
  inline bool has_curbagnum() const;
  inline void clear_curbagnum();
  static const int kCurBagNumFieldNumber = 4;
  inline ::google::protobuf::uint32 curbagnum() const;
  inline void set_curbagnum(::google::protobuf::uint32 value);

  // optional bytes bag = 5;
  inline bool has_bag() const;
  inline void clear_bag();
  static const int kBagFieldNumber = 5;
  inline const ::std::string& bag() const;
  inline void set_bag(const ::std::string& value);
  inline void set_bag(const char* value);
  inline void set_bag(const void* value, size_t size);
  inline ::std::string* mutable_bag();
  inline ::std::string* release_bag();
  inline void set_allocated_bag(::std::string* bag);

  // optional .TgsProtocol.SeedBag seedBag = 6;
  inline bool has_seedbag() const;
  inline void clear_seedbag();
  static const int kSeedBagFieldNumber = 6;
  inline const ::TgsProtocol::SeedBag& seedbag() const;
  inline ::TgsProtocol::SeedBag* mutable_seedbag();
  inline ::TgsProtocol::SeedBag* release_seedbag();
  inline void set_allocated_seedbag(::TgsProtocol::SeedBag* seedbag);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_SaveBagReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_issavebag();
  inline void clear_has_issavebag();
  inline void set_has_curbagnum();
  inline void clear_has_curbagnum();
  inline void set_has_bag();
  inline void clear_has_bag();
  inline void set_has_seedbag();
  inline void clear_has_seedbag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  ::google::protobuf::uint32 issavebag_;
  ::std::string* bag_;
  ::TgsProtocol::SeedBag* seedbag_;
  ::google::protobuf::uint32 curbagnum_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_SaveBagReq* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_AddDiamondReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_AddDiamondReq();
  virtual ~LOBBY2DB_AddDiamondReq();

  LOBBY2DB_AddDiamondReq(const LOBBY2DB_AddDiamondReq& from);

  inline LOBBY2DB_AddDiamondReq& operator=(const LOBBY2DB_AddDiamondReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_AddDiamondReq& default_instance();

  void Swap(LOBBY2DB_AddDiamondReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_AddDiamondReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_AddDiamondReq& from);
  void MergeFrom(const LOBBY2DB_AddDiamondReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_ADDDIAMOND_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 addDiamond = 3;
  inline bool has_adddiamond() const;
  inline void clear_adddiamond();
  static const int kAddDiamondFieldNumber = 3;
  inline ::google::protobuf::uint32 adddiamond() const;
  inline void set_adddiamond(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_AddDiamondReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_adddiamond();
  inline void clear_has_adddiamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  ::google::protobuf::uint32 adddiamond_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_AddDiamondReq* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_ChangeNameCheckReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_ChangeNameCheckReq();
  virtual ~LOBBY2DB_ChangeNameCheckReq();

  LOBBY2DB_ChangeNameCheckReq(const LOBBY2DB_ChangeNameCheckReq& from);

  inline LOBBY2DB_ChangeNameCheckReq& operator=(const LOBBY2DB_ChangeNameCheckReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_ChangeNameCheckReq& default_instance();

  void Swap(LOBBY2DB_ChangeNameCheckReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_ChangeNameCheckReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_ChangeNameCheckReq& from);
  void MergeFrom(const LOBBY2DB_ChangeNameCheckReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CHANGE_NAME_CHECK_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes newName = 3;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewNameFieldNumber = 3;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const void* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // required uint32 cmd = 4;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 4;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_ChangeNameCheckReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_newname();
  inline void clear_has_newname();
  inline void set_has_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  ::google::protobuf::uint32 cmd_;
  ::std::string* newname_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_ChangeNameCheckReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_ChangeNameCheckRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_ChangeNameCheckRet();
  virtual ~DB2LOBBY_ChangeNameCheckRet();

  DB2LOBBY_ChangeNameCheckRet(const DB2LOBBY_ChangeNameCheckRet& from);

  inline DB2LOBBY_ChangeNameCheckRet& operator=(const DB2LOBBY_ChangeNameCheckRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_ChangeNameCheckRet& default_instance();

  void Swap(DB2LOBBY_ChangeNameCheckRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_ChangeNameCheckRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_ChangeNameCheckRet& from);
  void MergeFrom(const DB2LOBBY_ChangeNameCheckRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_CHANGE_NAME_CHECK_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes newName = 4;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewNameFieldNumber = 4;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const void* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // required uint32 cmd = 5;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 5;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_ChangeNameCheckRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_newname();
  inline void clear_has_newname();
  inline void set_has_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  ::std::string* newname_;
  ::google::protobuf::uint32 cmd_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_ChangeNameCheckRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DBLoadWorldReq : public ::google::protobuf::Message {
 public:
  LOBBY2DBLoadWorldReq();
  virtual ~LOBBY2DBLoadWorldReq();

  LOBBY2DBLoadWorldReq(const LOBBY2DBLoadWorldReq& from);

  inline LOBBY2DBLoadWorldReq& operator=(const LOBBY2DBLoadWorldReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DBLoadWorldReq& default_instance();

  void Swap(LOBBY2DBLoadWorldReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DBLoadWorldReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DBLoadWorldReq& from);
  void MergeFrom(const LOBBY2DBLoadWorldReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_WORLD_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DBLoadWorldReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DBLoadWorldReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBYLoadWorldRet : public ::google::protobuf::Message {
 public:
  DB2LOBBYLoadWorldRet();
  virtual ~DB2LOBBYLoadWorldRet();

  DB2LOBBYLoadWorldRet(const DB2LOBBYLoadWorldRet& from);

  inline DB2LOBBYLoadWorldRet& operator=(const DB2LOBBYLoadWorldRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBYLoadWorldRet& default_instance();

  void Swap(DB2LOBBYLoadWorldRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBYLoadWorldRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBYLoadWorldRet& from);
  void MergeFrom(const DB2LOBBYLoadWorldRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_WORLD_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 weekBoxId = 3;
  inline bool has_weekboxid() const;
  inline void clear_weekboxid();
  static const int kWeekBoxIdFieldNumber = 3;
  inline ::google::protobuf::uint32 weekboxid() const;
  inline void set_weekboxid(::google::protobuf::uint32 value);

  // required uint32 dayBox_1 = 4;
  inline bool has_daybox_1() const;
  inline void clear_daybox_1();
  static const int kDayBox1FieldNumber = 4;
  inline ::google::protobuf::uint32 daybox_1() const;
  inline void set_daybox_1(::google::protobuf::uint32 value);

  // required uint32 dayBox_2 = 5;
  inline bool has_daybox_2() const;
  inline void clear_daybox_2();
  static const int kDayBox2FieldNumber = 5;
  inline ::google::protobuf::uint32 daybox_2() const;
  inline void set_daybox_2(::google::protobuf::uint32 value);

  // required uint32 dayBox_3 = 6;
  inline bool has_daybox_3() const;
  inline void clear_daybox_3();
  static const int kDayBox3FieldNumber = 6;
  inline ::google::protobuf::uint32 daybox_3() const;
  inline void set_daybox_3(::google::protobuf::uint32 value);

  // optional bytes arenaHeros = 8;
  inline bool has_arenaheros() const;
  inline void clear_arenaheros();
  static const int kArenaHerosFieldNumber = 8;
  inline const ::std::string& arenaheros() const;
  inline void set_arenaheros(const ::std::string& value);
  inline void set_arenaheros(const char* value);
  inline void set_arenaheros(const void* value, size_t size);
  inline ::std::string* mutable_arenaheros();
  inline ::std::string* release_arenaheros();
  inline void set_allocated_arenaheros(::std::string* arenaheros);

  // optional uint32 openServerTime = 9;
  inline bool has_openservertime() const;
  inline void clear_openservertime();
  static const int kOpenServerTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 openservertime() const;
  inline void set_openservertime(::google::protobuf::uint32 value);

  // optional .TgsProtocol.HalfBuy halfBuy = 10;
  inline bool has_halfbuy() const;
  inline void clear_halfbuy();
  static const int kHalfBuyFieldNumber = 10;
  inline const ::TgsProtocol::HalfBuy& halfbuy() const;
  inline ::TgsProtocol::HalfBuy* mutable_halfbuy();
  inline ::TgsProtocol::HalfBuy* release_halfbuy();
  inline void set_allocated_halfbuy(::TgsProtocol::HalfBuy* halfbuy);

  // optional .TgsProtocol.Achieve achieve = 11;
  inline bool has_achieve() const;
  inline void clear_achieve();
  static const int kAchieveFieldNumber = 11;
  inline const ::TgsProtocol::Achieve& achieve() const;
  inline ::TgsProtocol::Achieve* mutable_achieve();
  inline ::TgsProtocol::Achieve* release_achieve();
  inline void set_allocated_achieve(::TgsProtocol::Achieve* achieve);

  // optional string globalItemGot = 12;
  inline bool has_globalitemgot() const;
  inline void clear_globalitemgot();
  static const int kGlobalItemGotFieldNumber = 12;
  inline const ::std::string& globalitemgot() const;
  inline void set_globalitemgot(const ::std::string& value);
  inline void set_globalitemgot(const char* value);
  inline void set_globalitemgot(const char* value, size_t size);
  inline ::std::string* mutable_globalitemgot();
  inline ::std::string* release_globalitemgot();
  inline void set_allocated_globalitemgot(::std::string* globalitemgot);

  // optional string passwordGot = 13;
  inline bool has_passwordgot() const;
  inline void clear_passwordgot();
  static const int kPasswordGotFieldNumber = 13;
  inline const ::std::string& passwordgot() const;
  inline void set_passwordgot(const ::std::string& value);
  inline void set_passwordgot(const char* value);
  inline void set_passwordgot(const char* value, size_t size);
  inline ::std::string* mutable_passwordgot();
  inline ::std::string* release_passwordgot();
  inline void set_allocated_passwordgot(::std::string* passwordgot);

  // optional string sevenDayRank = 14;
  inline bool has_sevendayrank() const;
  inline void clear_sevendayrank();
  static const int kSevenDayRankFieldNumber = 14;
  inline const ::std::string& sevendayrank() const;
  inline void set_sevendayrank(const ::std::string& value);
  inline void set_sevendayrank(const char* value);
  inline void set_sevendayrank(const char* value, size_t size);
  inline ::std::string* mutable_sevendayrank();
  inline ::std::string* release_sevendayrank();
  inline void set_allocated_sevendayrank(::std::string* sevendayrank);

  // optional .TgsProtocol.OptGlobal opt = 15;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 15;
  inline const ::TgsProtocol::OptGlobal& opt() const;
  inline ::TgsProtocol::OptGlobal* mutable_opt();
  inline ::TgsProtocol::OptGlobal* release_opt();
  inline void set_allocated_opt(::TgsProtocol::OptGlobal* opt);

  // optional string boxdrop = 16;
  inline bool has_boxdrop() const;
  inline void clear_boxdrop();
  static const int kBoxdropFieldNumber = 16;
  inline const ::std::string& boxdrop() const;
  inline void set_boxdrop(const ::std::string& value);
  inline void set_boxdrop(const char* value);
  inline void set_boxdrop(const char* value, size_t size);
  inline ::std::string* mutable_boxdrop();
  inline ::std::string* release_boxdrop();
  inline void set_allocated_boxdrop(::std::string* boxdrop);

  // repeated .TgsProtocol.DBMailInfo mailList = 17;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMailListFieldNumber = 17;
  inline const ::TgsProtocol::DBMailInfo& maillist(int index) const;
  inline ::TgsProtocol::DBMailInfo* mutable_maillist(int index);
  inline ::TgsProtocol::DBMailInfo* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >*
      mutable_maillist();

  // optional uint32 AstrologyCountry = 18;
  inline bool has_astrologycountry() const;
  inline void clear_astrologycountry();
  static const int kAstrologyCountryFieldNumber = 18;
  inline ::google::protobuf::uint32 astrologycountry() const;
  inline void set_astrologycountry(::google::protobuf::uint32 value);

  // optional uint32 AstrologyCountryNextTime = 19;
  inline bool has_astrologycountrynexttime() const;
  inline void clear_astrologycountrynexttime();
  static const int kAstrologyCountryNextTimeFieldNumber = 19;
  inline ::google::protobuf::uint32 astrologycountrynexttime() const;
  inline void set_astrologycountrynexttime(::google::protobuf::uint32 value);

  // optional uint32 rebateCount = 20;
  inline bool has_rebatecount() const;
  inline void clear_rebatecount();
  static const int kRebateCountFieldNumber = 20;
  inline ::google::protobuf::uint32 rebatecount() const;
  inline void set_rebatecount(::google::protobuf::uint32 value);

  // optional uint32 heroChangedTime = 21;
  inline bool has_herochangedtime() const;
  inline void clear_herochangedtime();
  static const int kHeroChangedTimeFieldNumber = 21;
  inline ::google::protobuf::uint32 herochangedtime() const;
  inline void set_herochangedtime(::google::protobuf::uint32 value);

  // repeated uint32 chatpasswd = 22;
  inline int chatpasswd_size() const;
  inline void clear_chatpasswd();
  static const int kChatpasswdFieldNumber = 22;
  inline ::google::protobuf::uint32 chatpasswd(int index) const;
  inline void set_chatpasswd(int index, ::google::protobuf::uint32 value);
  inline void add_chatpasswd(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      chatpasswd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_chatpasswd();

  // optional uint32 maxRobotId = 23;
  inline bool has_maxrobotid() const;
  inline void clear_maxrobotid();
  static const int kMaxRobotIdFieldNumber = 23;
  inline ::google::protobuf::uint32 maxrobotid() const;
  inline void set_maxrobotid(::google::protobuf::uint32 value);

  // repeated string robotName = 24;
  inline int robotname_size() const;
  inline void clear_robotname();
  static const int kRobotNameFieldNumber = 24;
  inline const ::std::string& robotname(int index) const;
  inline ::std::string* mutable_robotname(int index);
  inline void set_robotname(int index, const ::std::string& value);
  inline void set_robotname(int index, const char* value);
  inline void set_robotname(int index, const char* value, size_t size);
  inline ::std::string* add_robotname();
  inline void add_robotname(const ::std::string& value);
  inline void add_robotname(const char* value);
  inline void add_robotname(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& robotname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_robotname();

  // repeated uint64 robotIdCollection = 25;
  inline int robotidcollection_size() const;
  inline void clear_robotidcollection();
  static const int kRobotIdCollectionFieldNumber = 25;
  inline ::google::protobuf::uint64 robotidcollection(int index) const;
  inline void set_robotidcollection(int index, ::google::protobuf::uint64 value);
  inline void add_robotidcollection(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      robotidcollection() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_robotidcollection();

  // repeated uint32 robotIndex = 26;
  inline int robotindex_size() const;
  inline void clear_robotindex();
  static const int kRobotIndexFieldNumber = 26;
  inline ::google::protobuf::uint32 robotindex(int index) const;
  inline void set_robotindex(int index, ::google::protobuf::uint32 value);
  inline void add_robotindex(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      robotindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_robotindex();

  // optional string monthcard = 27;
  inline bool has_monthcard() const;
  inline void clear_monthcard();
  static const int kMonthcardFieldNumber = 27;
  inline const ::std::string& monthcard() const;
  inline void set_monthcard(const ::std::string& value);
  inline void set_monthcard(const char* value);
  inline void set_monthcard(const char* value, size_t size);
  inline ::std::string* mutable_monthcard();
  inline ::std::string* release_monthcard();
  inline void set_allocated_monthcard(::std::string* monthcard);

  // optional uint32 heroQualityChangedTime = 28;
  inline bool has_heroqualitychangedtime() const;
  inline void clear_heroqualitychangedtime();
  static const int kHeroQualityChangedTimeFieldNumber = 28;
  inline ::google::protobuf::uint32 heroqualitychangedtime() const;
  inline void set_heroqualitychangedtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBYLoadWorldRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_weekboxid();
  inline void clear_has_weekboxid();
  inline void set_has_daybox_1();
  inline void clear_has_daybox_1();
  inline void set_has_daybox_2();
  inline void clear_has_daybox_2();
  inline void set_has_daybox_3();
  inline void clear_has_daybox_3();
  inline void set_has_arenaheros();
  inline void clear_has_arenaheros();
  inline void set_has_openservertime();
  inline void clear_has_openservertime();
  inline void set_has_halfbuy();
  inline void clear_has_halfbuy();
  inline void set_has_achieve();
  inline void clear_has_achieve();
  inline void set_has_globalitemgot();
  inline void clear_has_globalitemgot();
  inline void set_has_passwordgot();
  inline void clear_has_passwordgot();
  inline void set_has_sevendayrank();
  inline void clear_has_sevendayrank();
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_boxdrop();
  inline void clear_has_boxdrop();
  inline void set_has_astrologycountry();
  inline void clear_has_astrologycountry();
  inline void set_has_astrologycountrynexttime();
  inline void clear_has_astrologycountrynexttime();
  inline void set_has_rebatecount();
  inline void clear_has_rebatecount();
  inline void set_has_herochangedtime();
  inline void clear_has_herochangedtime();
  inline void set_has_maxrobotid();
  inline void clear_has_maxrobotid();
  inline void set_has_monthcard();
  inline void clear_has_monthcard();
  inline void set_has_heroqualitychangedtime();
  inline void clear_has_heroqualitychangedtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 weekboxid_;
  ::google::protobuf::uint32 daybox_1_;
  ::google::protobuf::uint32 daybox_2_;
  ::google::protobuf::uint32 daybox_3_;
  ::std::string* arenaheros_;
  ::TgsProtocol::HalfBuy* halfbuy_;
  ::TgsProtocol::Achieve* achieve_;
  ::std::string* globalitemgot_;
  ::std::string* passwordgot_;
  ::google::protobuf::uint32 openservertime_;
  ::google::protobuf::uint32 astrologycountry_;
  ::std::string* sevendayrank_;
  ::TgsProtocol::OptGlobal* opt_;
  ::std::string* boxdrop_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo > maillist_;
  ::google::protobuf::uint32 astrologycountrynexttime_;
  ::google::protobuf::uint32 rebatecount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > chatpasswd_;
  ::google::protobuf::uint32 herochangedtime_;
  ::google::protobuf::uint32 maxrobotid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> robotname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > robotidcollection_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > robotindex_;
  ::std::string* monthcard_;
  ::google::protobuf::uint32 heroqualitychangedtime_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBYLoadWorldRet* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_Server : public ::google::protobuf::Message {
 public:
  DB2LOBBY_Server();
  virtual ~DB2LOBBY_Server();

  DB2LOBBY_Server(const DB2LOBBY_Server& from);

  inline DB2LOBBY_Server& operator=(const DB2LOBBY_Server& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_Server& default_instance();

  void Swap(DB2LOBBY_Server* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_Server* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_Server& from);
  void MergeFrom(const DB2LOBBY_Server& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SERVER];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_Server)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_Server* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateSupremeHotBox : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateSupremeHotBox();
  virtual ~LOBBY2DB_UpdateSupremeHotBox();

  LOBBY2DB_UpdateSupremeHotBox(const LOBBY2DB_UpdateSupremeHotBox& from);

  inline LOBBY2DB_UpdateSupremeHotBox& operator=(const LOBBY2DB_UpdateSupremeHotBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateSupremeHotBox& default_instance();

  void Swap(LOBBY2DB_UpdateSupremeHotBox* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateSupremeHotBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateSupremeHotBox& from);
  void MergeFrom(const LOBBY2DB_UpdateSupremeHotBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATE_SUPREMEHOTBOX];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 weekBoxId = 2;
  inline bool has_weekboxid() const;
  inline void clear_weekboxid();
  static const int kWeekBoxIdFieldNumber = 2;
  inline ::google::protobuf::uint32 weekboxid() const;
  inline void set_weekboxid(::google::protobuf::uint32 value);

  // required uint32 dayBox_1 = 3;
  inline bool has_daybox_1() const;
  inline void clear_daybox_1();
  static const int kDayBox1FieldNumber = 3;
  inline ::google::protobuf::uint32 daybox_1() const;
  inline void set_daybox_1(::google::protobuf::uint32 value);

  // required uint32 dayBox_2 = 4;
  inline bool has_daybox_2() const;
  inline void clear_daybox_2();
  static const int kDayBox2FieldNumber = 4;
  inline ::google::protobuf::uint32 daybox_2() const;
  inline void set_daybox_2(::google::protobuf::uint32 value);

  // required uint32 dayBox_3 = 5;
  inline bool has_daybox_3() const;
  inline void clear_daybox_3();
  static const int kDayBox3FieldNumber = 5;
  inline ::google::protobuf::uint32 daybox_3() const;
  inline void set_daybox_3(::google::protobuf::uint32 value);

  // required uint32 openServerTime = 6;
  inline bool has_openservertime() const;
  inline void clear_openservertime();
  static const int kOpenServerTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 openservertime() const;
  inline void set_openservertime(::google::protobuf::uint32 value);

  // optional .TgsProtocol.HalfBuy halfBuy = 7;
  inline bool has_halfbuy() const;
  inline void clear_halfbuy();
  static const int kHalfBuyFieldNumber = 7;
  inline const ::TgsProtocol::HalfBuy& halfbuy() const;
  inline ::TgsProtocol::HalfBuy* mutable_halfbuy();
  inline ::TgsProtocol::HalfBuy* release_halfbuy();
  inline void set_allocated_halfbuy(::TgsProtocol::HalfBuy* halfbuy);

  // optional .TgsProtocol.Achieve achieve = 8;
  inline bool has_achieve() const;
  inline void clear_achieve();
  static const int kAchieveFieldNumber = 8;
  inline const ::TgsProtocol::Achieve& achieve() const;
  inline ::TgsProtocol::Achieve* mutable_achieve();
  inline ::TgsProtocol::Achieve* release_achieve();
  inline void set_allocated_achieve(::TgsProtocol::Achieve* achieve);

  // optional string globalItemGot = 9;
  inline bool has_globalitemgot() const;
  inline void clear_globalitemgot();
  static const int kGlobalItemGotFieldNumber = 9;
  inline const ::std::string& globalitemgot() const;
  inline void set_globalitemgot(const ::std::string& value);
  inline void set_globalitemgot(const char* value);
  inline void set_globalitemgot(const char* value, size_t size);
  inline ::std::string* mutable_globalitemgot();
  inline ::std::string* release_globalitemgot();
  inline void set_allocated_globalitemgot(::std::string* globalitemgot);

  // optional string passwordGot = 10;
  inline bool has_passwordgot() const;
  inline void clear_passwordgot();
  static const int kPasswordGotFieldNumber = 10;
  inline const ::std::string& passwordgot() const;
  inline void set_passwordgot(const ::std::string& value);
  inline void set_passwordgot(const char* value);
  inline void set_passwordgot(const char* value, size_t size);
  inline ::std::string* mutable_passwordgot();
  inline ::std::string* release_passwordgot();
  inline void set_allocated_passwordgot(::std::string* passwordgot);

  // optional string sevenDayRank = 11;
  inline bool has_sevendayrank() const;
  inline void clear_sevendayrank();
  static const int kSevenDayRankFieldNumber = 11;
  inline const ::std::string& sevendayrank() const;
  inline void set_sevendayrank(const ::std::string& value);
  inline void set_sevendayrank(const char* value);
  inline void set_sevendayrank(const char* value, size_t size);
  inline ::std::string* mutable_sevendayrank();
  inline ::std::string* release_sevendayrank();
  inline void set_allocated_sevendayrank(::std::string* sevendayrank);

  // optional .TgsProtocol.OptGlobal opt = 12;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 12;
  inline const ::TgsProtocol::OptGlobal& opt() const;
  inline ::TgsProtocol::OptGlobal* mutable_opt();
  inline ::TgsProtocol::OptGlobal* release_opt();
  inline void set_allocated_opt(::TgsProtocol::OptGlobal* opt);

  // optional string boxdrop = 13;
  inline bool has_boxdrop() const;
  inline void clear_boxdrop();
  static const int kBoxdropFieldNumber = 13;
  inline const ::std::string& boxdrop() const;
  inline void set_boxdrop(const ::std::string& value);
  inline void set_boxdrop(const char* value);
  inline void set_boxdrop(const char* value, size_t size);
  inline ::std::string* mutable_boxdrop();
  inline ::std::string* release_boxdrop();
  inline void set_allocated_boxdrop(::std::string* boxdrop);

  // optional uint32 AstrologyCountry = 14;
  inline bool has_astrologycountry() const;
  inline void clear_astrologycountry();
  static const int kAstrologyCountryFieldNumber = 14;
  inline ::google::protobuf::uint32 astrologycountry() const;
  inline void set_astrologycountry(::google::protobuf::uint32 value);

  // optional uint32 AstrologyCountryNextTime = 15;
  inline bool has_astrologycountrynexttime() const;
  inline void clear_astrologycountrynexttime();
  static const int kAstrologyCountryNextTimeFieldNumber = 15;
  inline ::google::protobuf::uint32 astrologycountrynexttime() const;
  inline void set_astrologycountrynexttime(::google::protobuf::uint32 value);

  // optional uint32 rebateCount = 16;
  inline bool has_rebatecount() const;
  inline void clear_rebatecount();
  static const int kRebateCountFieldNumber = 16;
  inline ::google::protobuf::uint32 rebatecount() const;
  inline void set_rebatecount(::google::protobuf::uint32 value);

  // optional uint32 heroChangedTime = 17;
  inline bool has_herochangedtime() const;
  inline void clear_herochangedtime();
  static const int kHeroChangedTimeFieldNumber = 17;
  inline ::google::protobuf::uint32 herochangedtime() const;
  inline void set_herochangedtime(::google::protobuf::uint32 value);

  // repeated uint32 chatpasswd = 18;
  inline int chatpasswd_size() const;
  inline void clear_chatpasswd();
  static const int kChatpasswdFieldNumber = 18;
  inline ::google::protobuf::uint32 chatpasswd(int index) const;
  inline void set_chatpasswd(int index, ::google::protobuf::uint32 value);
  inline void add_chatpasswd(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      chatpasswd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_chatpasswd();

  // optional string monthcard = 19;
  inline bool has_monthcard() const;
  inline void clear_monthcard();
  static const int kMonthcardFieldNumber = 19;
  inline const ::std::string& monthcard() const;
  inline void set_monthcard(const ::std::string& value);
  inline void set_monthcard(const char* value);
  inline void set_monthcard(const char* value, size_t size);
  inline ::std::string* mutable_monthcard();
  inline ::std::string* release_monthcard();
  inline void set_allocated_monthcard(::std::string* monthcard);

  // optional uint32 heroQualityChangedTime = 20;
  inline bool has_heroqualitychangedtime() const;
  inline void clear_heroqualitychangedtime();
  static const int kHeroQualityChangedTimeFieldNumber = 20;
  inline ::google::protobuf::uint32 heroqualitychangedtime() const;
  inline void set_heroqualitychangedtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_weekboxid();
  inline void clear_has_weekboxid();
  inline void set_has_daybox_1();
  inline void clear_has_daybox_1();
  inline void set_has_daybox_2();
  inline void clear_has_daybox_2();
  inline void set_has_daybox_3();
  inline void clear_has_daybox_3();
  inline void set_has_openservertime();
  inline void clear_has_openservertime();
  inline void set_has_halfbuy();
  inline void clear_has_halfbuy();
  inline void set_has_achieve();
  inline void clear_has_achieve();
  inline void set_has_globalitemgot();
  inline void clear_has_globalitemgot();
  inline void set_has_passwordgot();
  inline void clear_has_passwordgot();
  inline void set_has_sevendayrank();
  inline void clear_has_sevendayrank();
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_boxdrop();
  inline void clear_has_boxdrop();
  inline void set_has_astrologycountry();
  inline void clear_has_astrologycountry();
  inline void set_has_astrologycountrynexttime();
  inline void clear_has_astrologycountrynexttime();
  inline void set_has_rebatecount();
  inline void clear_has_rebatecount();
  inline void set_has_herochangedtime();
  inline void clear_has_herochangedtime();
  inline void set_has_monthcard();
  inline void clear_has_monthcard();
  inline void set_has_heroqualitychangedtime();
  inline void clear_has_heroqualitychangedtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 weekboxid_;
  ::google::protobuf::uint32 daybox_1_;
  ::google::protobuf::uint32 daybox_2_;
  ::google::protobuf::uint32 daybox_3_;
  ::google::protobuf::uint32 openservertime_;
  ::TgsProtocol::HalfBuy* halfbuy_;
  ::TgsProtocol::Achieve* achieve_;
  ::std::string* globalitemgot_;
  ::std::string* passwordgot_;
  ::std::string* sevendayrank_;
  ::TgsProtocol::OptGlobal* opt_;
  ::std::string* boxdrop_;
  ::google::protobuf::uint32 astrologycountry_;
  ::google::protobuf::uint32 astrologycountrynexttime_;
  ::google::protobuf::uint32 rebatecount_;
  ::google::protobuf::uint32 herochangedtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > chatpasswd_;
  ::std::string* monthcard_;
  ::google::protobuf::uint32 heroqualitychangedtime_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateSupremeHotBox* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateArenaRank : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateArenaRank();
  virtual ~LOBBY2DB_UpdateArenaRank();

  LOBBY2DB_UpdateArenaRank(const LOBBY2DB_UpdateArenaRank& from);

  inline LOBBY2DB_UpdateArenaRank& operator=(const LOBBY2DB_UpdateArenaRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateArenaRank& default_instance();

  void Swap(LOBBY2DB_UpdateArenaRank* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateArenaRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateArenaRank& from);
  void MergeFrom(const LOBBY2DB_UpdateArenaRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATE_ARENA_RANK];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // optional bytes arenaHeros = 2;
  inline bool has_arenaheros() const;
  inline void clear_arenaheros();
  static const int kArenaHerosFieldNumber = 2;
  inline const ::std::string& arenaheros() const;
  inline void set_arenaheros(const ::std::string& value);
  inline void set_arenaheros(const char* value);
  inline void set_arenaheros(const void* value, size_t size);
  inline ::std::string* mutable_arenaheros();
  inline ::std::string* release_arenaheros();
  inline void set_allocated_arenaheros(::std::string* arenaheros);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateArenaRank)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_arenaheros();
  inline void clear_has_arenaheros();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* arenaheros_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateArenaRank* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateArenaLog : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateArenaLog();
  virtual ~LOBBY2DB_UpdateArenaLog();

  LOBBY2DB_UpdateArenaLog(const LOBBY2DB_UpdateArenaLog& from);

  inline LOBBY2DB_UpdateArenaLog& operator=(const LOBBY2DB_UpdateArenaLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateArenaLog& default_instance();

  void Swap(LOBBY2DB_UpdateArenaLog* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateArenaLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateArenaLog& from);
  void MergeFrom(const LOBBY2DB_UpdateArenaLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATE_ARENA_LOG];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required .TgsProtocol.DBArenaLog arenaLog = 3;
  inline bool has_arenalog() const;
  inline void clear_arenalog();
  static const int kArenaLogFieldNumber = 3;
  inline const ::TgsProtocol::DBArenaLog& arenalog() const;
  inline ::TgsProtocol::DBArenaLog* mutable_arenalog();
  inline ::TgsProtocol::DBArenaLog* release_arenalog();
  inline void set_allocated_arenalog(::TgsProtocol::DBArenaLog* arenalog);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateArenaLog)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_arenalog();
  inline void clear_has_arenalog();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::TgsProtocol::DBArenaLog* arenalog_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateArenaLog* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_OfflineMail : public ::google::protobuf::Message {
 public:
  LOBBY2DB_OfflineMail();
  virtual ~LOBBY2DB_OfflineMail();

  LOBBY2DB_OfflineMail(const LOBBY2DB_OfflineMail& from);

  inline LOBBY2DB_OfflineMail& operator=(const LOBBY2DB_OfflineMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_OfflineMail& default_instance();

  void Swap(LOBBY2DB_OfflineMail* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_OfflineMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_OfflineMail& from);
  void MergeFrom(const LOBBY2DB_OfflineMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_OFFLINE_MAIL];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required .TgsProtocol.DBMailInfo mailinfo = 3;
  inline bool has_mailinfo() const;
  inline void clear_mailinfo();
  static const int kMailinfoFieldNumber = 3;
  inline const ::TgsProtocol::DBMailInfo& mailinfo() const;
  inline ::TgsProtocol::DBMailInfo* mutable_mailinfo();
  inline ::TgsProtocol::DBMailInfo* release_mailinfo();
  inline void set_allocated_mailinfo(::TgsProtocol::DBMailInfo* mailinfo);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_OfflineMail)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_mailinfo();
  inline void clear_has_mailinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::TgsProtocol::DBMailInfo* mailinfo_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_OfflineMail* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_LoadOfflineMail : public ::google::protobuf::Message {
 public:
  DB2LOBBY_LoadOfflineMail();
  virtual ~DB2LOBBY_LoadOfflineMail();

  DB2LOBBY_LoadOfflineMail(const DB2LOBBY_LoadOfflineMail& from);

  inline DB2LOBBY_LoadOfflineMail& operator=(const DB2LOBBY_LoadOfflineMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_LoadOfflineMail& default_instance();

  void Swap(DB2LOBBY_LoadOfflineMail* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_LoadOfflineMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_LoadOfflineMail& from);
  void MergeFrom(const DB2LOBBY_LoadOfflineMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADOFFLINE_MAIL];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .TgsProtocol.DBMailInfo mailList = 3;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMailListFieldNumber = 3;
  inline const ::TgsProtocol::DBMailInfo& maillist(int index) const;
  inline ::TgsProtocol::DBMailInfo* mutable_maillist(int index);
  inline ::TgsProtocol::DBMailInfo* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >*
      mutable_maillist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_LoadOfflineMail)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo > maillist_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_LoadOfflineMail* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_LoadOfflineMail : public ::google::protobuf::Message {
 public:
  LOBBY2DB_LoadOfflineMail();
  virtual ~LOBBY2DB_LoadOfflineMail();

  LOBBY2DB_LoadOfflineMail(const LOBBY2DB_LoadOfflineMail& from);

  inline LOBBY2DB_LoadOfflineMail& operator=(const LOBBY2DB_LoadOfflineMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_LoadOfflineMail& default_instance();

  void Swap(LOBBY2DB_LoadOfflineMail* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_LoadOfflineMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_LoadOfflineMail& from);
  void MergeFrom(const LOBBY2DB_LoadOfflineMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADOFFLINE_MAIL];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_LoadOfflineMail)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_LoadOfflineMail* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_CheckTokenReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_CheckTokenReq();
  virtual ~LOBBY2DB_CheckTokenReq();

  LOBBY2DB_CheckTokenReq(const LOBBY2DB_CheckTokenReq& from);

  inline LOBBY2DB_CheckTokenReq& operator=(const LOBBY2DB_CheckTokenReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_CheckTokenReq& default_instance();

  void Swap(LOBBY2DB_CheckTokenReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_CheckTokenReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_CheckTokenReq& from);
  void MergeFrom(const LOBBY2DB_CheckTokenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CHECKTOKEN_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bytes deviceName = 3;
  inline bool has_devicename() const;
  inline void clear_devicename();
  static const int kDeviceNameFieldNumber = 3;
  inline const ::std::string& devicename() const;
  inline void set_devicename(const ::std::string& value);
  inline void set_devicename(const char* value);
  inline void set_devicename(const void* value, size_t size);
  inline ::std::string* mutable_devicename();
  inline ::std::string* release_devicename();
  inline void set_allocated_devicename(::std::string* devicename);

  // required bytes deviceType = 4;
  inline bool has_devicetype() const;
  inline void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 4;
  inline const ::std::string& devicetype() const;
  inline void set_devicetype(const ::std::string& value);
  inline void set_devicetype(const char* value);
  inline void set_devicetype(const void* value, size_t size);
  inline ::std::string* mutable_devicetype();
  inline ::std::string* release_devicetype();
  inline void set_allocated_devicetype(::std::string* devicetype);

  // required bytes deviceUid = 5;
  inline bool has_deviceuid() const;
  inline void clear_deviceuid();
  static const int kDeviceUidFieldNumber = 5;
  inline const ::std::string& deviceuid() const;
  inline void set_deviceuid(const ::std::string& value);
  inline void set_deviceuid(const char* value);
  inline void set_deviceuid(const void* value, size_t size);
  inline ::std::string* mutable_deviceuid();
  inline ::std::string* release_deviceuid();
  inline void set_allocated_deviceuid(::std::string* deviceuid);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_CheckTokenReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_devicename();
  inline void clear_has_devicename();
  inline void set_has_devicetype();
  inline void clear_has_devicetype();
  inline void set_has_deviceuid();
  inline void clear_has_deviceuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::std::string* devicename_;
  ::std::string* devicetype_;
  ::std::string* deviceuid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_CheckTokenReq* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_Server : public ::google::protobuf::Message {
 public:
  LOBBY2DB_Server();
  virtual ~LOBBY2DB_Server();

  LOBBY2DB_Server(const LOBBY2DB_Server& from);

  inline LOBBY2DB_Server& operator=(const LOBBY2DB_Server& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_Server& default_instance();

  void Swap(LOBBY2DB_Server* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_Server* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_Server& from);
  void MergeFrom(const LOBBY2DB_Server& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SERVER];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 serverId = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // required bytes localIp = 3;
  inline bool has_localip() const;
  inline void clear_localip();
  static const int kLocalIpFieldNumber = 3;
  inline const ::std::string& localip() const;
  inline void set_localip(const ::std::string& value);
  inline void set_localip(const char* value);
  inline void set_localip(const void* value, size_t size);
  inline ::std::string* mutable_localip();
  inline ::std::string* release_localip();
  inline void set_allocated_localip(::std::string* localip);

  // optional uint32 port = 4;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 4;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // optional uint32 onlineNum = 5;
  inline bool has_onlinenum() const;
  inline void clear_onlinenum();
  static const int kOnlineNumFieldNumber = 5;
  inline ::google::protobuf::uint32 onlinenum() const;
  inline void set_onlinenum(::google::protobuf::uint32 value);

  // optional bytes version = 6;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 6;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const void* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  inline void set_allocated_version(::std::string* version);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string sourceIp = 8;
  inline bool has_sourceip() const;
  inline void clear_sourceip();
  static const int kSourceIpFieldNumber = 8;
  inline const ::std::string& sourceip() const;
  inline void set_sourceip(const ::std::string& value);
  inline void set_sourceip(const char* value);
  inline void set_sourceip(const char* value, size_t size);
  inline ::std::string* mutable_sourceip();
  inline ::std::string* release_sourceip();
  inline void set_allocated_sourceip(::std::string* sourceip);

  // optional string sourceDir = 9;
  inline bool has_sourcedir() const;
  inline void clear_sourcedir();
  static const int kSourceDirFieldNumber = 9;
  inline const ::std::string& sourcedir() const;
  inline void set_sourcedir(const ::std::string& value);
  inline void set_sourcedir(const char* value);
  inline void set_sourcedir(const char* value, size_t size);
  inline ::std::string* mutable_sourcedir();
  inline ::std::string* release_sourcedir();
  inline void set_allocated_sourcedir(::std::string* sourcedir);

  // optional uint32 canlogin = 10;
  inline bool has_canlogin() const;
  inline void clear_canlogin();
  static const int kCanloginFieldNumber = 10;
  inline ::google::protobuf::uint32 canlogin() const;
  inline void set_canlogin(::google::protobuf::uint32 value);

  // optional uint32 status = 11;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 11;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional string sourceVersion = 12;
  inline bool has_sourceversion() const;
  inline void clear_sourceversion();
  static const int kSourceVersionFieldNumber = 12;
  inline const ::std::string& sourceversion() const;
  inline void set_sourceversion(const ::std::string& value);
  inline void set_sourceversion(const char* value);
  inline void set_sourceversion(const char* value, size_t size);
  inline ::std::string* mutable_sourceversion();
  inline ::std::string* release_sourceversion();
  inline void set_allocated_sourceversion(::std::string* sourceversion);

  // optional uint32 loginStrategyId = 13;
  inline bool has_loginstrategyid() const;
  inline void clear_loginstrategyid();
  static const int kLoginStrategyIdFieldNumber = 13;
  inline ::google::protobuf::uint32 loginstrategyid() const;
  inline void set_loginstrategyid(::google::protobuf::uint32 value);

  // optional bytes ip = 14;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 14;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const void* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional uint32 canRegister = 15;
  inline bool has_canregister() const;
  inline void clear_canregister();
  static const int kCanRegisterFieldNumber = 15;
  inline ::google::protobuf::uint32 canregister() const;
  inline void set_canregister(::google::protobuf::uint32 value);

  // optional uint32 mergeTimes = 16;
  inline bool has_mergetimes() const;
  inline void clear_mergetimes();
  static const int kMergeTimesFieldNumber = 16;
  inline ::google::protobuf::uint32 mergetimes() const;
  inline void set_mergetimes(::google::protobuf::uint32 value);

  // optional uint32 lastMergetime = 17;
  inline bool has_lastmergetime() const;
  inline void clear_lastmergetime();
  static const int kLastMergetimeFieldNumber = 17;
  inline ::google::protobuf::uint32 lastmergetime() const;
  inline void set_lastmergetime(::google::protobuf::uint32 value);

  // optional uint32 centerPort = 18;
  inline bool has_centerport() const;
  inline void clear_centerport();
  static const int kCenterPortFieldNumber = 18;
  inline ::google::protobuf::uint32 centerport() const;
  inline void set_centerport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_Server)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_localip();
  inline void clear_has_localip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_onlinenum();
  inline void clear_has_onlinenum();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sourceip();
  inline void clear_has_sourceip();
  inline void set_has_sourcedir();
  inline void clear_has_sourcedir();
  inline void set_has_canlogin();
  inline void clear_has_canlogin();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_sourceversion();
  inline void clear_has_sourceversion();
  inline void set_has_loginstrategyid();
  inline void clear_has_loginstrategyid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_canregister();
  inline void clear_has_canregister();
  inline void set_has_mergetimes();
  inline void clear_has_mergetimes();
  inline void set_has_lastmergetime();
  inline void clear_has_lastmergetime();
  inline void set_has_centerport();
  inline void clear_has_centerport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 serverid_;
  ::std::string* localip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 onlinenum_;
  ::std::string* version_;
  ::std::string* name_;
  ::std::string* sourceip_;
  ::std::string* sourcedir_;
  ::google::protobuf::uint32 canlogin_;
  ::google::protobuf::uint32 status_;
  ::std::string* sourceversion_;
  ::std::string* ip_;
  ::google::protobuf::uint32 loginstrategyid_;
  ::google::protobuf::uint32 canregister_;
  ::google::protobuf::uint32 mergetimes_;
  ::google::protobuf::uint32 lastmergetime_;
  ::google::protobuf::uint32 centerport_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_Server* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_ApplyFriend : public ::google::protobuf::Message {
 public:
  LOBBY2DB_ApplyFriend();
  virtual ~LOBBY2DB_ApplyFriend();

  LOBBY2DB_ApplyFriend(const LOBBY2DB_ApplyFriend& from);

  inline LOBBY2DB_ApplyFriend& operator=(const LOBBY2DB_ApplyFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_ApplyFriend& default_instance();

  void Swap(LOBBY2DB_ApplyFriend* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_ApplyFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_ApplyFriend& from);
  void MergeFrom(const LOBBY2DB_ApplyFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_APPLY_FRIEND];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // optional .TgsProtocol.DBFriendInfo charInfo = 2;
  inline bool has_charinfo() const;
  inline void clear_charinfo();
  static const int kCharInfoFieldNumber = 2;
  inline const ::TgsProtocol::DBFriendInfo& charinfo() const;
  inline ::TgsProtocol::DBFriendInfo* mutable_charinfo();
  inline ::TgsProtocol::DBFriendInfo* release_charinfo();
  inline void set_allocated_charinfo(::TgsProtocol::DBFriendInfo* charinfo);

  // required uint64 dstCharId = 3;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_ApplyFriend)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charinfo();
  inline void clear_has_charinfo();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TgsProtocol::DBFriendInfo* charinfo_;
  ::google::protobuf::uint64 dstcharid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_ApplyFriend* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_ApplyFriend : public ::google::protobuf::Message {
 public:
  DB2LOBBY_ApplyFriend();
  virtual ~DB2LOBBY_ApplyFriend();

  DB2LOBBY_ApplyFriend(const DB2LOBBY_ApplyFriend& from);

  inline DB2LOBBY_ApplyFriend& operator=(const DB2LOBBY_ApplyFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_ApplyFriend& default_instance();

  void Swap(DB2LOBBY_ApplyFriend* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_ApplyFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_ApplyFriend& from);
  void MergeFrom(const DB2LOBBY_ApplyFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_APPLY_FRIEND];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_ApplyFriend)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_ApplyFriend* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_AddFriend : public ::google::protobuf::Message {
 public:
  LOBBY2DB_AddFriend();
  virtual ~LOBBY2DB_AddFriend();

  LOBBY2DB_AddFriend(const LOBBY2DB_AddFriend& from);

  inline LOBBY2DB_AddFriend& operator=(const LOBBY2DB_AddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_AddFriend& default_instance();

  void Swap(LOBBY2DB_AddFriend* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_AddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_AddFriend& from);
  void MergeFrom(const LOBBY2DB_AddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_ADD_FRIEND];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 myCharId = 2;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMyCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mycharid() const;
  inline void set_mycharid(::google::protobuf::uint64 value);

  // required uint64 dstCharId = 3;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // optional .TgsProtocol.DBFriendInfo charInfo = 4;
  inline bool has_charinfo() const;
  inline void clear_charinfo();
  static const int kCharInfoFieldNumber = 4;
  inline const ::TgsProtocol::DBFriendInfo& charinfo() const;
  inline ::TgsProtocol::DBFriendInfo* mutable_charinfo();
  inline ::TgsProtocol::DBFriendInfo* release_charinfo();
  inline void set_allocated_charinfo(::TgsProtocol::DBFriendInfo* charinfo);

  // required bool bAgree = 5;
  inline bool has_bagree() const;
  inline void clear_bagree();
  static const int kBAgreeFieldNumber = 5;
  inline bool bagree() const;
  inline void set_bagree(bool value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_AddFriend)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();
  inline void set_has_charinfo();
  inline void clear_has_charinfo();
  inline void set_has_bagree();
  inline void clear_has_bagree();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 mycharid_;
  ::google::protobuf::uint64 dstcharid_;
  int cmdid_;
  bool bagree_;
  ::TgsProtocol::DBFriendInfo* charinfo_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_AddFriend* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_AddFriend : public ::google::protobuf::Message {
 public:
  DB2LOBBY_AddFriend();
  virtual ~DB2LOBBY_AddFriend();

  DB2LOBBY_AddFriend(const DB2LOBBY_AddFriend& from);

  inline DB2LOBBY_AddFriend& operator=(const DB2LOBBY_AddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_AddFriend& default_instance();

  void Swap(DB2LOBBY_AddFriend* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_AddFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_AddFriend& from);
  void MergeFrom(const DB2LOBBY_AddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_ADD_FRIEND];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 myCharId = 3;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMyCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 mycharid() const;
  inline void set_mycharid(::google::protobuf::uint64 value);

  // required uint64 dstCharId = 4;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 4;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // required bool bAgree = 5;
  inline bool has_bagree() const;
  inline void clear_bagree();
  static const int kBAgreeFieldNumber = 5;
  inline bool bagree() const;
  inline void set_bagree(bool value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_AddFriend)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();
  inline void set_has_bagree();
  inline void clear_has_bagree();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 mycharid_;
  ::google::protobuf::uint64 dstcharid_;
  bool bagree_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_AddFriend* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_DelFriend : public ::google::protobuf::Message {
 public:
  LOBBY2DB_DelFriend();
  virtual ~LOBBY2DB_DelFriend();

  LOBBY2DB_DelFriend(const LOBBY2DB_DelFriend& from);

  inline LOBBY2DB_DelFriend& operator=(const LOBBY2DB_DelFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_DelFriend& default_instance();

  void Swap(LOBBY2DB_DelFriend* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_DelFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_DelFriend& from);
  void MergeFrom(const LOBBY2DB_DelFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_DEL_FRIEND];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 myCharId = 2;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMyCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mycharid() const;
  inline void set_mycharid(::google::protobuf::uint64 value);

  // required uint64 dstCharId = 3;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_DelFriend)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 mycharid_;
  ::google::protobuf::uint64 dstcharid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_DelFriend* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_DelFriend : public ::google::protobuf::Message {
 public:
  DB2LOBBY_DelFriend();
  virtual ~DB2LOBBY_DelFriend();

  DB2LOBBY_DelFriend(const DB2LOBBY_DelFriend& from);

  inline DB2LOBBY_DelFriend& operator=(const DB2LOBBY_DelFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_DelFriend& default_instance();

  void Swap(DB2LOBBY_DelFriend* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_DelFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_DelFriend& from);
  void MergeFrom(const DB2LOBBY_DelFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_DEL_FRIEND];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 myCharId = 3;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMyCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 mycharid() const;
  inline void set_mycharid(::google::protobuf::uint64 value);

  // required uint64 dstCharId = 4;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 4;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_DelFriend)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 mycharid_;
  ::google::protobuf::uint64 dstcharid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_DelFriend* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_SendEnergy : public ::google::protobuf::Message {
 public:
  LOBBY2DB_SendEnergy();
  virtual ~LOBBY2DB_SendEnergy();

  LOBBY2DB_SendEnergy(const LOBBY2DB_SendEnergy& from);

  inline LOBBY2DB_SendEnergy& operator=(const LOBBY2DB_SendEnergy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_SendEnergy& default_instance();

  void Swap(LOBBY2DB_SendEnergy* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_SendEnergy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_SendEnergy& from);
  void MergeFrom(const LOBBY2DB_SendEnergy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SENDENERGY];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 dstCharId = 2;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // required uint64 myCharId = 3;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMyCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 mycharid() const;
  inline void set_mycharid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_SendEnergy)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();
  inline void set_has_mycharid();
  inline void clear_has_mycharid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 dstcharid_;
  ::google::protobuf::uint64 mycharid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_SendEnergy* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_PurchaseInfo : public ::google::protobuf::Message {
 public:
  LOBBY2DB_PurchaseInfo();
  virtual ~LOBBY2DB_PurchaseInfo();

  LOBBY2DB_PurchaseInfo(const LOBBY2DB_PurchaseInfo& from);

  inline LOBBY2DB_PurchaseInfo& operator=(const LOBBY2DB_PurchaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_PurchaseInfo& default_instance();

  void Swap(LOBBY2DB_PurchaseInfo* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_PurchaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_PurchaseInfo& from);
  void MergeFrom(const LOBBY2DB_PurchaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_PURCHASEINFO];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 myCharId = 2;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMyCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mycharid() const;
  inline void set_mycharid(::google::protobuf::uint64 value);

  // required uint32 goodsId = 3;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIdFieldNumber = 3;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);

  // required uint32 goodsQuantity = 4;
  inline bool has_goodsquantity() const;
  inline void clear_goodsquantity();
  static const int kGoodsQuantityFieldNumber = 4;
  inline ::google::protobuf::uint32 goodsquantity() const;
  inline void set_goodsquantity(::google::protobuf::uint32 value);

  // required uint32 value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // required uint32 diamondPaidUse = 6;
  inline bool has_diamondpaiduse() const;
  inline void clear_diamondpaiduse();
  static const int kDiamondPaidUseFieldNumber = 6;
  inline ::google::protobuf::uint32 diamondpaiduse() const;
  inline void set_diamondpaiduse(::google::protobuf::uint32 value);

  // required uint32 time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_PurchaseInfo)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_goodsquantity();
  inline void clear_has_goodsquantity();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_diamondpaiduse();
  inline void clear_has_diamondpaiduse();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 mycharid_;
  int cmdid_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 goodsquantity_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 diamondpaiduse_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_PurchaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_Shop : public ::google::protobuf::Message {
 public:
  DB2LOBBY_Shop();
  virtual ~DB2LOBBY_Shop();

  DB2LOBBY_Shop(const DB2LOBBY_Shop& from);

  inline DB2LOBBY_Shop& operator=(const DB2LOBBY_Shop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_Shop& default_instance();

  void Swap(DB2LOBBY_Shop* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_Shop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_Shop& from);
  void MergeFrom(const DB2LOBBY_Shop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SHOP];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.ShopInfo shopItem = 2;
  inline int shopitem_size() const;
  inline void clear_shopitem();
  static const int kShopItemFieldNumber = 2;
  inline const ::TgsProtocol::ShopInfo& shopitem(int index) const;
  inline ::TgsProtocol::ShopInfo* mutable_shopitem(int index);
  inline ::TgsProtocol::ShopInfo* add_shopitem();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ShopInfo >&
      shopitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ShopInfo >*
      mutable_shopitem();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_Shop)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ShopInfo > shopitem_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_Shop* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_GetTargetFriendInfo : public ::google::protobuf::Message {
 public:
  LOBBY2DB_GetTargetFriendInfo();
  virtual ~LOBBY2DB_GetTargetFriendInfo();

  LOBBY2DB_GetTargetFriendInfo(const LOBBY2DB_GetTargetFriendInfo& from);

  inline LOBBY2DB_GetTargetFriendInfo& operator=(const LOBBY2DB_GetTargetFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_GetTargetFriendInfo& default_instance();

  void Swap(LOBBY2DB_GetTargetFriendInfo* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_GetTargetFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_GetTargetFriendInfo& from);
  void MergeFrom(const LOBBY2DB_GetTargetFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_GET_TARGET_FRIENDINFO];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 myCharId = 2;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMyCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mycharid() const;
  inline void set_mycharid(::google::protobuf::uint64 value);

  // required uint64 dstCharId = 3;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_GetTargetFriendInfo)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 mycharid_;
  ::google::protobuf::uint64 dstcharid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_GetTargetFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_GetTargetFriendInfo : public ::google::protobuf::Message {
 public:
  DB2LOBBY_GetTargetFriendInfo();
  virtual ~DB2LOBBY_GetTargetFriendInfo();

  DB2LOBBY_GetTargetFriendInfo(const DB2LOBBY_GetTargetFriendInfo& from);

  inline DB2LOBBY_GetTargetFriendInfo& operator=(const DB2LOBBY_GetTargetFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_GetTargetFriendInfo& default_instance();

  void Swap(DB2LOBBY_GetTargetFriendInfo* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_GetTargetFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_GetTargetFriendInfo& from);
  void MergeFrom(const DB2LOBBY_GetTargetFriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GET_TARGET_FRIENDINFO_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required bool bfriend = 4;
  inline bool has_bfriend() const;
  inline void clear_bfriend();
  static const int kBfriendFieldNumber = 4;
  inline bool bfriend() const;
  inline void set_bfriend(bool value);

  // required bool black = 5;
  inline bool has_black() const;
  inline void clear_black();
  static const int kBlackFieldNumber = 5;
  inline bool black() const;
  inline void set_black(bool value);

  // required bool apply = 6;
  inline bool has_apply() const;
  inline void clear_apply();
  static const int kApplyFieldNumber = 6;
  inline bool apply() const;
  inline void set_apply(bool value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_GetTargetFriendInfo)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_bfriend();
  inline void clear_has_bfriend();
  inline void set_has_black();
  inline void clear_has_black();
  inline void set_has_apply();
  inline void clear_has_apply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  bool bfriend_;
  bool black_;
  bool apply_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_GetTargetFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DBGetTargetUserinfoReq : public ::google::protobuf::Message {
 public:
  LOBBY2DBGetTargetUserinfoReq();
  virtual ~LOBBY2DBGetTargetUserinfoReq();

  LOBBY2DBGetTargetUserinfoReq(const LOBBY2DBGetTargetUserinfoReq& from);

  inline LOBBY2DBGetTargetUserinfoReq& operator=(const LOBBY2DBGetTargetUserinfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DBGetTargetUserinfoReq& default_instance();

  void Swap(LOBBY2DBGetTargetUserinfoReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DBGetTargetUserinfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DBGetTargetUserinfoReq& from);
  void MergeFrom(const LOBBY2DBGetTargetUserinfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_GET_TARGET_USERINFO_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // required uint64 myCharId = 3;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMyCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 mycharid() const;
  inline void set_mycharid(::google::protobuf::uint64 value);

  // required uint64 dstCharId = 4;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 4;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DBGetTargetUserinfoReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint64 mycharid_;
  ::google::protobuf::uint64 dstcharid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DBGetTargetUserinfoReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBYGetTargetUserinfoRet : public ::google::protobuf::Message {
 public:
  DB2LOBBYGetTargetUserinfoRet();
  virtual ~DB2LOBBYGetTargetUserinfoRet();

  DB2LOBBYGetTargetUserinfoRet(const DB2LOBBYGetTargetUserinfoRet& from);

  inline DB2LOBBYGetTargetUserinfoRet& operator=(const DB2LOBBYGetTargetUserinfoRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBYGetTargetUserinfoRet& default_instance();

  void Swap(DB2LOBBYGetTargetUserinfoRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBYGetTargetUserinfoRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBYGetTargetUserinfoRet& from);
  void MergeFrom(const DB2LOBBYGetTargetUserinfoRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GET_TARGET_USERINFO_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 cmd = 3;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 3;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // required uint64 myCharId = 4;
  inline bool has_mycharid() const;
  inline void clear_mycharid();
  static const int kMyCharIdFieldNumber = 4;
  inline ::google::protobuf::uint64 mycharid() const;
  inline void set_mycharid(::google::protobuf::uint64 value);

  // required uint64 dstCharId = 5;
  inline bool has_dstcharid() const;
  inline void clear_dstcharid();
  static const int kDstCharIdFieldNumber = 5;
  inline ::google::protobuf::uint64 dstcharid() const;
  inline void set_dstcharid(::google::protobuf::uint64 value);

  // optional .TgsProtocol.OtherUserInfo other = 6;
  inline bool has_other() const;
  inline void clear_other();
  static const int kOtherFieldNumber = 6;
  inline const ::TgsProtocol::OtherUserInfo& other() const;
  inline ::TgsProtocol::OtherUserInfo* mutable_other();
  inline ::TgsProtocol::OtherUserInfo* release_other();
  inline void set_allocated_other(::TgsProtocol::OtherUserInfo* other);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBYGetTargetUserinfoRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_mycharid();
  inline void clear_has_mycharid();
  inline void set_has_dstcharid();
  inline void clear_has_dstcharid();
  inline void set_has_other();
  inline void clear_has_other();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 mycharid_;
  ::google::protobuf::uint64 dstcharid_;
  ::TgsProtocol::OtherUserInfo* other_;
  ::google::protobuf::uint32 cmd_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBYGetTargetUserinfoRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DBGetRecommandFriendReq : public ::google::protobuf::Message {
 public:
  LOBBY2DBGetRecommandFriendReq();
  virtual ~LOBBY2DBGetRecommandFriendReq();

  LOBBY2DBGetRecommandFriendReq(const LOBBY2DBGetRecommandFriendReq& from);

  inline LOBBY2DBGetRecommandFriendReq& operator=(const LOBBY2DBGetRecommandFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DBGetRecommandFriendReq& default_instance();

  void Swap(LOBBY2DBGetRecommandFriendReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DBGetRecommandFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DBGetRecommandFriendReq& from);
  void MergeFrom(const LOBBY2DBGetRecommandFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_GET_RECOMMAND_FRIEND_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint64 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint64 level() const;
  inline void set_level(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DBGetRecommandFriendReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 level_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DBGetRecommandFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBYGetRecommandFriendRet : public ::google::protobuf::Message {
 public:
  DB2LOBBYGetRecommandFriendRet();
  virtual ~DB2LOBBYGetRecommandFriendRet();

  DB2LOBBYGetRecommandFriendRet(const DB2LOBBYGetRecommandFriendRet& from);

  inline DB2LOBBYGetRecommandFriendRet& operator=(const DB2LOBBYGetRecommandFriendRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBYGetRecommandFriendRet& default_instance();

  void Swap(DB2LOBBYGetRecommandFriendRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBYGetRecommandFriendRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBYGetRecommandFriendRet& from);
  void MergeFrom(const DB2LOBBYGetRecommandFriendRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GET_RECOMMAND_FRIEND_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated .TgsProtocol.ClientFriendInfo recommandList = 3;
  inline int recommandlist_size() const;
  inline void clear_recommandlist();
  static const int kRecommandListFieldNumber = 3;
  inline const ::TgsProtocol::ClientFriendInfo& recommandlist(int index) const;
  inline ::TgsProtocol::ClientFriendInfo* mutable_recommandlist(int index);
  inline ::TgsProtocol::ClientFriendInfo* add_recommandlist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo >&
      recommandlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo >*
      mutable_recommandlist();

  // repeated .TgsProtocol.ClientFriendInfo recommandBigList = 4;
  inline int recommandbiglist_size() const;
  inline void clear_recommandbiglist();
  static const int kRecommandBigListFieldNumber = 4;
  inline const ::TgsProtocol::ClientFriendInfo& recommandbiglist(int index) const;
  inline ::TgsProtocol::ClientFriendInfo* mutable_recommandbiglist(int index);
  inline ::TgsProtocol::ClientFriendInfo* add_recommandbiglist();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo >&
      recommandbiglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo >*
      mutable_recommandbiglist();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBYGetRecommandFriendRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo > recommandlist_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo > recommandbiglist_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBYGetRecommandFriendRet* default_instance_;
};
// -------------------------------------------------------------------

class DbActivity : public ::google::protobuf::Message {
 public:
  DbActivity();
  virtual ~DbActivity();

  DbActivity(const DbActivity& from);

  inline DbActivity& operator=(const DbActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbActivity& default_instance();

  void Swap(DbActivity* other);

  // implements Message ----------------------------------------------

  DbActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbActivity& from);
  void MergeFrom(const DbActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 closed = 2;
  inline bool has_closed() const;
  inline void clear_closed();
  static const int kClosedFieldNumber = 2;
  inline ::google::protobuf::uint32 closed() const;
  inline void set_closed(::google::protobuf::uint32 value);

  // optional uint32 opentype = 3;
  inline bool has_opentype() const;
  inline void clear_opentype();
  static const int kOpentypeFieldNumber = 3;
  inline ::google::protobuf::uint32 opentype() const;
  inline void set_opentype(::google::protobuf::uint32 value);

  // optional uint32 actype = 4;
  inline bool has_actype() const;
  inline void clear_actype();
  static const int kActypeFieldNumber = 4;
  inline ::google::protobuf::uint32 actype() const;
  inline void set_actype(::google::protobuf::uint32 value);

  // optional uint32 showBeginTime = 5;
  inline bool has_showbegintime() const;
  inline void clear_showbegintime();
  static const int kShowBeginTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 showbegintime() const;
  inline void set_showbegintime(::google::protobuf::uint32 value);

  // optional uint32 showEndTime = 6;
  inline bool has_showendtime() const;
  inline void clear_showendtime();
  static const int kShowEndTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 showendtime() const;
  inline void set_showendtime(::google::protobuf::uint32 value);

  // optional uint32 beginTime = 7;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 begintime() const;
  inline void set_begintime(::google::protobuf::uint32 value);

  // optional uint32 endTime = 8;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 playerLev = 9;
  inline bool has_playerlev() const;
  inline void clear_playerlev();
  static const int kPlayerLevFieldNumber = 9;
  inline ::google::protobuf::uint32 playerlev() const;
  inline void set_playerlev(::google::protobuf::uint32 value);

  // optional bytes todayTimes = 10;
  inline bool has_todaytimes() const;
  inline void clear_todaytimes();
  static const int kTodayTimesFieldNumber = 10;
  inline const ::std::string& todaytimes() const;
  inline void set_todaytimes(const ::std::string& value);
  inline void set_todaytimes(const char* value);
  inline void set_todaytimes(const void* value, size_t size);
  inline ::std::string* mutable_todaytimes();
  inline ::std::string* release_todaytimes();
  inline void set_allocated_todaytimes(::std::string* todaytimes);

  // optional bytes values = 11;
  inline bool has_values() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 11;
  inline const ::std::string& values() const;
  inline void set_values(const ::std::string& value);
  inline void set_values(const char* value);
  inline void set_values(const void* value, size_t size);
  inline ::std::string* mutable_values();
  inline ::std::string* release_values();
  inline void set_allocated_values(::std::string* values);

  // optional bytes rewards = 12;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 12;
  inline const ::std::string& rewards() const;
  inline void set_rewards(const ::std::string& value);
  inline void set_rewards(const char* value);
  inline void set_rewards(const void* value, size_t size);
  inline ::std::string* mutable_rewards();
  inline ::std::string* release_rewards();
  inline void set_allocated_rewards(::std::string* rewards);

  // optional bytes name = 13;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 13;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bytes desc = 14;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 14;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const void* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional bytes childDesc = 15;
  inline bool has_childdesc() const;
  inline void clear_childdesc();
  static const int kChildDescFieldNumber = 15;
  inline const ::std::string& childdesc() const;
  inline void set_childdesc(const ::std::string& value);
  inline void set_childdesc(const char* value);
  inline void set_childdesc(const void* value, size_t size);
  inline ::std::string* mutable_childdesc();
  inline ::std::string* release_childdesc();
  inline void set_allocated_childdesc(::std::string* childdesc);

  // optional bytes values2 = 16;
  inline bool has_values2() const;
  inline void clear_values2();
  static const int kValues2FieldNumber = 16;
  inline const ::std::string& values2() const;
  inline void set_values2(const ::std::string& value);
  inline void set_values2(const char* value);
  inline void set_values2(const void* value, size_t size);
  inline ::std::string* mutable_values2();
  inline ::std::string* release_values2();
  inline void set_allocated_values2(::std::string* values2);

  // optional uint32 activetime = 17;
  inline bool has_activetime() const;
  inline void clear_activetime();
  static const int kActivetimeFieldNumber = 17;
  inline ::google::protobuf::uint32 activetime() const;
  inline void set_activetime(::google::protobuf::uint32 value);

  // optional uint32 countdown = 18;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 18;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbActivity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_closed();
  inline void clear_has_closed();
  inline void set_has_opentype();
  inline void clear_has_opentype();
  inline void set_has_actype();
  inline void clear_has_actype();
  inline void set_has_showbegintime();
  inline void clear_has_showbegintime();
  inline void set_has_showendtime();
  inline void clear_has_showendtime();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_playerlev();
  inline void clear_has_playerlev();
  inline void set_has_todaytimes();
  inline void clear_has_todaytimes();
  inline void set_has_values();
  inline void clear_has_values();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_childdesc();
  inline void clear_has_childdesc();
  inline void set_has_values2();
  inline void clear_has_values2();
  inline void set_has_activetime();
  inline void clear_has_activetime();
  inline void set_has_countdown();
  inline void clear_has_countdown();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 closed_;
  ::google::protobuf::uint32 opentype_;
  ::google::protobuf::uint32 actype_;
  ::google::protobuf::uint32 showbegintime_;
  ::google::protobuf::uint32 showendtime_;
  ::google::protobuf::uint32 begintime_;
  ::google::protobuf::uint32 endtime_;
  ::std::string* todaytimes_;
  ::std::string* values_;
  ::std::string* rewards_;
  ::std::string* name_;
  ::google::protobuf::uint32 playerlev_;
  ::google::protobuf::uint32 activetime_;
  ::std::string* desc_;
  ::std::string* childdesc_;
  ::std::string* values2_;
  ::google::protobuf::uint32 countdown_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DbActivity* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_LoadActivityReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_LoadActivityReq();
  virtual ~LOBBY2DB_LoadActivityReq();

  LOBBY2DB_LoadActivityReq(const LOBBY2DB_LoadActivityReq& from);

  inline LOBBY2DB_LoadActivityReq& operator=(const LOBBY2DB_LoadActivityReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_LoadActivityReq& default_instance();

  void Swap(LOBBY2DB_LoadActivityReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_LoadActivityReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_LoadActivityReq& from);
  void MergeFrom(const LOBBY2DB_LoadActivityReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADACTIVITYREQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_LoadActivityReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_LoadActivityReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_LoadActivityRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_LoadActivityRet();
  virtual ~DB2LOBBY_LoadActivityRet();

  DB2LOBBY_LoadActivityRet(const DB2LOBBY_LoadActivityRet& from);

  inline DB2LOBBY_LoadActivityRet& operator=(const DB2LOBBY_LoadActivityRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_LoadActivityRet& default_instance();

  void Swap(DB2LOBBY_LoadActivityRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_LoadActivityRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_LoadActivityRet& from);
  void MergeFrom(const DB2LOBBY_LoadActivityRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADACTIVITYRET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DbActivity items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::TgsProtocol::DbActivity& items(int index) const;
  inline ::TgsProtocol::DbActivity* mutable_items(int index);
  inline ::TgsProtocol::DbActivity* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_LoadActivityRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity > items_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_LoadActivityRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateActivityReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateActivityReq();
  virtual ~LOBBY2DB_UpdateActivityReq();

  LOBBY2DB_UpdateActivityReq(const LOBBY2DB_UpdateActivityReq& from);

  inline LOBBY2DB_UpdateActivityReq& operator=(const LOBBY2DB_UpdateActivityReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateActivityReq& default_instance();

  void Swap(LOBBY2DB_UpdateActivityReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateActivityReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateActivityReq& from);
  void MergeFrom(const LOBBY2DB_UpdateActivityReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEACTIVITYREQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.DbActivity item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::TgsProtocol::DbActivity& item(int index) const;
  inline ::TgsProtocol::DbActivity* mutable_item(int index);
  inline ::TgsProtocol::DbActivity* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateActivityReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity > item_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateActivityReq* default_instance_;
};
// -------------------------------------------------------------------

class DbRank : public ::google::protobuf::Message {
 public:
  DbRank();
  virtual ~DbRank();

  DbRank(const DbRank& from);

  inline DbRank& operator=(const DbRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbRank& default_instance();

  void Swap(DbRank* other);

  // implements Message ----------------------------------------------

  DbRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbRank& from);
  void MergeFrom(const DbRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint64 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // optional uint32 templateId = 5;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIdFieldNumber = 5;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);

  // optional uint64 instanceId = 6;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 6;
  inline ::google::protobuf::uint64 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint64 value);

  // optional uint32 instanceValue = 7;
  inline bool has_instancevalue() const;
  inline void clear_instancevalue();
  static const int kInstanceValueFieldNumber = 7;
  inline ::google::protobuf::uint32 instancevalue() const;
  inline void set_instancevalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbRank)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();
  inline void set_has_instancevalue();
  inline void clear_has_instancevalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint64 instanceid_;
  ::google::protobuf::uint32 instancevalue_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DbRank* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_LoadRankReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_LoadRankReq();
  virtual ~LOBBY2DB_LoadRankReq();

  LOBBY2DB_LoadRankReq(const LOBBY2DB_LoadRankReq& from);

  inline LOBBY2DB_LoadRankReq& operator=(const LOBBY2DB_LoadRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_LoadRankReq& default_instance();

  void Swap(LOBBY2DB_LoadRankReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_LoadRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_LoadRankReq& from);
  void MergeFrom(const LOBBY2DB_LoadRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADRANKREQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_LoadRankReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_LoadRankReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_LoadRankRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_LoadRankRet();
  virtual ~DB2LOBBY_LoadRankRet();

  DB2LOBBY_LoadRankRet(const DB2LOBBY_LoadRankRet& from);

  inline DB2LOBBY_LoadRankRet& operator=(const DB2LOBBY_LoadRankRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_LoadRankRet& default_instance();

  void Swap(DB2LOBBY_LoadRankRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_LoadRankRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_LoadRankRet& from);
  void MergeFrom(const DB2LOBBY_LoadRankRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADRANKRET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DbRank items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::TgsProtocol::DbRank& items(int index) const;
  inline ::TgsProtocol::DbRank* mutable_items(int index);
  inline ::TgsProtocol::DbRank* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank >*
      mutable_items();

  // optional int32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_LoadRankRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank > items_;
  int cmdid_;
  ::google::protobuf::int32 ret_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_LoadRankRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateRankReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateRankReq();
  virtual ~LOBBY2DB_UpdateRankReq();

  LOBBY2DB_UpdateRankReq(const LOBBY2DB_UpdateRankReq& from);

  inline LOBBY2DB_UpdateRankReq& operator=(const LOBBY2DB_UpdateRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateRankReq& default_instance();

  void Swap(LOBBY2DB_UpdateRankReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateRankReq& from);
  void MergeFrom(const LOBBY2DB_UpdateRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATERANKREQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DbRank item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::DbRank& item(int index) const;
  inline ::TgsProtocol::DbRank* mutable_item(int index);
  inline ::TgsProtocol::DbRank* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateRankReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank > item_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateRankReq* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_ClearRankReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_ClearRankReq();
  virtual ~LOBBY2DB_ClearRankReq();

  LOBBY2DB_ClearRankReq(const LOBBY2DB_ClearRankReq& from);

  inline LOBBY2DB_ClearRankReq& operator=(const LOBBY2DB_ClearRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_ClearRankReq& default_instance();

  void Swap(LOBBY2DB_ClearRankReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_ClearRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_ClearRankReq& from);
  void MergeFrom(const LOBBY2DB_ClearRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CLEARRANKREQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_ClearRankReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_ClearRankReq* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_ClearPlayerRank_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_ClearPlayerRank_Req();
  virtual ~LOBBY2DB_ClearPlayerRank_Req();

  LOBBY2DB_ClearPlayerRank_Req(const LOBBY2DB_ClearPlayerRank_Req& from);

  inline LOBBY2DB_ClearPlayerRank_Req& operator=(const LOBBY2DB_ClearPlayerRank_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_ClearPlayerRank_Req& default_instance();

  void Swap(LOBBY2DB_ClearPlayerRank_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_ClearPlayerRank_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_ClearPlayerRank_Req& from);
  void MergeFrom(const LOBBY2DB_ClearPlayerRank_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CLEARPLAYERRANK_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_ClearPlayerRank_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_ClearPlayerRank_Req* default_instance_;
};
// -------------------------------------------------------------------

class DbArena : public ::google::protobuf::Message {
 public:
  DbArena();
  virtual ~DbArena();

  DbArena(const DbArena& from);

  inline DbArena& operator=(const DbArena& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbArena& default_instance();

  void Swap(DbArena* other);

  // implements Message ----------------------------------------------

  DbArena* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbArena& from);
  void MergeFrom(const DbArena& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 bestrank = 3;
  inline bool has_bestrank() const;
  inline void clear_bestrank();
  static const int kBestrankFieldNumber = 3;
  inline ::google::protobuf::uint32 bestrank() const;
  inline void set_bestrank(::google::protobuf::uint32 value);

  // required uint32 top3time = 4;
  inline bool has_top3time() const;
  inline void clear_top3time();
  static const int kTop3TimeFieldNumber = 4;
  inline ::google::protobuf::uint32 top3time() const;
  inline void set_top3time(::google::protobuf::uint32 value);

  // required uint64 winnum = 5;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinnumFieldNumber = 5;
  inline ::google::protobuf::uint64 winnum() const;
  inline void set_winnum(::google::protobuf::uint64 value);

  // required string enemysrank = 6;
  inline bool has_enemysrank() const;
  inline void clear_enemysrank();
  static const int kEnemysrankFieldNumber = 6;
  inline const ::std::string& enemysrank() const;
  inline void set_enemysrank(const ::std::string& value);
  inline void set_enemysrank(const char* value);
  inline void set_enemysrank(const char* value, size_t size);
  inline ::std::string* mutable_enemysrank();
  inline ::std::string* release_enemysrank();
  inline void set_allocated_enemysrank(::std::string* enemysrank);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DbArena)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_bestrank();
  inline void clear_has_bestrank();
  inline void set_has_top3time();
  inline void clear_has_top3time();
  inline void set_has_winnum();
  inline void clear_has_winnum();
  inline void set_has_enemysrank();
  inline void clear_has_enemysrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 bestrank_;
  ::google::protobuf::uint64 winnum_;
  ::std::string* enemysrank_;
  ::google::protobuf::uint32 top3time_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DbArena* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_LoadArenaReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_LoadArenaReq();
  virtual ~LOBBY2DB_LoadArenaReq();

  LOBBY2DB_LoadArenaReq(const LOBBY2DB_LoadArenaReq& from);

  inline LOBBY2DB_LoadArenaReq& operator=(const LOBBY2DB_LoadArenaReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_LoadArenaReq& default_instance();

  void Swap(LOBBY2DB_LoadArenaReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_LoadArenaReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_LoadArenaReq& from);
  void MergeFrom(const LOBBY2DB_LoadArenaReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADARENAREQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_LoadArenaReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_LoadArenaReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_LoadArenaRet : public ::google::protobuf::Message {
 public:
  DB2LOBBY_LoadArenaRet();
  virtual ~DB2LOBBY_LoadArenaRet();

  DB2LOBBY_LoadArenaRet(const DB2LOBBY_LoadArenaRet& from);

  inline DB2LOBBY_LoadArenaRet& operator=(const DB2LOBBY_LoadArenaRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_LoadArenaRet& default_instance();

  void Swap(DB2LOBBY_LoadArenaRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_LoadArenaRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_LoadArenaRet& from);
  void MergeFrom(const DB2LOBBY_LoadArenaRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADARENARET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DbArena items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::TgsProtocol::DbArena& items(int index) const;
  inline ::TgsProtocol::DbArena* mutable_items(int index);
  inline ::TgsProtocol::DbArena* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena >*
      mutable_items();

  // optional int32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_LoadArenaRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena > items_;
  int cmdid_;
  ::google::protobuf::int32 ret_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_LoadArenaRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateArenaReq : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateArenaReq();
  virtual ~LOBBY2DB_UpdateArenaReq();

  LOBBY2DB_UpdateArenaReq(const LOBBY2DB_UpdateArenaReq& from);

  inline LOBBY2DB_UpdateArenaReq& operator=(const LOBBY2DB_UpdateArenaReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateArenaReq& default_instance();

  void Swap(LOBBY2DB_UpdateArenaReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateArenaReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateArenaReq& from);
  void MergeFrom(const LOBBY2DB_UpdateArenaReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEARENAREQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DbArena item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::DbArena& item(int index) const;
  inline ::TgsProtocol::DbArena* mutable_item(int index);
  inline ::TgsProtocol::DbArena* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateArenaReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena > item_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateArenaReq* default_instance_;
};
// -------------------------------------------------------------------

class DBServerCompare : public ::google::protobuf::Message {
 public:
  DBServerCompare();
  virtual ~DBServerCompare();

  DBServerCompare(const DBServerCompare& from);

  inline DBServerCompare& operator=(const DBServerCompare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBServerCompare& default_instance();

  void Swap(DBServerCompare* other);

  // implements Message ----------------------------------------------

  DBServerCompare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBServerCompare& from);
  void MergeFrom(const DBServerCompare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required .TgsProtocol.ServerCompareType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::TgsProtocol::ServerCompareType type() const;
  inline void set_type(::TgsProtocol::ServerCompareType value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint64 value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBServerCompare)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rank_;
  int type_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 value_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DBServerCompare* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_LoadServerCompare_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_LoadServerCompare_Req();
  virtual ~LOBBY2DB_LoadServerCompare_Req();

  LOBBY2DB_LoadServerCompare_Req(const LOBBY2DB_LoadServerCompare_Req& from);

  inline LOBBY2DB_LoadServerCompare_Req& operator=(const LOBBY2DB_LoadServerCompare_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_LoadServerCompare_Req& default_instance();

  void Swap(LOBBY2DB_LoadServerCompare_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_LoadServerCompare_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_LoadServerCompare_Req& from);
  void MergeFrom(const LOBBY2DB_LoadServerCompare_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADSERVERCOMPARE_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_LoadServerCompare_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_LoadServerCompare_Req* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_LoadServerCompare_Ret : public ::google::protobuf::Message {
 public:
  DB2LOBBY_LoadServerCompare_Ret();
  virtual ~DB2LOBBY_LoadServerCompare_Ret();

  DB2LOBBY_LoadServerCompare_Ret(const DB2LOBBY_LoadServerCompare_Ret& from);

  inline DB2LOBBY_LoadServerCompare_Ret& operator=(const DB2LOBBY_LoadServerCompare_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_LoadServerCompare_Ret& default_instance();

  void Swap(DB2LOBBY_LoadServerCompare_Ret* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_LoadServerCompare_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_LoadServerCompare_Ret& from);
  void MergeFrom(const DB2LOBBY_LoadServerCompare_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADSERVERCOMPARE_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // repeated .TgsProtocol.DBServerCompare compare_info = 3;
  inline int compare_info_size() const;
  inline void clear_compare_info();
  static const int kCompareInfoFieldNumber = 3;
  inline const ::TgsProtocol::DBServerCompare& compare_info(int index) const;
  inline ::TgsProtocol::DBServerCompare* mutable_compare_info(int index);
  inline ::TgsProtocol::DBServerCompare* add_compare_info();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare >&
      compare_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare >*
      mutable_compare_info();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare > compare_info_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_LoadServerCompare_Ret* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateServerCompare_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateServerCompare_Req();
  virtual ~LOBBY2DB_UpdateServerCompare_Req();

  LOBBY2DB_UpdateServerCompare_Req(const LOBBY2DB_UpdateServerCompare_Req& from);

  inline LOBBY2DB_UpdateServerCompare_Req& operator=(const LOBBY2DB_UpdateServerCompare_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateServerCompare_Req& default_instance();

  void Swap(LOBBY2DB_UpdateServerCompare_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateServerCompare_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateServerCompare_Req& from);
  void MergeFrom(const LOBBY2DB_UpdateServerCompare_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATESERVERCOMPARE_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DBServerCompare compare_info = 2;
  inline int compare_info_size() const;
  inline void clear_compare_info();
  static const int kCompareInfoFieldNumber = 2;
  inline const ::TgsProtocol::DBServerCompare& compare_info(int index) const;
  inline ::TgsProtocol::DBServerCompare* mutable_compare_info(int index);
  inline ::TgsProtocol::DBServerCompare* add_compare_info();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare >&
      compare_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare >*
      mutable_compare_info();

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateServerCompare_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare > compare_info_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateServerCompare_Req* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_ClearServerCompare_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_ClearServerCompare_Req();
  virtual ~LOBBY2DB_ClearServerCompare_Req();

  LOBBY2DB_ClearServerCompare_Req(const LOBBY2DB_ClearServerCompare_Req& from);

  inline LOBBY2DB_ClearServerCompare_Req& operator=(const LOBBY2DB_ClearServerCompare_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_ClearServerCompare_Req& default_instance();

  void Swap(LOBBY2DB_ClearServerCompare_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_ClearServerCompare_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_ClearServerCompare_Req& from);
  void MergeFrom(const LOBBY2DB_ClearServerCompare_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CLEARSERVERCOMPARE_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required .TgsProtocol.ServerCompareType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::TgsProtocol::ServerCompareType type() const;
  inline void set_type(::TgsProtocol::ServerCompareType value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_ClearServerCompare_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  int type_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_ClearServerCompare_Req* default_instance_;
};
// -------------------------------------------------------------------

class DBGuildPlayer : public ::google::protobuf::Message {
 public:
  DBGuildPlayer();
  virtual ~DBGuildPlayer();

  DBGuildPlayer(const DBGuildPlayer& from);

  inline DBGuildPlayer& operator=(const DBGuildPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBGuildPlayer& default_instance();

  void Swap(DBGuildPlayer* other);

  // implements Message ----------------------------------------------

  DBGuildPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBGuildPlayer& from);
  void MergeFrom(const DBGuildPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 guildid = 2;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint32 guildid() const;
  inline void set_guildid(::google::protobuf::uint32 value);

  // required uint32 job = 3;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 3;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);

  // required uint32 jointime = 4;
  inline bool has_jointime() const;
  inline void clear_jointime();
  static const int kJointimeFieldNumber = 4;
  inline ::google::protobuf::uint32 jointime() const;
  inline void set_jointime(::google::protobuf::uint32 value);

  // optional uint32 ritual = 5;
  inline bool has_ritual() const;
  inline void clear_ritual();
  static const int kRitualFieldNumber = 5;
  inline ::google::protobuf::uint32 ritual() const;
  inline void set_ritual(::google::protobuf::uint32 value);

  // optional uint32 days = 6;
  inline bool has_days() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 6;
  inline ::google::protobuf::uint32 days() const;
  inline void set_days(::google::protobuf::uint32 value);

  // optional uint32 rewardgot = 7;
  inline bool has_rewardgot() const;
  inline void clear_rewardgot();
  static const int kRewardgotFieldNumber = 7;
  inline ::google::protobuf::uint32 rewardgot() const;
  inline void set_rewardgot(::google::protobuf::uint32 value);

  // optional uint32 ritualtime = 8;
  inline bool has_ritualtime() const;
  inline void clear_ritualtime();
  static const int kRitualtimeFieldNumber = 8;
  inline ::google::protobuf::uint32 ritualtime() const;
  inline void set_ritualtime(::google::protobuf::uint32 value);

  // optional uint32 ratereward = 9;
  inline bool has_ratereward() const;
  inline void clear_ratereward();
  static const int kRaterewardFieldNumber = 9;
  inline ::google::protobuf::uint32 ratereward() const;
  inline void set_ratereward(::google::protobuf::uint32 value);

  // optional bytes territory = 10;
  inline bool has_territory() const;
  inline void clear_territory();
  static const int kTerritoryFieldNumber = 10;
  inline const ::std::string& territory() const;
  inline void set_territory(const ::std::string& value);
  inline void set_territory(const char* value);
  inline void set_territory(const void* value, size_t size);
  inline ::std::string* mutable_territory();
  inline ::std::string* release_territory();
  inline void set_allocated_territory(::std::string* territory);

  // optional string skill_level = 11;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 11;
  inline const ::std::string& skill_level() const;
  inline void set_skill_level(const ::std::string& value);
  inline void set_skill_level(const char* value);
  inline void set_skill_level(const char* value, size_t size);
  inline ::std::string* mutable_skill_level();
  inline ::std::string* release_skill_level();
  inline void set_allocated_skill_level(::std::string* skill_level);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBGuildPlayer)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_jointime();
  inline void clear_has_jointime();
  inline void set_has_ritual();
  inline void clear_has_ritual();
  inline void set_has_days();
  inline void clear_has_days();
  inline void set_has_rewardgot();
  inline void clear_has_rewardgot();
  inline void set_has_ritualtime();
  inline void clear_has_ritualtime();
  inline void set_has_ratereward();
  inline void clear_has_ratereward();
  inline void set_has_territory();
  inline void clear_has_territory();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 guildid_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 jointime_;
  ::google::protobuf::uint32 ritual_;
  ::google::protobuf::uint32 days_;
  ::google::protobuf::uint32 rewardgot_;
  ::google::protobuf::uint32 ritualtime_;
  ::google::protobuf::uint32 ratereward_;
  ::std::string* territory_;
  ::std::string* skill_level_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DBGuildPlayer* default_instance_;
};
// -------------------------------------------------------------------

class DBGuildApply : public ::google::protobuf::Message {
 public:
  DBGuildApply();
  virtual ~DBGuildApply();

  DBGuildApply(const DBGuildApply& from);

  inline DBGuildApply& operator=(const DBGuildApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBGuildApply& default_instance();

  void Swap(DBGuildApply* other);

  // implements Message ----------------------------------------------

  DBGuildApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBGuildApply& from);
  void MergeFrom(const DBGuildApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // repeated uint32 guildid = 2;
  inline int guildid_size() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint32 guildid(int index) const;
  inline void set_guildid(int index, ::google::protobuf::uint32 value);
  inline void add_guildid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      guildid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_guildid();

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBGuildApply)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > guildid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DBGuildApply* default_instance_;
};
// -------------------------------------------------------------------

class DBGuildInfo : public ::google::protobuf::Message {
 public:
  DBGuildInfo();
  virtual ~DBGuildInfo();

  DBGuildInfo(const DBGuildInfo& from);

  inline DBGuildInfo& operator=(const DBGuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBGuildInfo& default_instance();

  void Swap(DBGuildInfo* other);

  // implements Message ----------------------------------------------

  DBGuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBGuildInfo& from);
  void MergeFrom(const DBGuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TgsProtocol.GuildInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::TgsProtocol::GuildInfo& info() const;
  inline ::TgsProtocol::GuildInfo* mutable_info();
  inline ::TgsProtocol::GuildInfo* release_info();
  inline void set_allocated_info(::TgsProtocol::GuildInfo* info);

  // optional bytes guild_map = 2;
  inline bool has_guild_map() const;
  inline void clear_guild_map();
  static const int kGuildMapFieldNumber = 2;
  inline const ::std::string& guild_map() const;
  inline void set_guild_map(const ::std::string& value);
  inline void set_guild_map(const char* value);
  inline void set_guild_map(const void* value, size_t size);
  inline ::std::string* mutable_guild_map();
  inline ::std::string* release_guild_map();
  inline void set_allocated_guild_map(::std::string* guild_map);

  // optional uint32 passed_chapterid = 3;
  inline bool has_passed_chapterid() const;
  inline void clear_passed_chapterid();
  static const int kPassedChapteridFieldNumber = 3;
  inline ::google::protobuf::uint32 passed_chapterid() const;
  inline void set_passed_chapterid(::google::protobuf::uint32 value);

  // optional .TgsProtocol.GuildChapterInfo chapter = 4;
  inline bool has_chapter() const;
  inline void clear_chapter();
  static const int kChapterFieldNumber = 4;
  inline const ::TgsProtocol::GuildChapterInfo& chapter() const;
  inline ::TgsProtocol::GuildChapterInfo* mutable_chapter();
  inline ::TgsProtocol::GuildChapterInfo* release_chapter();
  inline void set_allocated_chapter(::TgsProtocol::GuildChapterInfo* chapter);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DBGuildInfo)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_guild_map();
  inline void clear_has_guild_map();
  inline void set_has_passed_chapterid();
  inline void clear_has_passed_chapterid();
  inline void set_has_chapter();
  inline void clear_has_chapter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TgsProtocol::GuildInfo* info_;
  ::std::string* guild_map_;
  ::TgsProtocol::GuildChapterInfo* chapter_;
  ::google::protobuf::uint32 passed_chapterid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DBGuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_LoadGuild_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_LoadGuild_Req();
  virtual ~LOBBY2DB_LoadGuild_Req();

  LOBBY2DB_LoadGuild_Req(const LOBBY2DB_LoadGuild_Req& from);

  inline LOBBY2DB_LoadGuild_Req& operator=(const LOBBY2DB_LoadGuild_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_LoadGuild_Req& default_instance();

  void Swap(LOBBY2DB_LoadGuild_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_LoadGuild_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_LoadGuild_Req& from);
  void MergeFrom(const LOBBY2DB_LoadGuild_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADGUILD_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_LoadGuild_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_LoadGuild_Req* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_GuildInfo_Ret : public ::google::protobuf::Message {
 public:
  DB2LOBBY_GuildInfo_Ret();
  virtual ~DB2LOBBY_GuildInfo_Ret();

  DB2LOBBY_GuildInfo_Ret(const DB2LOBBY_GuildInfo_Ret& from);

  inline DB2LOBBY_GuildInfo_Ret& operator=(const DB2LOBBY_GuildInfo_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_GuildInfo_Ret& default_instance();

  void Swap(DB2LOBBY_GuildInfo_Ret* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_GuildInfo_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_GuildInfo_Ret& from);
  void MergeFrom(const DB2LOBBY_GuildInfo_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GUILDINFO_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DBGuildInfo item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::DBGuildInfo& item(int index) const;
  inline ::TgsProtocol::DBGuildInfo* mutable_item(int index);
  inline ::TgsProtocol::DBGuildInfo* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildInfo >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildInfo >*
      mutable_item();

  // optional int32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_GuildInfo_Ret)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildInfo > item_;
  int cmdid_;
  ::google::protobuf::int32 ret_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_GuildInfo_Ret* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_GuildPlayers_Ret : public ::google::protobuf::Message {
 public:
  DB2LOBBY_GuildPlayers_Ret();
  virtual ~DB2LOBBY_GuildPlayers_Ret();

  DB2LOBBY_GuildPlayers_Ret(const DB2LOBBY_GuildPlayers_Ret& from);

  inline DB2LOBBY_GuildPlayers_Ret& operator=(const DB2LOBBY_GuildPlayers_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_GuildPlayers_Ret& default_instance();

  void Swap(DB2LOBBY_GuildPlayers_Ret* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_GuildPlayers_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_GuildPlayers_Ret& from);
  void MergeFrom(const DB2LOBBY_GuildPlayers_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GUILDPlAYERS_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DBGuildPlayer item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::DBGuildPlayer& item(int index) const;
  inline ::TgsProtocol::DBGuildPlayer* mutable_item(int index);
  inline ::TgsProtocol::DBGuildPlayer* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer >*
      mutable_item();

  // optional int32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_GuildPlayers_Ret)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer > item_;
  int cmdid_;
  ::google::protobuf::int32 ret_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_GuildPlayers_Ret* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBY_GuildApplys_Ret : public ::google::protobuf::Message {
 public:
  DB2LOBBY_GuildApplys_Ret();
  virtual ~DB2LOBBY_GuildApplys_Ret();

  DB2LOBBY_GuildApplys_Ret(const DB2LOBBY_GuildApplys_Ret& from);

  inline DB2LOBBY_GuildApplys_Ret& operator=(const DB2LOBBY_GuildApplys_Ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBY_GuildApplys_Ret& default_instance();

  void Swap(DB2LOBBY_GuildApplys_Ret* other);

  // implements Message ----------------------------------------------

  DB2LOBBY_GuildApplys_Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBY_GuildApplys_Ret& from);
  void MergeFrom(const DB2LOBBY_GuildApplys_Ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GUILDAPPLYS_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DBGuildApply item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::DBGuildApply& item(int index) const;
  inline ::TgsProtocol::DBGuildApply* mutable_item(int index);
  inline ::TgsProtocol::DBGuildApply* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply >*
      mutable_item();

  // optional int32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBY_GuildApplys_Ret)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply > item_;
  int cmdid_;
  ::google::protobuf::int32 ret_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBY_GuildApplys_Ret* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateGuildInfo_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateGuildInfo_Req();
  virtual ~LOBBY2DB_UpdateGuildInfo_Req();

  LOBBY2DB_UpdateGuildInfo_Req(const LOBBY2DB_UpdateGuildInfo_Req& from);

  inline LOBBY2DB_UpdateGuildInfo_Req& operator=(const LOBBY2DB_UpdateGuildInfo_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateGuildInfo_Req& default_instance();

  void Swap(LOBBY2DB_UpdateGuildInfo_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateGuildInfo_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateGuildInfo_Req& from);
  void MergeFrom(const LOBBY2DB_UpdateGuildInfo_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDINFO_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 guild_id = 3;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 3;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional .TgsProtocol.GuildInfo item = 4;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline const ::TgsProtocol::GuildInfo& item() const;
  inline ::TgsProtocol::GuildInfo* mutable_item();
  inline ::TgsProtocol::GuildInfo* release_item();
  inline void set_allocated_item(::TgsProtocol::GuildInfo* item);

  // optional bytes guild_map = 5;
  inline bool has_guild_map() const;
  inline void clear_guild_map();
  static const int kGuildMapFieldNumber = 5;
  inline const ::std::string& guild_map() const;
  inline void set_guild_map(const ::std::string& value);
  inline void set_guild_map(const char* value);
  inline void set_guild_map(const void* value, size_t size);
  inline ::std::string* mutable_guild_map();
  inline ::std::string* release_guild_map();
  inline void set_allocated_guild_map(::std::string* guild_map);

  // optional uint32 passed_chapterid = 6;
  inline bool has_passed_chapterid() const;
  inline void clear_passed_chapterid();
  static const int kPassedChapteridFieldNumber = 6;
  inline ::google::protobuf::uint32 passed_chapterid() const;
  inline void set_passed_chapterid(::google::protobuf::uint32 value);

  // optional .TgsProtocol.GuildChapterInfo chapter = 7;
  inline bool has_chapter() const;
  inline void clear_chapter();
  static const int kChapterFieldNumber = 7;
  inline const ::TgsProtocol::GuildChapterInfo& chapter() const;
  inline ::TgsProtocol::GuildChapterInfo* mutable_chapter();
  inline ::TgsProtocol::GuildChapterInfo* release_chapter();
  inline void set_allocated_chapter(::TgsProtocol::GuildChapterInfo* chapter);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_guild_map();
  inline void clear_has_guild_map();
  inline void set_has_passed_chapterid();
  inline void clear_has_passed_chapterid();
  inline void set_has_chapter();
  inline void clear_has_chapter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 type_;
  ::TgsProtocol::GuildInfo* item_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 passed_chapterid_;
  ::std::string* guild_map_;
  ::TgsProtocol::GuildChapterInfo* chapter_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateGuildInfo_Req* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateGuildPlayer_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateGuildPlayer_Req();
  virtual ~LOBBY2DB_UpdateGuildPlayer_Req();

  LOBBY2DB_UpdateGuildPlayer_Req(const LOBBY2DB_UpdateGuildPlayer_Req& from);

  inline LOBBY2DB_UpdateGuildPlayer_Req& operator=(const LOBBY2DB_UpdateGuildPlayer_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateGuildPlayer_Req& default_instance();

  void Swap(LOBBY2DB_UpdateGuildPlayer_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateGuildPlayer_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateGuildPlayer_Req& from);
  void MergeFrom(const LOBBY2DB_UpdateGuildPlayer_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDPLAYER_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DBGuildPlayer item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::DBGuildPlayer& item(int index) const;
  inline ::TgsProtocol::DBGuildPlayer* mutable_item(int index);
  inline ::TgsProtocol::DBGuildPlayer* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer >*
      mutable_item();

  // optional bytes territory = 3;
  inline bool has_territory() const;
  inline void clear_territory();
  static const int kTerritoryFieldNumber = 3;
  inline const ::std::string& territory() const;
  inline void set_territory(const ::std::string& value);
  inline void set_territory(const char* value);
  inline void set_territory(const void* value, size_t size);
  inline ::std::string* mutable_territory();
  inline ::std::string* release_territory();
  inline void set_allocated_territory(::std::string* territory);

  // optional uint64 territory_charid = 4;
  inline bool has_territory_charid() const;
  inline void clear_territory_charid();
  static const int kTerritoryCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 territory_charid() const;
  inline void set_territory_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_territory();
  inline void clear_has_territory();
  inline void set_has_territory_charid();
  inline void clear_has_territory_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer > item_;
  ::std::string* territory_;
  ::google::protobuf::uint64 territory_charid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateGuildPlayer_Req* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateGuildApply_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateGuildApply_Req();
  virtual ~LOBBY2DB_UpdateGuildApply_Req();

  LOBBY2DB_UpdateGuildApply_Req(const LOBBY2DB_UpdateGuildApply_Req& from);

  inline LOBBY2DB_UpdateGuildApply_Req& operator=(const LOBBY2DB_UpdateGuildApply_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateGuildApply_Req& default_instance();

  void Swap(LOBBY2DB_UpdateGuildApply_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateGuildApply_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateGuildApply_Req& from);
  void MergeFrom(const LOBBY2DB_UpdateGuildApply_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDAPPLY_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DBGuildApply item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::TgsProtocol::DBGuildApply& item(int index) const;
  inline ::TgsProtocol::DBGuildApply* mutable_item(int index);
  inline ::TgsProtocol::DBGuildApply* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateGuildApply_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply > item_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateGuildApply_Req* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateGuildRitual_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateGuildRitual_Req();
  virtual ~LOBBY2DB_UpdateGuildRitual_Req();

  LOBBY2DB_UpdateGuildRitual_Req(const LOBBY2DB_UpdateGuildRitual_Req& from);

  inline LOBBY2DB_UpdateGuildRitual_Req& operator=(const LOBBY2DB_UpdateGuildRitual_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateGuildRitual_Req& default_instance();

  void Swap(LOBBY2DB_UpdateGuildRitual_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateGuildRitual_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateGuildRitual_Req& from);
  void MergeFrom(const LOBBY2DB_UpdateGuildRitual_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDRITUAL_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 guildid = 2;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  inline ::google::protobuf::uint32 guildid() const;
  inline void set_guildid(::google::protobuf::uint32 value);

  // required uint32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateGuildRitual_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 guildid_;
  ::google::protobuf::uint32 rate_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateGuildRitual_Req* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DB_UpdateGuildNewDay_Req : public ::google::protobuf::Message {
 public:
  LOBBY2DB_UpdateGuildNewDay_Req();
  virtual ~LOBBY2DB_UpdateGuildNewDay_Req();

  LOBBY2DB_UpdateGuildNewDay_Req(const LOBBY2DB_UpdateGuildNewDay_Req& from);

  inline LOBBY2DB_UpdateGuildNewDay_Req& operator=(const LOBBY2DB_UpdateGuildNewDay_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DB_UpdateGuildNewDay_Req& default_instance();

  void Swap(LOBBY2DB_UpdateGuildNewDay_Req* other);

  // implements Message ----------------------------------------------

  LOBBY2DB_UpdateGuildNewDay_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DB_UpdateGuildNewDay_Req& from);
  void MergeFrom(const LOBBY2DB_UpdateGuildNewDay_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDNEWDAY_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DB_UpdateGuildNewDay_Req)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DB_UpdateGuildNewDay_Req* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DBLoadTreasureReq : public ::google::protobuf::Message {
 public:
  LOBBY2DBLoadTreasureReq();
  virtual ~LOBBY2DBLoadTreasureReq();

  LOBBY2DBLoadTreasureReq(const LOBBY2DBLoadTreasureReq& from);

  inline LOBBY2DBLoadTreasureReq& operator=(const LOBBY2DBLoadTreasureReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DBLoadTreasureReq& default_instance();

  void Swap(LOBBY2DBLoadTreasureReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DBLoadTreasureReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DBLoadTreasureReq& from);
  void MergeFrom(const LOBBY2DBLoadTreasureReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_TREASURE_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DBLoadTreasureReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DBLoadTreasureReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBYLoadTreasureRet : public ::google::protobuf::Message {
 public:
  DB2LOBBYLoadTreasureRet();
  virtual ~DB2LOBBYLoadTreasureRet();

  DB2LOBBYLoadTreasureRet(const DB2LOBBYLoadTreasureRet& from);

  inline DB2LOBBYLoadTreasureRet& operator=(const DB2LOBBYLoadTreasureRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBYLoadTreasureRet& default_instance();

  void Swap(DB2LOBBYLoadTreasureRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBYLoadTreasureRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBYLoadTreasureRet& from);
  void MergeFrom(const DB2LOBBYLoadTreasureRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_TREASURE_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // repeated .TgsProtocol.DbTreasureInfo player = 2;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline const ::TgsProtocol::DbTreasureInfo& player(int index) const;
  inline ::TgsProtocol::DbTreasureInfo* mutable_player(int index);
  inline ::TgsProtocol::DbTreasureInfo* add_player();
  inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbTreasureInfo >&
      player() const;
  inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbTreasureInfo >*
      mutable_player();

  // optional uint32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBYLoadTreasureRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbTreasureInfo > player_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBYLoadTreasureRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DBLoadRobotReq : public ::google::protobuf::Message {
 public:
  LOBBY2DBLoadRobotReq();
  virtual ~LOBBY2DBLoadRobotReq();

  LOBBY2DBLoadRobotReq(const LOBBY2DBLoadRobotReq& from);

  inline LOBBY2DBLoadRobotReq& operator=(const LOBBY2DBLoadRobotReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DBLoadRobotReq& default_instance();

  void Swap(LOBBY2DBLoadRobotReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DBLoadRobotReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DBLoadRobotReq& from);
  void MergeFrom(const LOBBY2DBLoadRobotReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_ROBOT_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 CharId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DBLoadRobotReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DBLoadRobotReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBYLoadRobotRet : public ::google::protobuf::Message {
 public:
  DB2LOBBYLoadRobotRet();
  virtual ~DB2LOBBYLoadRobotRet();

  DB2LOBBYLoadRobotRet(const DB2LOBBYLoadRobotRet& from);

  inline DB2LOBBYLoadRobotRet& operator=(const DB2LOBBYLoadRobotRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBYLoadRobotRet& default_instance();

  void Swap(DB2LOBBYLoadRobotRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBYLoadRobotRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBYLoadRobotRet& from);
  void MergeFrom(const DB2LOBBYLoadRobotRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_ROBOT_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required .TgsProtocol.DB2LOBBY_LoadCharRet charInfo = 4;
  inline bool has_charinfo() const;
  inline void clear_charinfo();
  static const int kCharInfoFieldNumber = 4;
  inline const ::TgsProtocol::DB2LOBBY_LoadCharRet& charinfo() const;
  inline ::TgsProtocol::DB2LOBBY_LoadCharRet* mutable_charinfo();
  inline ::TgsProtocol::DB2LOBBY_LoadCharRet* release_charinfo();
  inline void set_allocated_charinfo(::TgsProtocol::DB2LOBBY_LoadCharRet* charinfo);

  // required uint32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint64 ownerId = 6;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwnerIdFieldNumber = 6;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // required uint32 growupIndex = 7;
  inline bool has_growupindex() const;
  inline void clear_growupindex();
  static const int kGrowupIndexFieldNumber = 7;
  inline ::google::protobuf::uint32 growupindex() const;
  inline void set_growupindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBYLoadRobotRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charinfo();
  inline void clear_has_charinfo();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_growupindex();
  inline void clear_has_growupindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  ::TgsProtocol::DB2LOBBY_LoadCharRet* charinfo_;
  ::google::protobuf::uint64 ownerid_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 growupindex_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBYLoadRobotRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DBCreateRobotReq : public ::google::protobuf::Message {
 public:
  LOBBY2DBCreateRobotReq();
  virtual ~LOBBY2DBCreateRobotReq();

  LOBBY2DBCreateRobotReq(const LOBBY2DBCreateRobotReq& from);

  inline LOBBY2DBCreateRobotReq& operator=(const LOBBY2DBCreateRobotReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DBCreateRobotReq& default_instance();

  void Swap(LOBBY2DBCreateRobotReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DBCreateRobotReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DBCreateRobotReq& from);
  void MergeFrom(const LOBBY2DBCreateRobotReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CREATE_ROBOT_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string charName = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint64 ownerId = 5;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwnerIdFieldNumber = 5;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DBCreateRobotReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  ::google::protobuf::uint32 index_;
  ::std::string* charname_;
  ::google::protobuf::uint64 ownerid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DBCreateRobotReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBYCreateRobotRet : public ::google::protobuf::Message {
 public:
  DB2LOBBYCreateRobotRet();
  virtual ~DB2LOBBYCreateRobotRet();

  DB2LOBBYCreateRobotRet(const DB2LOBBYCreateRobotRet& from);

  inline DB2LOBBYCreateRobotRet& operator=(const DB2LOBBYCreateRobotRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBYCreateRobotRet& default_instance();

  void Swap(DB2LOBBYCreateRobotRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBYCreateRobotRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBYCreateRobotRet& from);
  void MergeFrom(const DB2LOBBYCreateRobotRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_CREATE_ROBOT_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint64 ownerId = 5;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwnerIdFieldNumber = 5;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBYCreateRobotRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 ownerid_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBYCreateRobotRet* default_instance_;
};
// -------------------------------------------------------------------

class LOBBY2DBSaveRobotReq : public ::google::protobuf::Message {
 public:
  LOBBY2DBSaveRobotReq();
  virtual ~LOBBY2DBSaveRobotReq();

  LOBBY2DBSaveRobotReq(const LOBBY2DBSaveRobotReq& from);

  inline LOBBY2DBSaveRobotReq& operator=(const LOBBY2DBSaveRobotReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOBBY2DBSaveRobotReq& default_instance();

  void Swap(LOBBY2DBSaveRobotReq* other);

  // implements Message ----------------------------------------------

  LOBBY2DBSaveRobotReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOBBY2DBSaveRobotReq& from);
  void MergeFrom(const LOBBY2DBSaveRobotReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SAVE_ROBOT_REQ];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint64 CharId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required .TgsProtocol.LOBBY2DB_SaveCharReq charInfo = 3;
  inline bool has_charinfo() const;
  inline void clear_charinfo();
  static const int kCharInfoFieldNumber = 3;
  inline const ::TgsProtocol::LOBBY2DB_SaveCharReq& charinfo() const;
  inline ::TgsProtocol::LOBBY2DB_SaveCharReq* mutable_charinfo();
  inline ::TgsProtocol::LOBBY2DB_SaveCharReq* release_charinfo();
  inline void set_allocated_charinfo(::TgsProtocol::LOBBY2DB_SaveCharReq* charinfo);

  // required uint32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint64 ownerId = 5;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwnerIdFieldNumber = 5;
  inline ::google::protobuf::uint64 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint64 value);

  // required uint32 growupIndex = 6;
  inline bool has_growupindex() const;
  inline void clear_growupindex();
  static const int kGrowupIndexFieldNumber = 6;
  inline ::google::protobuf::uint32 growupindex() const;
  inline void set_growupindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.LOBBY2DBSaveRobotReq)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charinfo();
  inline void clear_has_charinfo();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_growupindex();
  inline void clear_has_growupindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  int cmdid_;
  ::google::protobuf::uint32 index_;
  ::TgsProtocol::LOBBY2DB_SaveCharReq* charinfo_;
  ::google::protobuf::uint64 ownerid_;
  ::google::protobuf::uint32 growupindex_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static LOBBY2DBSaveRobotReq* default_instance_;
};
// -------------------------------------------------------------------

class DB2LOBBYSaveRobotRet : public ::google::protobuf::Message {
 public:
  DB2LOBBYSaveRobotRet();
  virtual ~DB2LOBBYSaveRobotRet();

  DB2LOBBYSaveRobotRet(const DB2LOBBYSaveRobotRet& from);

  inline DB2LOBBYSaveRobotRet& operator=(const DB2LOBBYSaveRobotRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DB2LOBBYSaveRobotRet& default_instance();

  void Swap(DB2LOBBYSaveRobotRet* other);

  // implements Message ----------------------------------------------

  DB2LOBBYSaveRobotRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB2LOBBYSaveRobotRet& from);
  void MergeFrom(const DB2LOBBYSaveRobotRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SAVE_ROBOT_RET];
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 1;
  inline ::TgsProtocol::PacketDef cmdid() const;
  inline void set_cmdid(::TgsProtocol::PacketDef value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint64 charId = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TgsProtocol.DB2LOBBYSaveRobotRet)
 private:
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int cmdid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 charid_;
  friend void  protobuf_AddDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_AssignDesc_protocol_5flobby_5fdb_2eproto();
  friend void protobuf_ShutdownFile_protocol_5flobby_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DB2LOBBYSaveRobotRet* default_instance_;
};
// ===================================================================


// ===================================================================

// DbSystemSetting

// required uint64 modeMask = 1;
inline bool DbSystemSetting::has_modemask() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbSystemSetting::set_has_modemask() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbSystemSetting::clear_has_modemask() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbSystemSetting::clear_modemask() {
  modemask_ = GOOGLE_ULONGLONG(0);
  clear_has_modemask();
}
inline ::google::protobuf::uint64 DbSystemSetting::modemask() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSystemSetting.modeMask)
  return modemask_;
}
inline void DbSystemSetting::set_modemask(::google::protobuf::uint64 value) {
  set_has_modemask();
  modemask_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSystemSetting.modeMask)
}

// required uint64 modeReserver = 2;
inline bool DbSystemSetting::has_modereserver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbSystemSetting::set_has_modereserver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbSystemSetting::clear_has_modereserver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbSystemSetting::clear_modereserver() {
  modereserver_ = GOOGLE_ULONGLONG(0);
  clear_has_modereserver();
}
inline ::google::protobuf::uint64 DbSystemSetting::modereserver() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSystemSetting.modeReserver)
  return modereserver_;
}
inline void DbSystemSetting::set_modereserver(::google::protobuf::uint64 value) {
  set_has_modereserver();
  modereserver_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSystemSetting.modeReserver)
}

// required uint32 showCharId = 3;
inline bool DbSystemSetting::has_showcharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbSystemSetting::set_has_showcharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbSystemSetting::clear_has_showcharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbSystemSetting::clear_showcharid() {
  showcharid_ = 0u;
  clear_has_showcharid();
}
inline ::google::protobuf::uint32 DbSystemSetting::showcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSystemSetting.showCharId)
  return showcharid_;
}
inline void DbSystemSetting::set_showcharid(::google::protobuf::uint32 value) {
  set_has_showcharid();
  showcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSystemSetting.showCharId)
}

// required uint32 rcvInvite = 4;
inline bool DbSystemSetting::has_rcvinvite() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbSystemSetting::set_has_rcvinvite() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbSystemSetting::clear_has_rcvinvite() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbSystemSetting::clear_rcvinvite() {
  rcvinvite_ = 0u;
  clear_has_rcvinvite();
}
inline ::google::protobuf::uint32 DbSystemSetting::rcvinvite() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSystemSetting.rcvInvite)
  return rcvinvite_;
}
inline void DbSystemSetting::set_rcvinvite(::google::protobuf::uint32 value) {
  set_has_rcvinvite();
  rcvinvite_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSystemSetting.rcvInvite)
}

// required uint32 showAudioeff = 5;
inline bool DbSystemSetting::has_showaudioeff() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbSystemSetting::set_has_showaudioeff() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbSystemSetting::clear_has_showaudioeff() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbSystemSetting::clear_showaudioeff() {
  showaudioeff_ = 0u;
  clear_has_showaudioeff();
}
inline ::google::protobuf::uint32 DbSystemSetting::showaudioeff() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSystemSetting.showAudioeff)
  return showaudioeff_;
}
inline void DbSystemSetting::set_showaudioeff(::google::protobuf::uint32 value) {
  set_has_showaudioeff();
  showaudioeff_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSystemSetting.showAudioeff)
}

// required uint32 showMusic = 6;
inline bool DbSystemSetting::has_showmusic() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DbSystemSetting::set_has_showmusic() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DbSystemSetting::clear_has_showmusic() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DbSystemSetting::clear_showmusic() {
  showmusic_ = 0u;
  clear_has_showmusic();
}
inline ::google::protobuf::uint32 DbSystemSetting::showmusic() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSystemSetting.showMusic)
  return showmusic_;
}
inline void DbSystemSetting::set_showmusic(::google::protobuf::uint32 value) {
  set_has_showmusic();
  showmusic_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSystemSetting.showMusic)
}

// required uint32 showEffect = 7;
inline bool DbSystemSetting::has_showeffect() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DbSystemSetting::set_has_showeffect() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DbSystemSetting::clear_has_showeffect() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DbSystemSetting::clear_showeffect() {
  showeffect_ = 0u;
  clear_has_showeffect();
}
inline ::google::protobuf::uint32 DbSystemSetting::showeffect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSystemSetting.showEffect)
  return showeffect_;
}
inline void DbSystemSetting::set_showeffect(::google::protobuf::uint32 value) {
  set_has_showeffect();
  showeffect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSystemSetting.showEffect)
}

// required uint32 hidDensuit = 8;
inline bool DbSystemSetting::has_hiddensuit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DbSystemSetting::set_has_hiddensuit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DbSystemSetting::clear_has_hiddensuit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DbSystemSetting::clear_hiddensuit() {
  hiddensuit_ = 0u;
  clear_has_hiddensuit();
}
inline ::google::protobuf::uint32 DbSystemSetting::hiddensuit() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSystemSetting.hidDensuit)
  return hiddensuit_;
}
inline void DbSystemSetting::set_hiddensuit(::google::protobuf::uint32 value) {
  set_has_hiddensuit();
  hiddensuit_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSystemSetting.hidDensuit)
}

// required bytes reserveBuff = 9;
inline bool DbSystemSetting::has_reservebuff() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DbSystemSetting::set_has_reservebuff() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DbSystemSetting::clear_has_reservebuff() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DbSystemSetting::clear_reservebuff() {
  if (reservebuff_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reservebuff_->clear();
  }
  clear_has_reservebuff();
}
inline const ::std::string& DbSystemSetting::reservebuff() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSystemSetting.reserveBuff)
  return *reservebuff_;
}
inline void DbSystemSetting::set_reservebuff(const ::std::string& value) {
  set_has_reservebuff();
  if (reservebuff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reservebuff_ = new ::std::string;
  }
  reservebuff_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSystemSetting.reserveBuff)
}
inline void DbSystemSetting::set_reservebuff(const char* value) {
  set_has_reservebuff();
  if (reservebuff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reservebuff_ = new ::std::string;
  }
  reservebuff_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbSystemSetting.reserveBuff)
}
inline void DbSystemSetting::set_reservebuff(const void* value, size_t size) {
  set_has_reservebuff();
  if (reservebuff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reservebuff_ = new ::std::string;
  }
  reservebuff_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbSystemSetting.reserveBuff)
}
inline ::std::string* DbSystemSetting::mutable_reservebuff() {
  set_has_reservebuff();
  if (reservebuff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reservebuff_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbSystemSetting.reserveBuff)
  return reservebuff_;
}
inline ::std::string* DbSystemSetting::release_reservebuff() {
  clear_has_reservebuff();
  if (reservebuff_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reservebuff_;
    reservebuff_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbSystemSetting::set_allocated_reservebuff(::std::string* reservebuff) {
  if (reservebuff_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reservebuff_;
  }
  if (reservebuff) {
    set_has_reservebuff();
    reservebuff_ = reservebuff;
  } else {
    clear_has_reservebuff();
    reservebuff_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbSystemSetting.reserveBuff)
}

// -------------------------------------------------------------------

// LOBBY2DB_LoadCharReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_CHARACTER_REQ];
inline bool LOBBY2DB_LoadCharReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_LoadCharReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_LoadCharReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_LoadCharReq::clear_cmdid() {
  cmdid_ = 300000;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_LoadCharReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadCharReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_LoadCharReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadCharReq.cmdId)
}

// required uint64 CharId = 2;
inline bool LOBBY2DB_LoadCharReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_LoadCharReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_LoadCharReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_LoadCharReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_LoadCharReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadCharReq.CharId)
  return charid_;
}
inline void LOBBY2DB_LoadCharReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadCharReq.CharId)
}

// -------------------------------------------------------------------

// NationalDB

// required uint32 nationalId = 1;
inline bool NationalDB::has_nationalid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NationalDB::set_has_nationalid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NationalDB::clear_has_nationalid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NationalDB::clear_nationalid() {
  nationalid_ = 0u;
  clear_has_nationalid();
}
inline ::google::protobuf::uint32 NationalDB::nationalid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.NationalDB.nationalId)
  return nationalid_;
}
inline void NationalDB::set_nationalid(::google::protobuf::uint32 value) {
  set_has_nationalid();
  nationalid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.NationalDB.nationalId)
}

// required uint32 lastChangeTime = 2;
inline bool NationalDB::has_lastchangetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NationalDB::set_has_lastchangetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NationalDB::clear_has_lastchangetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NationalDB::clear_lastchangetime() {
  lastchangetime_ = 0u;
  clear_has_lastchangetime();
}
inline ::google::protobuf::uint32 NationalDB::lastchangetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.NationalDB.lastChangeTime)
  return lastchangetime_;
}
inline void NationalDB::set_lastchangetime(::google::protobuf::uint32 value) {
  set_has_lastchangetime();
  lastchangetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.NationalDB.lastChangeTime)
}

// -------------------------------------------------------------------

// DB2LOBBY_LoadCharRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_CHARACTER_RET];
inline bool DB2LOBBY_LoadCharRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_LoadCharRet::clear_cmdid() {
  cmdid_ = 350000;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_LoadCharRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_LoadCharRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_LoadCharRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_LoadCharRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.ret)
  return ret_;
}
inline void DB2LOBBY_LoadCharRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.ret)
}

// required uint64 charId = 3;
inline bool DB2LOBBY_LoadCharRet::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_LoadCharRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_LoadCharRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.charId)
  return charid_;
}
inline void DB2LOBBY_LoadCharRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.charId)
}

// optional bytes charName = 4;
inline bool DB2LOBBY_LoadCharRet::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBY_LoadCharRet::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.charName)
  return *charname_;
}
inline void DB2LOBBY_LoadCharRet::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.charName)
}
inline void DB2LOBBY_LoadCharRet::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.charName)
}
inline void DB2LOBBY_LoadCharRet::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.charName)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.charName)
  return charname_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.charName)
}

// optional uint32 cash = 5;
inline bool DB2LOBBY_LoadCharRet::has_cash() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_cash() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_cash() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBY_LoadCharRet::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::cash() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.cash)
  return cash_;
}
inline void DB2LOBBY_LoadCharRet::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.cash)
}

// optional uint32 gold = 6;
inline bool DB2LOBBY_LoadCharRet::has_gold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_gold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_gold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB2LOBBY_LoadCharRet::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::gold() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.gold)
  return gold_;
}
inline void DB2LOBBY_LoadCharRet::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.gold)
}

// optional uint32 level = 7;
inline bool DB2LOBBY_LoadCharRet::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DB2LOBBY_LoadCharRet::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.level)
  return level_;
}
inline void DB2LOBBY_LoadCharRet::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.level)
}

// optional uint32 exp = 8;
inline bool DB2LOBBY_LoadCharRet::has_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DB2LOBBY_LoadCharRet::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.exp)
  return exp_;
}
inline void DB2LOBBY_LoadCharRet::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.exp)
}

// optional uint32 curStamina = 9;
inline bool DB2LOBBY_LoadCharRet::has_curstamina() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_curstamina() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_curstamina() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DB2LOBBY_LoadCharRet::clear_curstamina() {
  curstamina_ = 0u;
  clear_has_curstamina();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::curstamina() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.curStamina)
  return curstamina_;
}
inline void DB2LOBBY_LoadCharRet::set_curstamina(::google::protobuf::uint32 value) {
  set_has_curstamina();
  curstamina_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.curStamina)
}

// optional uint32 maxStamina = 10;
inline bool DB2LOBBY_LoadCharRet::has_maxstamina() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_maxstamina() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_maxstamina() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DB2LOBBY_LoadCharRet::clear_maxstamina() {
  maxstamina_ = 0u;
  clear_has_maxstamina();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::maxstamina() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.maxStamina)
  return maxstamina_;
}
inline void DB2LOBBY_LoadCharRet::set_maxstamina(::google::protobuf::uint32 value) {
  set_has_maxstamina();
  maxstamina_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.maxStamina)
}

// optional uint32 createTime = 11;
inline bool DB2LOBBY_LoadCharRet::has_createtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_createtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DB2LOBBY_LoadCharRet::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::createtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.createTime)
  return createtime_;
}
inline void DB2LOBBY_LoadCharRet::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.createTime)
}

// optional uint32 offlineTime = 12;
inline bool DB2LOBBY_LoadCharRet::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DB2LOBBY_LoadCharRet::clear_offlinetime() {
  offlinetime_ = 0u;
  clear_has_offlinetime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::offlinetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.offlineTime)
  return offlinetime_;
}
inline void DB2LOBBY_LoadCharRet::set_offlinetime(::google::protobuf::uint32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.offlineTime)
}

// optional uint32 updateStaminaTime = 13;
inline bool DB2LOBBY_LoadCharRet::has_updatestaminatime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_updatestaminatime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_updatestaminatime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DB2LOBBY_LoadCharRet::clear_updatestaminatime() {
  updatestaminatime_ = 0u;
  clear_has_updatestaminatime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::updatestaminatime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.updateStaminaTime)
  return updatestaminatime_;
}
inline void DB2LOBBY_LoadCharRet::set_updatestaminatime(::google::protobuf::uint32 value) {
  set_has_updatestaminatime();
  updatestaminatime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.updateStaminaTime)
}

// optional uint32 bitFlag = 14;
inline bool DB2LOBBY_LoadCharRet::has_bitflag() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_bitflag() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_bitflag() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DB2LOBBY_LoadCharRet::clear_bitflag() {
  bitflag_ = 0u;
  clear_has_bitflag();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::bitflag() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.bitFlag)
  return bitflag_;
}
inline void DB2LOBBY_LoadCharRet::set_bitflag(::google::protobuf::uint32 value) {
  set_has_bitflag();
  bitflag_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.bitFlag)
}

// optional bytes quest = 15;
inline bool DB2LOBBY_LoadCharRet::has_quest() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_quest() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_quest() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DB2LOBBY_LoadCharRet::clear_quest() {
  if (quest_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_->clear();
  }
  clear_has_quest();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::quest() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.quest)
  return *quest_;
}
inline void DB2LOBBY_LoadCharRet::set_quest(const ::std::string& value) {
  set_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_ = new ::std::string;
  }
  quest_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.quest)
}
inline void DB2LOBBY_LoadCharRet::set_quest(const char* value) {
  set_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_ = new ::std::string;
  }
  quest_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.quest)
}
inline void DB2LOBBY_LoadCharRet::set_quest(const void* value, size_t size) {
  set_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_ = new ::std::string;
  }
  quest_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.quest)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_quest() {
  set_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.quest)
  return quest_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_quest() {
  clear_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = quest_;
    quest_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_quest(::std::string* quest) {
  if (quest_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete quest_;
  }
  if (quest) {
    set_has_quest();
    quest_ = quest;
  } else {
    clear_has_quest();
    quest_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.quest)
}

// optional bytes evaluation = 16;
inline bool DB2LOBBY_LoadCharRet::has_evaluation() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_evaluation() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_evaluation() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DB2LOBBY_LoadCharRet::clear_evaluation() {
  if (evaluation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_->clear();
  }
  clear_has_evaluation();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::evaluation() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.evaluation)
  return *evaluation_;
}
inline void DB2LOBBY_LoadCharRet::set_evaluation(const ::std::string& value) {
  set_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_ = new ::std::string;
  }
  evaluation_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.evaluation)
}
inline void DB2LOBBY_LoadCharRet::set_evaluation(const char* value) {
  set_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_ = new ::std::string;
  }
  evaluation_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.evaluation)
}
inline void DB2LOBBY_LoadCharRet::set_evaluation(const void* value, size_t size) {
  set_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_ = new ::std::string;
  }
  evaluation_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.evaluation)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_evaluation() {
  set_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.evaluation)
  return evaluation_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_evaluation() {
  clear_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = evaluation_;
    evaluation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_evaluation(::std::string* evaluation) {
  if (evaluation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete evaluation_;
  }
  if (evaluation) {
    set_has_evaluation();
    evaluation_ = evaluation;
  } else {
    clear_has_evaluation();
    evaluation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.evaluation)
}

// optional bytes chapterReward = 17;
inline bool DB2LOBBY_LoadCharRet::has_chapterreward() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_chapterreward() {
  _has_bits_[0] |= 0x00010000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_chapterreward() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void DB2LOBBY_LoadCharRet::clear_chapterreward() {
  if (chapterreward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_->clear();
  }
  clear_has_chapterreward();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::chapterreward() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.chapterReward)
  return *chapterreward_;
}
inline void DB2LOBBY_LoadCharRet::set_chapterreward(const ::std::string& value) {
  set_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_ = new ::std::string;
  }
  chapterreward_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.chapterReward)
}
inline void DB2LOBBY_LoadCharRet::set_chapterreward(const char* value) {
  set_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_ = new ::std::string;
  }
  chapterreward_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.chapterReward)
}
inline void DB2LOBBY_LoadCharRet::set_chapterreward(const void* value, size_t size) {
  set_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_ = new ::std::string;
  }
  chapterreward_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.chapterReward)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_chapterreward() {
  set_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.chapterReward)
  return chapterreward_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_chapterreward() {
  clear_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chapterreward_;
    chapterreward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_chapterreward(::std::string* chapterreward) {
  if (chapterreward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chapterreward_;
  }
  if (chapterreward) {
    set_has_chapterreward();
    chapterreward_ = chapterreward;
  } else {
    clear_has_chapterreward();
    chapterreward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.chapterReward)
}

// optional uint32 vipExp = 18;
inline bool DB2LOBBY_LoadCharRet::has_vipexp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_vipexp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_vipexp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DB2LOBBY_LoadCharRet::clear_vipexp() {
  vipexp_ = 0u;
  clear_has_vipexp();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::vipexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.vipExp)
  return vipexp_;
}
inline void DB2LOBBY_LoadCharRet::set_vipexp(::google::protobuf::uint32 value) {
  set_has_vipexp();
  vipexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.vipExp)
}

// optional uint32 vipLevel = 19;
inline bool DB2LOBBY_LoadCharRet::has_viplevel() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_viplevel() {
  _has_bits_[0] |= 0x00040000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void DB2LOBBY_LoadCharRet::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::viplevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.vipLevel)
  return viplevel_;
}
inline void DB2LOBBY_LoadCharRet::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.vipLevel)
}

// repeated uint32 formation = 20;
inline int DB2LOBBY_LoadCharRet::formation_size() const {
  return formation_.size();
}
inline void DB2LOBBY_LoadCharRet::clear_formation() {
  formation_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::formation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.formation)
  return formation_.Get(index);
}
inline void DB2LOBBY_LoadCharRet::set_formation(int index, ::google::protobuf::uint32 value) {
  formation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.formation)
}
inline void DB2LOBBY_LoadCharRet::add_formation(::google::protobuf::uint32 value) {
  formation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadCharRet.formation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_LoadCharRet::formation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadCharRet.formation)
  return formation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_LoadCharRet::mutable_formation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadCharRet.formation)
  return &formation_;
}

// optional uint32 heroBagNum = 21;
inline bool DB2LOBBY_LoadCharRet::has_herobagnum() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_herobagnum() {
  _has_bits_[0] |= 0x00100000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_herobagnum() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void DB2LOBBY_LoadCharRet::clear_herobagnum() {
  herobagnum_ = 0u;
  clear_has_herobagnum();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::herobagnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.heroBagNum)
  return herobagnum_;
}
inline void DB2LOBBY_LoadCharRet::set_herobagnum(::google::protobuf::uint32 value) {
  set_has_herobagnum();
  herobagnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.heroBagNum)
}

// optional bytes heroList = 22;
inline bool DB2LOBBY_LoadCharRet::has_herolist() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_herolist() {
  _has_bits_[0] |= 0x00200000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_herolist() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void DB2LOBBY_LoadCharRet::clear_herolist() {
  if (herolist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_->clear();
  }
  clear_has_herolist();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::herolist() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.heroList)
  return *herolist_;
}
inline void DB2LOBBY_LoadCharRet::set_herolist(const ::std::string& value) {
  set_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_ = new ::std::string;
  }
  herolist_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.heroList)
}
inline void DB2LOBBY_LoadCharRet::set_herolist(const char* value) {
  set_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_ = new ::std::string;
  }
  herolist_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.heroList)
}
inline void DB2LOBBY_LoadCharRet::set_herolist(const void* value, size_t size) {
  set_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_ = new ::std::string;
  }
  herolist_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.heroList)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_herolist() {
  set_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.heroList)
  return herolist_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_herolist() {
  clear_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = herolist_;
    herolist_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_herolist(::std::string* herolist) {
  if (herolist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete herolist_;
  }
  if (herolist) {
    set_has_herolist();
    herolist_ = herolist;
  } else {
    clear_has_herolist();
    herolist_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.heroList)
}

// optional uint32 gender = 23;
inline bool DB2LOBBY_LoadCharRet::has_gender() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_gender() {
  _has_bits_[0] |= 0x00400000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_gender() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void DB2LOBBY_LoadCharRet::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::gender() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.gender)
  return gender_;
}
inline void DB2LOBBY_LoadCharRet::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.gender)
}

// optional uint32 photo = 24;
inline bool DB2LOBBY_LoadCharRet::has_photo() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_photo() {
  _has_bits_[0] |= 0x00800000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_photo() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void DB2LOBBY_LoadCharRet::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.photo)
  return photo_;
}
inline void DB2LOBBY_LoadCharRet::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.photo)
}

// optional bytes essenceItem = 25;
inline bool DB2LOBBY_LoadCharRet::has_essenceitem() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_essenceitem() {
  _has_bits_[0] |= 0x01000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_essenceitem() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_essenceitem() {
  if (essenceitem_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_->clear();
  }
  clear_has_essenceitem();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::essenceitem() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.essenceItem)
  return *essenceitem_;
}
inline void DB2LOBBY_LoadCharRet::set_essenceitem(const ::std::string& value) {
  set_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_ = new ::std::string;
  }
  essenceitem_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.essenceItem)
}
inline void DB2LOBBY_LoadCharRet::set_essenceitem(const char* value) {
  set_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_ = new ::std::string;
  }
  essenceitem_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.essenceItem)
}
inline void DB2LOBBY_LoadCharRet::set_essenceitem(const void* value, size_t size) {
  set_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_ = new ::std::string;
  }
  essenceitem_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.essenceItem)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_essenceitem() {
  set_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.essenceItem)
  return essenceitem_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_essenceitem() {
  clear_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = essenceitem_;
    essenceitem_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_essenceitem(::std::string* essenceitem) {
  if (essenceitem_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete essenceitem_;
  }
  if (essenceitem) {
    set_has_essenceitem();
    essenceitem_ = essenceitem;
  } else {
    clear_has_essenceitem();
    essenceitem_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.essenceItem)
}

// repeated uint32 RefreshPrice = 26;
inline int DB2LOBBY_LoadCharRet::refreshprice_size() const {
  return refreshprice_.size();
}
inline void DB2LOBBY_LoadCharRet::clear_refreshprice() {
  refreshprice_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::refreshprice(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.RefreshPrice)
  return refreshprice_.Get(index);
}
inline void DB2LOBBY_LoadCharRet::set_refreshprice(int index, ::google::protobuf::uint32 value) {
  refreshprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.RefreshPrice)
}
inline void DB2LOBBY_LoadCharRet::add_refreshprice(::google::protobuf::uint32 value) {
  refreshprice_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadCharRet.RefreshPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_LoadCharRet::refreshprice() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadCharRet.RefreshPrice)
  return refreshprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_LoadCharRet::mutable_refreshprice() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadCharRet.RefreshPrice)
  return &refreshprice_;
}

// optional bytes festivity = 27;
inline bool DB2LOBBY_LoadCharRet::has_festivity() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_festivity() {
  _has_bits_[0] |= 0x04000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_festivity() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_festivity() {
  if (festivity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_->clear();
  }
  clear_has_festivity();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::festivity() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.festivity)
  return *festivity_;
}
inline void DB2LOBBY_LoadCharRet::set_festivity(const ::std::string& value) {
  set_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_ = new ::std::string;
  }
  festivity_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.festivity)
}
inline void DB2LOBBY_LoadCharRet::set_festivity(const char* value) {
  set_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_ = new ::std::string;
  }
  festivity_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.festivity)
}
inline void DB2LOBBY_LoadCharRet::set_festivity(const void* value, size_t size) {
  set_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_ = new ::std::string;
  }
  festivity_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.festivity)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_festivity() {
  set_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.festivity)
  return festivity_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_festivity() {
  clear_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = festivity_;
    festivity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_festivity(::std::string* festivity) {
  if (festivity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete festivity_;
  }
  if (festivity) {
    set_has_festivity();
    festivity_ = festivity;
  } else {
    clear_has_festivity();
    festivity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.festivity)
}

// optional uint32 lockChatEndTime = 28;
inline bool DB2LOBBY_LoadCharRet::has_lockchatendtime() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_lockchatendtime() {
  _has_bits_[0] |= 0x08000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_lockchatendtime() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_lockchatendtime() {
  lockchatendtime_ = 0u;
  clear_has_lockchatendtime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::lockchatendtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.lockChatEndTime)
  return lockchatendtime_;
}
inline void DB2LOBBY_LoadCharRet::set_lockchatendtime(::google::protobuf::uint32 value) {
  set_has_lockchatendtime();
  lockchatendtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.lockChatEndTime)
}

// optional uint32 dayChatTimes = 29;
inline bool DB2LOBBY_LoadCharRet::has_daychattimes() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_daychattimes() {
  _has_bits_[0] |= 0x10000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_daychattimes() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_daychattimes() {
  daychattimes_ = 0u;
  clear_has_daychattimes();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::daychattimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.dayChatTimes)
  return daychattimes_;
}
inline void DB2LOBBY_LoadCharRet::set_daychattimes(::google::protobuf::uint32 value) {
  set_has_daychattimes();
  daychattimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.dayChatTimes)
}

// optional uint32 skillPoint = 30;
inline bool DB2LOBBY_LoadCharRet::has_skillpoint() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_skillpoint() {
  _has_bits_[0] |= 0x20000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_skillpoint() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_skillpoint() {
  skillpoint_ = 0u;
  clear_has_skillpoint();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::skillpoint() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.skillPoint)
  return skillpoint_;
}
inline void DB2LOBBY_LoadCharRet::set_skillpoint(::google::protobuf::uint32 value) {
  set_has_skillpoint();
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.skillPoint)
}

// optional uint32 updateSkillPointTime = 31;
inline bool DB2LOBBY_LoadCharRet::has_updateskillpointtime() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_updateskillpointtime() {
  _has_bits_[0] |= 0x40000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_updateskillpointtime() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_updateskillpointtime() {
  updateskillpointtime_ = 0u;
  clear_has_updateskillpointtime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::updateskillpointtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.updateSkillPointTime)
  return updateskillpointtime_;
}
inline void DB2LOBBY_LoadCharRet::set_updateskillpointtime(::google::protobuf::uint32 value) {
  set_has_updateskillpointtime();
  updateskillpointtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.updateSkillPointTime)
}

// optional uint32 energy = 32;
inline bool DB2LOBBY_LoadCharRet::has_energy() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_energy() {
  _has_bits_[0] |= 0x80000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_energy() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_energy() {
  energy_ = 0u;
  clear_has_energy();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::energy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.energy)
  return energy_;
}
inline void DB2LOBBY_LoadCharRet::set_energy(::google::protobuf::uint32 value) {
  set_has_energy();
  energy_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.energy)
}

// optional uint32 updateEnergyTime = 33;
inline bool DB2LOBBY_LoadCharRet::has_updateenergytime() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_updateenergytime() {
  _has_bits_[1] |= 0x00000001u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_updateenergytime() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void DB2LOBBY_LoadCharRet::clear_updateenergytime() {
  updateenergytime_ = 0u;
  clear_has_updateenergytime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::updateenergytime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.updateEnergyTime)
  return updateenergytime_;
}
inline void DB2LOBBY_LoadCharRet::set_updateenergytime(::google::protobuf::uint32 value) {
  set_has_updateenergytime();
  updateenergytime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.updateEnergyTime)
}

// optional bytes equipNew = 34;
inline bool DB2LOBBY_LoadCharRet::has_equipnew() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_equipnew() {
  _has_bits_[1] |= 0x00000002u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_equipnew() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void DB2LOBBY_LoadCharRet::clear_equipnew() {
  if (equipnew_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_->clear();
  }
  clear_has_equipnew();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::equipnew() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.equipNew)
  return *equipnew_;
}
inline void DB2LOBBY_LoadCharRet::set_equipnew(const ::std::string& value) {
  set_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_ = new ::std::string;
  }
  equipnew_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.equipNew)
}
inline void DB2LOBBY_LoadCharRet::set_equipnew(const char* value) {
  set_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_ = new ::std::string;
  }
  equipnew_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.equipNew)
}
inline void DB2LOBBY_LoadCharRet::set_equipnew(const void* value, size_t size) {
  set_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_ = new ::std::string;
  }
  equipnew_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.equipNew)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_equipnew() {
  set_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.equipNew)
  return equipnew_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_equipnew() {
  clear_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = equipnew_;
    equipnew_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_equipnew(::std::string* equipnew) {
  if (equipnew_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete equipnew_;
  }
  if (equipnew) {
    set_has_equipnew();
    equipnew_ = equipnew;
  } else {
    clear_has_equipnew();
    equipnew_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.equipNew)
}

// repeated uint32 arenaFormation = 35;
inline int DB2LOBBY_LoadCharRet::arenaformation_size() const {
  return arenaformation_.size();
}
inline void DB2LOBBY_LoadCharRet::clear_arenaformation() {
  arenaformation_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::arenaformation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.arenaFormation)
  return arenaformation_.Get(index);
}
inline void DB2LOBBY_LoadCharRet::set_arenaformation(int index, ::google::protobuf::uint32 value) {
  arenaformation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.arenaFormation)
}
inline void DB2LOBBY_LoadCharRet::add_arenaformation(::google::protobuf::uint32 value) {
  arenaformation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadCharRet.arenaFormation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_LoadCharRet::arenaformation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadCharRet.arenaFormation)
  return arenaformation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_LoadCharRet::mutable_arenaformation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadCharRet.arenaFormation)
  return &arenaformation_;
}

// optional uint32 recharge = 36;
inline bool DB2LOBBY_LoadCharRet::has_recharge() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_recharge() {
  _has_bits_[1] |= 0x00000008u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_recharge() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void DB2LOBBY_LoadCharRet::clear_recharge() {
  recharge_ = 0u;
  clear_has_recharge();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::recharge() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.recharge)
  return recharge_;
}
inline void DB2LOBBY_LoadCharRet::set_recharge(::google::protobuf::uint32 value) {
  set_has_recharge();
  recharge_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.recharge)
}

// optional uint32 progress = 37;
inline bool DB2LOBBY_LoadCharRet::has_progress() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_progress() {
  _has_bits_[1] |= 0x00000010u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_progress() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void DB2LOBBY_LoadCharRet::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::progress() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.progress)
  return progress_;
}
inline void DB2LOBBY_LoadCharRet::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.progress)
}

// optional bytes activity = 38;
inline bool DB2LOBBY_LoadCharRet::has_activity() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_activity() {
  _has_bits_[1] |= 0x00000020u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_activity() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void DB2LOBBY_LoadCharRet::clear_activity() {
  if (activity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_->clear();
  }
  clear_has_activity();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::activity() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.activity)
  return *activity_;
}
inline void DB2LOBBY_LoadCharRet::set_activity(const ::std::string& value) {
  set_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_ = new ::std::string;
  }
  activity_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.activity)
}
inline void DB2LOBBY_LoadCharRet::set_activity(const char* value) {
  set_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_ = new ::std::string;
  }
  activity_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.activity)
}
inline void DB2LOBBY_LoadCharRet::set_activity(const void* value, size_t size) {
  set_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_ = new ::std::string;
  }
  activity_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.activity)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_activity() {
  set_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.activity)
  return activity_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_activity() {
  clear_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = activity_;
    activity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_activity(::std::string* activity) {
  if (activity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete activity_;
  }
  if (activity) {
    set_has_activity();
    activity_ = activity;
  } else {
    clear_has_activity();
    activity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.activity)
}

// optional string assistFormation = 39;
inline bool DB2LOBBY_LoadCharRet::has_assistformation() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_assistformation() {
  _has_bits_[1] |= 0x00000040u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_assistformation() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void DB2LOBBY_LoadCharRet::clear_assistformation() {
  if (assistformation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_->clear();
  }
  clear_has_assistformation();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::assistformation() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.assistFormation)
  return *assistformation_;
}
inline void DB2LOBBY_LoadCharRet::set_assistformation(const ::std::string& value) {
  set_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_ = new ::std::string;
  }
  assistformation_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.assistFormation)
}
inline void DB2LOBBY_LoadCharRet::set_assistformation(const char* value) {
  set_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_ = new ::std::string;
  }
  assistformation_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.assistFormation)
}
inline void DB2LOBBY_LoadCharRet::set_assistformation(const char* value, size_t size) {
  set_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_ = new ::std::string;
  }
  assistformation_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.assistFormation)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_assistformation() {
  set_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.assistFormation)
  return assistformation_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_assistformation() {
  clear_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = assistformation_;
    assistformation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_assistformation(::std::string* assistformation) {
  if (assistformation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete assistformation_;
  }
  if (assistformation) {
    set_has_assistformation();
    assistformation_ = assistformation;
  } else {
    clear_has_assistformation();
    assistformation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.assistFormation)
}

// optional bytes chapterBox = 40;
inline bool DB2LOBBY_LoadCharRet::has_chapterbox() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_chapterbox() {
  _has_bits_[1] |= 0x00000080u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_chapterbox() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void DB2LOBBY_LoadCharRet::clear_chapterbox() {
  if (chapterbox_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_->clear();
  }
  clear_has_chapterbox();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::chapterbox() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.chapterBox)
  return *chapterbox_;
}
inline void DB2LOBBY_LoadCharRet::set_chapterbox(const ::std::string& value) {
  set_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_ = new ::std::string;
  }
  chapterbox_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.chapterBox)
}
inline void DB2LOBBY_LoadCharRet::set_chapterbox(const char* value) {
  set_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_ = new ::std::string;
  }
  chapterbox_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.chapterBox)
}
inline void DB2LOBBY_LoadCharRet::set_chapterbox(const void* value, size_t size) {
  set_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_ = new ::std::string;
  }
  chapterbox_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.chapterBox)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_chapterbox() {
  set_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.chapterBox)
  return chapterbox_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_chapterbox() {
  clear_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chapterbox_;
    chapterbox_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_chapterbox(::std::string* chapterbox) {
  if (chapterbox_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chapterbox_;
  }
  if (chapterbox) {
    set_has_chapterbox();
    chapterbox_ = chapterbox;
  } else {
    clear_has_chapterbox();
    chapterbox_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.chapterBox)
}

// optional string coins = 41;
inline bool DB2LOBBY_LoadCharRet::has_coins() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_coins() {
  _has_bits_[1] |= 0x00000100u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_coins() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void DB2LOBBY_LoadCharRet::clear_coins() {
  if (coins_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_->clear();
  }
  clear_has_coins();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::coins() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.coins)
  return *coins_;
}
inline void DB2LOBBY_LoadCharRet::set_coins(const ::std::string& value) {
  set_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_ = new ::std::string;
  }
  coins_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.coins)
}
inline void DB2LOBBY_LoadCharRet::set_coins(const char* value) {
  set_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_ = new ::std::string;
  }
  coins_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.coins)
}
inline void DB2LOBBY_LoadCharRet::set_coins(const char* value, size_t size) {
  set_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_ = new ::std::string;
  }
  coins_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.coins)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_coins() {
  set_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.coins)
  return coins_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_coins() {
  clear_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = coins_;
    coins_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_coins(::std::string* coins) {
  if (coins_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete coins_;
  }
  if (coins) {
    set_has_coins();
    coins_ = coins;
  } else {
    clear_has_coins();
    coins_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.coins)
}

// optional uint32 leavePoint = 42;
inline bool DB2LOBBY_LoadCharRet::has_leavepoint() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_leavepoint() {
  _has_bits_[1] |= 0x00000200u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_leavepoint() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void DB2LOBBY_LoadCharRet::clear_leavepoint() {
  leavepoint_ = 0u;
  clear_has_leavepoint();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::leavepoint() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.leavePoint)
  return leavepoint_;
}
inline void DB2LOBBY_LoadCharRet::set_leavepoint(::google::protobuf::uint32 value) {
  set_has_leavepoint();
  leavepoint_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.leavePoint)
}

// optional uint32 onlinetime = 43;
inline bool DB2LOBBY_LoadCharRet::has_onlinetime() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_onlinetime() {
  _has_bits_[1] |= 0x00000400u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_onlinetime() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void DB2LOBBY_LoadCharRet::clear_onlinetime() {
  onlinetime_ = 0u;
  clear_has_onlinetime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::onlinetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.onlinetime)
  return onlinetime_;
}
inline void DB2LOBBY_LoadCharRet::set_onlinetime(::google::protobuf::uint32 value) {
  set_has_onlinetime();
  onlinetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.onlinetime)
}

// optional uint32 gmFlushTime = 44;
inline bool DB2LOBBY_LoadCharRet::has_gmflushtime() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_gmflushtime() {
  _has_bits_[1] |= 0x00000800u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_gmflushtime() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void DB2LOBBY_LoadCharRet::clear_gmflushtime() {
  gmflushtime_ = 0u;
  clear_has_gmflushtime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::gmflushtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.gmFlushTime)
  return gmflushtime_;
}
inline void DB2LOBBY_LoadCharRet::set_gmflushtime(::google::protobuf::uint32 value) {
  set_has_gmflushtime();
  gmflushtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.gmFlushTime)
}

// optional uint32 isshopbuy = 45;
inline bool DB2LOBBY_LoadCharRet::has_isshopbuy() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_isshopbuy() {
  _has_bits_[1] |= 0x00001000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_isshopbuy() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void DB2LOBBY_LoadCharRet::clear_isshopbuy() {
  isshopbuy_ = 0u;
  clear_has_isshopbuy();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::isshopbuy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.isshopbuy)
  return isshopbuy_;
}
inline void DB2LOBBY_LoadCharRet::set_isshopbuy(::google::protobuf::uint32 value) {
  set_has_isshopbuy();
  isshopbuy_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.isshopbuy)
}

// optional string deviceid = 46;
inline bool DB2LOBBY_LoadCharRet::has_deviceid() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_deviceid() {
  _has_bits_[1] |= 0x00002000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_deviceid() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void DB2LOBBY_LoadCharRet::clear_deviceid() {
  if (deviceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_->clear();
  }
  clear_has_deviceid();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::deviceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.deviceid)
  return *deviceid_;
}
inline void DB2LOBBY_LoadCharRet::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.deviceid)
}
inline void DB2LOBBY_LoadCharRet::set_deviceid(const char* value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.deviceid)
}
inline void DB2LOBBY_LoadCharRet::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.deviceid)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_deviceid() {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.deviceid)
  return deviceid_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_deviceid() {
  clear_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = deviceid_;
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete deviceid_;
  }
  if (deviceid) {
    set_has_deviceid();
    deviceid_ = deviceid;
  } else {
    clear_has_deviceid();
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.deviceid)
}

// optional uint32 diamondPay = 47;
inline bool DB2LOBBY_LoadCharRet::has_diamondpay() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_diamondpay() {
  _has_bits_[1] |= 0x00004000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_diamondpay() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void DB2LOBBY_LoadCharRet::clear_diamondpay() {
  diamondpay_ = 0u;
  clear_has_diamondpay();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::diamondpay() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.diamondPay)
  return diamondpay_;
}
inline void DB2LOBBY_LoadCharRet::set_diamondpay(::google::protobuf::uint32 value) {
  set_has_diamondpay();
  diamondpay_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.diamondPay)
}

// optional string recommfriends = 48;
inline bool DB2LOBBY_LoadCharRet::has_recommfriends() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_recommfriends() {
  _has_bits_[1] |= 0x00008000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_recommfriends() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void DB2LOBBY_LoadCharRet::clear_recommfriends() {
  if (recommfriends_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_->clear();
  }
  clear_has_recommfriends();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::recommfriends() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.recommfriends)
  return *recommfriends_;
}
inline void DB2LOBBY_LoadCharRet::set_recommfriends(const ::std::string& value) {
  set_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_ = new ::std::string;
  }
  recommfriends_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.recommfriends)
}
inline void DB2LOBBY_LoadCharRet::set_recommfriends(const char* value) {
  set_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_ = new ::std::string;
  }
  recommfriends_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.recommfriends)
}
inline void DB2LOBBY_LoadCharRet::set_recommfriends(const char* value, size_t size) {
  set_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_ = new ::std::string;
  }
  recommfriends_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.recommfriends)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_recommfriends() {
  set_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.recommfriends)
  return recommfriends_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_recommfriends() {
  clear_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = recommfriends_;
    recommfriends_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_recommfriends(::std::string* recommfriends) {
  if (recommfriends_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recommfriends_;
  }
  if (recommfriends) {
    set_has_recommfriends();
    recommfriends_ = recommfriends;
  } else {
    clear_has_recommfriends();
    recommfriends_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.recommfriends)
}

// optional bytes prizeInfo = 49;
inline bool DB2LOBBY_LoadCharRet::has_prizeinfo() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_prizeinfo() {
  _has_bits_[1] |= 0x00010000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_prizeinfo() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void DB2LOBBY_LoadCharRet::clear_prizeinfo() {
  if (prizeinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_->clear();
  }
  clear_has_prizeinfo();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::prizeinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.prizeInfo)
  return *prizeinfo_;
}
inline void DB2LOBBY_LoadCharRet::set_prizeinfo(const ::std::string& value) {
  set_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_ = new ::std::string;
  }
  prizeinfo_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.prizeInfo)
}
inline void DB2LOBBY_LoadCharRet::set_prizeinfo(const char* value) {
  set_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_ = new ::std::string;
  }
  prizeinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.prizeInfo)
}
inline void DB2LOBBY_LoadCharRet::set_prizeinfo(const void* value, size_t size) {
  set_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_ = new ::std::string;
  }
  prizeinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.prizeInfo)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_prizeinfo() {
  set_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.prizeInfo)
  return prizeinfo_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_prizeinfo() {
  clear_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = prizeinfo_;
    prizeinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_prizeinfo(::std::string* prizeinfo) {
  if (prizeinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete prizeinfo_;
  }
  if (prizeinfo) {
    set_has_prizeinfo();
    prizeinfo_ = prizeinfo;
  } else {
    clear_has_prizeinfo();
    prizeinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.prizeInfo)
}

// optional uint32 avoidBattle = 50;
inline bool DB2LOBBY_LoadCharRet::has_avoidbattle() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_avoidbattle() {
  _has_bits_[1] |= 0x00020000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_avoidbattle() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void DB2LOBBY_LoadCharRet::clear_avoidbattle() {
  avoidbattle_ = 0u;
  clear_has_avoidbattle();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::avoidbattle() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.avoidBattle)
  return avoidbattle_;
}
inline void DB2LOBBY_LoadCharRet::set_avoidbattle(::google::protobuf::uint32 value) {
  set_has_avoidbattle();
  avoidbattle_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.avoidBattle)
}

// optional uint32 accOnlineTime = 51;
inline bool DB2LOBBY_LoadCharRet::has_acconlinetime() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_acconlinetime() {
  _has_bits_[1] |= 0x00040000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_acconlinetime() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void DB2LOBBY_LoadCharRet::clear_acconlinetime() {
  acconlinetime_ = 0u;
  clear_has_acconlinetime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::acconlinetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.accOnlineTime)
  return acconlinetime_;
}
inline void DB2LOBBY_LoadCharRet::set_acconlinetime(::google::protobuf::uint32 value) {
  set_has_acconlinetime();
  acconlinetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.accOnlineTime)
}

// optional string itemGot = 52;
inline bool DB2LOBBY_LoadCharRet::has_itemgot() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_itemgot() {
  _has_bits_[1] |= 0x00080000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_itemgot() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void DB2LOBBY_LoadCharRet::clear_itemgot() {
  if (itemgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_->clear();
  }
  clear_has_itemgot();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::itemgot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.itemGot)
  return *itemgot_;
}
inline void DB2LOBBY_LoadCharRet::set_itemgot(const ::std::string& value) {
  set_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_ = new ::std::string;
  }
  itemgot_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.itemGot)
}
inline void DB2LOBBY_LoadCharRet::set_itemgot(const char* value) {
  set_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_ = new ::std::string;
  }
  itemgot_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.itemGot)
}
inline void DB2LOBBY_LoadCharRet::set_itemgot(const char* value, size_t size) {
  set_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_ = new ::std::string;
  }
  itemgot_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.itemGot)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_itemgot() {
  set_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.itemGot)
  return itemgot_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_itemgot() {
  clear_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemgot_;
    itemgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_itemgot(::std::string* itemgot) {
  if (itemgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemgot_;
  }
  if (itemgot) {
    set_has_itemgot();
    itemgot_ = itemgot;
  } else {
    clear_has_itemgot();
    itemgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.itemGot)
}

// repeated uint32 buyedPrice = 53;
inline int DB2LOBBY_LoadCharRet::buyedprice_size() const {
  return buyedprice_.size();
}
inline void DB2LOBBY_LoadCharRet::clear_buyedprice() {
  buyedprice_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::buyedprice(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.buyedPrice)
  return buyedprice_.Get(index);
}
inline void DB2LOBBY_LoadCharRet::set_buyedprice(int index, ::google::protobuf::uint32 value) {
  buyedprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.buyedPrice)
}
inline void DB2LOBBY_LoadCharRet::add_buyedprice(::google::protobuf::uint32 value) {
  buyedprice_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadCharRet.buyedPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_LoadCharRet::buyedprice() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadCharRet.buyedPrice)
  return buyedprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_LoadCharRet::mutable_buyedprice() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadCharRet.buyedPrice)
  return &buyedprice_;
}

// optional uint32 position = 54;
inline bool DB2LOBBY_LoadCharRet::has_position() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_position() {
  _has_bits_[1] |= 0x00200000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_position() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void DB2LOBBY_LoadCharRet::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::position() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.position)
  return position_;
}
inline void DB2LOBBY_LoadCharRet::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.position)
}

// optional uint32 lastUpdateTime = 55;
inline bool DB2LOBBY_LoadCharRet::has_lastupdatetime() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_lastupdatetime() {
  _has_bits_[1] |= 0x00400000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_lastupdatetime() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void DB2LOBBY_LoadCharRet::clear_lastupdatetime() {
  lastupdatetime_ = 0u;
  clear_has_lastupdatetime();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::lastupdatetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.lastUpdateTime)
  return lastupdatetime_;
}
inline void DB2LOBBY_LoadCharRet::set_lastupdatetime(::google::protobuf::uint32 value) {
  set_has_lastupdatetime();
  lastupdatetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.lastUpdateTime)
}

// optional uint32 crusadeMaxId = 56;
inline bool DB2LOBBY_LoadCharRet::has_crusademaxid() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_crusademaxid() {
  _has_bits_[1] |= 0x00800000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_crusademaxid() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void DB2LOBBY_LoadCharRet::clear_crusademaxid() {
  crusademaxid_ = 0u;
  clear_has_crusademaxid();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::crusademaxid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.crusadeMaxId)
  return crusademaxid_;
}
inline void DB2LOBBY_LoadCharRet::set_crusademaxid(::google::protobuf::uint32 value) {
  set_has_crusademaxid();
  crusademaxid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.crusadeMaxId)
}

// optional uint32 crusadeCurId = 57;
inline bool DB2LOBBY_LoadCharRet::has_crusadecurid() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_crusadecurid() {
  _has_bits_[1] |= 0x01000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_crusadecurid() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_crusadecurid() {
  crusadecurid_ = 0u;
  clear_has_crusadecurid();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::crusadecurid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.crusadeCurId)
  return crusadecurid_;
}
inline void DB2LOBBY_LoadCharRet::set_crusadecurid(::google::protobuf::uint32 value) {
  set_has_crusadecurid();
  crusadecurid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.crusadeCurId)
}

// optional string int32attr = 58;
inline bool DB2LOBBY_LoadCharRet::has_int32attr() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_int32attr() {
  _has_bits_[1] |= 0x02000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_int32attr() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_int32attr() {
  if (int32attr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_->clear();
  }
  clear_has_int32attr();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::int32attr() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.int32attr)
  return *int32attr_;
}
inline void DB2LOBBY_LoadCharRet::set_int32attr(const ::std::string& value) {
  set_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_ = new ::std::string;
  }
  int32attr_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.int32attr)
}
inline void DB2LOBBY_LoadCharRet::set_int32attr(const char* value) {
  set_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_ = new ::std::string;
  }
  int32attr_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.int32attr)
}
inline void DB2LOBBY_LoadCharRet::set_int32attr(const char* value, size_t size) {
  set_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_ = new ::std::string;
  }
  int32attr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.int32attr)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_int32attr() {
  set_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.int32attr)
  return int32attr_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_int32attr() {
  clear_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = int32attr_;
    int32attr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_int32attr(::std::string* int32attr) {
  if (int32attr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete int32attr_;
  }
  if (int32attr) {
    set_has_int32attr();
    int32attr_ = int32attr;
  } else {
    clear_has_int32attr();
    int32attr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.int32attr)
}

// optional string AwakeHeroes = 59;
inline bool DB2LOBBY_LoadCharRet::has_awakeheroes() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_awakeheroes() {
  _has_bits_[1] |= 0x04000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_awakeheroes() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_awakeheroes() {
  if (awakeheroes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_->clear();
  }
  clear_has_awakeheroes();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::awakeheroes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.AwakeHeroes)
  return *awakeheroes_;
}
inline void DB2LOBBY_LoadCharRet::set_awakeheroes(const ::std::string& value) {
  set_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_ = new ::std::string;
  }
  awakeheroes_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.AwakeHeroes)
}
inline void DB2LOBBY_LoadCharRet::set_awakeheroes(const char* value) {
  set_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_ = new ::std::string;
  }
  awakeheroes_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.AwakeHeroes)
}
inline void DB2LOBBY_LoadCharRet::set_awakeheroes(const char* value, size_t size) {
  set_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_ = new ::std::string;
  }
  awakeheroes_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.AwakeHeroes)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_awakeheroes() {
  set_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.AwakeHeroes)
  return awakeheroes_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_awakeheroes() {
  clear_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = awakeheroes_;
    awakeheroes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_awakeheroes(::std::string* awakeheroes) {
  if (awakeheroes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete awakeheroes_;
  }
  if (awakeheroes) {
    set_has_awakeheroes();
    awakeheroes_ = awakeheroes;
  } else {
    clear_has_awakeheroes();
    awakeheroes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.AwakeHeroes)
}

// optional string tombinfo = 60;
inline bool DB2LOBBY_LoadCharRet::has_tombinfo() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_tombinfo() {
  _has_bits_[1] |= 0x08000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_tombinfo() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_tombinfo() {
  if (tombinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_->clear();
  }
  clear_has_tombinfo();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::tombinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.tombinfo)
  return *tombinfo_;
}
inline void DB2LOBBY_LoadCharRet::set_tombinfo(const ::std::string& value) {
  set_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_ = new ::std::string;
  }
  tombinfo_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.tombinfo)
}
inline void DB2LOBBY_LoadCharRet::set_tombinfo(const char* value) {
  set_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_ = new ::std::string;
  }
  tombinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.tombinfo)
}
inline void DB2LOBBY_LoadCharRet::set_tombinfo(const char* value, size_t size) {
  set_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_ = new ::std::string;
  }
  tombinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.tombinfo)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_tombinfo() {
  set_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.tombinfo)
  return tombinfo_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_tombinfo() {
  clear_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tombinfo_;
    tombinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_tombinfo(::std::string* tombinfo) {
  if (tombinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tombinfo_;
  }
  if (tombinfo) {
    set_has_tombinfo();
    tombinfo_ = tombinfo;
  } else {
    clear_has_tombinfo();
    tombinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.tombinfo)
}

// repeated uint32 markList = 61;
inline int DB2LOBBY_LoadCharRet::marklist_size() const {
  return marklist_.size();
}
inline void DB2LOBBY_LoadCharRet::clear_marklist() {
  marklist_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharRet::marklist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.markList)
  return marklist_.Get(index);
}
inline void DB2LOBBY_LoadCharRet::set_marklist(int index, ::google::protobuf::uint32 value) {
  marklist_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.markList)
}
inline void DB2LOBBY_LoadCharRet::add_marklist(::google::protobuf::uint32 value) {
  marklist_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadCharRet.markList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_LoadCharRet::marklist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadCharRet.markList)
  return marklist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_LoadCharRet::mutable_marklist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadCharRet.markList)
  return &marklist_;
}

// optional string rechargeChoose = 62;
inline bool DB2LOBBY_LoadCharRet::has_rechargechoose() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_rechargechoose() {
  _has_bits_[1] |= 0x20000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_rechargechoose() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_rechargechoose() {
  if (rechargechoose_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_->clear();
  }
  clear_has_rechargechoose();
}
inline const ::std::string& DB2LOBBY_LoadCharRet::rechargechoose() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.rechargeChoose)
  return *rechargechoose_;
}
inline void DB2LOBBY_LoadCharRet::set_rechargechoose(const ::std::string& value) {
  set_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_ = new ::std::string;
  }
  rechargechoose_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharRet.rechargeChoose)
}
inline void DB2LOBBY_LoadCharRet::set_rechargechoose(const char* value) {
  set_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_ = new ::std::string;
  }
  rechargechoose_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadCharRet.rechargeChoose)
}
inline void DB2LOBBY_LoadCharRet::set_rechargechoose(const char* value, size_t size) {
  set_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_ = new ::std::string;
  }
  rechargechoose_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadCharRet.rechargeChoose)
}
inline ::std::string* DB2LOBBY_LoadCharRet::mutable_rechargechoose() {
  set_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.rechargeChoose)
  return rechargechoose_;
}
inline ::std::string* DB2LOBBY_LoadCharRet::release_rechargechoose() {
  clear_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rechargechoose_;
    rechargechoose_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadCharRet::set_allocated_rechargechoose(::std::string* rechargechoose) {
  if (rechargechoose_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rechargechoose_;
  }
  if (rechargechoose) {
    set_has_rechargechoose();
    rechargechoose_ = rechargechoose;
  } else {
    clear_has_rechargechoose();
    rechargechoose_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.rechargeChoose)
}

// optional .TgsProtocol.NationalDB national = 63;
inline bool DB2LOBBY_LoadCharRet::has_national() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void DB2LOBBY_LoadCharRet::set_has_national() {
  _has_bits_[1] |= 0x40000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_has_national() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void DB2LOBBY_LoadCharRet::clear_national() {
  if (national_ != NULL) national_->::TgsProtocol::NationalDB::Clear();
  clear_has_national();
}
inline const ::TgsProtocol::NationalDB& DB2LOBBY_LoadCharRet::national() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharRet.national)
  return national_ != NULL ? *national_ : *default_instance_->national_;
}
inline ::TgsProtocol::NationalDB* DB2LOBBY_LoadCharRet::mutable_national() {
  set_has_national();
  if (national_ == NULL) national_ = new ::TgsProtocol::NationalDB;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharRet.national)
  return national_;
}
inline ::TgsProtocol::NationalDB* DB2LOBBY_LoadCharRet::release_national() {
  clear_has_national();
  ::TgsProtocol::NationalDB* temp = national_;
  national_ = NULL;
  return temp;
}
inline void DB2LOBBY_LoadCharRet::set_allocated_national(::TgsProtocol::NationalDB* national) {
  delete national_;
  national_ = national;
  if (national) {
    set_has_national();
  } else {
    clear_has_national();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadCharRet.national)
}

// -------------------------------------------------------------------

// LOBBY2DB_CharAdvancedInfo

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_GET_ADVANCED_CHARINFO_REQ];
inline bool LOBBY2DB_CharAdvancedInfo::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_CharAdvancedInfo::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_CharAdvancedInfo::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_CharAdvancedInfo::clear_cmdid() {
  cmdid_ = 300009;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_CharAdvancedInfo::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CharAdvancedInfo.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_CharAdvancedInfo::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CharAdvancedInfo.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_CharAdvancedInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_CharAdvancedInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_CharAdvancedInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_CharAdvancedInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_CharAdvancedInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CharAdvancedInfo.charId)
  return charid_;
}
inline void LOBBY2DB_CharAdvancedInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CharAdvancedInfo.charId)
}

// -------------------------------------------------------------------

// DbSevenDayActive

// repeated .TgsProtocol.DbSevenDayActiveElement mission = 1;
inline int DbSevenDayActive::mission_size() const {
  return mission_.size();
}
inline void DbSevenDayActive::clear_mission() {
  mission_.Clear();
}
inline const ::TgsProtocol::DbSevenDayActiveElement& DbSevenDayActive::mission(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSevenDayActive.mission)
  return mission_.Get(index);
}
inline ::TgsProtocol::DbSevenDayActiveElement* DbSevenDayActive::mutable_mission(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbSevenDayActive.mission)
  return mission_.Mutable(index);
}
inline ::TgsProtocol::DbSevenDayActiveElement* DbSevenDayActive::add_mission() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DbSevenDayActive.mission)
  return mission_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbSevenDayActiveElement >&
DbSevenDayActive::mission() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbSevenDayActive.mission)
  return mission_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbSevenDayActiveElement >*
DbSevenDayActive::mutable_mission() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbSevenDayActive.mission)
  return &mission_;
}

// -------------------------------------------------------------------

// DbSevenDayActiveElement

// required uint32 index = 1;
inline bool DbSevenDayActiveElement::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbSevenDayActiveElement::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbSevenDayActiveElement::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbSevenDayActiveElement::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 DbSevenDayActiveElement::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSevenDayActiveElement.index)
  return index_;
}
inline void DbSevenDayActiveElement::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSevenDayActiveElement.index)
}

// required uint32 status = 2;
inline bool DbSevenDayActiveElement::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbSevenDayActiveElement::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbSevenDayActiveElement::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbSevenDayActiveElement::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 DbSevenDayActiveElement::status() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSevenDayActiveElement.status)
  return status_;
}
inline void DbSevenDayActiveElement::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSevenDayActiveElement.status)
}

// required uint32 step = 3;
inline bool DbSevenDayActiveElement::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbSevenDayActiveElement::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbSevenDayActiveElement::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbSevenDayActiveElement::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 DbSevenDayActiveElement::step() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbSevenDayActiveElement.step)
  return step_;
}
inline void DbSevenDayActiveElement::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbSevenDayActiveElement.step)
}

// -------------------------------------------------------------------

// DbRebelArmy

// required uint64 ownerUserId = 1;
inline bool DbRebelArmy::has_owneruserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbRebelArmy::set_has_owneruserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbRebelArmy::clear_has_owneruserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbRebelArmy::clear_owneruserid() {
  owneruserid_ = GOOGLE_ULONGLONG(0);
  clear_has_owneruserid();
}
inline ::google::protobuf::uint64 DbRebelArmy::owneruserid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.ownerUserId)
  return owneruserid_;
}
inline void DbRebelArmy::set_owneruserid(::google::protobuf::uint64 value) {
  set_has_owneruserid();
  owneruserid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.ownerUserId)
}

// required uint32 curHealth = 2;
inline bool DbRebelArmy::has_curhealth() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbRebelArmy::set_has_curhealth() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbRebelArmy::clear_has_curhealth() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbRebelArmy::clear_curhealth() {
  curhealth_ = 0u;
  clear_has_curhealth();
}
inline ::google::protobuf::uint32 DbRebelArmy::curhealth() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.curHealth)
  return curhealth_;
}
inline void DbRebelArmy::set_curhealth(::google::protobuf::uint32 value) {
  set_has_curhealth();
  curhealth_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.curHealth)
}

// required uint32 createTime = 3;
inline bool DbRebelArmy::has_createtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbRebelArmy::set_has_createtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbRebelArmy::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbRebelArmy::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 DbRebelArmy::createtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.createTime)
  return createtime_;
}
inline void DbRebelArmy::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.createTime)
}

// required uint32 index = 4;
inline bool DbRebelArmy::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbRebelArmy::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbRebelArmy::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbRebelArmy::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 DbRebelArmy::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.index)
  return index_;
}
inline void DbRebelArmy::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.index)
}

// required uint32 state = 5;
inline bool DbRebelArmy::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbRebelArmy::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbRebelArmy::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbRebelArmy::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 DbRebelArmy::state() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.state)
  return state_;
}
inline void DbRebelArmy::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.state)
}

// required uint32 attackTime = 6;
inline bool DbRebelArmy::has_attacktime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DbRebelArmy::set_has_attacktime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DbRebelArmy::clear_has_attacktime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DbRebelArmy::clear_attacktime() {
  attacktime_ = 0u;
  clear_has_attacktime();
}
inline ::google::protobuf::uint32 DbRebelArmy::attacktime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.attackTime)
  return attacktime_;
}
inline void DbRebelArmy::set_attacktime(::google::protobuf::uint32 value) {
  set_has_attacktime();
  attacktime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.attackTime)
}

// required uint32 bIsShare = 7;
inline bool DbRebelArmy::has_bisshare() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DbRebelArmy::set_has_bisshare() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DbRebelArmy::clear_has_bisshare() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DbRebelArmy::clear_bisshare() {
  bisshare_ = 0u;
  clear_has_bisshare();
}
inline ::google::protobuf::uint32 DbRebelArmy::bisshare() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.bIsShare)
  return bisshare_;
}
inline void DbRebelArmy::set_bisshare(::google::protobuf::uint32 value) {
  set_has_bisshare();
  bisshare_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.bIsShare)
}

// required uint32 lv = 8;
inline bool DbRebelArmy::has_lv() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DbRebelArmy::set_has_lv() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DbRebelArmy::clear_has_lv() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DbRebelArmy::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 DbRebelArmy::lv() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.lv)
  return lv_;
}
inline void DbRebelArmy::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.lv)
}

// required uint32 battleValue = 9;
inline bool DbRebelArmy::has_battlevalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DbRebelArmy::set_has_battlevalue() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DbRebelArmy::clear_has_battlevalue() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DbRebelArmy::clear_battlevalue() {
  battlevalue_ = 0u;
  clear_has_battlevalue();
}
inline ::google::protobuf::uint32 DbRebelArmy::battlevalue() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.battleValue)
  return battlevalue_;
}
inline void DbRebelArmy::set_battlevalue(::google::protobuf::uint32 value) {
  set_has_battlevalue();
  battlevalue_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.battleValue)
}

// required uint32 freeCount = 10;
inline bool DbRebelArmy::has_freecount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DbRebelArmy::set_has_freecount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DbRebelArmy::clear_has_freecount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DbRebelArmy::clear_freecount() {
  freecount_ = 0u;
  clear_has_freecount();
}
inline ::google::protobuf::uint32 DbRebelArmy::freecount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.freeCount)
  return freecount_;
}
inline void DbRebelArmy::set_freecount(::google::protobuf::uint32 value) {
  set_has_freecount();
  freecount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.freeCount)
}

// required uint32 countRecoverTime = 11;
inline bool DbRebelArmy::has_countrecovertime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DbRebelArmy::set_has_countrecovertime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DbRebelArmy::clear_has_countrecovertime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DbRebelArmy::clear_countrecovertime() {
  countrecovertime_ = 0u;
  clear_has_countrecovertime();
}
inline ::google::protobuf::uint32 DbRebelArmy::countrecovertime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.countRecoverTime)
  return countrecovertime_;
}
inline void DbRebelArmy::set_countrecovertime(::google::protobuf::uint32 value) {
  set_has_countrecovertime();
  countrecovertime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.countRecoverTime)
}

// required uint32 startLv = 12;
inline bool DbRebelArmy::has_startlv() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DbRebelArmy::set_has_startlv() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DbRebelArmy::clear_has_startlv() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DbRebelArmy::clear_startlv() {
  startlv_ = 0u;
  clear_has_startlv();
}
inline ::google::protobuf::uint32 DbRebelArmy::startlv() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.startLv)
  return startlv_;
}
inline void DbRebelArmy::set_startlv(::google::protobuf::uint32 value) {
  set_has_startlv();
  startlv_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.startLv)
}

// required uint32 happenTime = 13;
inline bool DbRebelArmy::has_happentime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DbRebelArmy::set_has_happentime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DbRebelArmy::clear_has_happentime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DbRebelArmy::clear_happentime() {
  happentime_ = 0u;
  clear_has_happentime();
}
inline ::google::protobuf::uint32 DbRebelArmy::happentime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.happenTime)
  return happentime_;
}
inline void DbRebelArmy::set_happentime(::google::protobuf::uint32 value) {
  set_has_happentime();
  happentime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.happenTime)
}

// required uint32 happenCount = 14;
inline bool DbRebelArmy::has_happencount() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DbRebelArmy::set_has_happencount() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DbRebelArmy::clear_has_happencount() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DbRebelArmy::clear_happencount() {
  happencount_ = 0u;
  clear_has_happencount();
}
inline ::google::protobuf::uint32 DbRebelArmy::happencount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.happenCount)
  return happencount_;
}
inline void DbRebelArmy::set_happencount(::google::protobuf::uint32 value) {
  set_has_happencount();
  happencount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.happenCount)
}

// optional uint32 dayharm = 15;
inline bool DbRebelArmy::has_dayharm() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DbRebelArmy::set_has_dayharm() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DbRebelArmy::clear_has_dayharm() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DbRebelArmy::clear_dayharm() {
  dayharm_ = 0u;
  clear_has_dayharm();
}
inline ::google::protobuf::uint32 DbRebelArmy::dayharm() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.dayharm)
  return dayharm_;
}
inline void DbRebelArmy::set_dayharm(::google::protobuf::uint32 value) {
  set_has_dayharm();
  dayharm_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.dayharm)
}

// optional uint32 dayexploits = 16;
inline bool DbRebelArmy::has_dayexploits() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DbRebelArmy::set_has_dayexploits() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DbRebelArmy::clear_has_dayexploits() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DbRebelArmy::clear_dayexploits() {
  dayexploits_ = 0u;
  clear_has_dayexploits();
}
inline ::google::protobuf::uint32 DbRebelArmy::dayexploits() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.dayexploits)
  return dayexploits_;
}
inline void DbRebelArmy::set_dayexploits(::google::protobuf::uint32 value) {
  set_has_dayexploits();
  dayexploits_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.dayexploits)
}

// optional uint64 dayharmBig = 17;
inline bool DbRebelArmy::has_dayharmbig() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void DbRebelArmy::set_has_dayharmbig() {
  _has_bits_[0] |= 0x00010000u;
}
inline void DbRebelArmy::clear_has_dayharmbig() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void DbRebelArmy::clear_dayharmbig() {
  dayharmbig_ = GOOGLE_ULONGLONG(0);
  clear_has_dayharmbig();
}
inline ::google::protobuf::uint64 DbRebelArmy::dayharmbig() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.dayharmBig)
  return dayharmbig_;
}
inline void DbRebelArmy::set_dayharmbig(::google::protobuf::uint64 value) {
  set_has_dayharmbig();
  dayharmbig_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.dayharmBig)
}

// optional uint64 curHealthBig = 18;
inline bool DbRebelArmy::has_curhealthbig() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DbRebelArmy::set_has_curhealthbig() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DbRebelArmy::clear_has_curhealthbig() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DbRebelArmy::clear_curhealthbig() {
  curhealthbig_ = GOOGLE_ULONGLONG(0);
  clear_has_curhealthbig();
}
inline ::google::protobuf::uint64 DbRebelArmy::curhealthbig() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRebelArmy.curHealthBig)
  return curhealthbig_;
}
inline void DbRebelArmy::set_curhealthbig(::google::protobuf::uint64 value) {
  set_has_curhealthbig();
  curhealthbig_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRebelArmy.curHealthBig)
}

// -------------------------------------------------------------------

// DbActionRecord

// repeated .TgsProtocol.ActionRecord action = 1;
inline int DbActionRecord::action_size() const {
  return action_.size();
}
inline void DbActionRecord::clear_action() {
  action_.Clear();
}
inline const ::TgsProtocol::ActionRecord& DbActionRecord::action(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActionRecord.action)
  return action_.Get(index);
}
inline ::TgsProtocol::ActionRecord* DbActionRecord::mutable_action(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbActionRecord.action)
  return action_.Mutable(index);
}
inline ::TgsProtocol::ActionRecord* DbActionRecord::add_action() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DbActionRecord.action)
  return action_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ActionRecord >&
DbActionRecord::action() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DbActionRecord.action)
  return action_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ActionRecord >*
DbActionRecord::mutable_action() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DbActionRecord.action)
  return &action_;
}

// -------------------------------------------------------------------

// DbRaidTeam

// required uint32 count = 1;
inline bool DbRaidTeam::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbRaidTeam::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbRaidTeam::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbRaidTeam::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 DbRaidTeam::count() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRaidTeam.count)
  return count_;
}
inline void DbRaidTeam::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRaidTeam.count)
}

// required uint32 lucky = 2;
inline bool DbRaidTeam::has_lucky() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbRaidTeam::set_has_lucky() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbRaidTeam::clear_has_lucky() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbRaidTeam::clear_lucky() {
  lucky_ = 0u;
  clear_has_lucky();
}
inline ::google::protobuf::uint32 DbRaidTeam::lucky() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRaidTeam.lucky)
  return lucky_;
}
inline void DbRaidTeam::set_lucky(::google::protobuf::uint32 value) {
  set_has_lucky();
  lucky_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRaidTeam.lucky)
}

// -------------------------------------------------------------------

// DBServerCompareGot

// required uint32 time = 1;
inline bool DBServerCompareGot::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBServerCompareGot::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBServerCompareGot::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBServerCompareGot::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 DBServerCompareGot::time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBServerCompareGot.time)
  return time_;
}
inline void DBServerCompareGot::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBServerCompareGot.time)
}

// required uint32 mergeTimes = 2;
inline bool DBServerCompareGot::has_mergetimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBServerCompareGot::set_has_mergetimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBServerCompareGot::clear_has_mergetimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBServerCompareGot::clear_mergetimes() {
  mergetimes_ = 0u;
  clear_has_mergetimes();
}
inline ::google::protobuf::uint32 DBServerCompareGot::mergetimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBServerCompareGot.mergeTimes)
  return mergetimes_;
}
inline void DBServerCompareGot::set_mergetimes(::google::protobuf::uint32 value) {
  set_has_mergetimes();
  mergetimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBServerCompareGot.mergeTimes)
}

// repeated .TgsProtocol.ServerCompareGot gots = 3;
inline int DBServerCompareGot::gots_size() const {
  return gots_.size();
}
inline void DBServerCompareGot::clear_gots() {
  gots_.Clear();
}
inline const ::TgsProtocol::ServerCompareGot& DBServerCompareGot::gots(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBServerCompareGot.gots)
  return gots_.Get(index);
}
inline ::TgsProtocol::ServerCompareGot* DBServerCompareGot::mutable_gots(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBServerCompareGot.gots)
  return gots_.Mutable(index);
}
inline ::TgsProtocol::ServerCompareGot* DBServerCompareGot::add_gots() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DBServerCompareGot.gots)
  return gots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ServerCompareGot >&
DBServerCompareGot::gots() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBServerCompareGot.gots)
  return gots_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ServerCompareGot >*
DBServerCompareGot::mutable_gots() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBServerCompareGot.gots)
  return &gots_;
}

// -------------------------------------------------------------------

// DB2LOBBY_CharAdvancedInfo

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GET_ADVANCED_CHARINFO_RET];
inline bool DB2LOBBY_CharAdvancedInfo::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_cmdid() {
  cmdid_ = 350008;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_CharAdvancedInfo::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_CharAdvancedInfo::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.cmdId)
}

// required uint64 charId = 2;
inline bool DB2LOBBY_CharAdvancedInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_CharAdvancedInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.charId)
  return charid_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.charId)
}

// required uint32 ret = 3;
inline bool DB2LOBBY_CharAdvancedInfo::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ret)
  return ret_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ret)
}

// optional bytes goods = 4;
inline bool DB2LOBBY_CharAdvancedInfo::has_goods() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_goods() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_goods() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_goods() {
  if (goods_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goods_->clear();
  }
  clear_has_goods();
}
inline const ::std::string& DB2LOBBY_CharAdvancedInfo::goods() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goods)
  return *goods_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_goods(const ::std::string& value) {
  set_has_goods();
  if (goods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goods_ = new ::std::string;
  }
  goods_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goods)
}
inline void DB2LOBBY_CharAdvancedInfo::set_goods(const char* value) {
  set_has_goods();
  if (goods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goods_ = new ::std::string;
  }
  goods_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goods)
}
inline void DB2LOBBY_CharAdvancedInfo::set_goods(const void* value, size_t size) {
  set_has_goods();
  if (goods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goods_ = new ::std::string;
  }
  goods_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goods)
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::mutable_goods() {
  set_has_goods();
  if (goods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goods_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goods)
  return goods_;
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::release_goods() {
  clear_has_goods();
  if (goods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = goods_;
    goods_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_goods(::std::string* goods) {
  if (goods_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete goods_;
  }
  if (goods) {
    set_has_goods();
    goods_ = goods;
  } else {
    clear_has_goods();
    goods_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goods)
}

// optional uint32 openCopperBoxNum = 5;
inline bool DB2LOBBY_CharAdvancedInfo::has_opencopperboxnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_opencopperboxnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_opencopperboxnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_opencopperboxnum() {
  opencopperboxnum_ = 0u;
  clear_has_opencopperboxnum();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::opencopperboxnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.openCopperBoxNum)
  return opencopperboxnum_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_opencopperboxnum(::google::protobuf::uint32 value) {
  set_has_opencopperboxnum();
  opencopperboxnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.openCopperBoxNum)
}

// optional uint32 lastOpenCopperBoxTime = 6;
inline bool DB2LOBBY_CharAdvancedInfo::has_lastopencopperboxtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_lastopencopperboxtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_lastopencopperboxtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_lastopencopperboxtime() {
  lastopencopperboxtime_ = 0u;
  clear_has_lastopencopperboxtime();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::lastopencopperboxtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.lastOpenCopperBoxTime)
  return lastopencopperboxtime_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_lastopencopperboxtime(::google::protobuf::uint32 value) {
  set_has_lastopencopperboxtime();
  lastopencopperboxtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.lastOpenCopperBoxTime)
}

// optional uint32 lastOpenDiamondBoxTime = 7;
inline bool DB2LOBBY_CharAdvancedInfo::has_lastopendiamondboxtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_lastopendiamondboxtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_lastopendiamondboxtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_lastopendiamondboxtime() {
  lastopendiamondboxtime_ = 0u;
  clear_has_lastopendiamondboxtime();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::lastopendiamondboxtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.lastOpenDiamondBoxTime)
  return lastopendiamondboxtime_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_lastopendiamondboxtime(::google::protobuf::uint32 value) {
  set_has_lastopendiamondboxtime();
  lastopendiamondboxtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.lastOpenDiamondBoxTime)
}

// optional uint32 totalOpenCopperBoxTimes = 8;
inline bool DB2LOBBY_CharAdvancedInfo::has_totalopencopperboxtimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_totalopencopperboxtimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_totalopencopperboxtimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_totalopencopperboxtimes() {
  totalopencopperboxtimes_ = 0u;
  clear_has_totalopencopperboxtimes();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::totalopencopperboxtimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalOpenCopperBoxTimes)
  return totalopencopperboxtimes_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_totalopencopperboxtimes(::google::protobuf::uint32 value) {
  set_has_totalopencopperboxtimes();
  totalopencopperboxtimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalOpenCopperBoxTimes)
}

// optional uint32 totalOpenDiamondBoxTimes = 9;
inline bool DB2LOBBY_CharAdvancedInfo::has_totalopendiamondboxtimes() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_totalopendiamondboxtimes() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_totalopendiamondboxtimes() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_totalopendiamondboxtimes() {
  totalopendiamondboxtimes_ = 0u;
  clear_has_totalopendiamondboxtimes();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::totalopendiamondboxtimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalOpenDiamondBoxTimes)
  return totalopendiamondboxtimes_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_totalopendiamondboxtimes(::google::protobuf::uint32 value) {
  set_has_totalopendiamondboxtimes();
  totalopendiamondboxtimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalOpenDiamondBoxTimes)
}

// repeated .TgsProtocol.DBMailInfo mailList = 10;
inline int DB2LOBBY_CharAdvancedInfo::maillist_size() const {
  return maillist_.size();
}
inline void DB2LOBBY_CharAdvancedInfo::clear_maillist() {
  maillist_.Clear();
}
inline const ::TgsProtocol::DBMailInfo& DB2LOBBY_CharAdvancedInfo::maillist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.mailList)
  return maillist_.Get(index);
}
inline ::TgsProtocol::DBMailInfo* DB2LOBBY_CharAdvancedInfo::mutable_maillist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.mailList)
  return maillist_.Mutable(index);
}
inline ::TgsProtocol::DBMailInfo* DB2LOBBY_CharAdvancedInfo::add_maillist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_CharAdvancedInfo.mailList)
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >&
DB2LOBBY_CharAdvancedInfo::maillist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.mailList)
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >*
DB2LOBBY_CharAdvancedInfo::mutable_maillist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.mailList)
  return &maillist_;
}

// optional uint32 skillPoint = 11;
inline bool DB2LOBBY_CharAdvancedInfo::has_skillpoint() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_skillpoint() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_skillpoint() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_skillpoint() {
  skillpoint_ = 0u;
  clear_has_skillpoint();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::skillpoint() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.skillPoint)
  return skillpoint_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_skillpoint(::google::protobuf::uint32 value) {
  set_has_skillpoint();
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.skillPoint)
}

// optional uint32 updateSkillPointTime = 12;
inline bool DB2LOBBY_CharAdvancedInfo::has_updateskillpointtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_updateskillpointtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_updateskillpointtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_updateskillpointtime() {
  updateskillpointtime_ = 0u;
  clear_has_updateskillpointtime();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::updateskillpointtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.updateSkillPointTime)
  return updateskillpointtime_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_updateskillpointtime(::google::protobuf::uint32 value) {
  set_has_updateskillpointtime();
  updateskillpointtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.updateSkillPointTime)
}

// repeated uint32 exFormation = 13;
inline int DB2LOBBY_CharAdvancedInfo::exformation_size() const {
  return exformation_.size();
}
inline void DB2LOBBY_CharAdvancedInfo::clear_exformation() {
  exformation_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::exformation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.exFormation)
  return exformation_.Get(index);
}
inline void DB2LOBBY_CharAdvancedInfo::set_exformation(int index, ::google::protobuf::uint32 value) {
  exformation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.exFormation)
}
inline void DB2LOBBY_CharAdvancedInfo::add_exformation(::google::protobuf::uint32 value) {
  exformation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_CharAdvancedInfo.exFormation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_CharAdvancedInfo::exformation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.exFormation)
  return exformation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_CharAdvancedInfo::mutable_exformation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.exFormation)
  return &exformation_;
}

// optional bytes myHeros = 14;
inline bool DB2LOBBY_CharAdvancedInfo::has_myheros() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_myheros() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_myheros() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_myheros() {
  if (myheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_->clear();
  }
  clear_has_myheros();
}
inline const ::std::string& DB2LOBBY_CharAdvancedInfo::myheros() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.myHeros)
  return *myheros_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_myheros(const ::std::string& value) {
  set_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_ = new ::std::string;
  }
  myheros_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.myHeros)
}
inline void DB2LOBBY_CharAdvancedInfo::set_myheros(const char* value) {
  set_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_ = new ::std::string;
  }
  myheros_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CharAdvancedInfo.myHeros)
}
inline void DB2LOBBY_CharAdvancedInfo::set_myheros(const void* value, size_t size) {
  set_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_ = new ::std::string;
  }
  myheros_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CharAdvancedInfo.myHeros)
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::mutable_myheros() {
  set_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.myHeros)
  return myheros_;
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::release_myheros() {
  clear_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = myheros_;
    myheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_myheros(::std::string* myheros) {
  if (myheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete myheros_;
  }
  if (myheros) {
    set_has_myheros();
    myheros_ = myheros;
  } else {
    clear_has_myheros();
    myheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.myHeros)
}

// optional bytes DefenseHeros = 15;
inline bool DB2LOBBY_CharAdvancedInfo::has_defenseheros() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_defenseheros() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_defenseheros() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_defenseheros() {
  if (defenseheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_->clear();
  }
  clear_has_defenseheros();
}
inline const ::std::string& DB2LOBBY_CharAdvancedInfo::defenseheros() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.DefenseHeros)
  return *defenseheros_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_defenseheros(const ::std::string& value) {
  set_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_ = new ::std::string;
  }
  defenseheros_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.DefenseHeros)
}
inline void DB2LOBBY_CharAdvancedInfo::set_defenseheros(const char* value) {
  set_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_ = new ::std::string;
  }
  defenseheros_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CharAdvancedInfo.DefenseHeros)
}
inline void DB2LOBBY_CharAdvancedInfo::set_defenseheros(const void* value, size_t size) {
  set_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_ = new ::std::string;
  }
  defenseheros_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CharAdvancedInfo.DefenseHeros)
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::mutable_defenseheros() {
  set_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.DefenseHeros)
  return defenseheros_;
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::release_defenseheros() {
  clear_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = defenseheros_;
    defenseheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_defenseheros(::std::string* defenseheros) {
  if (defenseheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete defenseheros_;
  }
  if (defenseheros) {
    set_has_defenseheros();
    defenseheros_ = defenseheros;
  } else {
    clear_has_defenseheros();
    defenseheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.DefenseHeros)
}

// optional uint32 difficulty = 16;
inline bool DB2LOBBY_CharAdvancedInfo::has_difficulty() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_difficulty() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_difficulty() {
  difficulty_ = 0u;
  clear_has_difficulty();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::difficulty() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.difficulty)
  return difficulty_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_difficulty(::google::protobuf::uint32 value) {
  set_has_difficulty();
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.difficulty)
}

// optional uint32 lastArenaTime = 17;
inline bool DB2LOBBY_CharAdvancedInfo::has_lastarenatime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_lastarenatime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_lastarenatime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_lastarenatime() {
  lastarenatime_ = 0u;
  clear_has_lastarenatime();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::lastarenatime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.lastArenaTime)
  return lastarenatime_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_lastarenatime(::google::protobuf::uint32 value) {
  set_has_lastarenatime();
  lastarenatime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.lastArenaTime)
}

// optional uint32 dailyArenaTimes = 18;
inline bool DB2LOBBY_CharAdvancedInfo::has_dailyarenatimes() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_dailyarenatimes() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_dailyarenatimes() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_dailyarenatimes() {
  dailyarenatimes_ = 0u;
  clear_has_dailyarenatimes();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::dailyarenatimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailyArenaTimes)
  return dailyarenatimes_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_dailyarenatimes(::google::protobuf::uint32 value) {
  set_has_dailyarenatimes();
  dailyarenatimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailyArenaTimes)
}

// optional uint32 bestArenaRank = 19;
inline bool DB2LOBBY_CharAdvancedInfo::has_bestarenarank() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_bestarenarank() {
  _has_bits_[0] |= 0x00040000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_bestarenarank() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_bestarenarank() {
  bestarenarank_ = 0u;
  clear_has_bestarenarank();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::bestarenarank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.bestArenaRank)
  return bestarenarank_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_bestarenarank(::google::protobuf::uint32 value) {
  set_has_bestarenarank();
  bestarenarank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.bestArenaRank)
}

// repeated uint32 arFormation = 20;
inline int DB2LOBBY_CharAdvancedInfo::arformation_size() const {
  return arformation_.size();
}
inline void DB2LOBBY_CharAdvancedInfo::clear_arformation() {
  arformation_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::arformation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arFormation)
  return arformation_.Get(index);
}
inline void DB2LOBBY_CharAdvancedInfo::set_arformation(int index, ::google::protobuf::uint32 value) {
  arformation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arFormation)
}
inline void DB2LOBBY_CharAdvancedInfo::add_arformation(::google::protobuf::uint32 value) {
  arformation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arFormation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_CharAdvancedInfo::arformation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arFormation)
  return arformation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_CharAdvancedInfo::mutable_arformation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arFormation)
  return &arformation_;
}

// optional uint32 totalArenaWin = 21;
inline bool DB2LOBBY_CharAdvancedInfo::has_totalarenawin() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_totalarenawin() {
  _has_bits_[0] |= 0x00100000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_totalarenawin() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_totalarenawin() {
  totalarenawin_ = 0u;
  clear_has_totalarenawin();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::totalarenawin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalArenaWin)
  return totalarenawin_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_totalarenawin(::google::protobuf::uint32 value) {
  set_has_totalarenawin();
  totalarenawin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalArenaWin)
}

// optional bytes arenaLog = 22;
inline bool DB2LOBBY_CharAdvancedInfo::has_arenalog() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_arenalog() {
  _has_bits_[0] |= 0x00200000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_arenalog() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_arenalog() {
  if (arenalog_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_->clear();
  }
  clear_has_arenalog();
}
inline const ::std::string& DB2LOBBY_CharAdvancedInfo::arenalog() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arenaLog)
  return *arenalog_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_arenalog(const ::std::string& value) {
  set_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_ = new ::std::string;
  }
  arenalog_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arenaLog)
}
inline void DB2LOBBY_CharAdvancedInfo::set_arenalog(const char* value) {
  set_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_ = new ::std::string;
  }
  arenalog_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arenaLog)
}
inline void DB2LOBBY_CharAdvancedInfo::set_arenalog(const void* value, size_t size) {
  set_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_ = new ::std::string;
  }
  arenalog_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arenaLog)
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::mutable_arenalog() {
  set_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arenaLog)
  return arenalog_;
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::release_arenalog() {
  clear_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = arenalog_;
    arenalog_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_arenalog(::std::string* arenalog) {
  if (arenalog_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete arenalog_;
  }
  if (arenalog) {
    set_has_arenalog();
    arenalog_ = arenalog;
  } else {
    clear_has_arenalog();
    arenalog_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.arenaLog)
}

// optional uint32 topThreeTime = 23;
inline bool DB2LOBBY_CharAdvancedInfo::has_topthreetime() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_topthreetime() {
  _has_bits_[0] |= 0x00400000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_topthreetime() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_topthreetime() {
  topthreetime_ = 0u;
  clear_has_topthreetime();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::topthreetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.topThreeTime)
  return topthreetime_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_topthreetime(::google::protobuf::uint32 value) {
  set_has_topthreetime();
  topthreetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.topThreeTime)
}

// repeated uint32 ackFormation = 24;
inline int DB2LOBBY_CharAdvancedInfo::ackformation_size() const {
  return ackformation_.size();
}
inline void DB2LOBBY_CharAdvancedInfo::clear_ackformation() {
  ackformation_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::ackformation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ackFormation)
  return ackformation_.Get(index);
}
inline void DB2LOBBY_CharAdvancedInfo::set_ackformation(int index, ::google::protobuf::uint32 value) {
  ackformation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ackFormation)
}
inline void DB2LOBBY_CharAdvancedInfo::add_ackformation(::google::protobuf::uint32 value) {
  ackformation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ackFormation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_CharAdvancedInfo::ackformation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ackFormation)
  return ackformation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_CharAdvancedInfo::mutable_ackformation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ackFormation)
  return &ackformation_;
}

// optional uint32 dailyOpenDiamondBoxTimes = 25;
inline bool DB2LOBBY_CharAdvancedInfo::has_dailyopendiamondboxtimes() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_dailyopendiamondboxtimes() {
  _has_bits_[0] |= 0x01000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_dailyopendiamondboxtimes() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_dailyopendiamondboxtimes() {
  dailyopendiamondboxtimes_ = 0u;
  clear_has_dailyopendiamondboxtimes();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::dailyopendiamondboxtimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailyOpenDiamondBoxTimes)
  return dailyopendiamondboxtimes_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_dailyopendiamondboxtimes(::google::protobuf::uint32 value) {
  set_has_dailyopendiamondboxtimes();
  dailyopendiamondboxtimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailyOpenDiamondBoxTimes)
}

// optional uint32 signIn = 26;
inline bool DB2LOBBY_CharAdvancedInfo::has_signin() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_signin() {
  _has_bits_[0] |= 0x02000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_signin() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_signin() {
  signin_ = 0u;
  clear_has_signin();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::signin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.signIn)
  return signin_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_signin(::google::protobuf::uint32 value) {
  set_has_signin();
  signin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.signIn)
}

// optional uint32 totalCopperMineNum = 29;
inline bool DB2LOBBY_CharAdvancedInfo::has_totalcopperminenum() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_totalcopperminenum() {
  _has_bits_[0] |= 0x04000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_totalcopperminenum() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_totalcopperminenum() {
  totalcopperminenum_ = 0u;
  clear_has_totalcopperminenum();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::totalcopperminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalCopperMineNum)
  return totalcopperminenum_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_totalcopperminenum(::google::protobuf::uint32 value) {
  set_has_totalcopperminenum();
  totalcopperminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalCopperMineNum)
}

// optional uint32 totalSilverMineNum = 30;
inline bool DB2LOBBY_CharAdvancedInfo::has_totalsilverminenum() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_totalsilverminenum() {
  _has_bits_[0] |= 0x08000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_totalsilverminenum() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_totalsilverminenum() {
  totalsilverminenum_ = 0u;
  clear_has_totalsilverminenum();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::totalsilverminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalSilverMineNum)
  return totalsilverminenum_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_totalsilverminenum(::google::protobuf::uint32 value) {
  set_has_totalsilverminenum();
  totalsilverminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalSilverMineNum)
}

// optional uint32 totalDiamondMineNum = 31;
inline bool DB2LOBBY_CharAdvancedInfo::has_totaldiamondminenum() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_totaldiamondminenum() {
  _has_bits_[0] |= 0x10000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_totaldiamondminenum() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_totaldiamondminenum() {
  totaldiamondminenum_ = 0u;
  clear_has_totaldiamondminenum();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::totaldiamondminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalDiamondMineNum)
  return totaldiamondminenum_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_totaldiamondminenum(::google::protobuf::uint32 value) {
  set_has_totaldiamondminenum();
  totaldiamondminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.totalDiamondMineNum)
}

// optional uint32 dailyCopperMineNum = 32;
inline bool DB2LOBBY_CharAdvancedInfo::has_dailycopperminenum() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_dailycopperminenum() {
  _has_bits_[0] |= 0x20000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_dailycopperminenum() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_dailycopperminenum() {
  dailycopperminenum_ = 0u;
  clear_has_dailycopperminenum();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::dailycopperminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailyCopperMineNum)
  return dailycopperminenum_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_dailycopperminenum(::google::protobuf::uint32 value) {
  set_has_dailycopperminenum();
  dailycopperminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailyCopperMineNum)
}

// optional uint32 dailySilverMineNum = 33;
inline bool DB2LOBBY_CharAdvancedInfo::has_dailysilverminenum() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_dailysilverminenum() {
  _has_bits_[0] |= 0x40000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_dailysilverminenum() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_dailysilverminenum() {
  dailysilverminenum_ = 0u;
  clear_has_dailysilverminenum();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::dailysilverminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailySilverMineNum)
  return dailysilverminenum_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_dailysilverminenum(::google::protobuf::uint32 value) {
  set_has_dailysilverminenum();
  dailysilverminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailySilverMineNum)
}

// optional uint32 dailyDiamondMineNum = 34;
inline bool DB2LOBBY_CharAdvancedInfo::has_dailydiamondminenum() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_dailydiamondminenum() {
  _has_bits_[0] |= 0x80000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_dailydiamondminenum() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_dailydiamondminenum() {
  dailydiamondminenum_ = 0u;
  clear_has_dailydiamondminenum();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::dailydiamondminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailyDiamondMineNum)
  return dailydiamondminenum_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_dailydiamondminenum(::google::protobuf::uint32 value) {
  set_has_dailydiamondminenum();
  dailydiamondminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.dailyDiamondMineNum)
}

// optional bytes friendInfo = 35;
inline bool DB2LOBBY_CharAdvancedInfo::has_friendinfo() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_friendinfo() {
  _has_bits_[1] |= 0x00000001u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_friendinfo() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_friendinfo() {
  if (friendinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_->clear();
  }
  clear_has_friendinfo();
}
inline const ::std::string& DB2LOBBY_CharAdvancedInfo::friendinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.friendInfo)
  return *friendinfo_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_friendinfo(const ::std::string& value) {
  set_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_ = new ::std::string;
  }
  friendinfo_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.friendInfo)
}
inline void DB2LOBBY_CharAdvancedInfo::set_friendinfo(const char* value) {
  set_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_ = new ::std::string;
  }
  friendinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CharAdvancedInfo.friendInfo)
}
inline void DB2LOBBY_CharAdvancedInfo::set_friendinfo(const void* value, size_t size) {
  set_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_ = new ::std::string;
  }
  friendinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CharAdvancedInfo.friendInfo)
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::mutable_friendinfo() {
  set_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.friendInfo)
  return friendinfo_;
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::release_friendinfo() {
  clear_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = friendinfo_;
    friendinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_friendinfo(::std::string* friendinfo) {
  if (friendinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete friendinfo_;
  }
  if (friendinfo) {
    set_has_friendinfo();
    friendinfo_ = friendinfo;
  } else {
    clear_has_friendinfo();
    friendinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.friendInfo)
}

// optional bytes shopFlush = 36;
inline bool DB2LOBBY_CharAdvancedInfo::has_shopflush() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_shopflush() {
  _has_bits_[1] |= 0x00000002u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_shopflush() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_shopflush() {
  if (shopflush_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_->clear();
  }
  clear_has_shopflush();
}
inline const ::std::string& DB2LOBBY_CharAdvancedInfo::shopflush() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.shopFlush)
  return *shopflush_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_shopflush(const ::std::string& value) {
  set_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_ = new ::std::string;
  }
  shopflush_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.shopFlush)
}
inline void DB2LOBBY_CharAdvancedInfo::set_shopflush(const char* value) {
  set_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_ = new ::std::string;
  }
  shopflush_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CharAdvancedInfo.shopFlush)
}
inline void DB2LOBBY_CharAdvancedInfo::set_shopflush(const void* value, size_t size) {
  set_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_ = new ::std::string;
  }
  shopflush_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CharAdvancedInfo.shopFlush)
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::mutable_shopflush() {
  set_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.shopFlush)
  return shopflush_;
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::release_shopflush() {
  clear_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = shopflush_;
    shopflush_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_shopflush(::std::string* shopflush) {
  if (shopflush_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete shopflush_;
  }
  if (shopflush) {
    set_has_shopflush();
    shopflush_ = shopflush;
  } else {
    clear_has_shopflush();
    shopflush_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.shopFlush)
}

// optional .TgsProtocol.DbSevenDayActive sevenDay = 37;
inline bool DB2LOBBY_CharAdvancedInfo::has_sevenday() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_sevenday() {
  _has_bits_[1] |= 0x00000004u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_sevenday() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_sevenday() {
  if (sevenday_ != NULL) sevenday_->::TgsProtocol::DbSevenDayActive::Clear();
  clear_has_sevenday();
}
inline const ::TgsProtocol::DbSevenDayActive& DB2LOBBY_CharAdvancedInfo::sevenday() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.sevenDay)
  return sevenday_ != NULL ? *sevenday_ : *default_instance_->sevenday_;
}
inline ::TgsProtocol::DbSevenDayActive* DB2LOBBY_CharAdvancedInfo::mutable_sevenday() {
  set_has_sevenday();
  if (sevenday_ == NULL) sevenday_ = new ::TgsProtocol::DbSevenDayActive;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.sevenDay)
  return sevenday_;
}
inline ::TgsProtocol::DbSevenDayActive* DB2LOBBY_CharAdvancedInfo::release_sevenday() {
  clear_has_sevenday();
  ::TgsProtocol::DbSevenDayActive* temp = sevenday_;
  sevenday_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_sevenday(::TgsProtocol::DbSevenDayActive* sevenday) {
  delete sevenday_;
  sevenday_ = sevenday;
  if (sevenday) {
    set_has_sevenday();
  } else {
    clear_has_sevenday();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.sevenDay)
}

// optional .TgsProtocol.DbRebelArmy rebelArmy = 38;
inline bool DB2LOBBY_CharAdvancedInfo::has_rebelarmy() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_rebelarmy() {
  _has_bits_[1] |= 0x00000008u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_rebelarmy() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_rebelarmy() {
  if (rebelarmy_ != NULL) rebelarmy_->::TgsProtocol::DbRebelArmy::Clear();
  clear_has_rebelarmy();
}
inline const ::TgsProtocol::DbRebelArmy& DB2LOBBY_CharAdvancedInfo::rebelarmy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.rebelArmy)
  return rebelarmy_ != NULL ? *rebelarmy_ : *default_instance_->rebelarmy_;
}
inline ::TgsProtocol::DbRebelArmy* DB2LOBBY_CharAdvancedInfo::mutable_rebelarmy() {
  set_has_rebelarmy();
  if (rebelarmy_ == NULL) rebelarmy_ = new ::TgsProtocol::DbRebelArmy;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.rebelArmy)
  return rebelarmy_;
}
inline ::TgsProtocol::DbRebelArmy* DB2LOBBY_CharAdvancedInfo::release_rebelarmy() {
  clear_has_rebelarmy();
  ::TgsProtocol::DbRebelArmy* temp = rebelarmy_;
  rebelarmy_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_rebelarmy(::TgsProtocol::DbRebelArmy* rebelarmy) {
  delete rebelarmy_;
  rebelarmy_ = rebelarmy;
  if (rebelarmy) {
    set_has_rebelarmy();
  } else {
    clear_has_rebelarmy();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.rebelArmy)
}

// optional .TgsProtocol.DbActionRecord action = 39;
inline bool DB2LOBBY_CharAdvancedInfo::has_action() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_action() {
  _has_bits_[1] |= 0x00000010u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_action() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_action() {
  if (action_ != NULL) action_->::TgsProtocol::DbActionRecord::Clear();
  clear_has_action();
}
inline const ::TgsProtocol::DbActionRecord& DB2LOBBY_CharAdvancedInfo::action() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.action)
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::TgsProtocol::DbActionRecord* DB2LOBBY_CharAdvancedInfo::mutable_action() {
  set_has_action();
  if (action_ == NULL) action_ = new ::TgsProtocol::DbActionRecord;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.action)
  return action_;
}
inline ::TgsProtocol::DbActionRecord* DB2LOBBY_CharAdvancedInfo::release_action() {
  clear_has_action();
  ::TgsProtocol::DbActionRecord* temp = action_;
  action_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_action(::TgsProtocol::DbActionRecord* action) {
  delete action_;
  action_ = action;
  if (action) {
    set_has_action();
  } else {
    clear_has_action();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.action)
}

// optional .TgsProtocol.DbRaidTeam raidTeam = 40;
inline bool DB2LOBBY_CharAdvancedInfo::has_raidteam() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_raidteam() {
  _has_bits_[1] |= 0x00000020u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_raidteam() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_raidteam() {
  if (raidteam_ != NULL) raidteam_->::TgsProtocol::DbRaidTeam::Clear();
  clear_has_raidteam();
}
inline const ::TgsProtocol::DbRaidTeam& DB2LOBBY_CharAdvancedInfo::raidteam() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.raidTeam)
  return raidteam_ != NULL ? *raidteam_ : *default_instance_->raidteam_;
}
inline ::TgsProtocol::DbRaidTeam* DB2LOBBY_CharAdvancedInfo::mutable_raidteam() {
  set_has_raidteam();
  if (raidteam_ == NULL) raidteam_ = new ::TgsProtocol::DbRaidTeam;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.raidTeam)
  return raidteam_;
}
inline ::TgsProtocol::DbRaidTeam* DB2LOBBY_CharAdvancedInfo::release_raidteam() {
  clear_has_raidteam();
  ::TgsProtocol::DbRaidTeam* temp = raidteam_;
  raidteam_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_raidteam(::TgsProtocol::DbRaidTeam* raidteam) {
  delete raidteam_;
  raidteam_ = raidteam;
  if (raidteam) {
    set_has_raidteam();
  } else {
    clear_has_raidteam();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.raidTeam)
}

// optional .TgsProtocol.DbMonthCard card = 41;
inline bool DB2LOBBY_CharAdvancedInfo::has_card() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_card() {
  _has_bits_[1] |= 0x00000040u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_card() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_card() {
  if (card_ != NULL) card_->::TgsProtocol::DbMonthCard::Clear();
  clear_has_card();
}
inline const ::TgsProtocol::DbMonthCard& DB2LOBBY_CharAdvancedInfo::card() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.card)
  return card_ != NULL ? *card_ : *default_instance_->card_;
}
inline ::TgsProtocol::DbMonthCard* DB2LOBBY_CharAdvancedInfo::mutable_card() {
  set_has_card();
  if (card_ == NULL) card_ = new ::TgsProtocol::DbMonthCard;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.card)
  return card_;
}
inline ::TgsProtocol::DbMonthCard* DB2LOBBY_CharAdvancedInfo::release_card() {
  clear_has_card();
  ::TgsProtocol::DbMonthCard* temp = card_;
  card_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_card(::TgsProtocol::DbMonthCard* card) {
  delete card_;
  card_ = card;
  if (card) {
    set_has_card();
  } else {
    clear_has_card();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.card)
}

// optional .TgsProtocol.DbDrop drop = 42;
inline bool DB2LOBBY_CharAdvancedInfo::has_drop() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_drop() {
  _has_bits_[1] |= 0x00000080u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_drop() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_drop() {
  if (drop_ != NULL) drop_->::TgsProtocol::DbDrop::Clear();
  clear_has_drop();
}
inline const ::TgsProtocol::DbDrop& DB2LOBBY_CharAdvancedInfo::drop() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.drop)
  return drop_ != NULL ? *drop_ : *default_instance_->drop_;
}
inline ::TgsProtocol::DbDrop* DB2LOBBY_CharAdvancedInfo::mutable_drop() {
  set_has_drop();
  if (drop_ == NULL) drop_ = new ::TgsProtocol::DbDrop;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.drop)
  return drop_;
}
inline ::TgsProtocol::DbDrop* DB2LOBBY_CharAdvancedInfo::release_drop() {
  clear_has_drop();
  ::TgsProtocol::DbDrop* temp = drop_;
  drop_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_drop(::TgsProtocol::DbDrop* drop) {
  delete drop_;
  drop_ = drop;
  if (drop) {
    set_has_drop();
  } else {
    clear_has_drop();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.drop)
}

// optional string goodsBuyed = 43;
inline bool DB2LOBBY_CharAdvancedInfo::has_goodsbuyed() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_goodsbuyed() {
  _has_bits_[1] |= 0x00000100u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_goodsbuyed() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_goodsbuyed() {
  if (goodsbuyed_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_->clear();
  }
  clear_has_goodsbuyed();
}
inline const ::std::string& DB2LOBBY_CharAdvancedInfo::goodsbuyed() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goodsBuyed)
  return *goodsbuyed_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_goodsbuyed(const ::std::string& value) {
  set_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_ = new ::std::string;
  }
  goodsbuyed_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goodsBuyed)
}
inline void DB2LOBBY_CharAdvancedInfo::set_goodsbuyed(const char* value) {
  set_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_ = new ::std::string;
  }
  goodsbuyed_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goodsBuyed)
}
inline void DB2LOBBY_CharAdvancedInfo::set_goodsbuyed(const char* value, size_t size) {
  set_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_ = new ::std::string;
  }
  goodsbuyed_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goodsBuyed)
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::mutable_goodsbuyed() {
  set_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goodsBuyed)
  return goodsbuyed_;
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::release_goodsbuyed() {
  clear_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = goodsbuyed_;
    goodsbuyed_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_goodsbuyed(::std::string* goodsbuyed) {
  if (goodsbuyed_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete goodsbuyed_;
  }
  if (goodsbuyed) {
    set_has_goodsbuyed();
    goodsbuyed_ = goodsbuyed;
  } else {
    clear_has_goodsbuyed();
    goodsbuyed_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.goodsBuyed)
}

// optional uint32 firstChargeChoose = 44;
inline bool DB2LOBBY_CharAdvancedInfo::has_firstchargechoose() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_firstchargechoose() {
  _has_bits_[1] |= 0x00000200u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_firstchargechoose() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_firstchargechoose() {
  firstchargechoose_ = 0u;
  clear_has_firstchargechoose();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::firstchargechoose() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.firstChargeChoose)
  return firstchargechoose_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_firstchargechoose(::google::protobuf::uint32 value) {
  set_has_firstchargechoose();
  firstchargechoose_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.firstChargeChoose)
}

// optional uint32 continueChargeChoose = 45;
inline bool DB2LOBBY_CharAdvancedInfo::has_continuechargechoose() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_continuechargechoose() {
  _has_bits_[1] |= 0x00000400u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_continuechargechoose() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_continuechargechoose() {
  continuechargechoose_ = 0u;
  clear_has_continuechargechoose();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::continuechargechoose() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.continueChargeChoose)
  return continuechargechoose_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_continuechargechoose(::google::protobuf::uint32 value) {
  set_has_continuechargechoose();
  continuechargechoose_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.continueChargeChoose)
}

// optional string continueCharge = 46;
inline bool DB2LOBBY_CharAdvancedInfo::has_continuecharge() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_continuecharge() {
  _has_bits_[1] |= 0x00000800u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_continuecharge() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_continuecharge() {
  if (continuecharge_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_->clear();
  }
  clear_has_continuecharge();
}
inline const ::std::string& DB2LOBBY_CharAdvancedInfo::continuecharge() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.continueCharge)
  return *continuecharge_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_continuecharge(const ::std::string& value) {
  set_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_ = new ::std::string;
  }
  continuecharge_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.continueCharge)
}
inline void DB2LOBBY_CharAdvancedInfo::set_continuecharge(const char* value) {
  set_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_ = new ::std::string;
  }
  continuecharge_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CharAdvancedInfo.continueCharge)
}
inline void DB2LOBBY_CharAdvancedInfo::set_continuecharge(const char* value, size_t size) {
  set_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_ = new ::std::string;
  }
  continuecharge_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CharAdvancedInfo.continueCharge)
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::mutable_continuecharge() {
  set_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.continueCharge)
  return continuecharge_;
}
inline ::std::string* DB2LOBBY_CharAdvancedInfo::release_continuecharge() {
  clear_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = continuecharge_;
    continuecharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_continuecharge(::std::string* continuecharge) {
  if (continuecharge_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete continuecharge_;
  }
  if (continuecharge) {
    set_has_continuecharge();
    continuecharge_ = continuecharge;
  } else {
    clear_has_continuecharge();
    continuecharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.continueCharge)
}

// optional .TgsProtocol.DbHandBook handbook = 47;
inline bool DB2LOBBY_CharAdvancedInfo::has_handbook() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_handbook() {
  _has_bits_[1] |= 0x00001000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_handbook() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_handbook() {
  if (handbook_ != NULL) handbook_->::TgsProtocol::DbHandBook::Clear();
  clear_has_handbook();
}
inline const ::TgsProtocol::DbHandBook& DB2LOBBY_CharAdvancedInfo::handbook() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.handbook)
  return handbook_ != NULL ? *handbook_ : *default_instance_->handbook_;
}
inline ::TgsProtocol::DbHandBook* DB2LOBBY_CharAdvancedInfo::mutable_handbook() {
  set_has_handbook();
  if (handbook_ == NULL) handbook_ = new ::TgsProtocol::DbHandBook;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.handbook)
  return handbook_;
}
inline ::TgsProtocol::DbHandBook* DB2LOBBY_CharAdvancedInfo::release_handbook() {
  clear_has_handbook();
  ::TgsProtocol::DbHandBook* temp = handbook_;
  handbook_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_handbook(::TgsProtocol::DbHandBook* handbook) {
  delete handbook_;
  handbook_ = handbook;
  if (handbook) {
    set_has_handbook();
  } else {
    clear_has_handbook();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.handbook)
}

// optional .TgsProtocol.DBSecretHole secrethole = 48;
inline bool DB2LOBBY_CharAdvancedInfo::has_secrethole() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_secrethole() {
  _has_bits_[1] |= 0x00002000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_secrethole() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_secrethole() {
  if (secrethole_ != NULL) secrethole_->::TgsProtocol::DBSecretHole::Clear();
  clear_has_secrethole();
}
inline const ::TgsProtocol::DBSecretHole& DB2LOBBY_CharAdvancedInfo::secrethole() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.secrethole)
  return secrethole_ != NULL ? *secrethole_ : *default_instance_->secrethole_;
}
inline ::TgsProtocol::DBSecretHole* DB2LOBBY_CharAdvancedInfo::mutable_secrethole() {
  set_has_secrethole();
  if (secrethole_ == NULL) secrethole_ = new ::TgsProtocol::DBSecretHole;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.secrethole)
  return secrethole_;
}
inline ::TgsProtocol::DBSecretHole* DB2LOBBY_CharAdvancedInfo::release_secrethole() {
  clear_has_secrethole();
  ::TgsProtocol::DBSecretHole* temp = secrethole_;
  secrethole_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_secrethole(::TgsProtocol::DBSecretHole* secrethole) {
  delete secrethole_;
  secrethole_ = secrethole;
  if (secrethole) {
    set_has_secrethole();
  } else {
    clear_has_secrethole();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.secrethole)
}

// optional .TgsProtocol.DBReturnTask returntask = 49;
inline bool DB2LOBBY_CharAdvancedInfo::has_returntask() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_returntask() {
  _has_bits_[1] |= 0x00004000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_returntask() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_returntask() {
  if (returntask_ != NULL) returntask_->::TgsProtocol::DBReturnTask::Clear();
  clear_has_returntask();
}
inline const ::TgsProtocol::DBReturnTask& DB2LOBBY_CharAdvancedInfo::returntask() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.returntask)
  return returntask_ != NULL ? *returntask_ : *default_instance_->returntask_;
}
inline ::TgsProtocol::DBReturnTask* DB2LOBBY_CharAdvancedInfo::mutable_returntask() {
  set_has_returntask();
  if (returntask_ == NULL) returntask_ = new ::TgsProtocol::DBReturnTask;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.returntask)
  return returntask_;
}
inline ::TgsProtocol::DBReturnTask* DB2LOBBY_CharAdvancedInfo::release_returntask() {
  clear_has_returntask();
  ::TgsProtocol::DBReturnTask* temp = returntask_;
  returntask_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_returntask(::TgsProtocol::DBReturnTask* returntask) {
  delete returntask_;
  returntask_ = returntask;
  if (returntask) {
    set_has_returntask();
  } else {
    clear_has_returntask();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.returntask)
}

// optional .TgsProtocol.PlayerTerritoryInfo territory = 50;
inline bool DB2LOBBY_CharAdvancedInfo::has_territory() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_territory() {
  _has_bits_[1] |= 0x00008000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_territory() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_territory() {
  if (territory_ != NULL) territory_->::TgsProtocol::PlayerTerritoryInfo::Clear();
  clear_has_territory();
}
inline const ::TgsProtocol::PlayerTerritoryInfo& DB2LOBBY_CharAdvancedInfo::territory() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.territory)
  return territory_ != NULL ? *territory_ : *default_instance_->territory_;
}
inline ::TgsProtocol::PlayerTerritoryInfo* DB2LOBBY_CharAdvancedInfo::mutable_territory() {
  set_has_territory();
  if (territory_ == NULL) territory_ = new ::TgsProtocol::PlayerTerritoryInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.territory)
  return territory_;
}
inline ::TgsProtocol::PlayerTerritoryInfo* DB2LOBBY_CharAdvancedInfo::release_territory() {
  clear_has_territory();
  ::TgsProtocol::PlayerTerritoryInfo* temp = territory_;
  territory_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_territory(::TgsProtocol::PlayerTerritoryInfo* territory) {
  delete territory_;
  territory_ = territory;
  if (territory) {
    set_has_territory();
  } else {
    clear_has_territory();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.territory)
}

// optional .TgsProtocol.DiagramMap diagramMap = 51;
inline bool DB2LOBBY_CharAdvancedInfo::has_diagrammap() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_diagrammap() {
  _has_bits_[1] |= 0x00010000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_diagrammap() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_diagrammap() {
  if (diagrammap_ != NULL) diagrammap_->::TgsProtocol::DiagramMap::Clear();
  clear_has_diagrammap();
}
inline const ::TgsProtocol::DiagramMap& DB2LOBBY_CharAdvancedInfo::diagrammap() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.diagramMap)
  return diagrammap_ != NULL ? *diagrammap_ : *default_instance_->diagrammap_;
}
inline ::TgsProtocol::DiagramMap* DB2LOBBY_CharAdvancedInfo::mutable_diagrammap() {
  set_has_diagrammap();
  if (diagrammap_ == NULL) diagrammap_ = new ::TgsProtocol::DiagramMap;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.diagramMap)
  return diagrammap_;
}
inline ::TgsProtocol::DiagramMap* DB2LOBBY_CharAdvancedInfo::release_diagrammap() {
  clear_has_diagrammap();
  ::TgsProtocol::DiagramMap* temp = diagrammap_;
  diagrammap_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_diagrammap(::TgsProtocol::DiagramMap* diagrammap) {
  delete diagrammap_;
  diagrammap_ = diagrammap;
  if (diagrammap) {
    set_has_diagrammap();
  } else {
    clear_has_diagrammap();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.diagramMap)
}

// optional .TgsProtocol.GhostList ghostActiveList = 52;
inline bool DB2LOBBY_CharAdvancedInfo::has_ghostactivelist() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_ghostactivelist() {
  _has_bits_[1] |= 0x00020000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_ghostactivelist() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_ghostactivelist() {
  if (ghostactivelist_ != NULL) ghostactivelist_->::TgsProtocol::GhostList::Clear();
  clear_has_ghostactivelist();
}
inline const ::TgsProtocol::GhostList& DB2LOBBY_CharAdvancedInfo::ghostactivelist() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ghostActiveList)
  return ghostactivelist_ != NULL ? *ghostactivelist_ : *default_instance_->ghostactivelist_;
}
inline ::TgsProtocol::GhostList* DB2LOBBY_CharAdvancedInfo::mutable_ghostactivelist() {
  set_has_ghostactivelist();
  if (ghostactivelist_ == NULL) ghostactivelist_ = new ::TgsProtocol::GhostList;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ghostActiveList)
  return ghostactivelist_;
}
inline ::TgsProtocol::GhostList* DB2LOBBY_CharAdvancedInfo::release_ghostactivelist() {
  clear_has_ghostactivelist();
  ::TgsProtocol::GhostList* temp = ghostactivelist_;
  ghostactivelist_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_ghostactivelist(::TgsProtocol::GhostList* ghostactivelist) {
  delete ghostactivelist_;
  ghostactivelist_ = ghostactivelist;
  if (ghostactivelist) {
    set_has_ghostactivelist();
  } else {
    clear_has_ghostactivelist();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.ghostActiveList)
}

// optional uint32 cheerId = 53;
inline bool DB2LOBBY_CharAdvancedInfo::has_cheerid() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_cheerid() {
  _has_bits_[1] |= 0x00040000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_cheerid() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_cheerid() {
  cheerid_ = 0u;
  clear_has_cheerid();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::cheerid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.cheerId)
  return cheerid_;
}
inline void DB2LOBBY_CharAdvancedInfo::set_cheerid(::google::protobuf::uint32 value) {
  set_has_cheerid();
  cheerid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.cheerId)
}

// repeated uint32 titleList = 54;
inline int DB2LOBBY_CharAdvancedInfo::titlelist_size() const {
  return titlelist_.size();
}
inline void DB2LOBBY_CharAdvancedInfo::clear_titlelist() {
  titlelist_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::titlelist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.titleList)
  return titlelist_.Get(index);
}
inline void DB2LOBBY_CharAdvancedInfo::set_titlelist(int index, ::google::protobuf::uint32 value) {
  titlelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.titleList)
}
inline void DB2LOBBY_CharAdvancedInfo::add_titlelist(::google::protobuf::uint32 value) {
  titlelist_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_CharAdvancedInfo.titleList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_CharAdvancedInfo::titlelist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.titleList)
  return titlelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_CharAdvancedInfo::mutable_titlelist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.titleList)
  return &titlelist_;
}

// optional .TgsProtocol.EpicBossList epicbosslist = 55;
inline bool DB2LOBBY_CharAdvancedInfo::has_epicbosslist() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_epicbosslist() {
  _has_bits_[1] |= 0x00100000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_epicbosslist() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_epicbosslist() {
  if (epicbosslist_ != NULL) epicbosslist_->::TgsProtocol::EpicBossList::Clear();
  clear_has_epicbosslist();
}
inline const ::TgsProtocol::EpicBossList& DB2LOBBY_CharAdvancedInfo::epicbosslist() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.epicbosslist)
  return epicbosslist_ != NULL ? *epicbosslist_ : *default_instance_->epicbosslist_;
}
inline ::TgsProtocol::EpicBossList* DB2LOBBY_CharAdvancedInfo::mutable_epicbosslist() {
  set_has_epicbosslist();
  if (epicbosslist_ == NULL) epicbosslist_ = new ::TgsProtocol::EpicBossList;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.epicbosslist)
  return epicbosslist_;
}
inline ::TgsProtocol::EpicBossList* DB2LOBBY_CharAdvancedInfo::release_epicbosslist() {
  clear_has_epicbosslist();
  ::TgsProtocol::EpicBossList* temp = epicbosslist_;
  epicbosslist_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_epicbosslist(::TgsProtocol::EpicBossList* epicbosslist) {
  delete epicbosslist_;
  epicbosslist_ = epicbosslist;
  if (epicbosslist) {
    set_has_epicbosslist();
  } else {
    clear_has_epicbosslist();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.epicbosslist)
}

// repeated uint32 sevengifts = 57;
inline int DB2LOBBY_CharAdvancedInfo::sevengifts_size() const {
  return sevengifts_.size();
}
inline void DB2LOBBY_CharAdvancedInfo::clear_sevengifts() {
  sevengifts_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::sevengifts(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.sevengifts)
  return sevengifts_.Get(index);
}
inline void DB2LOBBY_CharAdvancedInfo::set_sevengifts(int index, ::google::protobuf::uint32 value) {
  sevengifts_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.sevengifts)
}
inline void DB2LOBBY_CharAdvancedInfo::add_sevengifts(::google::protobuf::uint32 value) {
  sevengifts_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_CharAdvancedInfo.sevengifts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_CharAdvancedInfo::sevengifts() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.sevengifts)
  return sevengifts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_CharAdvancedInfo::mutable_sevengifts() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.sevengifts)
  return &sevengifts_;
}

// repeated uint32 onlineRewards = 58;
inline int DB2LOBBY_CharAdvancedInfo::onlinerewards_size() const {
  return onlinerewards_.size();
}
inline void DB2LOBBY_CharAdvancedInfo::clear_onlinerewards() {
  onlinerewards_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::onlinerewards(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.onlineRewards)
  return onlinerewards_.Get(index);
}
inline void DB2LOBBY_CharAdvancedInfo::set_onlinerewards(int index, ::google::protobuf::uint32 value) {
  onlinerewards_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.onlineRewards)
}
inline void DB2LOBBY_CharAdvancedInfo::add_onlinerewards(::google::protobuf::uint32 value) {
  onlinerewards_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_CharAdvancedInfo.onlineRewards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_CharAdvancedInfo::onlinerewards() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.onlineRewards)
  return onlinerewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_CharAdvancedInfo::mutable_onlinerewards() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.onlineRewards)
  return &onlinerewards_;
}

// optional .TgsProtocol.RetrieveDB retrieve = 59;
inline bool DB2LOBBY_CharAdvancedInfo::has_retrieve() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_retrieve() {
  _has_bits_[1] |= 0x00800000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_retrieve() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_retrieve() {
  if (retrieve_ != NULL) retrieve_->::TgsProtocol::RetrieveDB::Clear();
  clear_has_retrieve();
}
inline const ::TgsProtocol::RetrieveDB& DB2LOBBY_CharAdvancedInfo::retrieve() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.retrieve)
  return retrieve_ != NULL ? *retrieve_ : *default_instance_->retrieve_;
}
inline ::TgsProtocol::RetrieveDB* DB2LOBBY_CharAdvancedInfo::mutable_retrieve() {
  set_has_retrieve();
  if (retrieve_ == NULL) retrieve_ = new ::TgsProtocol::RetrieveDB;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.retrieve)
  return retrieve_;
}
inline ::TgsProtocol::RetrieveDB* DB2LOBBY_CharAdvancedInfo::release_retrieve() {
  clear_has_retrieve();
  ::TgsProtocol::RetrieveDB* temp = retrieve_;
  retrieve_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_retrieve(::TgsProtocol::RetrieveDB* retrieve) {
  delete retrieve_;
  retrieve_ = retrieve;
  if (retrieve) {
    set_has_retrieve();
  } else {
    clear_has_retrieve();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.retrieve)
}

// repeated .TgsProtocol.PassWordState chatpasswd = 60;
inline int DB2LOBBY_CharAdvancedInfo::chatpasswd_size() const {
  return chatpasswd_.size();
}
inline void DB2LOBBY_CharAdvancedInfo::clear_chatpasswd() {
  chatpasswd_.Clear();
}
inline const ::TgsProtocol::PassWordState& DB2LOBBY_CharAdvancedInfo::chatpasswd(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatpasswd)
  return chatpasswd_.Get(index);
}
inline ::TgsProtocol::PassWordState* DB2LOBBY_CharAdvancedInfo::mutable_chatpasswd(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatpasswd)
  return chatpasswd_.Mutable(index);
}
inline ::TgsProtocol::PassWordState* DB2LOBBY_CharAdvancedInfo::add_chatpasswd() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatpasswd)
  return chatpasswd_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState >&
DB2LOBBY_CharAdvancedInfo::chatpasswd() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatpasswd)
  return chatpasswd_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState >*
DB2LOBBY_CharAdvancedInfo::mutable_chatpasswd() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatpasswd)
  return &chatpasswd_;
}

// repeated uint32 chatCount = 61;
inline int DB2LOBBY_CharAdvancedInfo::chatcount_size() const {
  return chatcount_.size();
}
inline void DB2LOBBY_CharAdvancedInfo::clear_chatcount() {
  chatcount_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBY_CharAdvancedInfo::chatcount(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatCount)
  return chatcount_.Get(index);
}
inline void DB2LOBBY_CharAdvancedInfo::set_chatcount(int index, ::google::protobuf::uint32 value) {
  chatcount_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatCount)
}
inline void DB2LOBBY_CharAdvancedInfo::add_chatcount(::google::protobuf::uint32 value) {
  chatcount_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBY_CharAdvancedInfo::chatcount() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatCount)
  return chatcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBY_CharAdvancedInfo::mutable_chatcount() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_CharAdvancedInfo.chatCount)
  return &chatcount_;
}

// optional .TgsProtocol.DBServerCompareGot compare_gots = 62;
inline bool DB2LOBBY_CharAdvancedInfo::has_compare_gots() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_compare_gots() {
  _has_bits_[1] |= 0x04000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_compare_gots() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_compare_gots() {
  if (compare_gots_ != NULL) compare_gots_->::TgsProtocol::DBServerCompareGot::Clear();
  clear_has_compare_gots();
}
inline const ::TgsProtocol::DBServerCompareGot& DB2LOBBY_CharAdvancedInfo::compare_gots() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.compare_gots)
  return compare_gots_ != NULL ? *compare_gots_ : *default_instance_->compare_gots_;
}
inline ::TgsProtocol::DBServerCompareGot* DB2LOBBY_CharAdvancedInfo::mutable_compare_gots() {
  set_has_compare_gots();
  if (compare_gots_ == NULL) compare_gots_ = new ::TgsProtocol::DBServerCompareGot;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.compare_gots)
  return compare_gots_;
}
inline ::TgsProtocol::DBServerCompareGot* DB2LOBBY_CharAdvancedInfo::release_compare_gots() {
  clear_has_compare_gots();
  ::TgsProtocol::DBServerCompareGot* temp = compare_gots_;
  compare_gots_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_compare_gots(::TgsProtocol::DBServerCompareGot* compare_gots) {
  delete compare_gots_;
  compare_gots_ = compare_gots;
  if (compare_gots) {
    set_has_compare_gots();
  } else {
    clear_has_compare_gots();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.compare_gots)
}

// optional .TgsProtocol.FarmDB farm = 63;
inline bool DB2LOBBY_CharAdvancedInfo::has_farm() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void DB2LOBBY_CharAdvancedInfo::set_has_farm() {
  _has_bits_[1] |= 0x08000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_has_farm() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void DB2LOBBY_CharAdvancedInfo::clear_farm() {
  if (farm_ != NULL) farm_->::TgsProtocol::FarmDB::Clear();
  clear_has_farm();
}
inline const ::TgsProtocol::FarmDB& DB2LOBBY_CharAdvancedInfo::farm() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CharAdvancedInfo.farm)
  return farm_ != NULL ? *farm_ : *default_instance_->farm_;
}
inline ::TgsProtocol::FarmDB* DB2LOBBY_CharAdvancedInfo::mutable_farm() {
  set_has_farm();
  if (farm_ == NULL) farm_ = new ::TgsProtocol::FarmDB;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CharAdvancedInfo.farm)
  return farm_;
}
inline ::TgsProtocol::FarmDB* DB2LOBBY_CharAdvancedInfo::release_farm() {
  clear_has_farm();
  ::TgsProtocol::FarmDB* temp = farm_;
  farm_ = NULL;
  return temp;
}
inline void DB2LOBBY_CharAdvancedInfo::set_allocated_farm(::TgsProtocol::FarmDB* farm) {
  delete farm_;
  farm_ = farm;
  if (farm) {
    set_has_farm();
  } else {
    clear_has_farm();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CharAdvancedInfo.farm)
}

// -------------------------------------------------------------------

// LOBBY2DB_LoadCharListReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_CHARLIST_REQ];
inline bool LOBBY2DB_LoadCharListReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_LoadCharListReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_LoadCharListReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_LoadCharListReq::clear_cmdid() {
  cmdid_ = 300006;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_LoadCharListReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadCharListReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_LoadCharListReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadCharListReq.cmdId)
}

// required uint64 accountId = 2;
inline bool LOBBY2DB_LoadCharListReq::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_LoadCharListReq::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_LoadCharListReq::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_LoadCharListReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::uint64 LOBBY2DB_LoadCharListReq::accountid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadCharListReq.accountId)
  return accountid_;
}
inline void LOBBY2DB_LoadCharListReq::set_accountid(::google::protobuf::uint64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadCharListReq.accountId)
}

// required uint64 sessionid = 3;
inline bool LOBBY2DB_LoadCharListReq::has_sessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_LoadCharListReq::set_has_sessionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_LoadCharListReq::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_LoadCharListReq::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::uint64 LOBBY2DB_LoadCharListReq::sessionid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadCharListReq.sessionid)
  return sessionid_;
}
inline void LOBBY2DB_LoadCharListReq::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadCharListReq.sessionid)
}

// -------------------------------------------------------------------

// SimpleDBCharInfo

// required uint64 charId = 1;
inline bool SimpleDBCharInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimpleDBCharInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimpleDBCharInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimpleDBCharInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 SimpleDBCharInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SimpleDBCharInfo.charId)
  return charid_;
}
inline void SimpleDBCharInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.SimpleDBCharInfo.charId)
}

// optional bytes charName = 2;
inline bool SimpleDBCharInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimpleDBCharInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimpleDBCharInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimpleDBCharInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& SimpleDBCharInfo::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SimpleDBCharInfo.charName)
  return *charname_;
}
inline void SimpleDBCharInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.SimpleDBCharInfo.charName)
}
inline void SimpleDBCharInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.SimpleDBCharInfo.charName)
}
inline void SimpleDBCharInfo::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.SimpleDBCharInfo.charName)
}
inline ::std::string* SimpleDBCharInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.SimpleDBCharInfo.charName)
  return charname_;
}
inline ::std::string* SimpleDBCharInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SimpleDBCharInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.SimpleDBCharInfo.charName)
}

// optional uint32 profession = 3;
inline bool SimpleDBCharInfo::has_profession() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimpleDBCharInfo::set_has_profession() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimpleDBCharInfo::clear_has_profession() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimpleDBCharInfo::clear_profession() {
  profession_ = 0u;
  clear_has_profession();
}
inline ::google::protobuf::uint32 SimpleDBCharInfo::profession() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SimpleDBCharInfo.profession)
  return profession_;
}
inline void SimpleDBCharInfo::set_profession(::google::protobuf::uint32 value) {
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.SimpleDBCharInfo.profession)
}

// optional uint32 level = 4;
inline bool SimpleDBCharInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SimpleDBCharInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SimpleDBCharInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SimpleDBCharInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SimpleDBCharInfo::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SimpleDBCharInfo.level)
  return level_;
}
inline void SimpleDBCharInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.SimpleDBCharInfo.level)
}

// optional bytes avatar = 5;
inline bool SimpleDBCharInfo::has_avatar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SimpleDBCharInfo::set_has_avatar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SimpleDBCharInfo::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SimpleDBCharInfo::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& SimpleDBCharInfo::avatar() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.SimpleDBCharInfo.avatar)
  return *avatar_;
}
inline void SimpleDBCharInfo::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.SimpleDBCharInfo.avatar)
}
inline void SimpleDBCharInfo::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.SimpleDBCharInfo.avatar)
}
inline void SimpleDBCharInfo::set_avatar(const void* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.SimpleDBCharInfo.avatar)
}
inline ::std::string* SimpleDBCharInfo::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.SimpleDBCharInfo.avatar)
  return avatar_;
}
inline ::std::string* SimpleDBCharInfo::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SimpleDBCharInfo::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.SimpleDBCharInfo.avatar)
}

// -------------------------------------------------------------------

// DB2LOBBY_LoadCharListRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_CHARLIST_RET];
inline bool DB2LOBBY_LoadCharListRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_LoadCharListRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_LoadCharListRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_LoadCharListRet::clear_cmdid() {
  cmdid_ = 350005;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_LoadCharListRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharListRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_LoadCharListRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharListRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_LoadCharListRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_LoadCharListRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_LoadCharListRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_LoadCharListRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadCharListRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharListRet.ret)
  return ret_;
}
inline void DB2LOBBY_LoadCharListRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharListRet.ret)
}

// required uint64 sessionid = 3;
inline bool DB2LOBBY_LoadCharListRet::has_sessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_LoadCharListRet::set_has_sessionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_LoadCharListRet::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_LoadCharListRet::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::uint64 DB2LOBBY_LoadCharListRet::sessionid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharListRet.sessionid)
  return sessionid_;
}
inline void DB2LOBBY_LoadCharListRet::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadCharListRet.sessionid)
}

// repeated .TgsProtocol.SimpleDBCharInfo charList = 4;
inline int DB2LOBBY_LoadCharListRet::charlist_size() const {
  return charlist_.size();
}
inline void DB2LOBBY_LoadCharListRet::clear_charlist() {
  charlist_.Clear();
}
inline const ::TgsProtocol::SimpleDBCharInfo& DB2LOBBY_LoadCharListRet::charlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadCharListRet.charList)
  return charlist_.Get(index);
}
inline ::TgsProtocol::SimpleDBCharInfo* DB2LOBBY_LoadCharListRet::mutable_charlist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadCharListRet.charList)
  return charlist_.Mutable(index);
}
inline ::TgsProtocol::SimpleDBCharInfo* DB2LOBBY_LoadCharListRet::add_charlist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadCharListRet.charList)
  return charlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SimpleDBCharInfo >&
DB2LOBBY_LoadCharListRet::charlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadCharListRet.charList)
  return charlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::SimpleDBCharInfo >*
DB2LOBBY_LoadCharListRet::mutable_charlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadCharListRet.charList)
  return &charlist_;
}

// -------------------------------------------------------------------

// LOBBY2DB_CreateCharReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CREATE_CHARACTER_REQ];
inline bool LOBBY2DB_CreateCharReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_CreateCharReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_CreateCharReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_CreateCharReq::clear_cmdid() {
  cmdid_ = 300001;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_CreateCharReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CreateCharReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_CreateCharReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CreateCharReq.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_CreateCharReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_CreateCharReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_CreateCharReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_CreateCharReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_CreateCharReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CreateCharReq.charId)
  return charid_;
}
inline void LOBBY2DB_CreateCharReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CreateCharReq.charId)
}

// required bytes charName = 3;
inline bool LOBBY2DB_CreateCharReq::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_CreateCharReq::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_CreateCharReq::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_CreateCharReq::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& LOBBY2DB_CreateCharReq::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CreateCharReq.charName)
  return *charname_;
}
inline void LOBBY2DB_CreateCharReq::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CreateCharReq.charName)
}
inline void LOBBY2DB_CreateCharReq::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_CreateCharReq.charName)
}
inline void LOBBY2DB_CreateCharReq::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_CreateCharReq.charName)
}
inline ::std::string* LOBBY2DB_CreateCharReq::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_CreateCharReq.charName)
  return charname_;
}
inline ::std::string* LOBBY2DB_CreateCharReq::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_CreateCharReq::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_CreateCharReq.charName)
}

// required string deviceId = 4;
inline bool LOBBY2DB_CreateCharReq::has_deviceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_CreateCharReq::set_has_deviceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_CreateCharReq::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_CreateCharReq::clear_deviceid() {
  if (deviceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_->clear();
  }
  clear_has_deviceid();
}
inline const ::std::string& LOBBY2DB_CreateCharReq::deviceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CreateCharReq.deviceId)
  return *deviceid_;
}
inline void LOBBY2DB_CreateCharReq::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CreateCharReq.deviceId)
}
inline void LOBBY2DB_CreateCharReq::set_deviceid(const char* value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_CreateCharReq.deviceId)
}
inline void LOBBY2DB_CreateCharReq::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_CreateCharReq.deviceId)
}
inline ::std::string* LOBBY2DB_CreateCharReq::mutable_deviceid() {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_CreateCharReq.deviceId)
  return deviceid_;
}
inline ::std::string* LOBBY2DB_CreateCharReq::release_deviceid() {
  clear_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = deviceid_;
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_CreateCharReq::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete deviceid_;
  }
  if (deviceid) {
    set_has_deviceid();
    deviceid_ = deviceid;
  } else {
    clear_has_deviceid();
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_CreateCharReq.deviceId)
}

// -------------------------------------------------------------------

// DB2LOBBY_CreateCharRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_CREATE_CHARACTER_RET];
inline bool DB2LOBBY_CreateCharRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_CreateCharRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_CreateCharRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_CreateCharRet::clear_cmdid() {
  cmdid_ = 350001;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_CreateCharRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CreateCharRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_CreateCharRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CreateCharRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_CreateCharRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_CreateCharRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_CreateCharRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_CreateCharRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_CreateCharRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CreateCharRet.ret)
  return ret_;
}
inline void DB2LOBBY_CreateCharRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CreateCharRet.ret)
}

// required uint64 charId = 3;
inline bool DB2LOBBY_CreateCharRet::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_CreateCharRet::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_CreateCharRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_CreateCharRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_CreateCharRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CreateCharRet.charId)
  return charid_;
}
inline void DB2LOBBY_CreateCharRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CreateCharRet.charId)
}

// -------------------------------------------------------------------

// LOBBY2DB_SaveCharReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SAVE_CHARACTER_REQ];
inline bool LOBBY2DB_SaveCharReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_SaveCharReq::clear_cmdid() {
  cmdid_ = 300002;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_SaveCharReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_SaveCharReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.cmdId)
}

// required uint64 serialno = 2;
inline bool LOBBY2DB_SaveCharReq::has_serialno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_serialno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_serialno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_SaveCharReq::clear_serialno() {
  serialno_ = GOOGLE_ULONGLONG(0);
  clear_has_serialno();
}
inline ::google::protobuf::uint64 LOBBY2DB_SaveCharReq::serialno() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.serialno)
  return serialno_;
}
inline void LOBBY2DB_SaveCharReq::set_serialno(::google::protobuf::uint64 value) {
  set_has_serialno();
  serialno_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.serialno)
}

// required uint64 charid = 3;
inline bool LOBBY2DB_SaveCharReq::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_SaveCharReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_SaveCharReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.charid)
  return charid_;
}
inline void LOBBY2DB_SaveCharReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.charid)
}

// required bytes charname = 4;
inline bool LOBBY2DB_SaveCharReq::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_SaveCharReq::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.charname)
  return *charname_;
}
inline void LOBBY2DB_SaveCharReq::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.charname)
}
inline void LOBBY2DB_SaveCharReq::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.charname)
}
inline void LOBBY2DB_SaveCharReq::set_charname(const void* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.charname)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.charname)
  return charname_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.charname)
}

// required uint32 level = 5;
inline bool LOBBY2DB_SaveCharReq::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DB_SaveCharReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.level)
  return level_;
}
inline void LOBBY2DB_SaveCharReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.level)
}

// required uint32 exp = 6;
inline bool LOBBY2DB_SaveCharReq::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LOBBY2DB_SaveCharReq::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::exp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.exp)
  return exp_;
}
inline void LOBBY2DB_SaveCharReq::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.exp)
}

// required uint32 cash = 7;
inline bool LOBBY2DB_SaveCharReq::has_cash() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_cash() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_cash() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LOBBY2DB_SaveCharReq::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::cash() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.cash)
  return cash_;
}
inline void LOBBY2DB_SaveCharReq::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.cash)
}

// required uint32 gold = 8;
inline bool LOBBY2DB_SaveCharReq::has_gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_gold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_gold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LOBBY2DB_SaveCharReq::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::gold() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.gold)
  return gold_;
}
inline void LOBBY2DB_SaveCharReq::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.gold)
}

// required uint32 curStamina = 9;
inline bool LOBBY2DB_SaveCharReq::has_curstamina() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_curstamina() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_curstamina() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LOBBY2DB_SaveCharReq::clear_curstamina() {
  curstamina_ = 0u;
  clear_has_curstamina();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::curstamina() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.curStamina)
  return curstamina_;
}
inline void LOBBY2DB_SaveCharReq::set_curstamina(::google::protobuf::uint32 value) {
  set_has_curstamina();
  curstamina_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.curStamina)
}

// required uint32 maxStamina = 10;
inline bool LOBBY2DB_SaveCharReq::has_maxstamina() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_maxstamina() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_maxstamina() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LOBBY2DB_SaveCharReq::clear_maxstamina() {
  maxstamina_ = 0u;
  clear_has_maxstamina();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::maxstamina() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.maxStamina)
  return maxstamina_;
}
inline void LOBBY2DB_SaveCharReq::set_maxstamina(::google::protobuf::uint32 value) {
  set_has_maxstamina();
  maxstamina_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.maxStamina)
}

// required uint32 vipLevel = 11;
inline bool LOBBY2DB_SaveCharReq::has_viplevel() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_viplevel() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LOBBY2DB_SaveCharReq::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::viplevel() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.vipLevel)
  return viplevel_;
}
inline void LOBBY2DB_SaveCharReq::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.vipLevel)
}

// repeated uint32 formation = 12;
inline int LOBBY2DB_SaveCharReq::formation_size() const {
  return formation_.size();
}
inline void LOBBY2DB_SaveCharReq::clear_formation() {
  formation_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::formation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.formation)
  return formation_.Get(index);
}
inline void LOBBY2DB_SaveCharReq::set_formation(int index, ::google::protobuf::uint32 value) {
  formation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.formation)
}
inline void LOBBY2DB_SaveCharReq::add_formation(::google::protobuf::uint32 value) {
  formation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveCharReq.formation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveCharReq::formation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveCharReq.formation)
  return formation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveCharReq::mutable_formation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveCharReq.formation)
  return &formation_;
}

// required uint32 vipExp = 13;
inline bool LOBBY2DB_SaveCharReq::has_vipexp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_vipexp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_vipexp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LOBBY2DB_SaveCharReq::clear_vipexp() {
  vipexp_ = 0u;
  clear_has_vipexp();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::vipexp() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.vipExp)
  return vipexp_;
}
inline void LOBBY2DB_SaveCharReq::set_vipexp(::google::protobuf::uint32 value) {
  set_has_vipexp();
  vipexp_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.vipExp)
}

// required uint32 offlinetime = 14;
inline bool LOBBY2DB_SaveCharReq::has_offlinetime() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_offlinetime() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LOBBY2DB_SaveCharReq::clear_offlinetime() {
  offlinetime_ = 0u;
  clear_has_offlinetime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::offlinetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.offlinetime)
  return offlinetime_;
}
inline void LOBBY2DB_SaveCharReq::set_offlinetime(::google::protobuf::uint32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.offlinetime)
}

// required uint32 updateStaminaTime = 15;
inline bool LOBBY2DB_SaveCharReq::has_updatestaminatime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_updatestaminatime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_updatestaminatime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LOBBY2DB_SaveCharReq::clear_updatestaminatime() {
  updatestaminatime_ = 0u;
  clear_has_updatestaminatime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::updatestaminatime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.updateStaminaTime)
  return updatestaminatime_;
}
inline void LOBBY2DB_SaveCharReq::set_updatestaminatime(::google::protobuf::uint32 value) {
  set_has_updatestaminatime();
  updatestaminatime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.updateStaminaTime)
}

// required uint32 bitFlag = 16;
inline bool LOBBY2DB_SaveCharReq::has_bitflag() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_bitflag() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_bitflag() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LOBBY2DB_SaveCharReq::clear_bitflag() {
  bitflag_ = 0u;
  clear_has_bitflag();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::bitflag() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.bitFlag)
  return bitflag_;
}
inline void LOBBY2DB_SaveCharReq::set_bitflag(::google::protobuf::uint32 value) {
  set_has_bitflag();
  bitflag_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.bitFlag)
}

// optional bytes quest = 17;
inline bool LOBBY2DB_SaveCharReq::has_quest() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_quest() {
  _has_bits_[0] |= 0x00010000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_quest() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void LOBBY2DB_SaveCharReq::clear_quest() {
  if (quest_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_->clear();
  }
  clear_has_quest();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::quest() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.quest)
  return *quest_;
}
inline void LOBBY2DB_SaveCharReq::set_quest(const ::std::string& value) {
  set_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_ = new ::std::string;
  }
  quest_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.quest)
}
inline void LOBBY2DB_SaveCharReq::set_quest(const char* value) {
  set_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_ = new ::std::string;
  }
  quest_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.quest)
}
inline void LOBBY2DB_SaveCharReq::set_quest(const void* value, size_t size) {
  set_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_ = new ::std::string;
  }
  quest_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.quest)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_quest() {
  set_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    quest_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.quest)
  return quest_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_quest() {
  clear_has_quest();
  if (quest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = quest_;
    quest_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_quest(::std::string* quest) {
  if (quest_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete quest_;
  }
  if (quest) {
    set_has_quest();
    quest_ = quest;
  } else {
    clear_has_quest();
    quest_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.quest)
}

// optional bytes evaluation = 18;
inline bool LOBBY2DB_SaveCharReq::has_evaluation() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_evaluation() {
  _has_bits_[0] |= 0x00020000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_evaluation() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void LOBBY2DB_SaveCharReq::clear_evaluation() {
  if (evaluation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_->clear();
  }
  clear_has_evaluation();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::evaluation() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.evaluation)
  return *evaluation_;
}
inline void LOBBY2DB_SaveCharReq::set_evaluation(const ::std::string& value) {
  set_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_ = new ::std::string;
  }
  evaluation_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.evaluation)
}
inline void LOBBY2DB_SaveCharReq::set_evaluation(const char* value) {
  set_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_ = new ::std::string;
  }
  evaluation_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.evaluation)
}
inline void LOBBY2DB_SaveCharReq::set_evaluation(const void* value, size_t size) {
  set_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_ = new ::std::string;
  }
  evaluation_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.evaluation)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_evaluation() {
  set_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    evaluation_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.evaluation)
  return evaluation_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_evaluation() {
  clear_has_evaluation();
  if (evaluation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = evaluation_;
    evaluation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_evaluation(::std::string* evaluation) {
  if (evaluation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete evaluation_;
  }
  if (evaluation) {
    set_has_evaluation();
    evaluation_ = evaluation;
  } else {
    clear_has_evaluation();
    evaluation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.evaluation)
}

// optional bytes chapterReward = 19;
inline bool LOBBY2DB_SaveCharReq::has_chapterreward() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_chapterreward() {
  _has_bits_[0] |= 0x00040000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_chapterreward() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void LOBBY2DB_SaveCharReq::clear_chapterreward() {
  if (chapterreward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_->clear();
  }
  clear_has_chapterreward();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::chapterreward() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.chapterReward)
  return *chapterreward_;
}
inline void LOBBY2DB_SaveCharReq::set_chapterreward(const ::std::string& value) {
  set_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_ = new ::std::string;
  }
  chapterreward_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.chapterReward)
}
inline void LOBBY2DB_SaveCharReq::set_chapterreward(const char* value) {
  set_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_ = new ::std::string;
  }
  chapterreward_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.chapterReward)
}
inline void LOBBY2DB_SaveCharReq::set_chapterreward(const void* value, size_t size) {
  set_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_ = new ::std::string;
  }
  chapterreward_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.chapterReward)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_chapterreward() {
  set_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterreward_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.chapterReward)
  return chapterreward_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_chapterreward() {
  clear_has_chapterreward();
  if (chapterreward_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chapterreward_;
    chapterreward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_chapterreward(::std::string* chapterreward) {
  if (chapterreward_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chapterreward_;
  }
  if (chapterreward) {
    set_has_chapterreward();
    chapterreward_ = chapterreward;
  } else {
    clear_has_chapterreward();
    chapterreward_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.chapterReward)
}

// required uint32 heroBagNum = 20;
inline bool LOBBY2DB_SaveCharReq::has_herobagnum() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_herobagnum() {
  _has_bits_[0] |= 0x00080000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_herobagnum() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void LOBBY2DB_SaveCharReq::clear_herobagnum() {
  herobagnum_ = 0u;
  clear_has_herobagnum();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::herobagnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.heroBagNum)
  return herobagnum_;
}
inline void LOBBY2DB_SaveCharReq::set_herobagnum(::google::protobuf::uint32 value) {
  set_has_herobagnum();
  herobagnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.heroBagNum)
}

// optional bytes heroList = 21;
inline bool LOBBY2DB_SaveCharReq::has_herolist() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_herolist() {
  _has_bits_[0] |= 0x00100000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_herolist() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void LOBBY2DB_SaveCharReq::clear_herolist() {
  if (herolist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_->clear();
  }
  clear_has_herolist();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::herolist() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.heroList)
  return *herolist_;
}
inline void LOBBY2DB_SaveCharReq::set_herolist(const ::std::string& value) {
  set_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_ = new ::std::string;
  }
  herolist_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.heroList)
}
inline void LOBBY2DB_SaveCharReq::set_herolist(const char* value) {
  set_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_ = new ::std::string;
  }
  herolist_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.heroList)
}
inline void LOBBY2DB_SaveCharReq::set_herolist(const void* value, size_t size) {
  set_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_ = new ::std::string;
  }
  herolist_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.heroList)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_herolist() {
  set_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    herolist_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.heroList)
  return herolist_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_herolist() {
  clear_has_herolist();
  if (herolist_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = herolist_;
    herolist_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_herolist(::std::string* herolist) {
  if (herolist_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete herolist_;
  }
  if (herolist) {
    set_has_herolist();
    herolist_ = herolist;
  } else {
    clear_has_herolist();
    herolist_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.heroList)
}

// required uint32 gender = 22;
inline bool LOBBY2DB_SaveCharReq::has_gender() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_gender() {
  _has_bits_[0] |= 0x00200000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_gender() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void LOBBY2DB_SaveCharReq::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::gender() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.gender)
  return gender_;
}
inline void LOBBY2DB_SaveCharReq::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.gender)
}

// optional uint32 photo = 23;
inline bool LOBBY2DB_SaveCharReq::has_photo() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_photo() {
  _has_bits_[0] |= 0x00400000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_photo() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void LOBBY2DB_SaveCharReq::clear_photo() {
  photo_ = 0u;
  clear_has_photo();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::photo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.photo)
  return photo_;
}
inline void LOBBY2DB_SaveCharReq::set_photo(::google::protobuf::uint32 value) {
  set_has_photo();
  photo_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.photo)
}

// optional bytes essenceItem = 24;
inline bool LOBBY2DB_SaveCharReq::has_essenceitem() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_essenceitem() {
  _has_bits_[0] |= 0x00800000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_essenceitem() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void LOBBY2DB_SaveCharReq::clear_essenceitem() {
  if (essenceitem_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_->clear();
  }
  clear_has_essenceitem();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::essenceitem() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.essenceItem)
  return *essenceitem_;
}
inline void LOBBY2DB_SaveCharReq::set_essenceitem(const ::std::string& value) {
  set_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_ = new ::std::string;
  }
  essenceitem_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.essenceItem)
}
inline void LOBBY2DB_SaveCharReq::set_essenceitem(const char* value) {
  set_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_ = new ::std::string;
  }
  essenceitem_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.essenceItem)
}
inline void LOBBY2DB_SaveCharReq::set_essenceitem(const void* value, size_t size) {
  set_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_ = new ::std::string;
  }
  essenceitem_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.essenceItem)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_essenceitem() {
  set_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    essenceitem_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.essenceItem)
  return essenceitem_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_essenceitem() {
  clear_has_essenceitem();
  if (essenceitem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = essenceitem_;
    essenceitem_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_essenceitem(::std::string* essenceitem) {
  if (essenceitem_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete essenceitem_;
  }
  if (essenceitem) {
    set_has_essenceitem();
    essenceitem_ = essenceitem;
  } else {
    clear_has_essenceitem();
    essenceitem_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.essenceItem)
}

// repeated uint32 RefreshPrice = 25;
inline int LOBBY2DB_SaveCharReq::refreshprice_size() const {
  return refreshprice_.size();
}
inline void LOBBY2DB_SaveCharReq::clear_refreshprice() {
  refreshprice_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::refreshprice(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.RefreshPrice)
  return refreshprice_.Get(index);
}
inline void LOBBY2DB_SaveCharReq::set_refreshprice(int index, ::google::protobuf::uint32 value) {
  refreshprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.RefreshPrice)
}
inline void LOBBY2DB_SaveCharReq::add_refreshprice(::google::protobuf::uint32 value) {
  refreshprice_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveCharReq.RefreshPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveCharReq::refreshprice() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveCharReq.RefreshPrice)
  return refreshprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveCharReq::mutable_refreshprice() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveCharReq.RefreshPrice)
  return &refreshprice_;
}

// optional bytes festivity = 26;
inline bool LOBBY2DB_SaveCharReq::has_festivity() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_festivity() {
  _has_bits_[0] |= 0x02000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_festivity() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_festivity() {
  if (festivity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_->clear();
  }
  clear_has_festivity();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::festivity() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.festivity)
  return *festivity_;
}
inline void LOBBY2DB_SaveCharReq::set_festivity(const ::std::string& value) {
  set_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_ = new ::std::string;
  }
  festivity_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.festivity)
}
inline void LOBBY2DB_SaveCharReq::set_festivity(const char* value) {
  set_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_ = new ::std::string;
  }
  festivity_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.festivity)
}
inline void LOBBY2DB_SaveCharReq::set_festivity(const void* value, size_t size) {
  set_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_ = new ::std::string;
  }
  festivity_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.festivity)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_festivity() {
  set_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    festivity_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.festivity)
  return festivity_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_festivity() {
  clear_has_festivity();
  if (festivity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = festivity_;
    festivity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_festivity(::std::string* festivity) {
  if (festivity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete festivity_;
  }
  if (festivity) {
    set_has_festivity();
    festivity_ = festivity;
  } else {
    clear_has_festivity();
    festivity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.festivity)
}

// optional uint32 dayChatTimes = 27;
inline bool LOBBY2DB_SaveCharReq::has_daychattimes() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_daychattimes() {
  _has_bits_[0] |= 0x04000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_daychattimes() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_daychattimes() {
  daychattimes_ = 0u;
  clear_has_daychattimes();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::daychattimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.dayChatTimes)
  return daychattimes_;
}
inline void LOBBY2DB_SaveCharReq::set_daychattimes(::google::protobuf::uint32 value) {
  set_has_daychattimes();
  daychattimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.dayChatTimes)
}

// optional uint32 skillPoint = 28;
inline bool LOBBY2DB_SaveCharReq::has_skillpoint() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_skillpoint() {
  _has_bits_[0] |= 0x08000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_skillpoint() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_skillpoint() {
  skillpoint_ = 0u;
  clear_has_skillpoint();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::skillpoint() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.skillPoint)
  return skillpoint_;
}
inline void LOBBY2DB_SaveCharReq::set_skillpoint(::google::protobuf::uint32 value) {
  set_has_skillpoint();
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.skillPoint)
}

// optional uint32 updateSkillPointTime = 29;
inline bool LOBBY2DB_SaveCharReq::has_updateskillpointtime() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_updateskillpointtime() {
  _has_bits_[0] |= 0x10000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_updateskillpointtime() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_updateskillpointtime() {
  updateskillpointtime_ = 0u;
  clear_has_updateskillpointtime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::updateskillpointtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.updateSkillPointTime)
  return updateskillpointtime_;
}
inline void LOBBY2DB_SaveCharReq::set_updateskillpointtime(::google::protobuf::uint32 value) {
  set_has_updateskillpointtime();
  updateskillpointtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.updateSkillPointTime)
}

// optional uint32 energy = 30;
inline bool LOBBY2DB_SaveCharReq::has_energy() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_energy() {
  _has_bits_[0] |= 0x20000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_energy() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_energy() {
  energy_ = 0u;
  clear_has_energy();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::energy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.energy)
  return energy_;
}
inline void LOBBY2DB_SaveCharReq::set_energy(::google::protobuf::uint32 value) {
  set_has_energy();
  energy_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.energy)
}

// optional uint32 updateEnergyTime = 31;
inline bool LOBBY2DB_SaveCharReq::has_updateenergytime() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_updateenergytime() {
  _has_bits_[0] |= 0x40000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_updateenergytime() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_updateenergytime() {
  updateenergytime_ = 0u;
  clear_has_updateenergytime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::updateenergytime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.updateEnergyTime)
  return updateenergytime_;
}
inline void LOBBY2DB_SaveCharReq::set_updateenergytime(::google::protobuf::uint32 value) {
  set_has_updateenergytime();
  updateenergytime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.updateEnergyTime)
}

// optional bytes equipNew = 32;
inline bool LOBBY2DB_SaveCharReq::has_equipnew() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_equipnew() {
  _has_bits_[0] |= 0x80000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_equipnew() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_equipnew() {
  if (equipnew_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_->clear();
  }
  clear_has_equipnew();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::equipnew() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.equipNew)
  return *equipnew_;
}
inline void LOBBY2DB_SaveCharReq::set_equipnew(const ::std::string& value) {
  set_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_ = new ::std::string;
  }
  equipnew_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.equipNew)
}
inline void LOBBY2DB_SaveCharReq::set_equipnew(const char* value) {
  set_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_ = new ::std::string;
  }
  equipnew_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.equipNew)
}
inline void LOBBY2DB_SaveCharReq::set_equipnew(const void* value, size_t size) {
  set_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_ = new ::std::string;
  }
  equipnew_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.equipNew)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_equipnew() {
  set_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equipnew_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.equipNew)
  return equipnew_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_equipnew() {
  clear_has_equipnew();
  if (equipnew_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = equipnew_;
    equipnew_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_equipnew(::std::string* equipnew) {
  if (equipnew_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete equipnew_;
  }
  if (equipnew) {
    set_has_equipnew();
    equipnew_ = equipnew;
  } else {
    clear_has_equipnew();
    equipnew_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.equipNew)
}

// repeated uint32 arenaFormation = 33;
inline int LOBBY2DB_SaveCharReq::arenaformation_size() const {
  return arenaformation_.size();
}
inline void LOBBY2DB_SaveCharReq::clear_arenaformation() {
  arenaformation_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::arenaformation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.arenaFormation)
  return arenaformation_.Get(index);
}
inline void LOBBY2DB_SaveCharReq::set_arenaformation(int index, ::google::protobuf::uint32 value) {
  arenaformation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.arenaFormation)
}
inline void LOBBY2DB_SaveCharReq::add_arenaformation(::google::protobuf::uint32 value) {
  arenaformation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveCharReq.arenaFormation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveCharReq::arenaformation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveCharReq.arenaFormation)
  return arenaformation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveCharReq::mutable_arenaformation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveCharReq.arenaFormation)
  return &arenaformation_;
}

// optional uint32 recharge = 34;
inline bool LOBBY2DB_SaveCharReq::has_recharge() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_recharge() {
  _has_bits_[1] |= 0x00000002u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_recharge() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void LOBBY2DB_SaveCharReq::clear_recharge() {
  recharge_ = 0u;
  clear_has_recharge();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::recharge() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.recharge)
  return recharge_;
}
inline void LOBBY2DB_SaveCharReq::set_recharge(::google::protobuf::uint32 value) {
  set_has_recharge();
  recharge_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.recharge)
}

// optional uint32 progress = 35;
inline bool LOBBY2DB_SaveCharReq::has_progress() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_progress() {
  _has_bits_[1] |= 0x00000004u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_progress() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void LOBBY2DB_SaveCharReq::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::progress() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.progress)
  return progress_;
}
inline void LOBBY2DB_SaveCharReq::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.progress)
}

// optional bytes activity = 36;
inline bool LOBBY2DB_SaveCharReq::has_activity() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_activity() {
  _has_bits_[1] |= 0x00000008u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_activity() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void LOBBY2DB_SaveCharReq::clear_activity() {
  if (activity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_->clear();
  }
  clear_has_activity();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::activity() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.activity)
  return *activity_;
}
inline void LOBBY2DB_SaveCharReq::set_activity(const ::std::string& value) {
  set_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_ = new ::std::string;
  }
  activity_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.activity)
}
inline void LOBBY2DB_SaveCharReq::set_activity(const char* value) {
  set_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_ = new ::std::string;
  }
  activity_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.activity)
}
inline void LOBBY2DB_SaveCharReq::set_activity(const void* value, size_t size) {
  set_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_ = new ::std::string;
  }
  activity_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.activity)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_activity() {
  set_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activity_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.activity)
  return activity_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_activity() {
  clear_has_activity();
  if (activity_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = activity_;
    activity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_activity(::std::string* activity) {
  if (activity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete activity_;
  }
  if (activity) {
    set_has_activity();
    activity_ = activity;
  } else {
    clear_has_activity();
    activity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.activity)
}

// optional string assistFormation = 37;
inline bool LOBBY2DB_SaveCharReq::has_assistformation() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_assistformation() {
  _has_bits_[1] |= 0x00000010u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_assistformation() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void LOBBY2DB_SaveCharReq::clear_assistformation() {
  if (assistformation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_->clear();
  }
  clear_has_assistformation();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::assistformation() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.assistFormation)
  return *assistformation_;
}
inline void LOBBY2DB_SaveCharReq::set_assistformation(const ::std::string& value) {
  set_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_ = new ::std::string;
  }
  assistformation_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.assistFormation)
}
inline void LOBBY2DB_SaveCharReq::set_assistformation(const char* value) {
  set_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_ = new ::std::string;
  }
  assistformation_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.assistFormation)
}
inline void LOBBY2DB_SaveCharReq::set_assistformation(const char* value, size_t size) {
  set_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_ = new ::std::string;
  }
  assistformation_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.assistFormation)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_assistformation() {
  set_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    assistformation_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.assistFormation)
  return assistformation_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_assistformation() {
  clear_has_assistformation();
  if (assistformation_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = assistformation_;
    assistformation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_assistformation(::std::string* assistformation) {
  if (assistformation_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete assistformation_;
  }
  if (assistformation) {
    set_has_assistformation();
    assistformation_ = assistformation;
  } else {
    clear_has_assistformation();
    assistformation_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.assistFormation)
}

// optional uint64 effect = 38;
inline bool LOBBY2DB_SaveCharReq::has_effect() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_effect() {
  _has_bits_[1] |= 0x00000020u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_effect() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void LOBBY2DB_SaveCharReq::clear_effect() {
  effect_ = GOOGLE_ULONGLONG(0);
  clear_has_effect();
}
inline ::google::protobuf::uint64 LOBBY2DB_SaveCharReq::effect() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.effect)
  return effect_;
}
inline void LOBBY2DB_SaveCharReq::set_effect(::google::protobuf::uint64 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.effect)
}

// optional bytes chapterBox = 39;
inline bool LOBBY2DB_SaveCharReq::has_chapterbox() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_chapterbox() {
  _has_bits_[1] |= 0x00000040u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_chapterbox() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void LOBBY2DB_SaveCharReq::clear_chapterbox() {
  if (chapterbox_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_->clear();
  }
  clear_has_chapterbox();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::chapterbox() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.chapterBox)
  return *chapterbox_;
}
inline void LOBBY2DB_SaveCharReq::set_chapterbox(const ::std::string& value) {
  set_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_ = new ::std::string;
  }
  chapterbox_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.chapterBox)
}
inline void LOBBY2DB_SaveCharReq::set_chapterbox(const char* value) {
  set_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_ = new ::std::string;
  }
  chapterbox_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.chapterBox)
}
inline void LOBBY2DB_SaveCharReq::set_chapterbox(const void* value, size_t size) {
  set_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_ = new ::std::string;
  }
  chapterbox_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.chapterBox)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_chapterbox() {
  set_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chapterbox_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.chapterBox)
  return chapterbox_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_chapterbox() {
  clear_has_chapterbox();
  if (chapterbox_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chapterbox_;
    chapterbox_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_chapterbox(::std::string* chapterbox) {
  if (chapterbox_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chapterbox_;
  }
  if (chapterbox) {
    set_has_chapterbox();
    chapterbox_ = chapterbox;
  } else {
    clear_has_chapterbox();
    chapterbox_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.chapterBox)
}

// optional string coins = 40;
inline bool LOBBY2DB_SaveCharReq::has_coins() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_coins() {
  _has_bits_[1] |= 0x00000080u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_coins() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void LOBBY2DB_SaveCharReq::clear_coins() {
  if (coins_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_->clear();
  }
  clear_has_coins();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::coins() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.coins)
  return *coins_;
}
inline void LOBBY2DB_SaveCharReq::set_coins(const ::std::string& value) {
  set_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_ = new ::std::string;
  }
  coins_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.coins)
}
inline void LOBBY2DB_SaveCharReq::set_coins(const char* value) {
  set_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_ = new ::std::string;
  }
  coins_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.coins)
}
inline void LOBBY2DB_SaveCharReq::set_coins(const char* value, size_t size) {
  set_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_ = new ::std::string;
  }
  coins_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.coins)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_coins() {
  set_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coins_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.coins)
  return coins_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_coins() {
  clear_has_coins();
  if (coins_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = coins_;
    coins_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_coins(::std::string* coins) {
  if (coins_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete coins_;
  }
  if (coins) {
    set_has_coins();
    coins_ = coins;
  } else {
    clear_has_coins();
    coins_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.coins)
}

// required uint32 maxNormalChallenge = 41;
inline bool LOBBY2DB_SaveCharReq::has_maxnormalchallenge() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_maxnormalchallenge() {
  _has_bits_[1] |= 0x00000100u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_maxnormalchallenge() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void LOBBY2DB_SaveCharReq::clear_maxnormalchallenge() {
  maxnormalchallenge_ = 0u;
  clear_has_maxnormalchallenge();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::maxnormalchallenge() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.maxNormalChallenge)
  return maxnormalchallenge_;
}
inline void LOBBY2DB_SaveCharReq::set_maxnormalchallenge(::google::protobuf::uint32 value) {
  set_has_maxnormalchallenge();
  maxnormalchallenge_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.maxNormalChallenge)
}

// required uint32 maxEliteChallenge = 42;
inline bool LOBBY2DB_SaveCharReq::has_maxelitechallenge() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_maxelitechallenge() {
  _has_bits_[1] |= 0x00000200u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_maxelitechallenge() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void LOBBY2DB_SaveCharReq::clear_maxelitechallenge() {
  maxelitechallenge_ = 0u;
  clear_has_maxelitechallenge();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::maxelitechallenge() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.maxEliteChallenge)
  return maxelitechallenge_;
}
inline void LOBBY2DB_SaveCharReq::set_maxelitechallenge(::google::protobuf::uint32 value) {
  set_has_maxelitechallenge();
  maxelitechallenge_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.maxEliteChallenge)
}

// required uint32 leavePoint = 43;
inline bool LOBBY2DB_SaveCharReq::has_leavepoint() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_leavepoint() {
  _has_bits_[1] |= 0x00000400u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_leavepoint() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void LOBBY2DB_SaveCharReq::clear_leavepoint() {
  leavepoint_ = 0u;
  clear_has_leavepoint();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::leavepoint() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.leavePoint)
  return leavepoint_;
}
inline void LOBBY2DB_SaveCharReq::set_leavepoint(::google::protobuf::uint32 value) {
  set_has_leavepoint();
  leavepoint_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.leavePoint)
}

// required uint32 onlinetime = 44;
inline bool LOBBY2DB_SaveCharReq::has_onlinetime() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_onlinetime() {
  _has_bits_[1] |= 0x00000800u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_onlinetime() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void LOBBY2DB_SaveCharReq::clear_onlinetime() {
  onlinetime_ = 0u;
  clear_has_onlinetime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::onlinetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.onlinetime)
  return onlinetime_;
}
inline void LOBBY2DB_SaveCharReq::set_onlinetime(::google::protobuf::uint32 value) {
  set_has_onlinetime();
  onlinetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.onlinetime)
}

// required uint32 gmflushtime = 45;
inline bool LOBBY2DB_SaveCharReq::has_gmflushtime() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_gmflushtime() {
  _has_bits_[1] |= 0x00001000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_gmflushtime() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void LOBBY2DB_SaveCharReq::clear_gmflushtime() {
  gmflushtime_ = 0u;
  clear_has_gmflushtime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::gmflushtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.gmflushtime)
  return gmflushtime_;
}
inline void LOBBY2DB_SaveCharReq::set_gmflushtime(::google::protobuf::uint32 value) {
  set_has_gmflushtime();
  gmflushtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.gmflushtime)
}

// optional uint32 isshopbuy = 46;
inline bool LOBBY2DB_SaveCharReq::has_isshopbuy() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_isshopbuy() {
  _has_bits_[1] |= 0x00002000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_isshopbuy() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void LOBBY2DB_SaveCharReq::clear_isshopbuy() {
  isshopbuy_ = 0u;
  clear_has_isshopbuy();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::isshopbuy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.isshopbuy)
  return isshopbuy_;
}
inline void LOBBY2DB_SaveCharReq::set_isshopbuy(::google::protobuf::uint32 value) {
  set_has_isshopbuy();
  isshopbuy_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.isshopbuy)
}

// required uint32 diamondPay = 47;
inline bool LOBBY2DB_SaveCharReq::has_diamondpay() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_diamondpay() {
  _has_bits_[1] |= 0x00004000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_diamondpay() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void LOBBY2DB_SaveCharReq::clear_diamondpay() {
  diamondpay_ = 0u;
  clear_has_diamondpay();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::diamondpay() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.diamondPay)
  return diamondpay_;
}
inline void LOBBY2DB_SaveCharReq::set_diamondpay(::google::protobuf::uint32 value) {
  set_has_diamondpay();
  diamondpay_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.diamondPay)
}

// optional string recommfriends = 48;
inline bool LOBBY2DB_SaveCharReq::has_recommfriends() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_recommfriends() {
  _has_bits_[1] |= 0x00008000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_recommfriends() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void LOBBY2DB_SaveCharReq::clear_recommfriends() {
  if (recommfriends_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_->clear();
  }
  clear_has_recommfriends();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::recommfriends() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.recommfriends)
  return *recommfriends_;
}
inline void LOBBY2DB_SaveCharReq::set_recommfriends(const ::std::string& value) {
  set_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_ = new ::std::string;
  }
  recommfriends_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.recommfriends)
}
inline void LOBBY2DB_SaveCharReq::set_recommfriends(const char* value) {
  set_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_ = new ::std::string;
  }
  recommfriends_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.recommfriends)
}
inline void LOBBY2DB_SaveCharReq::set_recommfriends(const char* value, size_t size) {
  set_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_ = new ::std::string;
  }
  recommfriends_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.recommfriends)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_recommfriends() {
  set_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recommfriends_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.recommfriends)
  return recommfriends_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_recommfriends() {
  clear_has_recommfriends();
  if (recommfriends_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = recommfriends_;
    recommfriends_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_recommfriends(::std::string* recommfriends) {
  if (recommfriends_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recommfriends_;
  }
  if (recommfriends) {
    set_has_recommfriends();
    recommfriends_ = recommfriends;
  } else {
    clear_has_recommfriends();
    recommfriends_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.recommfriends)
}

// optional bytes prizeInfo = 49;
inline bool LOBBY2DB_SaveCharReq::has_prizeinfo() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_prizeinfo() {
  _has_bits_[1] |= 0x00010000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_prizeinfo() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void LOBBY2DB_SaveCharReq::clear_prizeinfo() {
  if (prizeinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_->clear();
  }
  clear_has_prizeinfo();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::prizeinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.prizeInfo)
  return *prizeinfo_;
}
inline void LOBBY2DB_SaveCharReq::set_prizeinfo(const ::std::string& value) {
  set_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_ = new ::std::string;
  }
  prizeinfo_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.prizeInfo)
}
inline void LOBBY2DB_SaveCharReq::set_prizeinfo(const char* value) {
  set_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_ = new ::std::string;
  }
  prizeinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.prizeInfo)
}
inline void LOBBY2DB_SaveCharReq::set_prizeinfo(const void* value, size_t size) {
  set_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_ = new ::std::string;
  }
  prizeinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.prizeInfo)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_prizeinfo() {
  set_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    prizeinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.prizeInfo)
  return prizeinfo_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_prizeinfo() {
  clear_has_prizeinfo();
  if (prizeinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = prizeinfo_;
    prizeinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_prizeinfo(::std::string* prizeinfo) {
  if (prizeinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete prizeinfo_;
  }
  if (prizeinfo) {
    set_has_prizeinfo();
    prizeinfo_ = prizeinfo;
  } else {
    clear_has_prizeinfo();
    prizeinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.prizeInfo)
}

// optional uint32 avoidBattle = 50;
inline bool LOBBY2DB_SaveCharReq::has_avoidbattle() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_avoidbattle() {
  _has_bits_[1] |= 0x00020000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_avoidbattle() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void LOBBY2DB_SaveCharReq::clear_avoidbattle() {
  avoidbattle_ = 0u;
  clear_has_avoidbattle();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::avoidbattle() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.avoidBattle)
  return avoidbattle_;
}
inline void LOBBY2DB_SaveCharReq::set_avoidbattle(::google::protobuf::uint32 value) {
  set_has_avoidbattle();
  avoidbattle_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.avoidBattle)
}

// optional uint32 accOnlineTime = 51;
inline bool LOBBY2DB_SaveCharReq::has_acconlinetime() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_acconlinetime() {
  _has_bits_[1] |= 0x00040000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_acconlinetime() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void LOBBY2DB_SaveCharReq::clear_acconlinetime() {
  acconlinetime_ = 0u;
  clear_has_acconlinetime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::acconlinetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.accOnlineTime)
  return acconlinetime_;
}
inline void LOBBY2DB_SaveCharReq::set_acconlinetime(::google::protobuf::uint32 value) {
  set_has_acconlinetime();
  acconlinetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.accOnlineTime)
}

// optional string itemGot = 52;
inline bool LOBBY2DB_SaveCharReq::has_itemgot() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_itemgot() {
  _has_bits_[1] |= 0x00080000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_itemgot() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void LOBBY2DB_SaveCharReq::clear_itemgot() {
  if (itemgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_->clear();
  }
  clear_has_itemgot();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::itemgot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.itemGot)
  return *itemgot_;
}
inline void LOBBY2DB_SaveCharReq::set_itemgot(const ::std::string& value) {
  set_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_ = new ::std::string;
  }
  itemgot_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.itemGot)
}
inline void LOBBY2DB_SaveCharReq::set_itemgot(const char* value) {
  set_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_ = new ::std::string;
  }
  itemgot_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.itemGot)
}
inline void LOBBY2DB_SaveCharReq::set_itemgot(const char* value, size_t size) {
  set_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_ = new ::std::string;
  }
  itemgot_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.itemGot)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_itemgot() {
  set_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemgot_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.itemGot)
  return itemgot_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_itemgot() {
  clear_has_itemgot();
  if (itemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemgot_;
    itemgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_itemgot(::std::string* itemgot) {
  if (itemgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemgot_;
  }
  if (itemgot) {
    set_has_itemgot();
    itemgot_ = itemgot;
  } else {
    clear_has_itemgot();
    itemgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.itemGot)
}

// repeated uint32 buyedPrice = 53;
inline int LOBBY2DB_SaveCharReq::buyedprice_size() const {
  return buyedprice_.size();
}
inline void LOBBY2DB_SaveCharReq::clear_buyedprice() {
  buyedprice_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::buyedprice(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.buyedPrice)
  return buyedprice_.Get(index);
}
inline void LOBBY2DB_SaveCharReq::set_buyedprice(int index, ::google::protobuf::uint32 value) {
  buyedprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.buyedPrice)
}
inline void LOBBY2DB_SaveCharReq::add_buyedprice(::google::protobuf::uint32 value) {
  buyedprice_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveCharReq.buyedPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveCharReq::buyedprice() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveCharReq.buyedPrice)
  return buyedprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveCharReq::mutable_buyedprice() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveCharReq.buyedPrice)
  return &buyedprice_;
}

// optional uint32 position = 54;
inline bool LOBBY2DB_SaveCharReq::has_position() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_position() {
  _has_bits_[1] |= 0x00200000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_position() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void LOBBY2DB_SaveCharReq::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::position() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.position)
  return position_;
}
inline void LOBBY2DB_SaveCharReq::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.position)
}

// optional uint32 lastUpdateTime = 55;
inline bool LOBBY2DB_SaveCharReq::has_lastupdatetime() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_lastupdatetime() {
  _has_bits_[1] |= 0x00400000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_lastupdatetime() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void LOBBY2DB_SaveCharReq::clear_lastupdatetime() {
  lastupdatetime_ = 0u;
  clear_has_lastupdatetime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::lastupdatetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.lastUpdateTime)
  return lastupdatetime_;
}
inline void LOBBY2DB_SaveCharReq::set_lastupdatetime(::google::protobuf::uint32 value) {
  set_has_lastupdatetime();
  lastupdatetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.lastUpdateTime)
}

// optional uint32 crusadeMaxId = 56;
inline bool LOBBY2DB_SaveCharReq::has_crusademaxid() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_crusademaxid() {
  _has_bits_[1] |= 0x00800000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_crusademaxid() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void LOBBY2DB_SaveCharReq::clear_crusademaxid() {
  crusademaxid_ = 0u;
  clear_has_crusademaxid();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::crusademaxid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.crusadeMaxId)
  return crusademaxid_;
}
inline void LOBBY2DB_SaveCharReq::set_crusademaxid(::google::protobuf::uint32 value) {
  set_has_crusademaxid();
  crusademaxid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.crusadeMaxId)
}

// optional uint32 crusadeCurId = 57;
inline bool LOBBY2DB_SaveCharReq::has_crusadecurid() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_crusadecurid() {
  _has_bits_[1] |= 0x01000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_crusadecurid() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_crusadecurid() {
  crusadecurid_ = 0u;
  clear_has_crusadecurid();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::crusadecurid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.crusadeCurId)
  return crusadecurid_;
}
inline void LOBBY2DB_SaveCharReq::set_crusadecurid(::google::protobuf::uint32 value) {
  set_has_crusadecurid();
  crusadecurid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.crusadeCurId)
}

// optional string int32attr = 58;
inline bool LOBBY2DB_SaveCharReq::has_int32attr() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_int32attr() {
  _has_bits_[1] |= 0x02000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_int32attr() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_int32attr() {
  if (int32attr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_->clear();
  }
  clear_has_int32attr();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::int32attr() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.int32attr)
  return *int32attr_;
}
inline void LOBBY2DB_SaveCharReq::set_int32attr(const ::std::string& value) {
  set_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_ = new ::std::string;
  }
  int32attr_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.int32attr)
}
inline void LOBBY2DB_SaveCharReq::set_int32attr(const char* value) {
  set_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_ = new ::std::string;
  }
  int32attr_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.int32attr)
}
inline void LOBBY2DB_SaveCharReq::set_int32attr(const char* value, size_t size) {
  set_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_ = new ::std::string;
  }
  int32attr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.int32attr)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_int32attr() {
  set_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    int32attr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.int32attr)
  return int32attr_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_int32attr() {
  clear_has_int32attr();
  if (int32attr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = int32attr_;
    int32attr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_int32attr(::std::string* int32attr) {
  if (int32attr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete int32attr_;
  }
  if (int32attr) {
    set_has_int32attr();
    int32attr_ = int32attr;
  } else {
    clear_has_int32attr();
    int32attr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.int32attr)
}

// optional string AwakeHeroes = 59;
inline bool LOBBY2DB_SaveCharReq::has_awakeheroes() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_awakeheroes() {
  _has_bits_[1] |= 0x04000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_awakeheroes() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_awakeheroes() {
  if (awakeheroes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_->clear();
  }
  clear_has_awakeheroes();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::awakeheroes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.AwakeHeroes)
  return *awakeheroes_;
}
inline void LOBBY2DB_SaveCharReq::set_awakeheroes(const ::std::string& value) {
  set_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_ = new ::std::string;
  }
  awakeheroes_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.AwakeHeroes)
}
inline void LOBBY2DB_SaveCharReq::set_awakeheroes(const char* value) {
  set_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_ = new ::std::string;
  }
  awakeheroes_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.AwakeHeroes)
}
inline void LOBBY2DB_SaveCharReq::set_awakeheroes(const char* value, size_t size) {
  set_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_ = new ::std::string;
  }
  awakeheroes_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.AwakeHeroes)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_awakeheroes() {
  set_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    awakeheroes_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.AwakeHeroes)
  return awakeheroes_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_awakeheroes() {
  clear_has_awakeheroes();
  if (awakeheroes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = awakeheroes_;
    awakeheroes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_awakeheroes(::std::string* awakeheroes) {
  if (awakeheroes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete awakeheroes_;
  }
  if (awakeheroes) {
    set_has_awakeheroes();
    awakeheroes_ = awakeheroes;
  } else {
    clear_has_awakeheroes();
    awakeheroes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.AwakeHeroes)
}

// optional string tombinfo = 60;
inline bool LOBBY2DB_SaveCharReq::has_tombinfo() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_tombinfo() {
  _has_bits_[1] |= 0x08000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_tombinfo() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_tombinfo() {
  if (tombinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_->clear();
  }
  clear_has_tombinfo();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::tombinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.tombinfo)
  return *tombinfo_;
}
inline void LOBBY2DB_SaveCharReq::set_tombinfo(const ::std::string& value) {
  set_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_ = new ::std::string;
  }
  tombinfo_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.tombinfo)
}
inline void LOBBY2DB_SaveCharReq::set_tombinfo(const char* value) {
  set_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_ = new ::std::string;
  }
  tombinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.tombinfo)
}
inline void LOBBY2DB_SaveCharReq::set_tombinfo(const char* value, size_t size) {
  set_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_ = new ::std::string;
  }
  tombinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.tombinfo)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_tombinfo() {
  set_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tombinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.tombinfo)
  return tombinfo_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_tombinfo() {
  clear_has_tombinfo();
  if (tombinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tombinfo_;
    tombinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_tombinfo(::std::string* tombinfo) {
  if (tombinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tombinfo_;
  }
  if (tombinfo) {
    set_has_tombinfo();
    tombinfo_ = tombinfo;
  } else {
    clear_has_tombinfo();
    tombinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.tombinfo)
}

// repeated uint32 markList = 61;
inline int LOBBY2DB_SaveCharReq::marklist_size() const {
  return marklist_.size();
}
inline void LOBBY2DB_SaveCharReq::clear_marklist() {
  marklist_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveCharReq::marklist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.markList)
  return marklist_.Get(index);
}
inline void LOBBY2DB_SaveCharReq::set_marklist(int index, ::google::protobuf::uint32 value) {
  marklist_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.markList)
}
inline void LOBBY2DB_SaveCharReq::add_marklist(::google::protobuf::uint32 value) {
  marklist_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveCharReq.markList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveCharReq::marklist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveCharReq.markList)
  return marklist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveCharReq::mutable_marklist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveCharReq.markList)
  return &marklist_;
}

// optional string rechargeChoose = 62;
inline bool LOBBY2DB_SaveCharReq::has_rechargechoose() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_rechargechoose() {
  _has_bits_[1] |= 0x20000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_rechargechoose() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_rechargechoose() {
  if (rechargechoose_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_->clear();
  }
  clear_has_rechargechoose();
}
inline const ::std::string& LOBBY2DB_SaveCharReq::rechargechoose() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.rechargeChoose)
  return *rechargechoose_;
}
inline void LOBBY2DB_SaveCharReq::set_rechargechoose(const ::std::string& value) {
  set_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_ = new ::std::string;
  }
  rechargechoose_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveCharReq.rechargeChoose)
}
inline void LOBBY2DB_SaveCharReq::set_rechargechoose(const char* value) {
  set_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_ = new ::std::string;
  }
  rechargechoose_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveCharReq.rechargeChoose)
}
inline void LOBBY2DB_SaveCharReq::set_rechargechoose(const char* value, size_t size) {
  set_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_ = new ::std::string;
  }
  rechargechoose_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveCharReq.rechargeChoose)
}
inline ::std::string* LOBBY2DB_SaveCharReq::mutable_rechargechoose() {
  set_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rechargechoose_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.rechargeChoose)
  return rechargechoose_;
}
inline ::std::string* LOBBY2DB_SaveCharReq::release_rechargechoose() {
  clear_has_rechargechoose();
  if (rechargechoose_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rechargechoose_;
    rechargechoose_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveCharReq::set_allocated_rechargechoose(::std::string* rechargechoose) {
  if (rechargechoose_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rechargechoose_;
  }
  if (rechargechoose) {
    set_has_rechargechoose();
    rechargechoose_ = rechargechoose;
  } else {
    clear_has_rechargechoose();
    rechargechoose_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.rechargeChoose)
}

// optional .TgsProtocol.NationalDB national = 63;
inline bool LOBBY2DB_SaveCharReq::has_national() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void LOBBY2DB_SaveCharReq::set_has_national() {
  _has_bits_[1] |= 0x40000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_has_national() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void LOBBY2DB_SaveCharReq::clear_national() {
  if (national_ != NULL) national_->::TgsProtocol::NationalDB::Clear();
  clear_has_national();
}
inline const ::TgsProtocol::NationalDB& LOBBY2DB_SaveCharReq::national() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveCharReq.national)
  return national_ != NULL ? *national_ : *default_instance_->national_;
}
inline ::TgsProtocol::NationalDB* LOBBY2DB_SaveCharReq::mutable_national() {
  set_has_national();
  if (national_ == NULL) national_ = new ::TgsProtocol::NationalDB;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveCharReq.national)
  return national_;
}
inline ::TgsProtocol::NationalDB* LOBBY2DB_SaveCharReq::release_national() {
  clear_has_national();
  ::TgsProtocol::NationalDB* temp = national_;
  national_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveCharReq::set_allocated_national(::TgsProtocol::NationalDB* national) {
  delete national_;
  national_ = national;
  if (national) {
    set_has_national();
  } else {
    clear_has_national();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveCharReq.national)
}

// -------------------------------------------------------------------

// DB2LOBBY_SaveCharRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SAVE_CHARACTER_RET];
inline bool DB2LOBBY_SaveCharRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_SaveCharRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_SaveCharRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_SaveCharRet::clear_cmdid() {
  cmdid_ = 350002;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_SaveCharRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_SaveCharRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_SaveCharRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_SaveCharRet.cmdId)
}

// required uint64 serialno = 2;
inline bool DB2LOBBY_SaveCharRet::has_serialno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_SaveCharRet::set_has_serialno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_SaveCharRet::clear_has_serialno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_SaveCharRet::clear_serialno() {
  serialno_ = GOOGLE_ULONGLONG(0);
  clear_has_serialno();
}
inline ::google::protobuf::uint64 DB2LOBBY_SaveCharRet::serialno() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_SaveCharRet.serialno)
  return serialno_;
}
inline void DB2LOBBY_SaveCharRet::set_serialno(::google::protobuf::uint64 value) {
  set_has_serialno();
  serialno_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_SaveCharRet.serialno)
}

// required uint32 ret = 3;
inline bool DB2LOBBY_SaveCharRet::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_SaveCharRet::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_SaveCharRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_SaveCharRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_SaveCharRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_SaveCharRet.ret)
  return ret_;
}
inline void DB2LOBBY_SaveCharRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_SaveCharRet.ret)
}

// required uint64 charId = 4;
inline bool DB2LOBBY_SaveCharRet::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBY_SaveCharRet::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBY_SaveCharRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBY_SaveCharRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_SaveCharRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_SaveCharRet.charId)
  return charid_;
}
inline void DB2LOBBY_SaveCharRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_SaveCharRet.charId)
}

// -------------------------------------------------------------------

// LOBBY2DB_SaveAdvancedCharReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SAVE_ADVANCED_CHARACTER_REQ];
inline bool LOBBY2DB_SaveAdvancedCharReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_cmdid() {
  cmdid_ = 300010;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_SaveAdvancedCharReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_SaveAdvancedCharReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.charId)
  return charid_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.charId)
}

// optional bytes shopGoods = 3;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_shopgoods() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_shopgoods() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_shopgoods() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_shopgoods() {
  if (shopgoods_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopgoods_->clear();
  }
  clear_has_shopgoods();
}
inline const ::std::string& LOBBY2DB_SaveAdvancedCharReq::shopgoods() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopGoods)
  return *shopgoods_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_shopgoods(const ::std::string& value) {
  set_has_shopgoods();
  if (shopgoods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopgoods_ = new ::std::string;
  }
  shopgoods_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopGoods)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_shopgoods(const char* value) {
  set_has_shopgoods();
  if (shopgoods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopgoods_ = new ::std::string;
  }
  shopgoods_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopGoods)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_shopgoods(const void* value, size_t size) {
  set_has_shopgoods();
  if (shopgoods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopgoods_ = new ::std::string;
  }
  shopgoods_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopGoods)
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::mutable_shopgoods() {
  set_has_shopgoods();
  if (shopgoods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopgoods_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopGoods)
  return shopgoods_;
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::release_shopgoods() {
  clear_has_shopgoods();
  if (shopgoods_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = shopgoods_;
    shopgoods_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_shopgoods(::std::string* shopgoods) {
  if (shopgoods_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete shopgoods_;
  }
  if (shopgoods) {
    set_has_shopgoods();
    shopgoods_ = shopgoods;
  } else {
    clear_has_shopgoods();
    shopgoods_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopGoods)
}

// required uint32 openCopperBoxNum = 4;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_opencopperboxnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_opencopperboxnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_opencopperboxnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_opencopperboxnum() {
  opencopperboxnum_ = 0u;
  clear_has_opencopperboxnum();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::opencopperboxnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.openCopperBoxNum)
  return opencopperboxnum_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_opencopperboxnum(::google::protobuf::uint32 value) {
  set_has_opencopperboxnum();
  opencopperboxnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.openCopperBoxNum)
}

// required uint32 lastOpenCopperBoxTime = 5;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_lastopencopperboxtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_lastopencopperboxtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_lastopencopperboxtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_lastopencopperboxtime() {
  lastopencopperboxtime_ = 0u;
  clear_has_lastopencopperboxtime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::lastopencopperboxtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.lastOpenCopperBoxTime)
  return lastopencopperboxtime_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_lastopencopperboxtime(::google::protobuf::uint32 value) {
  set_has_lastopencopperboxtime();
  lastopencopperboxtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.lastOpenCopperBoxTime)
}

// required uint32 lastOpenDiamondBoxTime = 6;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_lastopendiamondboxtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_lastopendiamondboxtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_lastopendiamondboxtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_lastopendiamondboxtime() {
  lastopendiamondboxtime_ = 0u;
  clear_has_lastopendiamondboxtime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::lastopendiamondboxtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.lastOpenDiamondBoxTime)
  return lastopendiamondboxtime_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_lastopendiamondboxtime(::google::protobuf::uint32 value) {
  set_has_lastopendiamondboxtime();
  lastopendiamondboxtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.lastOpenDiamondBoxTime)
}

// required uint32 totalOpenCopperBoxTimes = 7;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_totalopencopperboxtimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_totalopencopperboxtimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_totalopencopperboxtimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_totalopencopperboxtimes() {
  totalopencopperboxtimes_ = 0u;
  clear_has_totalopencopperboxtimes();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::totalopencopperboxtimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalOpenCopperBoxTimes)
  return totalopencopperboxtimes_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_totalopencopperboxtimes(::google::protobuf::uint32 value) {
  set_has_totalopencopperboxtimes();
  totalopencopperboxtimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalOpenCopperBoxTimes)
}

// required uint32 totalOpenDiamondBoxTimes = 8;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_totalopendiamondboxtimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_totalopendiamondboxtimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_totalopendiamondboxtimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_totalopendiamondboxtimes() {
  totalopendiamondboxtimes_ = 0u;
  clear_has_totalopendiamondboxtimes();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::totalopendiamondboxtimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalOpenDiamondBoxTimes)
  return totalopendiamondboxtimes_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_totalopendiamondboxtimes(::google::protobuf::uint32 value) {
  set_has_totalopendiamondboxtimes();
  totalopendiamondboxtimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalOpenDiamondBoxTimes)
}

// repeated .TgsProtocol.DBMailInfo mailList = 9;
inline int LOBBY2DB_SaveAdvancedCharReq::maillist_size() const {
  return maillist_.size();
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_maillist() {
  maillist_.Clear();
}
inline const ::TgsProtocol::DBMailInfo& LOBBY2DB_SaveAdvancedCharReq::maillist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.mailList)
  return maillist_.Get(index);
}
inline ::TgsProtocol::DBMailInfo* LOBBY2DB_SaveAdvancedCharReq::mutable_maillist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.mailList)
  return maillist_.Mutable(index);
}
inline ::TgsProtocol::DBMailInfo* LOBBY2DB_SaveAdvancedCharReq::add_maillist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.mailList)
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >&
LOBBY2DB_SaveAdvancedCharReq::maillist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.mailList)
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >*
LOBBY2DB_SaveAdvancedCharReq::mutable_maillist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.mailList)
  return &maillist_;
}

// optional uint32 skillPoint = 10;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_skillpoint() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_skillpoint() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_skillpoint() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_skillpoint() {
  skillpoint_ = 0u;
  clear_has_skillpoint();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::skillpoint() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.skillPoint)
  return skillpoint_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_skillpoint(::google::protobuf::uint32 value) {
  set_has_skillpoint();
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.skillPoint)
}

// optional uint32 updateSkillPointTime = 11;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_updateskillpointtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_updateskillpointtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_updateskillpointtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_updateskillpointtime() {
  updateskillpointtime_ = 0u;
  clear_has_updateskillpointtime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::updateskillpointtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.updateSkillPointTime)
  return updateskillpointtime_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_updateskillpointtime(::google::protobuf::uint32 value) {
  set_has_updateskillpointtime();
  updateskillpointtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.updateSkillPointTime)
}

// repeated uint32 exFormation = 12;
inline int LOBBY2DB_SaveAdvancedCharReq::exformation_size() const {
  return exformation_.size();
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_exformation() {
  exformation_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::exformation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.exFormation)
  return exformation_.Get(index);
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_exformation(int index, ::google::protobuf::uint32 value) {
  exformation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.exFormation)
}
inline void LOBBY2DB_SaveAdvancedCharReq::add_exformation(::google::protobuf::uint32 value) {
  exformation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.exFormation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveAdvancedCharReq::exformation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.exFormation)
  return exformation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveAdvancedCharReq::mutable_exformation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.exFormation)
  return &exformation_;
}

// optional bytes myHeros = 13;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_myheros() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_myheros() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_myheros() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_myheros() {
  if (myheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_->clear();
  }
  clear_has_myheros();
}
inline const ::std::string& LOBBY2DB_SaveAdvancedCharReq::myheros() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.myHeros)
  return *myheros_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_myheros(const ::std::string& value) {
  set_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_ = new ::std::string;
  }
  myheros_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.myHeros)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_myheros(const char* value) {
  set_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_ = new ::std::string;
  }
  myheros_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.myHeros)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_myheros(const void* value, size_t size) {
  set_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_ = new ::std::string;
  }
  myheros_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.myHeros)
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::mutable_myheros() {
  set_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    myheros_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.myHeros)
  return myheros_;
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::release_myheros() {
  clear_has_myheros();
  if (myheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = myheros_;
    myheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_myheros(::std::string* myheros) {
  if (myheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete myheros_;
  }
  if (myheros) {
    set_has_myheros();
    myheros_ = myheros;
  } else {
    clear_has_myheros();
    myheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.myHeros)
}

// optional bytes DefenseHeros = 14;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_defenseheros() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_defenseheros() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_defenseheros() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_defenseheros() {
  if (defenseheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_->clear();
  }
  clear_has_defenseheros();
}
inline const ::std::string& LOBBY2DB_SaveAdvancedCharReq::defenseheros() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.DefenseHeros)
  return *defenseheros_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_defenseheros(const ::std::string& value) {
  set_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_ = new ::std::string;
  }
  defenseheros_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.DefenseHeros)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_defenseheros(const char* value) {
  set_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_ = new ::std::string;
  }
  defenseheros_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.DefenseHeros)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_defenseheros(const void* value, size_t size) {
  set_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_ = new ::std::string;
  }
  defenseheros_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.DefenseHeros)
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::mutable_defenseheros() {
  set_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    defenseheros_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.DefenseHeros)
  return defenseheros_;
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::release_defenseheros() {
  clear_has_defenseheros();
  if (defenseheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = defenseheros_;
    defenseheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_defenseheros(::std::string* defenseheros) {
  if (defenseheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete defenseheros_;
  }
  if (defenseheros) {
    set_has_defenseheros();
    defenseheros_ = defenseheros;
  } else {
    clear_has_defenseheros();
    defenseheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.DefenseHeros)
}

// optional uint32 difficulty = 15;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_difficulty() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_difficulty() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_difficulty() {
  difficulty_ = 0u;
  clear_has_difficulty();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::difficulty() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.difficulty)
  return difficulty_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_difficulty(::google::protobuf::uint32 value) {
  set_has_difficulty();
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.difficulty)
}

// optional uint32 lastArenaTime = 16;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_lastarenatime() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_lastarenatime() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_lastarenatime() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_lastarenatime() {
  lastarenatime_ = 0u;
  clear_has_lastarenatime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::lastarenatime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.lastArenaTime)
  return lastarenatime_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_lastarenatime(::google::protobuf::uint32 value) {
  set_has_lastarenatime();
  lastarenatime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.lastArenaTime)
}

// optional uint32 dailyArenaTimes = 17;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_dailyarenatimes() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_dailyarenatimes() {
  _has_bits_[0] |= 0x00010000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_dailyarenatimes() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_dailyarenatimes() {
  dailyarenatimes_ = 0u;
  clear_has_dailyarenatimes();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::dailyarenatimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailyArenaTimes)
  return dailyarenatimes_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_dailyarenatimes(::google::protobuf::uint32 value) {
  set_has_dailyarenatimes();
  dailyarenatimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailyArenaTimes)
}

// optional uint32 bestArenaRank = 18;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_bestarenarank() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_bestarenarank() {
  _has_bits_[0] |= 0x00020000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_bestarenarank() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_bestarenarank() {
  bestarenarank_ = 0u;
  clear_has_bestarenarank();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::bestarenarank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.bestArenaRank)
  return bestarenarank_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_bestarenarank(::google::protobuf::uint32 value) {
  set_has_bestarenarank();
  bestarenarank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.bestArenaRank)
}

// repeated uint32 arFormation = 19;
inline int LOBBY2DB_SaveAdvancedCharReq::arformation_size() const {
  return arformation_.size();
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_arformation() {
  arformation_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::arformation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arFormation)
  return arformation_.Get(index);
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_arformation(int index, ::google::protobuf::uint32 value) {
  arformation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arFormation)
}
inline void LOBBY2DB_SaveAdvancedCharReq::add_arformation(::google::protobuf::uint32 value) {
  arformation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arFormation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveAdvancedCharReq::arformation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arFormation)
  return arformation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveAdvancedCharReq::mutable_arformation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arFormation)
  return &arformation_;
}

// optional uint32 totalArenaWin = 20;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_totalarenawin() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_totalarenawin() {
  _has_bits_[0] |= 0x00080000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_totalarenawin() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_totalarenawin() {
  totalarenawin_ = 0u;
  clear_has_totalarenawin();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::totalarenawin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalArenaWin)
  return totalarenawin_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_totalarenawin(::google::protobuf::uint32 value) {
  set_has_totalarenawin();
  totalarenawin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalArenaWin)
}

// optional bytes arenaLog = 21;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_arenalog() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_arenalog() {
  _has_bits_[0] |= 0x00100000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_arenalog() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_arenalog() {
  if (arenalog_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_->clear();
  }
  clear_has_arenalog();
}
inline const ::std::string& LOBBY2DB_SaveAdvancedCharReq::arenalog() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arenaLog)
  return *arenalog_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_arenalog(const ::std::string& value) {
  set_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_ = new ::std::string;
  }
  arenalog_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arenaLog)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_arenalog(const char* value) {
  set_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_ = new ::std::string;
  }
  arenalog_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arenaLog)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_arenalog(const void* value, size_t size) {
  set_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_ = new ::std::string;
  }
  arenalog_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arenaLog)
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::mutable_arenalog() {
  set_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenalog_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arenaLog)
  return arenalog_;
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::release_arenalog() {
  clear_has_arenalog();
  if (arenalog_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = arenalog_;
    arenalog_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_arenalog(::std::string* arenalog) {
  if (arenalog_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete arenalog_;
  }
  if (arenalog) {
    set_has_arenalog();
    arenalog_ = arenalog;
  } else {
    clear_has_arenalog();
    arenalog_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.arenaLog)
}

// optional uint32 topThreeTime = 22;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_topthreetime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_topthreetime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_topthreetime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_topthreetime() {
  topthreetime_ = 0u;
  clear_has_topthreetime();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::topthreetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.topThreeTime)
  return topthreetime_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_topthreetime(::google::protobuf::uint32 value) {
  set_has_topthreetime();
  topthreetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.topThreeTime)
}

// repeated uint32 ackFormation = 23;
inline int LOBBY2DB_SaveAdvancedCharReq::ackformation_size() const {
  return ackformation_.size();
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_ackformation() {
  ackformation_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::ackformation(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.ackFormation)
  return ackformation_.Get(index);
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_ackformation(int index, ::google::protobuf::uint32 value) {
  ackformation_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.ackFormation)
}
inline void LOBBY2DB_SaveAdvancedCharReq::add_ackformation(::google::protobuf::uint32 value) {
  ackformation_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.ackFormation)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveAdvancedCharReq::ackformation() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.ackFormation)
  return ackformation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveAdvancedCharReq::mutable_ackformation() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.ackFormation)
  return &ackformation_;
}

// optional uint32 dailyOpenDiamondBoxTimes = 24;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_dailyopendiamondboxtimes() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_dailyopendiamondboxtimes() {
  _has_bits_[0] |= 0x00800000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_dailyopendiamondboxtimes() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_dailyopendiamondboxtimes() {
  dailyopendiamondboxtimes_ = 0u;
  clear_has_dailyopendiamondboxtimes();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::dailyopendiamondboxtimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailyOpenDiamondBoxTimes)
  return dailyopendiamondboxtimes_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_dailyopendiamondboxtimes(::google::protobuf::uint32 value) {
  set_has_dailyopendiamondboxtimes();
  dailyopendiamondboxtimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailyOpenDiamondBoxTimes)
}

// optional uint32 signIn = 25;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_signin() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_signin() {
  _has_bits_[0] |= 0x01000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_signin() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_signin() {
  signin_ = 0u;
  clear_has_signin();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::signin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.signIn)
  return signin_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_signin(::google::protobuf::uint32 value) {
  set_has_signin();
  signin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.signIn)
}

// optional uint32 totalCopperMineNum = 28;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_totalcopperminenum() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_totalcopperminenum() {
  _has_bits_[0] |= 0x02000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_totalcopperminenum() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_totalcopperminenum() {
  totalcopperminenum_ = 0u;
  clear_has_totalcopperminenum();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::totalcopperminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalCopperMineNum)
  return totalcopperminenum_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_totalcopperminenum(::google::protobuf::uint32 value) {
  set_has_totalcopperminenum();
  totalcopperminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalCopperMineNum)
}

// optional uint32 totalSilverMineNum = 29;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_totalsilverminenum() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_totalsilverminenum() {
  _has_bits_[0] |= 0x04000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_totalsilverminenum() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_totalsilverminenum() {
  totalsilverminenum_ = 0u;
  clear_has_totalsilverminenum();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::totalsilverminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalSilverMineNum)
  return totalsilverminenum_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_totalsilverminenum(::google::protobuf::uint32 value) {
  set_has_totalsilverminenum();
  totalsilverminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalSilverMineNum)
}

// optional uint32 totalDiamondMineNum = 30;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_totaldiamondminenum() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_totaldiamondminenum() {
  _has_bits_[0] |= 0x08000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_totaldiamondminenum() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_totaldiamondminenum() {
  totaldiamondminenum_ = 0u;
  clear_has_totaldiamondminenum();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::totaldiamondminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalDiamondMineNum)
  return totaldiamondminenum_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_totaldiamondminenum(::google::protobuf::uint32 value) {
  set_has_totaldiamondminenum();
  totaldiamondminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.totalDiamondMineNum)
}

// optional uint32 dailyCopperMineNum = 31;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_dailycopperminenum() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_dailycopperminenum() {
  _has_bits_[0] |= 0x10000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_dailycopperminenum() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_dailycopperminenum() {
  dailycopperminenum_ = 0u;
  clear_has_dailycopperminenum();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::dailycopperminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailyCopperMineNum)
  return dailycopperminenum_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_dailycopperminenum(::google::protobuf::uint32 value) {
  set_has_dailycopperminenum();
  dailycopperminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailyCopperMineNum)
}

// optional uint32 dailySilverMineNum = 32;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_dailysilverminenum() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_dailysilverminenum() {
  _has_bits_[0] |= 0x20000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_dailysilverminenum() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_dailysilverminenum() {
  dailysilverminenum_ = 0u;
  clear_has_dailysilverminenum();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::dailysilverminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailySilverMineNum)
  return dailysilverminenum_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_dailysilverminenum(::google::protobuf::uint32 value) {
  set_has_dailysilverminenum();
  dailysilverminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailySilverMineNum)
}

// optional uint32 dailyDiamondMineNum = 33;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_dailydiamondminenum() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_dailydiamondminenum() {
  _has_bits_[0] |= 0x40000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_dailydiamondminenum() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_dailydiamondminenum() {
  dailydiamondminenum_ = 0u;
  clear_has_dailydiamondminenum();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::dailydiamondminenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailyDiamondMineNum)
  return dailydiamondminenum_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_dailydiamondminenum(::google::protobuf::uint32 value) {
  set_has_dailydiamondminenum();
  dailydiamondminenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.dailyDiamondMineNum)
}

// optional bytes friendInfo = 34;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_friendinfo() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_friendinfo() {
  _has_bits_[0] |= 0x80000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_friendinfo() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_friendinfo() {
  if (friendinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_->clear();
  }
  clear_has_friendinfo();
}
inline const ::std::string& LOBBY2DB_SaveAdvancedCharReq::friendinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.friendInfo)
  return *friendinfo_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_friendinfo(const ::std::string& value) {
  set_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_ = new ::std::string;
  }
  friendinfo_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.friendInfo)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_friendinfo(const char* value) {
  set_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_ = new ::std::string;
  }
  friendinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.friendInfo)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_friendinfo(const void* value, size_t size) {
  set_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_ = new ::std::string;
  }
  friendinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.friendInfo)
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::mutable_friendinfo() {
  set_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.friendInfo)
  return friendinfo_;
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::release_friendinfo() {
  clear_has_friendinfo();
  if (friendinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = friendinfo_;
    friendinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_friendinfo(::std::string* friendinfo) {
  if (friendinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete friendinfo_;
  }
  if (friendinfo) {
    set_has_friendinfo();
    friendinfo_ = friendinfo;
  } else {
    clear_has_friendinfo();
    friendinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.friendInfo)
}

// optional bytes shopFlush = 35;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_shopflush() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_shopflush() {
  _has_bits_[1] |= 0x00000001u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_shopflush() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_shopflush() {
  if (shopflush_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_->clear();
  }
  clear_has_shopflush();
}
inline const ::std::string& LOBBY2DB_SaveAdvancedCharReq::shopflush() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopFlush)
  return *shopflush_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_shopflush(const ::std::string& value) {
  set_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_ = new ::std::string;
  }
  shopflush_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopFlush)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_shopflush(const char* value) {
  set_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_ = new ::std::string;
  }
  shopflush_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopFlush)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_shopflush(const void* value, size_t size) {
  set_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_ = new ::std::string;
  }
  shopflush_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopFlush)
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::mutable_shopflush() {
  set_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    shopflush_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopFlush)
  return shopflush_;
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::release_shopflush() {
  clear_has_shopflush();
  if (shopflush_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = shopflush_;
    shopflush_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_shopflush(::std::string* shopflush) {
  if (shopflush_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete shopflush_;
  }
  if (shopflush) {
    set_has_shopflush();
    shopflush_ = shopflush;
  } else {
    clear_has_shopflush();
    shopflush_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.shopFlush)
}

// optional .TgsProtocol.DbSevenDayActive sevenDay = 36;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_sevenday() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_sevenday() {
  _has_bits_[1] |= 0x00000002u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_sevenday() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_sevenday() {
  if (sevenday_ != NULL) sevenday_->::TgsProtocol::DbSevenDayActive::Clear();
  clear_has_sevenday();
}
inline const ::TgsProtocol::DbSevenDayActive& LOBBY2DB_SaveAdvancedCharReq::sevenday() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.sevenDay)
  return sevenday_ != NULL ? *sevenday_ : *default_instance_->sevenday_;
}
inline ::TgsProtocol::DbSevenDayActive* LOBBY2DB_SaveAdvancedCharReq::mutable_sevenday() {
  set_has_sevenday();
  if (sevenday_ == NULL) sevenday_ = new ::TgsProtocol::DbSevenDayActive;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.sevenDay)
  return sevenday_;
}
inline ::TgsProtocol::DbSevenDayActive* LOBBY2DB_SaveAdvancedCharReq::release_sevenday() {
  clear_has_sevenday();
  ::TgsProtocol::DbSevenDayActive* temp = sevenday_;
  sevenday_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_sevenday(::TgsProtocol::DbSevenDayActive* sevenday) {
  delete sevenday_;
  sevenday_ = sevenday;
  if (sevenday) {
    set_has_sevenday();
  } else {
    clear_has_sevenday();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.sevenDay)
}

// optional .TgsProtocol.DbRebelArmy rebelArmy = 37;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_rebelarmy() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_rebelarmy() {
  _has_bits_[1] |= 0x00000004u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_rebelarmy() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_rebelarmy() {
  if (rebelarmy_ != NULL) rebelarmy_->::TgsProtocol::DbRebelArmy::Clear();
  clear_has_rebelarmy();
}
inline const ::TgsProtocol::DbRebelArmy& LOBBY2DB_SaveAdvancedCharReq::rebelarmy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.rebelArmy)
  return rebelarmy_ != NULL ? *rebelarmy_ : *default_instance_->rebelarmy_;
}
inline ::TgsProtocol::DbRebelArmy* LOBBY2DB_SaveAdvancedCharReq::mutable_rebelarmy() {
  set_has_rebelarmy();
  if (rebelarmy_ == NULL) rebelarmy_ = new ::TgsProtocol::DbRebelArmy;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.rebelArmy)
  return rebelarmy_;
}
inline ::TgsProtocol::DbRebelArmy* LOBBY2DB_SaveAdvancedCharReq::release_rebelarmy() {
  clear_has_rebelarmy();
  ::TgsProtocol::DbRebelArmy* temp = rebelarmy_;
  rebelarmy_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_rebelarmy(::TgsProtocol::DbRebelArmy* rebelarmy) {
  delete rebelarmy_;
  rebelarmy_ = rebelarmy;
  if (rebelarmy) {
    set_has_rebelarmy();
  } else {
    clear_has_rebelarmy();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.rebelArmy)
}

// optional .TgsProtocol.DbActionRecord action = 38;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_action() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_action() {
  _has_bits_[1] |= 0x00000008u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_action() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_action() {
  if (action_ != NULL) action_->::TgsProtocol::DbActionRecord::Clear();
  clear_has_action();
}
inline const ::TgsProtocol::DbActionRecord& LOBBY2DB_SaveAdvancedCharReq::action() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.action)
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::TgsProtocol::DbActionRecord* LOBBY2DB_SaveAdvancedCharReq::mutable_action() {
  set_has_action();
  if (action_ == NULL) action_ = new ::TgsProtocol::DbActionRecord;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.action)
  return action_;
}
inline ::TgsProtocol::DbActionRecord* LOBBY2DB_SaveAdvancedCharReq::release_action() {
  clear_has_action();
  ::TgsProtocol::DbActionRecord* temp = action_;
  action_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_action(::TgsProtocol::DbActionRecord* action) {
  delete action_;
  action_ = action;
  if (action) {
    set_has_action();
  } else {
    clear_has_action();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.action)
}

// optional .TgsProtocol.DbRaidTeam raidTeam = 39;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_raidteam() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_raidteam() {
  _has_bits_[1] |= 0x00000010u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_raidteam() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_raidteam() {
  if (raidteam_ != NULL) raidteam_->::TgsProtocol::DbRaidTeam::Clear();
  clear_has_raidteam();
}
inline const ::TgsProtocol::DbRaidTeam& LOBBY2DB_SaveAdvancedCharReq::raidteam() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.raidTeam)
  return raidteam_ != NULL ? *raidteam_ : *default_instance_->raidteam_;
}
inline ::TgsProtocol::DbRaidTeam* LOBBY2DB_SaveAdvancedCharReq::mutable_raidteam() {
  set_has_raidteam();
  if (raidteam_ == NULL) raidteam_ = new ::TgsProtocol::DbRaidTeam;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.raidTeam)
  return raidteam_;
}
inline ::TgsProtocol::DbRaidTeam* LOBBY2DB_SaveAdvancedCharReq::release_raidteam() {
  clear_has_raidteam();
  ::TgsProtocol::DbRaidTeam* temp = raidteam_;
  raidteam_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_raidteam(::TgsProtocol::DbRaidTeam* raidteam) {
  delete raidteam_;
  raidteam_ = raidteam;
  if (raidteam) {
    set_has_raidteam();
  } else {
    clear_has_raidteam();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.raidTeam)
}

// optional .TgsProtocol.DbMonthCard card = 40;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_card() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_card() {
  _has_bits_[1] |= 0x00000020u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_card() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_card() {
  if (card_ != NULL) card_->::TgsProtocol::DbMonthCard::Clear();
  clear_has_card();
}
inline const ::TgsProtocol::DbMonthCard& LOBBY2DB_SaveAdvancedCharReq::card() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.card)
  return card_ != NULL ? *card_ : *default_instance_->card_;
}
inline ::TgsProtocol::DbMonthCard* LOBBY2DB_SaveAdvancedCharReq::mutable_card() {
  set_has_card();
  if (card_ == NULL) card_ = new ::TgsProtocol::DbMonthCard;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.card)
  return card_;
}
inline ::TgsProtocol::DbMonthCard* LOBBY2DB_SaveAdvancedCharReq::release_card() {
  clear_has_card();
  ::TgsProtocol::DbMonthCard* temp = card_;
  card_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_card(::TgsProtocol::DbMonthCard* card) {
  delete card_;
  card_ = card;
  if (card) {
    set_has_card();
  } else {
    clear_has_card();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.card)
}

// optional .TgsProtocol.DbDrop drop = 41;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_drop() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_drop() {
  _has_bits_[1] |= 0x00000040u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_drop() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_drop() {
  if (drop_ != NULL) drop_->::TgsProtocol::DbDrop::Clear();
  clear_has_drop();
}
inline const ::TgsProtocol::DbDrop& LOBBY2DB_SaveAdvancedCharReq::drop() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.drop)
  return drop_ != NULL ? *drop_ : *default_instance_->drop_;
}
inline ::TgsProtocol::DbDrop* LOBBY2DB_SaveAdvancedCharReq::mutable_drop() {
  set_has_drop();
  if (drop_ == NULL) drop_ = new ::TgsProtocol::DbDrop;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.drop)
  return drop_;
}
inline ::TgsProtocol::DbDrop* LOBBY2DB_SaveAdvancedCharReq::release_drop() {
  clear_has_drop();
  ::TgsProtocol::DbDrop* temp = drop_;
  drop_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_drop(::TgsProtocol::DbDrop* drop) {
  delete drop_;
  drop_ = drop;
  if (drop) {
    set_has_drop();
  } else {
    clear_has_drop();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.drop)
}

// optional string goodsBuyed = 42;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_goodsbuyed() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_goodsbuyed() {
  _has_bits_[1] |= 0x00000080u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_goodsbuyed() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_goodsbuyed() {
  if (goodsbuyed_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_->clear();
  }
  clear_has_goodsbuyed();
}
inline const ::std::string& LOBBY2DB_SaveAdvancedCharReq::goodsbuyed() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.goodsBuyed)
  return *goodsbuyed_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_goodsbuyed(const ::std::string& value) {
  set_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_ = new ::std::string;
  }
  goodsbuyed_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.goodsBuyed)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_goodsbuyed(const char* value) {
  set_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_ = new ::std::string;
  }
  goodsbuyed_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.goodsBuyed)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_goodsbuyed(const char* value, size_t size) {
  set_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_ = new ::std::string;
  }
  goodsbuyed_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.goodsBuyed)
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::mutable_goodsbuyed() {
  set_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodsbuyed_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.goodsBuyed)
  return goodsbuyed_;
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::release_goodsbuyed() {
  clear_has_goodsbuyed();
  if (goodsbuyed_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = goodsbuyed_;
    goodsbuyed_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_goodsbuyed(::std::string* goodsbuyed) {
  if (goodsbuyed_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete goodsbuyed_;
  }
  if (goodsbuyed) {
    set_has_goodsbuyed();
    goodsbuyed_ = goodsbuyed;
  } else {
    clear_has_goodsbuyed();
    goodsbuyed_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.goodsBuyed)
}

// optional uint32 firstChargeChoose = 43;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_firstchargechoose() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_firstchargechoose() {
  _has_bits_[1] |= 0x00000100u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_firstchargechoose() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_firstchargechoose() {
  firstchargechoose_ = 0u;
  clear_has_firstchargechoose();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::firstchargechoose() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.firstChargeChoose)
  return firstchargechoose_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_firstchargechoose(::google::protobuf::uint32 value) {
  set_has_firstchargechoose();
  firstchargechoose_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.firstChargeChoose)
}

// optional uint32 continueChargeChoose = 44;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_continuechargechoose() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_continuechargechoose() {
  _has_bits_[1] |= 0x00000200u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_continuechargechoose() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_continuechargechoose() {
  continuechargechoose_ = 0u;
  clear_has_continuechargechoose();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::continuechargechoose() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.continueChargeChoose)
  return continuechargechoose_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_continuechargechoose(::google::protobuf::uint32 value) {
  set_has_continuechargechoose();
  continuechargechoose_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.continueChargeChoose)
}

// optional string continueCharge = 45;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_continuecharge() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_continuecharge() {
  _has_bits_[1] |= 0x00000400u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_continuecharge() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_continuecharge() {
  if (continuecharge_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_->clear();
  }
  clear_has_continuecharge();
}
inline const ::std::string& LOBBY2DB_SaveAdvancedCharReq::continuecharge() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.continueCharge)
  return *continuecharge_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_continuecharge(const ::std::string& value) {
  set_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_ = new ::std::string;
  }
  continuecharge_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.continueCharge)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_continuecharge(const char* value) {
  set_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_ = new ::std::string;
  }
  continuecharge_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.continueCharge)
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_continuecharge(const char* value, size_t size) {
  set_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_ = new ::std::string;
  }
  continuecharge_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.continueCharge)
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::mutable_continuecharge() {
  set_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    continuecharge_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.continueCharge)
  return continuecharge_;
}
inline ::std::string* LOBBY2DB_SaveAdvancedCharReq::release_continuecharge() {
  clear_has_continuecharge();
  if (continuecharge_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = continuecharge_;
    continuecharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_continuecharge(::std::string* continuecharge) {
  if (continuecharge_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete continuecharge_;
  }
  if (continuecharge) {
    set_has_continuecharge();
    continuecharge_ = continuecharge;
  } else {
    clear_has_continuecharge();
    continuecharge_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.continueCharge)
}

// optional .TgsProtocol.DbHandBook handbook = 46;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_handbook() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_handbook() {
  _has_bits_[1] |= 0x00000800u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_handbook() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_handbook() {
  if (handbook_ != NULL) handbook_->::TgsProtocol::DbHandBook::Clear();
  clear_has_handbook();
}
inline const ::TgsProtocol::DbHandBook& LOBBY2DB_SaveAdvancedCharReq::handbook() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.handbook)
  return handbook_ != NULL ? *handbook_ : *default_instance_->handbook_;
}
inline ::TgsProtocol::DbHandBook* LOBBY2DB_SaveAdvancedCharReq::mutable_handbook() {
  set_has_handbook();
  if (handbook_ == NULL) handbook_ = new ::TgsProtocol::DbHandBook;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.handbook)
  return handbook_;
}
inline ::TgsProtocol::DbHandBook* LOBBY2DB_SaveAdvancedCharReq::release_handbook() {
  clear_has_handbook();
  ::TgsProtocol::DbHandBook* temp = handbook_;
  handbook_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_handbook(::TgsProtocol::DbHandBook* handbook) {
  delete handbook_;
  handbook_ = handbook;
  if (handbook) {
    set_has_handbook();
  } else {
    clear_has_handbook();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.handbook)
}

// optional .TgsProtocol.DBSecretHole secrethole = 47;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_secrethole() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_secrethole() {
  _has_bits_[1] |= 0x00001000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_secrethole() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_secrethole() {
  if (secrethole_ != NULL) secrethole_->::TgsProtocol::DBSecretHole::Clear();
  clear_has_secrethole();
}
inline const ::TgsProtocol::DBSecretHole& LOBBY2DB_SaveAdvancedCharReq::secrethole() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.secrethole)
  return secrethole_ != NULL ? *secrethole_ : *default_instance_->secrethole_;
}
inline ::TgsProtocol::DBSecretHole* LOBBY2DB_SaveAdvancedCharReq::mutable_secrethole() {
  set_has_secrethole();
  if (secrethole_ == NULL) secrethole_ = new ::TgsProtocol::DBSecretHole;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.secrethole)
  return secrethole_;
}
inline ::TgsProtocol::DBSecretHole* LOBBY2DB_SaveAdvancedCharReq::release_secrethole() {
  clear_has_secrethole();
  ::TgsProtocol::DBSecretHole* temp = secrethole_;
  secrethole_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_secrethole(::TgsProtocol::DBSecretHole* secrethole) {
  delete secrethole_;
  secrethole_ = secrethole;
  if (secrethole) {
    set_has_secrethole();
  } else {
    clear_has_secrethole();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.secrethole)
}

// optional .TgsProtocol.DBReturnTask returntask = 48;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_returntask() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_returntask() {
  _has_bits_[1] |= 0x00002000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_returntask() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_returntask() {
  if (returntask_ != NULL) returntask_->::TgsProtocol::DBReturnTask::Clear();
  clear_has_returntask();
}
inline const ::TgsProtocol::DBReturnTask& LOBBY2DB_SaveAdvancedCharReq::returntask() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.returntask)
  return returntask_ != NULL ? *returntask_ : *default_instance_->returntask_;
}
inline ::TgsProtocol::DBReturnTask* LOBBY2DB_SaveAdvancedCharReq::mutable_returntask() {
  set_has_returntask();
  if (returntask_ == NULL) returntask_ = new ::TgsProtocol::DBReturnTask;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.returntask)
  return returntask_;
}
inline ::TgsProtocol::DBReturnTask* LOBBY2DB_SaveAdvancedCharReq::release_returntask() {
  clear_has_returntask();
  ::TgsProtocol::DBReturnTask* temp = returntask_;
  returntask_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_returntask(::TgsProtocol::DBReturnTask* returntask) {
  delete returntask_;
  returntask_ = returntask;
  if (returntask) {
    set_has_returntask();
  } else {
    clear_has_returntask();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.returntask)
}

// optional .TgsProtocol.PlayerTerritoryInfo territory = 49;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_territory() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_territory() {
  _has_bits_[1] |= 0x00004000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_territory() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_territory() {
  if (territory_ != NULL) territory_->::TgsProtocol::PlayerTerritoryInfo::Clear();
  clear_has_territory();
}
inline const ::TgsProtocol::PlayerTerritoryInfo& LOBBY2DB_SaveAdvancedCharReq::territory() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.territory)
  return territory_ != NULL ? *territory_ : *default_instance_->territory_;
}
inline ::TgsProtocol::PlayerTerritoryInfo* LOBBY2DB_SaveAdvancedCharReq::mutable_territory() {
  set_has_territory();
  if (territory_ == NULL) territory_ = new ::TgsProtocol::PlayerTerritoryInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.territory)
  return territory_;
}
inline ::TgsProtocol::PlayerTerritoryInfo* LOBBY2DB_SaveAdvancedCharReq::release_territory() {
  clear_has_territory();
  ::TgsProtocol::PlayerTerritoryInfo* temp = territory_;
  territory_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_territory(::TgsProtocol::PlayerTerritoryInfo* territory) {
  delete territory_;
  territory_ = territory;
  if (territory) {
    set_has_territory();
  } else {
    clear_has_territory();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.territory)
}

// optional .TgsProtocol.DiagramMap diagramMap = 50;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_diagrammap() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_diagrammap() {
  _has_bits_[1] |= 0x00008000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_diagrammap() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_diagrammap() {
  if (diagrammap_ != NULL) diagrammap_->::TgsProtocol::DiagramMap::Clear();
  clear_has_diagrammap();
}
inline const ::TgsProtocol::DiagramMap& LOBBY2DB_SaveAdvancedCharReq::diagrammap() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.diagramMap)
  return diagrammap_ != NULL ? *diagrammap_ : *default_instance_->diagrammap_;
}
inline ::TgsProtocol::DiagramMap* LOBBY2DB_SaveAdvancedCharReq::mutable_diagrammap() {
  set_has_diagrammap();
  if (diagrammap_ == NULL) diagrammap_ = new ::TgsProtocol::DiagramMap;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.diagramMap)
  return diagrammap_;
}
inline ::TgsProtocol::DiagramMap* LOBBY2DB_SaveAdvancedCharReq::release_diagrammap() {
  clear_has_diagrammap();
  ::TgsProtocol::DiagramMap* temp = diagrammap_;
  diagrammap_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_diagrammap(::TgsProtocol::DiagramMap* diagrammap) {
  delete diagrammap_;
  diagrammap_ = diagrammap;
  if (diagrammap) {
    set_has_diagrammap();
  } else {
    clear_has_diagrammap();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.diagramMap)
}

// optional .TgsProtocol.GhostList ghostActiveList = 51;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_ghostactivelist() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_ghostactivelist() {
  _has_bits_[1] |= 0x00010000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_ghostactivelist() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_ghostactivelist() {
  if (ghostactivelist_ != NULL) ghostactivelist_->::TgsProtocol::GhostList::Clear();
  clear_has_ghostactivelist();
}
inline const ::TgsProtocol::GhostList& LOBBY2DB_SaveAdvancedCharReq::ghostactivelist() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.ghostActiveList)
  return ghostactivelist_ != NULL ? *ghostactivelist_ : *default_instance_->ghostactivelist_;
}
inline ::TgsProtocol::GhostList* LOBBY2DB_SaveAdvancedCharReq::mutable_ghostactivelist() {
  set_has_ghostactivelist();
  if (ghostactivelist_ == NULL) ghostactivelist_ = new ::TgsProtocol::GhostList;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.ghostActiveList)
  return ghostactivelist_;
}
inline ::TgsProtocol::GhostList* LOBBY2DB_SaveAdvancedCharReq::release_ghostactivelist() {
  clear_has_ghostactivelist();
  ::TgsProtocol::GhostList* temp = ghostactivelist_;
  ghostactivelist_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_ghostactivelist(::TgsProtocol::GhostList* ghostactivelist) {
  delete ghostactivelist_;
  ghostactivelist_ = ghostactivelist;
  if (ghostactivelist) {
    set_has_ghostactivelist();
  } else {
    clear_has_ghostactivelist();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.ghostActiveList)
}

// optional uint32 cheerId = 52;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_cheerid() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_cheerid() {
  _has_bits_[1] |= 0x00020000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_cheerid() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_cheerid() {
  cheerid_ = 0u;
  clear_has_cheerid();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::cheerid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.cheerId)
  return cheerid_;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_cheerid(::google::protobuf::uint32 value) {
  set_has_cheerid();
  cheerid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.cheerId)
}

// repeated uint32 titleList = 53;
inline int LOBBY2DB_SaveAdvancedCharReq::titlelist_size() const {
  return titlelist_.size();
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_titlelist() {
  titlelist_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::titlelist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.titleList)
  return titlelist_.Get(index);
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_titlelist(int index, ::google::protobuf::uint32 value) {
  titlelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.titleList)
}
inline void LOBBY2DB_SaveAdvancedCharReq::add_titlelist(::google::protobuf::uint32 value) {
  titlelist_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.titleList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveAdvancedCharReq::titlelist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.titleList)
  return titlelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveAdvancedCharReq::mutable_titlelist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.titleList)
  return &titlelist_;
}

// optional .TgsProtocol.EpicBossList epicbosslist = 54;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_epicbosslist() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_epicbosslist() {
  _has_bits_[1] |= 0x00080000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_epicbosslist() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_epicbosslist() {
  if (epicbosslist_ != NULL) epicbosslist_->::TgsProtocol::EpicBossList::Clear();
  clear_has_epicbosslist();
}
inline const ::TgsProtocol::EpicBossList& LOBBY2DB_SaveAdvancedCharReq::epicbosslist() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.epicbosslist)
  return epicbosslist_ != NULL ? *epicbosslist_ : *default_instance_->epicbosslist_;
}
inline ::TgsProtocol::EpicBossList* LOBBY2DB_SaveAdvancedCharReq::mutable_epicbosslist() {
  set_has_epicbosslist();
  if (epicbosslist_ == NULL) epicbosslist_ = new ::TgsProtocol::EpicBossList;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.epicbosslist)
  return epicbosslist_;
}
inline ::TgsProtocol::EpicBossList* LOBBY2DB_SaveAdvancedCharReq::release_epicbosslist() {
  clear_has_epicbosslist();
  ::TgsProtocol::EpicBossList* temp = epicbosslist_;
  epicbosslist_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_epicbosslist(::TgsProtocol::EpicBossList* epicbosslist) {
  delete epicbosslist_;
  epicbosslist_ = epicbosslist;
  if (epicbosslist) {
    set_has_epicbosslist();
  } else {
    clear_has_epicbosslist();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.epicbosslist)
}

// repeated uint32 sevengifts = 56;
inline int LOBBY2DB_SaveAdvancedCharReq::sevengifts_size() const {
  return sevengifts_.size();
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_sevengifts() {
  sevengifts_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::sevengifts(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.sevengifts)
  return sevengifts_.Get(index);
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_sevengifts(int index, ::google::protobuf::uint32 value) {
  sevengifts_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.sevengifts)
}
inline void LOBBY2DB_SaveAdvancedCharReq::add_sevengifts(::google::protobuf::uint32 value) {
  sevengifts_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.sevengifts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveAdvancedCharReq::sevengifts() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.sevengifts)
  return sevengifts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveAdvancedCharReq::mutable_sevengifts() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.sevengifts)
  return &sevengifts_;
}

// repeated uint32 onlineRewards = 57;
inline int LOBBY2DB_SaveAdvancedCharReq::onlinerewards_size() const {
  return onlinerewards_.size();
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_onlinerewards() {
  onlinerewards_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::onlinerewards(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.onlineRewards)
  return onlinerewards_.Get(index);
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_onlinerewards(int index, ::google::protobuf::uint32 value) {
  onlinerewards_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.onlineRewards)
}
inline void LOBBY2DB_SaveAdvancedCharReq::add_onlinerewards(::google::protobuf::uint32 value) {
  onlinerewards_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.onlineRewards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveAdvancedCharReq::onlinerewards() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.onlineRewards)
  return onlinerewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveAdvancedCharReq::mutable_onlinerewards() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.onlineRewards)
  return &onlinerewards_;
}

// optional .TgsProtocol.RetrieveDB retrieve = 58;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_retrieve() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_retrieve() {
  _has_bits_[1] |= 0x00400000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_retrieve() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_retrieve() {
  if (retrieve_ != NULL) retrieve_->::TgsProtocol::RetrieveDB::Clear();
  clear_has_retrieve();
}
inline const ::TgsProtocol::RetrieveDB& LOBBY2DB_SaveAdvancedCharReq::retrieve() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.retrieve)
  return retrieve_ != NULL ? *retrieve_ : *default_instance_->retrieve_;
}
inline ::TgsProtocol::RetrieveDB* LOBBY2DB_SaveAdvancedCharReq::mutable_retrieve() {
  set_has_retrieve();
  if (retrieve_ == NULL) retrieve_ = new ::TgsProtocol::RetrieveDB;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.retrieve)
  return retrieve_;
}
inline ::TgsProtocol::RetrieveDB* LOBBY2DB_SaveAdvancedCharReq::release_retrieve() {
  clear_has_retrieve();
  ::TgsProtocol::RetrieveDB* temp = retrieve_;
  retrieve_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_retrieve(::TgsProtocol::RetrieveDB* retrieve) {
  delete retrieve_;
  retrieve_ = retrieve;
  if (retrieve) {
    set_has_retrieve();
  } else {
    clear_has_retrieve();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.retrieve)
}

// repeated .TgsProtocol.PassWordState chatpasswd = 59;
inline int LOBBY2DB_SaveAdvancedCharReq::chatpasswd_size() const {
  return chatpasswd_.size();
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_chatpasswd() {
  chatpasswd_.Clear();
}
inline const ::TgsProtocol::PassWordState& LOBBY2DB_SaveAdvancedCharReq::chatpasswd(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatpasswd)
  return chatpasswd_.Get(index);
}
inline ::TgsProtocol::PassWordState* LOBBY2DB_SaveAdvancedCharReq::mutable_chatpasswd(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatpasswd)
  return chatpasswd_.Mutable(index);
}
inline ::TgsProtocol::PassWordState* LOBBY2DB_SaveAdvancedCharReq::add_chatpasswd() {
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatpasswd)
  return chatpasswd_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState >&
LOBBY2DB_SaveAdvancedCharReq::chatpasswd() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatpasswd)
  return chatpasswd_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::PassWordState >*
LOBBY2DB_SaveAdvancedCharReq::mutable_chatpasswd() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatpasswd)
  return &chatpasswd_;
}

// repeated uint32 chatCount = 60;
inline int LOBBY2DB_SaveAdvancedCharReq::chatcount_size() const {
  return chatcount_.size();
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_chatcount() {
  chatcount_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveAdvancedCharReq::chatcount(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatCount)
  return chatcount_.Get(index);
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_chatcount(int index, ::google::protobuf::uint32 value) {
  chatcount_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatCount)
}
inline void LOBBY2DB_SaveAdvancedCharReq::add_chatcount(::google::protobuf::uint32 value) {
  chatcount_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_SaveAdvancedCharReq::chatcount() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatCount)
  return chatcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_SaveAdvancedCharReq::mutable_chatcount() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.chatCount)
  return &chatcount_;
}

// optional .TgsProtocol.DBServerCompareGot compare_gots = 61;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_compare_gots() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_compare_gots() {
  _has_bits_[1] |= 0x02000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_compare_gots() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_compare_gots() {
  if (compare_gots_ != NULL) compare_gots_->::TgsProtocol::DBServerCompareGot::Clear();
  clear_has_compare_gots();
}
inline const ::TgsProtocol::DBServerCompareGot& LOBBY2DB_SaveAdvancedCharReq::compare_gots() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.compare_gots)
  return compare_gots_ != NULL ? *compare_gots_ : *default_instance_->compare_gots_;
}
inline ::TgsProtocol::DBServerCompareGot* LOBBY2DB_SaveAdvancedCharReq::mutable_compare_gots() {
  set_has_compare_gots();
  if (compare_gots_ == NULL) compare_gots_ = new ::TgsProtocol::DBServerCompareGot;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.compare_gots)
  return compare_gots_;
}
inline ::TgsProtocol::DBServerCompareGot* LOBBY2DB_SaveAdvancedCharReq::release_compare_gots() {
  clear_has_compare_gots();
  ::TgsProtocol::DBServerCompareGot* temp = compare_gots_;
  compare_gots_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_compare_gots(::TgsProtocol::DBServerCompareGot* compare_gots) {
  delete compare_gots_;
  compare_gots_ = compare_gots;
  if (compare_gots) {
    set_has_compare_gots();
  } else {
    clear_has_compare_gots();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.compare_gots)
}

// optional .TgsProtocol.FarmDB farm = 62;
inline bool LOBBY2DB_SaveAdvancedCharReq::has_farm() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_has_farm() {
  _has_bits_[1] |= 0x04000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_has_farm() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void LOBBY2DB_SaveAdvancedCharReq::clear_farm() {
  if (farm_ != NULL) farm_->::TgsProtocol::FarmDB::Clear();
  clear_has_farm();
}
inline const ::TgsProtocol::FarmDB& LOBBY2DB_SaveAdvancedCharReq::farm() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.farm)
  return farm_ != NULL ? *farm_ : *default_instance_->farm_;
}
inline ::TgsProtocol::FarmDB* LOBBY2DB_SaveAdvancedCharReq::mutable_farm() {
  set_has_farm();
  if (farm_ == NULL) farm_ = new ::TgsProtocol::FarmDB;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.farm)
  return farm_;
}
inline ::TgsProtocol::FarmDB* LOBBY2DB_SaveAdvancedCharReq::release_farm() {
  clear_has_farm();
  ::TgsProtocol::FarmDB* temp = farm_;
  farm_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveAdvancedCharReq::set_allocated_farm(::TgsProtocol::FarmDB* farm) {
  delete farm_;
  farm_ = farm;
  if (farm) {
    set_has_farm();
  } else {
    clear_has_farm();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveAdvancedCharReq.farm)
}

// -------------------------------------------------------------------

// RetrieveDB

// repeated .TgsProtocol.RetrieveState today = 1;
inline int RetrieveDB::today_size() const {
  return today_.size();
}
inline void RetrieveDB::clear_today() {
  today_.Clear();
}
inline const ::TgsProtocol::RetrieveState& RetrieveDB::today(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.RetrieveDB.today)
  return today_.Get(index);
}
inline ::TgsProtocol::RetrieveState* RetrieveDB::mutable_today(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.RetrieveDB.today)
  return today_.Mutable(index);
}
inline ::TgsProtocol::RetrieveState* RetrieveDB::add_today() {
  // @@protoc_insertion_point(field_add:TgsProtocol.RetrieveDB.today)
  return today_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState >&
RetrieveDB::today() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.RetrieveDB.today)
  return today_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState >*
RetrieveDB::mutable_today() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.RetrieveDB.today)
  return &today_;
}

// repeated .TgsProtocol.RetrieveState yesterday = 2;
inline int RetrieveDB::yesterday_size() const {
  return yesterday_.size();
}
inline void RetrieveDB::clear_yesterday() {
  yesterday_.Clear();
}
inline const ::TgsProtocol::RetrieveState& RetrieveDB::yesterday(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.RetrieveDB.yesterday)
  return yesterday_.Get(index);
}
inline ::TgsProtocol::RetrieveState* RetrieveDB::mutable_yesterday(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.RetrieveDB.yesterday)
  return yesterday_.Mutable(index);
}
inline ::TgsProtocol::RetrieveState* RetrieveDB::add_yesterday() {
  // @@protoc_insertion_point(field_add:TgsProtocol.RetrieveDB.yesterday)
  return yesterday_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState >&
RetrieveDB::yesterday() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.RetrieveDB.yesterday)
  return yesterday_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::RetrieveState >*
RetrieveDB::mutable_yesterday() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.RetrieveDB.yesterday)
  return &yesterday_;
}

// -------------------------------------------------------------------

// DB2LOBBY_SaveAdvancedCharRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SAVE_ADVANCED_CHARACTER_RET];
inline bool DB2LOBBY_SaveAdvancedCharRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_SaveAdvancedCharRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_SaveAdvancedCharRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_SaveAdvancedCharRet::clear_cmdid() {
  cmdid_ = 350009;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_SaveAdvancedCharRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_SaveAdvancedCharRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_SaveAdvancedCharRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_SaveAdvancedCharRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_SaveAdvancedCharRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_SaveAdvancedCharRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_SaveAdvancedCharRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_SaveAdvancedCharRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_SaveAdvancedCharRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_SaveAdvancedCharRet.ret)
  return ret_;
}
inline void DB2LOBBY_SaveAdvancedCharRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_SaveAdvancedCharRet.ret)
}

// required uint64 charId = 3;
inline bool DB2LOBBY_SaveAdvancedCharRet::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_SaveAdvancedCharRet::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_SaveAdvancedCharRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_SaveAdvancedCharRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_SaveAdvancedCharRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_SaveAdvancedCharRet.charId)
  return charid_;
}
inline void DB2LOBBY_SaveAdvancedCharRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_SaveAdvancedCharRet.charId)
}

// -------------------------------------------------------------------

// LOBBY2DB_LoadBagReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_BAG_REQ];
inline bool LOBBY2DB_LoadBagReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_LoadBagReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_LoadBagReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_LoadBagReq::clear_cmdid() {
  cmdid_ = 300004;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_LoadBagReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadBagReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_LoadBagReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadBagReq.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_LoadBagReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_LoadBagReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_LoadBagReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_LoadBagReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_LoadBagReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadBagReq.charId)
  return charid_;
}
inline void LOBBY2DB_LoadBagReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadBagReq.charId)
}

// -------------------------------------------------------------------

// DB2LOBBY_LoadBagRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_BAG_RET];
inline bool DB2LOBBY_LoadBagRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_LoadBagRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_LoadBagRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_LoadBagRet::clear_cmdid() {
  cmdid_ = 350004;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_LoadBagRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadBagRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_LoadBagRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadBagRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_LoadBagRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_LoadBagRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_LoadBagRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_LoadBagRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadBagRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadBagRet.ret)
  return ret_;
}
inline void DB2LOBBY_LoadBagRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadBagRet.ret)
}

// required uint64 charid = 3;
inline bool DB2LOBBY_LoadBagRet::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_LoadBagRet::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_LoadBagRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_LoadBagRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_LoadBagRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadBagRet.charid)
  return charid_;
}
inline void DB2LOBBY_LoadBagRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadBagRet.charid)
}

// optional uint32 curBagNum = 4;
inline bool DB2LOBBY_LoadBagRet::has_curbagnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBY_LoadBagRet::set_has_curbagnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBY_LoadBagRet::clear_has_curbagnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBY_LoadBagRet::clear_curbagnum() {
  curbagnum_ = 0u;
  clear_has_curbagnum();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadBagRet::curbagnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadBagRet.curBagNum)
  return curbagnum_;
}
inline void DB2LOBBY_LoadBagRet::set_curbagnum(::google::protobuf::uint32 value) {
  set_has_curbagnum();
  curbagnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadBagRet.curBagNum)
}

// optional bytes bag = 5;
inline bool DB2LOBBY_LoadBagRet::has_bag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBY_LoadBagRet::set_has_bag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBY_LoadBagRet::clear_has_bag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBY_LoadBagRet::clear_bag() {
  if (bag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_->clear();
  }
  clear_has_bag();
}
inline const ::std::string& DB2LOBBY_LoadBagRet::bag() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadBagRet.bag)
  return *bag_;
}
inline void DB2LOBBY_LoadBagRet::set_bag(const ::std::string& value) {
  set_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_ = new ::std::string;
  }
  bag_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadBagRet.bag)
}
inline void DB2LOBBY_LoadBagRet::set_bag(const char* value) {
  set_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_ = new ::std::string;
  }
  bag_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_LoadBagRet.bag)
}
inline void DB2LOBBY_LoadBagRet::set_bag(const void* value, size_t size) {
  set_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_ = new ::std::string;
  }
  bag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_LoadBagRet.bag)
}
inline ::std::string* DB2LOBBY_LoadBagRet::mutable_bag() {
  set_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadBagRet.bag)
  return bag_;
}
inline ::std::string* DB2LOBBY_LoadBagRet::release_bag() {
  clear_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bag_;
    bag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_LoadBagRet::set_allocated_bag(::std::string* bag) {
  if (bag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bag_;
  }
  if (bag) {
    set_has_bag();
    bag_ = bag;
  } else {
    clear_has_bag();
    bag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadBagRet.bag)
}

// optional .TgsProtocol.SeedBag seedBag = 6;
inline bool DB2LOBBY_LoadBagRet::has_seedbag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB2LOBBY_LoadBagRet::set_has_seedbag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB2LOBBY_LoadBagRet::clear_has_seedbag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB2LOBBY_LoadBagRet::clear_seedbag() {
  if (seedbag_ != NULL) seedbag_->::TgsProtocol::SeedBag::Clear();
  clear_has_seedbag();
}
inline const ::TgsProtocol::SeedBag& DB2LOBBY_LoadBagRet::seedbag() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadBagRet.seedBag)
  return seedbag_ != NULL ? *seedbag_ : *default_instance_->seedbag_;
}
inline ::TgsProtocol::SeedBag* DB2LOBBY_LoadBagRet::mutable_seedbag() {
  set_has_seedbag();
  if (seedbag_ == NULL) seedbag_ = new ::TgsProtocol::SeedBag;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadBagRet.seedBag)
  return seedbag_;
}
inline ::TgsProtocol::SeedBag* DB2LOBBY_LoadBagRet::release_seedbag() {
  clear_has_seedbag();
  ::TgsProtocol::SeedBag* temp = seedbag_;
  seedbag_ = NULL;
  return temp;
}
inline void DB2LOBBY_LoadBagRet::set_allocated_seedbag(::TgsProtocol::SeedBag* seedbag) {
  delete seedbag_;
  seedbag_ = seedbag;
  if (seedbag) {
    set_has_seedbag();
  } else {
    clear_has_seedbag();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_LoadBagRet.seedBag)
}

// -------------------------------------------------------------------

// DB2LOBBY_CheckTokenRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_CHECKTOKEN_RET];
inline bool DB2LOBBY_CheckTokenRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_CheckTokenRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_CheckTokenRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_CheckTokenRet::clear_cmdid() {
  cmdid_ = 350010;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_CheckTokenRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CheckTokenRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_CheckTokenRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CheckTokenRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_CheckTokenRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_CheckTokenRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_CheckTokenRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_CheckTokenRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_CheckTokenRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CheckTokenRet.ret)
  return ret_;
}
inline void DB2LOBBY_CheckTokenRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CheckTokenRet.ret)
}

// required uint64 charId = 3;
inline bool DB2LOBBY_CheckTokenRet::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_CheckTokenRet::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_CheckTokenRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_CheckTokenRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_CheckTokenRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CheckTokenRet.charId)
  return charid_;
}
inline void DB2LOBBY_CheckTokenRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CheckTokenRet.charId)
}

// required bytes deviceName = 4;
inline bool DB2LOBBY_CheckTokenRet::has_devicename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBY_CheckTokenRet::set_has_devicename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBY_CheckTokenRet::clear_has_devicename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBY_CheckTokenRet::clear_devicename() {
  if (devicename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_->clear();
  }
  clear_has_devicename();
}
inline const ::std::string& DB2LOBBY_CheckTokenRet::devicename() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceName)
  return *devicename_;
}
inline void DB2LOBBY_CheckTokenRet::set_devicename(const ::std::string& value) {
  set_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_ = new ::std::string;
  }
  devicename_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceName)
}
inline void DB2LOBBY_CheckTokenRet::set_devicename(const char* value) {
  set_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_ = new ::std::string;
  }
  devicename_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceName)
}
inline void DB2LOBBY_CheckTokenRet::set_devicename(const void* value, size_t size) {
  set_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_ = new ::std::string;
  }
  devicename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceName)
}
inline ::std::string* DB2LOBBY_CheckTokenRet::mutable_devicename() {
  set_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceName)
  return devicename_;
}
inline ::std::string* DB2LOBBY_CheckTokenRet::release_devicename() {
  clear_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devicename_;
    devicename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CheckTokenRet::set_allocated_devicename(::std::string* devicename) {
  if (devicename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devicename_;
  }
  if (devicename) {
    set_has_devicename();
    devicename_ = devicename;
  } else {
    clear_has_devicename();
    devicename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceName)
}

// required bytes deviceType = 5;
inline bool DB2LOBBY_CheckTokenRet::has_devicetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBY_CheckTokenRet::set_has_devicetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBY_CheckTokenRet::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBY_CheckTokenRet::clear_devicetype() {
  if (devicetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_->clear();
  }
  clear_has_devicetype();
}
inline const ::std::string& DB2LOBBY_CheckTokenRet::devicetype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceType)
  return *devicetype_;
}
inline void DB2LOBBY_CheckTokenRet::set_devicetype(const ::std::string& value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceType)
}
inline void DB2LOBBY_CheckTokenRet::set_devicetype(const char* value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceType)
}
inline void DB2LOBBY_CheckTokenRet::set_devicetype(const void* value, size_t size) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceType)
}
inline ::std::string* DB2LOBBY_CheckTokenRet::mutable_devicetype() {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceType)
  return devicetype_;
}
inline ::std::string* DB2LOBBY_CheckTokenRet::release_devicetype() {
  clear_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devicetype_;
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CheckTokenRet::set_allocated_devicetype(::std::string* devicetype) {
  if (devicetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devicetype_;
  }
  if (devicetype) {
    set_has_devicetype();
    devicetype_ = devicetype;
  } else {
    clear_has_devicetype();
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceType)
}

// required bytes deviceUid = 6;
inline bool DB2LOBBY_CheckTokenRet::has_deviceuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB2LOBBY_CheckTokenRet::set_has_deviceuid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB2LOBBY_CheckTokenRet::clear_has_deviceuid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB2LOBBY_CheckTokenRet::clear_deviceuid() {
  if (deviceuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_->clear();
  }
  clear_has_deviceuid();
}
inline const ::std::string& DB2LOBBY_CheckTokenRet::deviceuid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceUid)
  return *deviceuid_;
}
inline void DB2LOBBY_CheckTokenRet::set_deviceuid(const ::std::string& value) {
  set_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_ = new ::std::string;
  }
  deviceuid_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceUid)
}
inline void DB2LOBBY_CheckTokenRet::set_deviceuid(const char* value) {
  set_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_ = new ::std::string;
  }
  deviceuid_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceUid)
}
inline void DB2LOBBY_CheckTokenRet::set_deviceuid(const void* value, size_t size) {
  set_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_ = new ::std::string;
  }
  deviceuid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceUid)
}
inline ::std::string* DB2LOBBY_CheckTokenRet::mutable_deviceuid() {
  set_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceUid)
  return deviceuid_;
}
inline ::std::string* DB2LOBBY_CheckTokenRet::release_deviceuid() {
  clear_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = deviceuid_;
    deviceuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_CheckTokenRet::set_allocated_deviceuid(::std::string* deviceuid) {
  if (deviceuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete deviceuid_;
  }
  if (deviceuid) {
    set_has_deviceuid();
    deviceuid_ = deviceuid;
  } else {
    clear_has_deviceuid();
    deviceuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_CheckTokenRet.deviceUid)
}

// -------------------------------------------------------------------

// LOBBY2DB_SaveBagReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SAVE_BAG_REQ];
inline bool LOBBY2DB_SaveBagReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_SaveBagReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_SaveBagReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_SaveBagReq::clear_cmdid() {
  cmdid_ = 300003;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_SaveBagReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveBagReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_SaveBagReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveBagReq.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_SaveBagReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_SaveBagReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_SaveBagReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_SaveBagReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_SaveBagReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveBagReq.charId)
  return charid_;
}
inline void LOBBY2DB_SaveBagReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveBagReq.charId)
}

// optional uint32 isSaveBag = 3;
inline bool LOBBY2DB_SaveBagReq::has_issavebag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_SaveBagReq::set_has_issavebag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_SaveBagReq::clear_has_issavebag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_SaveBagReq::clear_issavebag() {
  issavebag_ = 0u;
  clear_has_issavebag();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveBagReq::issavebag() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveBagReq.isSaveBag)
  return issavebag_;
}
inline void LOBBY2DB_SaveBagReq::set_issavebag(::google::protobuf::uint32 value) {
  set_has_issavebag();
  issavebag_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveBagReq.isSaveBag)
}

// optional uint32 curBagNum = 4;
inline bool LOBBY2DB_SaveBagReq::has_curbagnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_SaveBagReq::set_has_curbagnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_SaveBagReq::clear_has_curbagnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_SaveBagReq::clear_curbagnum() {
  curbagnum_ = 0u;
  clear_has_curbagnum();
}
inline ::google::protobuf::uint32 LOBBY2DB_SaveBagReq::curbagnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveBagReq.curBagNum)
  return curbagnum_;
}
inline void LOBBY2DB_SaveBagReq::set_curbagnum(::google::protobuf::uint32 value) {
  set_has_curbagnum();
  curbagnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveBagReq.curBagNum)
}

// optional bytes bag = 5;
inline bool LOBBY2DB_SaveBagReq::has_bag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DB_SaveBagReq::set_has_bag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DB_SaveBagReq::clear_has_bag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DB_SaveBagReq::clear_bag() {
  if (bag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_->clear();
  }
  clear_has_bag();
}
inline const ::std::string& LOBBY2DB_SaveBagReq::bag() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveBagReq.bag)
  return *bag_;
}
inline void LOBBY2DB_SaveBagReq::set_bag(const ::std::string& value) {
  set_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_ = new ::std::string;
  }
  bag_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SaveBagReq.bag)
}
inline void LOBBY2DB_SaveBagReq::set_bag(const char* value) {
  set_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_ = new ::std::string;
  }
  bag_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_SaveBagReq.bag)
}
inline void LOBBY2DB_SaveBagReq::set_bag(const void* value, size_t size) {
  set_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_ = new ::std::string;
  }
  bag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_SaveBagReq.bag)
}
inline ::std::string* LOBBY2DB_SaveBagReq::mutable_bag() {
  set_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveBagReq.bag)
  return bag_;
}
inline ::std::string* LOBBY2DB_SaveBagReq::release_bag() {
  clear_has_bag();
  if (bag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bag_;
    bag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_SaveBagReq::set_allocated_bag(::std::string* bag) {
  if (bag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bag_;
  }
  if (bag) {
    set_has_bag();
    bag_ = bag;
  } else {
    clear_has_bag();
    bag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveBagReq.bag)
}

// optional .TgsProtocol.SeedBag seedBag = 6;
inline bool LOBBY2DB_SaveBagReq::has_seedbag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LOBBY2DB_SaveBagReq::set_has_seedbag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LOBBY2DB_SaveBagReq::clear_has_seedbag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LOBBY2DB_SaveBagReq::clear_seedbag() {
  if (seedbag_ != NULL) seedbag_->::TgsProtocol::SeedBag::Clear();
  clear_has_seedbag();
}
inline const ::TgsProtocol::SeedBag& LOBBY2DB_SaveBagReq::seedbag() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SaveBagReq.seedBag)
  return seedbag_ != NULL ? *seedbag_ : *default_instance_->seedbag_;
}
inline ::TgsProtocol::SeedBag* LOBBY2DB_SaveBagReq::mutable_seedbag() {
  set_has_seedbag();
  if (seedbag_ == NULL) seedbag_ = new ::TgsProtocol::SeedBag;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_SaveBagReq.seedBag)
  return seedbag_;
}
inline ::TgsProtocol::SeedBag* LOBBY2DB_SaveBagReq::release_seedbag() {
  clear_has_seedbag();
  ::TgsProtocol::SeedBag* temp = seedbag_;
  seedbag_ = NULL;
  return temp;
}
inline void LOBBY2DB_SaveBagReq::set_allocated_seedbag(::TgsProtocol::SeedBag* seedbag) {
  delete seedbag_;
  seedbag_ = seedbag;
  if (seedbag) {
    set_has_seedbag();
  } else {
    clear_has_seedbag();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_SaveBagReq.seedBag)
}

// -------------------------------------------------------------------

// LOBBY2DB_AddDiamondReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_ADDDIAMOND_REQ];
inline bool LOBBY2DB_AddDiamondReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_AddDiamondReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_AddDiamondReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_AddDiamondReq::clear_cmdid() {
  cmdid_ = 300005;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_AddDiamondReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_AddDiamondReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_AddDiamondReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_AddDiamondReq.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_AddDiamondReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_AddDiamondReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_AddDiamondReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_AddDiamondReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_AddDiamondReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_AddDiamondReq.charId)
  return charid_;
}
inline void LOBBY2DB_AddDiamondReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_AddDiamondReq.charId)
}

// optional uint32 addDiamond = 3;
inline bool LOBBY2DB_AddDiamondReq::has_adddiamond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_AddDiamondReq::set_has_adddiamond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_AddDiamondReq::clear_has_adddiamond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_AddDiamondReq::clear_adddiamond() {
  adddiamond_ = 0u;
  clear_has_adddiamond();
}
inline ::google::protobuf::uint32 LOBBY2DB_AddDiamondReq::adddiamond() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_AddDiamondReq.addDiamond)
  return adddiamond_;
}
inline void LOBBY2DB_AddDiamondReq::set_adddiamond(::google::protobuf::uint32 value) {
  set_has_adddiamond();
  adddiamond_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_AddDiamondReq.addDiamond)
}

// -------------------------------------------------------------------

// LOBBY2DB_ChangeNameCheckReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CHANGE_NAME_CHECK_REQ];
inline bool LOBBY2DB_ChangeNameCheckReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_ChangeNameCheckReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_ChangeNameCheckReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_ChangeNameCheckReq::clear_cmdid() {
  cmdid_ = 300007;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_ChangeNameCheckReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_ChangeNameCheckReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_ChangeNameCheckReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_ChangeNameCheckReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_ChangeNameCheckReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_ChangeNameCheckReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_ChangeNameCheckReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.charId)
  return charid_;
}
inline void LOBBY2DB_ChangeNameCheckReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.charId)
}

// required bytes newName = 3;
inline bool LOBBY2DB_ChangeNameCheckReq::has_newname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_ChangeNameCheckReq::set_has_newname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_ChangeNameCheckReq::clear_has_newname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_ChangeNameCheckReq::clear_newname() {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& LOBBY2DB_ChangeNameCheckReq::newname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.newName)
  return *newname_;
}
inline void LOBBY2DB_ChangeNameCheckReq::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.newName)
}
inline void LOBBY2DB_ChangeNameCheckReq::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.newName)
}
inline void LOBBY2DB_ChangeNameCheckReq::set_newname(const void* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.newName)
}
inline ::std::string* LOBBY2DB_ChangeNameCheckReq::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.newName)
  return newname_;
}
inline ::std::string* LOBBY2DB_ChangeNameCheckReq::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_ChangeNameCheckReq::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.newName)
}

// required uint32 cmd = 4;
inline bool LOBBY2DB_ChangeNameCheckReq::has_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_ChangeNameCheckReq::set_has_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_ChangeNameCheckReq::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_ChangeNameCheckReq::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 LOBBY2DB_ChangeNameCheckReq::cmd() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.cmd)
  return cmd_;
}
inline void LOBBY2DB_ChangeNameCheckReq::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ChangeNameCheckReq.cmd)
}

// -------------------------------------------------------------------

// DB2LOBBY_ChangeNameCheckRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_CHANGE_NAME_CHECK_RET];
inline bool DB2LOBBY_ChangeNameCheckRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_ChangeNameCheckRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_cmdid() {
  cmdid_ = 350006;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_ChangeNameCheckRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_ChangeNameCheckRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_ChangeNameCheckRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_ChangeNameCheckRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_ChangeNameCheckRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.ret)
  return ret_;
}
inline void DB2LOBBY_ChangeNameCheckRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.ret)
}

// required uint64 charId = 3;
inline bool DB2LOBBY_ChangeNameCheckRet::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_ChangeNameCheckRet::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_ChangeNameCheckRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.charId)
  return charid_;
}
inline void DB2LOBBY_ChangeNameCheckRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.charId)
}

// required bytes newName = 4;
inline bool DB2LOBBY_ChangeNameCheckRet::has_newname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBY_ChangeNameCheckRet::set_has_newname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_has_newname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_newname() {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& DB2LOBBY_ChangeNameCheckRet::newname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.newName)
  return *newname_;
}
inline void DB2LOBBY_ChangeNameCheckRet::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.newName)
}
inline void DB2LOBBY_ChangeNameCheckRet::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.newName)
}
inline void DB2LOBBY_ChangeNameCheckRet::set_newname(const void* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.newName)
}
inline ::std::string* DB2LOBBY_ChangeNameCheckRet::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.newName)
  return newname_;
}
inline ::std::string* DB2LOBBY_ChangeNameCheckRet::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBY_ChangeNameCheckRet::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.newName)
}

// required uint32 cmd = 5;
inline bool DB2LOBBY_ChangeNameCheckRet::has_cmd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBY_ChangeNameCheckRet::set_has_cmd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBY_ChangeNameCheckRet::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 DB2LOBBY_ChangeNameCheckRet::cmd() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.cmd)
  return cmd_;
}
inline void DB2LOBBY_ChangeNameCheckRet::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_ChangeNameCheckRet.cmd)
}

// -------------------------------------------------------------------

// LOBBY2DBLoadWorldReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_WORLD_REQ];
inline bool LOBBY2DBLoadWorldReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DBLoadWorldReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DBLoadWorldReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DBLoadWorldReq::clear_cmdid() {
  cmdid_ = 350090;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DBLoadWorldReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBLoadWorldReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DBLoadWorldReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBLoadWorldReq.cmdId)
}

// -------------------------------------------------------------------

// DB2LOBBYLoadWorldRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_WORLD_RET];
inline bool DB2LOBBYLoadWorldRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBYLoadWorldRet::clear_cmdid() {
  cmdid_ = 350091;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBYLoadWorldRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBYLoadWorldRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBYLoadWorldRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBYLoadWorldRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.ret)
  return ret_;
}
inline void DB2LOBBYLoadWorldRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.ret)
}

// required uint32 weekBoxId = 3;
inline bool DB2LOBBYLoadWorldRet::has_weekboxid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_weekboxid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_weekboxid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBYLoadWorldRet::clear_weekboxid() {
  weekboxid_ = 0u;
  clear_has_weekboxid();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::weekboxid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.weekBoxId)
  return weekboxid_;
}
inline void DB2LOBBYLoadWorldRet::set_weekboxid(::google::protobuf::uint32 value) {
  set_has_weekboxid();
  weekboxid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.weekBoxId)
}

// required uint32 dayBox_1 = 4;
inline bool DB2LOBBYLoadWorldRet::has_daybox_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_daybox_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_daybox_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBYLoadWorldRet::clear_daybox_1() {
  daybox_1_ = 0u;
  clear_has_daybox_1();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::daybox_1() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.dayBox_1)
  return daybox_1_;
}
inline void DB2LOBBYLoadWorldRet::set_daybox_1(::google::protobuf::uint32 value) {
  set_has_daybox_1();
  daybox_1_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.dayBox_1)
}

// required uint32 dayBox_2 = 5;
inline bool DB2LOBBYLoadWorldRet::has_daybox_2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_daybox_2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_daybox_2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBYLoadWorldRet::clear_daybox_2() {
  daybox_2_ = 0u;
  clear_has_daybox_2();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::daybox_2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.dayBox_2)
  return daybox_2_;
}
inline void DB2LOBBYLoadWorldRet::set_daybox_2(::google::protobuf::uint32 value) {
  set_has_daybox_2();
  daybox_2_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.dayBox_2)
}

// required uint32 dayBox_3 = 6;
inline bool DB2LOBBYLoadWorldRet::has_daybox_3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_daybox_3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_daybox_3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB2LOBBYLoadWorldRet::clear_daybox_3() {
  daybox_3_ = 0u;
  clear_has_daybox_3();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::daybox_3() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.dayBox_3)
  return daybox_3_;
}
inline void DB2LOBBYLoadWorldRet::set_daybox_3(::google::protobuf::uint32 value) {
  set_has_daybox_3();
  daybox_3_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.dayBox_3)
}

// optional bytes arenaHeros = 8;
inline bool DB2LOBBYLoadWorldRet::has_arenaheros() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_arenaheros() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_arenaheros() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DB2LOBBYLoadWorldRet::clear_arenaheros() {
  if (arenaheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_->clear();
  }
  clear_has_arenaheros();
}
inline const ::std::string& DB2LOBBYLoadWorldRet::arenaheros() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.arenaHeros)
  return *arenaheros_;
}
inline void DB2LOBBYLoadWorldRet::set_arenaheros(const ::std::string& value) {
  set_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_ = new ::std::string;
  }
  arenaheros_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.arenaHeros)
}
inline void DB2LOBBYLoadWorldRet::set_arenaheros(const char* value) {
  set_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_ = new ::std::string;
  }
  arenaheros_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBYLoadWorldRet.arenaHeros)
}
inline void DB2LOBBYLoadWorldRet::set_arenaheros(const void* value, size_t size) {
  set_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_ = new ::std::string;
  }
  arenaheros_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBYLoadWorldRet.arenaHeros)
}
inline ::std::string* DB2LOBBYLoadWorldRet::mutable_arenaheros() {
  set_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.arenaHeros)
  return arenaheros_;
}
inline ::std::string* DB2LOBBYLoadWorldRet::release_arenaheros() {
  clear_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = arenaheros_;
    arenaheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBYLoadWorldRet::set_allocated_arenaheros(::std::string* arenaheros) {
  if (arenaheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete arenaheros_;
  }
  if (arenaheros) {
    set_has_arenaheros();
    arenaheros_ = arenaheros;
  } else {
    clear_has_arenaheros();
    arenaheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadWorldRet.arenaHeros)
}

// optional uint32 openServerTime = 9;
inline bool DB2LOBBYLoadWorldRet::has_openservertime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_openservertime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_openservertime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DB2LOBBYLoadWorldRet::clear_openservertime() {
  openservertime_ = 0u;
  clear_has_openservertime();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::openservertime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.openServerTime)
  return openservertime_;
}
inline void DB2LOBBYLoadWorldRet::set_openservertime(::google::protobuf::uint32 value) {
  set_has_openservertime();
  openservertime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.openServerTime)
}

// optional .TgsProtocol.HalfBuy halfBuy = 10;
inline bool DB2LOBBYLoadWorldRet::has_halfbuy() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_halfbuy() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_halfbuy() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DB2LOBBYLoadWorldRet::clear_halfbuy() {
  if (halfbuy_ != NULL) halfbuy_->::TgsProtocol::HalfBuy::Clear();
  clear_has_halfbuy();
}
inline const ::TgsProtocol::HalfBuy& DB2LOBBYLoadWorldRet::halfbuy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.halfBuy)
  return halfbuy_ != NULL ? *halfbuy_ : *default_instance_->halfbuy_;
}
inline ::TgsProtocol::HalfBuy* DB2LOBBYLoadWorldRet::mutable_halfbuy() {
  set_has_halfbuy();
  if (halfbuy_ == NULL) halfbuy_ = new ::TgsProtocol::HalfBuy;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.halfBuy)
  return halfbuy_;
}
inline ::TgsProtocol::HalfBuy* DB2LOBBYLoadWorldRet::release_halfbuy() {
  clear_has_halfbuy();
  ::TgsProtocol::HalfBuy* temp = halfbuy_;
  halfbuy_ = NULL;
  return temp;
}
inline void DB2LOBBYLoadWorldRet::set_allocated_halfbuy(::TgsProtocol::HalfBuy* halfbuy) {
  delete halfbuy_;
  halfbuy_ = halfbuy;
  if (halfbuy) {
    set_has_halfbuy();
  } else {
    clear_has_halfbuy();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadWorldRet.halfBuy)
}

// optional .TgsProtocol.Achieve achieve = 11;
inline bool DB2LOBBYLoadWorldRet::has_achieve() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_achieve() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_achieve() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DB2LOBBYLoadWorldRet::clear_achieve() {
  if (achieve_ != NULL) achieve_->::TgsProtocol::Achieve::Clear();
  clear_has_achieve();
}
inline const ::TgsProtocol::Achieve& DB2LOBBYLoadWorldRet::achieve() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.achieve)
  return achieve_ != NULL ? *achieve_ : *default_instance_->achieve_;
}
inline ::TgsProtocol::Achieve* DB2LOBBYLoadWorldRet::mutable_achieve() {
  set_has_achieve();
  if (achieve_ == NULL) achieve_ = new ::TgsProtocol::Achieve;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.achieve)
  return achieve_;
}
inline ::TgsProtocol::Achieve* DB2LOBBYLoadWorldRet::release_achieve() {
  clear_has_achieve();
  ::TgsProtocol::Achieve* temp = achieve_;
  achieve_ = NULL;
  return temp;
}
inline void DB2LOBBYLoadWorldRet::set_allocated_achieve(::TgsProtocol::Achieve* achieve) {
  delete achieve_;
  achieve_ = achieve;
  if (achieve) {
    set_has_achieve();
  } else {
    clear_has_achieve();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadWorldRet.achieve)
}

// optional string globalItemGot = 12;
inline bool DB2LOBBYLoadWorldRet::has_globalitemgot() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_globalitemgot() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_globalitemgot() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DB2LOBBYLoadWorldRet::clear_globalitemgot() {
  if (globalitemgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_->clear();
  }
  clear_has_globalitemgot();
}
inline const ::std::string& DB2LOBBYLoadWorldRet::globalitemgot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.globalItemGot)
  return *globalitemgot_;
}
inline void DB2LOBBYLoadWorldRet::set_globalitemgot(const ::std::string& value) {
  set_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_ = new ::std::string;
  }
  globalitemgot_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.globalItemGot)
}
inline void DB2LOBBYLoadWorldRet::set_globalitemgot(const char* value) {
  set_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_ = new ::std::string;
  }
  globalitemgot_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBYLoadWorldRet.globalItemGot)
}
inline void DB2LOBBYLoadWorldRet::set_globalitemgot(const char* value, size_t size) {
  set_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_ = new ::std::string;
  }
  globalitemgot_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBYLoadWorldRet.globalItemGot)
}
inline ::std::string* DB2LOBBYLoadWorldRet::mutable_globalitemgot() {
  set_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.globalItemGot)
  return globalitemgot_;
}
inline ::std::string* DB2LOBBYLoadWorldRet::release_globalitemgot() {
  clear_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = globalitemgot_;
    globalitemgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBYLoadWorldRet::set_allocated_globalitemgot(::std::string* globalitemgot) {
  if (globalitemgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete globalitemgot_;
  }
  if (globalitemgot) {
    set_has_globalitemgot();
    globalitemgot_ = globalitemgot;
  } else {
    clear_has_globalitemgot();
    globalitemgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadWorldRet.globalItemGot)
}

// optional string passwordGot = 13;
inline bool DB2LOBBYLoadWorldRet::has_passwordgot() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_passwordgot() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_passwordgot() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DB2LOBBYLoadWorldRet::clear_passwordgot() {
  if (passwordgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_->clear();
  }
  clear_has_passwordgot();
}
inline const ::std::string& DB2LOBBYLoadWorldRet::passwordgot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.passwordGot)
  return *passwordgot_;
}
inline void DB2LOBBYLoadWorldRet::set_passwordgot(const ::std::string& value) {
  set_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_ = new ::std::string;
  }
  passwordgot_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.passwordGot)
}
inline void DB2LOBBYLoadWorldRet::set_passwordgot(const char* value) {
  set_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_ = new ::std::string;
  }
  passwordgot_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBYLoadWorldRet.passwordGot)
}
inline void DB2LOBBYLoadWorldRet::set_passwordgot(const char* value, size_t size) {
  set_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_ = new ::std::string;
  }
  passwordgot_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBYLoadWorldRet.passwordGot)
}
inline ::std::string* DB2LOBBYLoadWorldRet::mutable_passwordgot() {
  set_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.passwordGot)
  return passwordgot_;
}
inline ::std::string* DB2LOBBYLoadWorldRet::release_passwordgot() {
  clear_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = passwordgot_;
    passwordgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBYLoadWorldRet::set_allocated_passwordgot(::std::string* passwordgot) {
  if (passwordgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete passwordgot_;
  }
  if (passwordgot) {
    set_has_passwordgot();
    passwordgot_ = passwordgot;
  } else {
    clear_has_passwordgot();
    passwordgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadWorldRet.passwordGot)
}

// optional string sevenDayRank = 14;
inline bool DB2LOBBYLoadWorldRet::has_sevendayrank() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_sevendayrank() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_sevendayrank() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DB2LOBBYLoadWorldRet::clear_sevendayrank() {
  if (sevendayrank_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_->clear();
  }
  clear_has_sevendayrank();
}
inline const ::std::string& DB2LOBBYLoadWorldRet::sevendayrank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.sevenDayRank)
  return *sevendayrank_;
}
inline void DB2LOBBYLoadWorldRet::set_sevendayrank(const ::std::string& value) {
  set_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_ = new ::std::string;
  }
  sevendayrank_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.sevenDayRank)
}
inline void DB2LOBBYLoadWorldRet::set_sevendayrank(const char* value) {
  set_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_ = new ::std::string;
  }
  sevendayrank_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBYLoadWorldRet.sevenDayRank)
}
inline void DB2LOBBYLoadWorldRet::set_sevendayrank(const char* value, size_t size) {
  set_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_ = new ::std::string;
  }
  sevendayrank_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBYLoadWorldRet.sevenDayRank)
}
inline ::std::string* DB2LOBBYLoadWorldRet::mutable_sevendayrank() {
  set_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.sevenDayRank)
  return sevendayrank_;
}
inline ::std::string* DB2LOBBYLoadWorldRet::release_sevendayrank() {
  clear_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sevendayrank_;
    sevendayrank_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBYLoadWorldRet::set_allocated_sevendayrank(::std::string* sevendayrank) {
  if (sevendayrank_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sevendayrank_;
  }
  if (sevendayrank) {
    set_has_sevendayrank();
    sevendayrank_ = sevendayrank;
  } else {
    clear_has_sevendayrank();
    sevendayrank_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadWorldRet.sevenDayRank)
}

// optional .TgsProtocol.OptGlobal opt = 15;
inline bool DB2LOBBYLoadWorldRet::has_opt() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_opt() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_opt() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DB2LOBBYLoadWorldRet::clear_opt() {
  if (opt_ != NULL) opt_->::TgsProtocol::OptGlobal::Clear();
  clear_has_opt();
}
inline const ::TgsProtocol::OptGlobal& DB2LOBBYLoadWorldRet::opt() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.opt)
  return opt_ != NULL ? *opt_ : *default_instance_->opt_;
}
inline ::TgsProtocol::OptGlobal* DB2LOBBYLoadWorldRet::mutable_opt() {
  set_has_opt();
  if (opt_ == NULL) opt_ = new ::TgsProtocol::OptGlobal;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.opt)
  return opt_;
}
inline ::TgsProtocol::OptGlobal* DB2LOBBYLoadWorldRet::release_opt() {
  clear_has_opt();
  ::TgsProtocol::OptGlobal* temp = opt_;
  opt_ = NULL;
  return temp;
}
inline void DB2LOBBYLoadWorldRet::set_allocated_opt(::TgsProtocol::OptGlobal* opt) {
  delete opt_;
  opt_ = opt;
  if (opt) {
    set_has_opt();
  } else {
    clear_has_opt();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadWorldRet.opt)
}

// optional string boxdrop = 16;
inline bool DB2LOBBYLoadWorldRet::has_boxdrop() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_boxdrop() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_boxdrop() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DB2LOBBYLoadWorldRet::clear_boxdrop() {
  if (boxdrop_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_->clear();
  }
  clear_has_boxdrop();
}
inline const ::std::string& DB2LOBBYLoadWorldRet::boxdrop() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.boxdrop)
  return *boxdrop_;
}
inline void DB2LOBBYLoadWorldRet::set_boxdrop(const ::std::string& value) {
  set_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_ = new ::std::string;
  }
  boxdrop_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.boxdrop)
}
inline void DB2LOBBYLoadWorldRet::set_boxdrop(const char* value) {
  set_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_ = new ::std::string;
  }
  boxdrop_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBYLoadWorldRet.boxdrop)
}
inline void DB2LOBBYLoadWorldRet::set_boxdrop(const char* value, size_t size) {
  set_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_ = new ::std::string;
  }
  boxdrop_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBYLoadWorldRet.boxdrop)
}
inline ::std::string* DB2LOBBYLoadWorldRet::mutable_boxdrop() {
  set_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.boxdrop)
  return boxdrop_;
}
inline ::std::string* DB2LOBBYLoadWorldRet::release_boxdrop() {
  clear_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = boxdrop_;
    boxdrop_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBYLoadWorldRet::set_allocated_boxdrop(::std::string* boxdrop) {
  if (boxdrop_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete boxdrop_;
  }
  if (boxdrop) {
    set_has_boxdrop();
    boxdrop_ = boxdrop;
  } else {
    clear_has_boxdrop();
    boxdrop_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadWorldRet.boxdrop)
}

// repeated .TgsProtocol.DBMailInfo mailList = 17;
inline int DB2LOBBYLoadWorldRet::maillist_size() const {
  return maillist_.size();
}
inline void DB2LOBBYLoadWorldRet::clear_maillist() {
  maillist_.Clear();
}
inline const ::TgsProtocol::DBMailInfo& DB2LOBBYLoadWorldRet::maillist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.mailList)
  return maillist_.Get(index);
}
inline ::TgsProtocol::DBMailInfo* DB2LOBBYLoadWorldRet::mutable_maillist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.mailList)
  return maillist_.Mutable(index);
}
inline ::TgsProtocol::DBMailInfo* DB2LOBBYLoadWorldRet::add_maillist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBYLoadWorldRet.mailList)
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >&
DB2LOBBYLoadWorldRet::maillist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBYLoadWorldRet.mailList)
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >*
DB2LOBBYLoadWorldRet::mutable_maillist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBYLoadWorldRet.mailList)
  return &maillist_;
}

// optional uint32 AstrologyCountry = 18;
inline bool DB2LOBBYLoadWorldRet::has_astrologycountry() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_astrologycountry() {
  _has_bits_[0] |= 0x00010000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_astrologycountry() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void DB2LOBBYLoadWorldRet::clear_astrologycountry() {
  astrologycountry_ = 0u;
  clear_has_astrologycountry();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::astrologycountry() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.AstrologyCountry)
  return astrologycountry_;
}
inline void DB2LOBBYLoadWorldRet::set_astrologycountry(::google::protobuf::uint32 value) {
  set_has_astrologycountry();
  astrologycountry_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.AstrologyCountry)
}

// optional uint32 AstrologyCountryNextTime = 19;
inline bool DB2LOBBYLoadWorldRet::has_astrologycountrynexttime() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_astrologycountrynexttime() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_astrologycountrynexttime() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DB2LOBBYLoadWorldRet::clear_astrologycountrynexttime() {
  astrologycountrynexttime_ = 0u;
  clear_has_astrologycountrynexttime();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::astrologycountrynexttime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.AstrologyCountryNextTime)
  return astrologycountrynexttime_;
}
inline void DB2LOBBYLoadWorldRet::set_astrologycountrynexttime(::google::protobuf::uint32 value) {
  set_has_astrologycountrynexttime();
  astrologycountrynexttime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.AstrologyCountryNextTime)
}

// optional uint32 rebateCount = 20;
inline bool DB2LOBBYLoadWorldRet::has_rebatecount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_rebatecount() {
  _has_bits_[0] |= 0x00040000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_rebatecount() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void DB2LOBBYLoadWorldRet::clear_rebatecount() {
  rebatecount_ = 0u;
  clear_has_rebatecount();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::rebatecount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.rebateCount)
  return rebatecount_;
}
inline void DB2LOBBYLoadWorldRet::set_rebatecount(::google::protobuf::uint32 value) {
  set_has_rebatecount();
  rebatecount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.rebateCount)
}

// optional uint32 heroChangedTime = 21;
inline bool DB2LOBBYLoadWorldRet::has_herochangedtime() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_herochangedtime() {
  _has_bits_[0] |= 0x00080000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_herochangedtime() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void DB2LOBBYLoadWorldRet::clear_herochangedtime() {
  herochangedtime_ = 0u;
  clear_has_herochangedtime();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::herochangedtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.heroChangedTime)
  return herochangedtime_;
}
inline void DB2LOBBYLoadWorldRet::set_herochangedtime(::google::protobuf::uint32 value) {
  set_has_herochangedtime();
  herochangedtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.heroChangedTime)
}

// repeated uint32 chatpasswd = 22;
inline int DB2LOBBYLoadWorldRet::chatpasswd_size() const {
  return chatpasswd_.size();
}
inline void DB2LOBBYLoadWorldRet::clear_chatpasswd() {
  chatpasswd_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::chatpasswd(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.chatpasswd)
  return chatpasswd_.Get(index);
}
inline void DB2LOBBYLoadWorldRet::set_chatpasswd(int index, ::google::protobuf::uint32 value) {
  chatpasswd_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.chatpasswd)
}
inline void DB2LOBBYLoadWorldRet::add_chatpasswd(::google::protobuf::uint32 value) {
  chatpasswd_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBYLoadWorldRet.chatpasswd)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBYLoadWorldRet::chatpasswd() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBYLoadWorldRet.chatpasswd)
  return chatpasswd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBYLoadWorldRet::mutable_chatpasswd() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBYLoadWorldRet.chatpasswd)
  return &chatpasswd_;
}

// optional uint32 maxRobotId = 23;
inline bool DB2LOBBYLoadWorldRet::has_maxrobotid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_maxrobotid() {
  _has_bits_[0] |= 0x00200000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_maxrobotid() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void DB2LOBBYLoadWorldRet::clear_maxrobotid() {
  maxrobotid_ = 0u;
  clear_has_maxrobotid();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::maxrobotid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.maxRobotId)
  return maxrobotid_;
}
inline void DB2LOBBYLoadWorldRet::set_maxrobotid(::google::protobuf::uint32 value) {
  set_has_maxrobotid();
  maxrobotid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.maxRobotId)
}

// repeated string robotName = 24;
inline int DB2LOBBYLoadWorldRet::robotname_size() const {
  return robotname_.size();
}
inline void DB2LOBBYLoadWorldRet::clear_robotname() {
  robotname_.Clear();
}
inline const ::std::string& DB2LOBBYLoadWorldRet::robotname(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
  return robotname_.Get(index);
}
inline ::std::string* DB2LOBBYLoadWorldRet::mutable_robotname(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
  return robotname_.Mutable(index);
}
inline void DB2LOBBYLoadWorldRet::set_robotname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
  robotname_.Mutable(index)->assign(value);
}
inline void DB2LOBBYLoadWorldRet::set_robotname(int index, const char* value) {
  robotname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
}
inline void DB2LOBBYLoadWorldRet::set_robotname(int index, const char* value, size_t size) {
  robotname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
}
inline ::std::string* DB2LOBBYLoadWorldRet::add_robotname() {
  return robotname_.Add();
}
inline void DB2LOBBYLoadWorldRet::add_robotname(const ::std::string& value) {
  robotname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
}
inline void DB2LOBBYLoadWorldRet::add_robotname(const char* value) {
  robotname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
}
inline void DB2LOBBYLoadWorldRet::add_robotname(const char* value, size_t size) {
  robotname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB2LOBBYLoadWorldRet::robotname() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
  return robotname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB2LOBBYLoadWorldRet::mutable_robotname() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBYLoadWorldRet.robotName)
  return &robotname_;
}

// repeated uint64 robotIdCollection = 25;
inline int DB2LOBBYLoadWorldRet::robotidcollection_size() const {
  return robotidcollection_.size();
}
inline void DB2LOBBYLoadWorldRet::clear_robotidcollection() {
  robotidcollection_.Clear();
}
inline ::google::protobuf::uint64 DB2LOBBYLoadWorldRet::robotidcollection(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.robotIdCollection)
  return robotidcollection_.Get(index);
}
inline void DB2LOBBYLoadWorldRet::set_robotidcollection(int index, ::google::protobuf::uint64 value) {
  robotidcollection_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.robotIdCollection)
}
inline void DB2LOBBYLoadWorldRet::add_robotidcollection(::google::protobuf::uint64 value) {
  robotidcollection_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBYLoadWorldRet.robotIdCollection)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DB2LOBBYLoadWorldRet::robotidcollection() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBYLoadWorldRet.robotIdCollection)
  return robotidcollection_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DB2LOBBYLoadWorldRet::mutable_robotidcollection() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBYLoadWorldRet.robotIdCollection)
  return &robotidcollection_;
}

// repeated uint32 robotIndex = 26;
inline int DB2LOBBYLoadWorldRet::robotindex_size() const {
  return robotindex_.size();
}
inline void DB2LOBBYLoadWorldRet::clear_robotindex() {
  robotindex_.Clear();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::robotindex(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.robotIndex)
  return robotindex_.Get(index);
}
inline void DB2LOBBYLoadWorldRet::set_robotindex(int index, ::google::protobuf::uint32 value) {
  robotindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.robotIndex)
}
inline void DB2LOBBYLoadWorldRet::add_robotindex(::google::protobuf::uint32 value) {
  robotindex_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBYLoadWorldRet.robotIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DB2LOBBYLoadWorldRet::robotindex() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBYLoadWorldRet.robotIndex)
  return robotindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DB2LOBBYLoadWorldRet::mutable_robotindex() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBYLoadWorldRet.robotIndex)
  return &robotindex_;
}

// optional string monthcard = 27;
inline bool DB2LOBBYLoadWorldRet::has_monthcard() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_monthcard() {
  _has_bits_[0] |= 0x02000000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_monthcard() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void DB2LOBBYLoadWorldRet::clear_monthcard() {
  if (monthcard_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_->clear();
  }
  clear_has_monthcard();
}
inline const ::std::string& DB2LOBBYLoadWorldRet::monthcard() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.monthcard)
  return *monthcard_;
}
inline void DB2LOBBYLoadWorldRet::set_monthcard(const ::std::string& value) {
  set_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_ = new ::std::string;
  }
  monthcard_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.monthcard)
}
inline void DB2LOBBYLoadWorldRet::set_monthcard(const char* value) {
  set_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_ = new ::std::string;
  }
  monthcard_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DB2LOBBYLoadWorldRet.monthcard)
}
inline void DB2LOBBYLoadWorldRet::set_monthcard(const char* value, size_t size) {
  set_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_ = new ::std::string;
  }
  monthcard_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DB2LOBBYLoadWorldRet.monthcard)
}
inline ::std::string* DB2LOBBYLoadWorldRet::mutable_monthcard() {
  set_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadWorldRet.monthcard)
  return monthcard_;
}
inline ::std::string* DB2LOBBYLoadWorldRet::release_monthcard() {
  clear_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = monthcard_;
    monthcard_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DB2LOBBYLoadWorldRet::set_allocated_monthcard(::std::string* monthcard) {
  if (monthcard_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete monthcard_;
  }
  if (monthcard) {
    set_has_monthcard();
    monthcard_ = monthcard;
  } else {
    clear_has_monthcard();
    monthcard_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadWorldRet.monthcard)
}

// optional uint32 heroQualityChangedTime = 28;
inline bool DB2LOBBYLoadWorldRet::has_heroqualitychangedtime() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void DB2LOBBYLoadWorldRet::set_has_heroqualitychangedtime() {
  _has_bits_[0] |= 0x04000000u;
}
inline void DB2LOBBYLoadWorldRet::clear_has_heroqualitychangedtime() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void DB2LOBBYLoadWorldRet::clear_heroqualitychangedtime() {
  heroqualitychangedtime_ = 0u;
  clear_has_heroqualitychangedtime();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadWorldRet::heroqualitychangedtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadWorldRet.heroQualityChangedTime)
  return heroqualitychangedtime_;
}
inline void DB2LOBBYLoadWorldRet::set_heroqualitychangedtime(::google::protobuf::uint32 value) {
  set_has_heroqualitychangedtime();
  heroqualitychangedtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadWorldRet.heroQualityChangedTime)
}

// -------------------------------------------------------------------

// DB2LOBBY_Server

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SERVER];
inline bool DB2LOBBY_Server::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_Server::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_Server::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_Server::clear_cmdid() {
  cmdid_ = 350011;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_Server::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_Server.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_Server::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_Server.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_Server::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_Server::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_Server::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_Server::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_Server::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_Server.ret)
  return ret_;
}
inline void DB2LOBBY_Server::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_Server.ret)
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateSupremeHotBox

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATE_SUPREMEHOTBOX];
inline bool LOBBY2DB_UpdateSupremeHotBox::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_cmdid() {
  cmdid_ = 300008;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateSupremeHotBox::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.cmdId)
}

// required uint32 weekBoxId = 2;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_weekboxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_weekboxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_weekboxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_weekboxid() {
  weekboxid_ = 0u;
  clear_has_weekboxid();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::weekboxid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.weekBoxId)
  return weekboxid_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_weekboxid(::google::protobuf::uint32 value) {
  set_has_weekboxid();
  weekboxid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.weekBoxId)
}

// required uint32 dayBox_1 = 3;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_daybox_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_daybox_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_daybox_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_daybox_1() {
  daybox_1_ = 0u;
  clear_has_daybox_1();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::daybox_1() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.dayBox_1)
  return daybox_1_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_daybox_1(::google::protobuf::uint32 value) {
  set_has_daybox_1();
  daybox_1_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.dayBox_1)
}

// required uint32 dayBox_2 = 4;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_daybox_2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_daybox_2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_daybox_2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_daybox_2() {
  daybox_2_ = 0u;
  clear_has_daybox_2();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::daybox_2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.dayBox_2)
  return daybox_2_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_daybox_2(::google::protobuf::uint32 value) {
  set_has_daybox_2();
  daybox_2_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.dayBox_2)
}

// required uint32 dayBox_3 = 5;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_daybox_3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_daybox_3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_daybox_3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_daybox_3() {
  daybox_3_ = 0u;
  clear_has_daybox_3();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::daybox_3() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.dayBox_3)
  return daybox_3_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_daybox_3(::google::protobuf::uint32 value) {
  set_has_daybox_3();
  daybox_3_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.dayBox_3)
}

// required uint32 openServerTime = 6;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_openservertime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_openservertime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_openservertime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_openservertime() {
  openservertime_ = 0u;
  clear_has_openservertime();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::openservertime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.openServerTime)
  return openservertime_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_openservertime(::google::protobuf::uint32 value) {
  set_has_openservertime();
  openservertime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.openServerTime)
}

// optional .TgsProtocol.HalfBuy halfBuy = 7;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_halfbuy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_halfbuy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_halfbuy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_halfbuy() {
  if (halfbuy_ != NULL) halfbuy_->::TgsProtocol::HalfBuy::Clear();
  clear_has_halfbuy();
}
inline const ::TgsProtocol::HalfBuy& LOBBY2DB_UpdateSupremeHotBox::halfbuy() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.halfBuy)
  return halfbuy_ != NULL ? *halfbuy_ : *default_instance_->halfbuy_;
}
inline ::TgsProtocol::HalfBuy* LOBBY2DB_UpdateSupremeHotBox::mutable_halfbuy() {
  set_has_halfbuy();
  if (halfbuy_ == NULL) halfbuy_ = new ::TgsProtocol::HalfBuy;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.halfBuy)
  return halfbuy_;
}
inline ::TgsProtocol::HalfBuy* LOBBY2DB_UpdateSupremeHotBox::release_halfbuy() {
  clear_has_halfbuy();
  ::TgsProtocol::HalfBuy* temp = halfbuy_;
  halfbuy_ = NULL;
  return temp;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_allocated_halfbuy(::TgsProtocol::HalfBuy* halfbuy) {
  delete halfbuy_;
  halfbuy_ = halfbuy;
  if (halfbuy) {
    set_has_halfbuy();
  } else {
    clear_has_halfbuy();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.halfBuy)
}

// optional .TgsProtocol.Achieve achieve = 8;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_achieve() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_achieve() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_achieve() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_achieve() {
  if (achieve_ != NULL) achieve_->::TgsProtocol::Achieve::Clear();
  clear_has_achieve();
}
inline const ::TgsProtocol::Achieve& LOBBY2DB_UpdateSupremeHotBox::achieve() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.achieve)
  return achieve_ != NULL ? *achieve_ : *default_instance_->achieve_;
}
inline ::TgsProtocol::Achieve* LOBBY2DB_UpdateSupremeHotBox::mutable_achieve() {
  set_has_achieve();
  if (achieve_ == NULL) achieve_ = new ::TgsProtocol::Achieve;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.achieve)
  return achieve_;
}
inline ::TgsProtocol::Achieve* LOBBY2DB_UpdateSupremeHotBox::release_achieve() {
  clear_has_achieve();
  ::TgsProtocol::Achieve* temp = achieve_;
  achieve_ = NULL;
  return temp;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_allocated_achieve(::TgsProtocol::Achieve* achieve) {
  delete achieve_;
  achieve_ = achieve;
  if (achieve) {
    set_has_achieve();
  } else {
    clear_has_achieve();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.achieve)
}

// optional string globalItemGot = 9;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_globalitemgot() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_globalitemgot() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_globalitemgot() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_globalitemgot() {
  if (globalitemgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_->clear();
  }
  clear_has_globalitemgot();
}
inline const ::std::string& LOBBY2DB_UpdateSupremeHotBox::globalitemgot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.globalItemGot)
  return *globalitemgot_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_globalitemgot(const ::std::string& value) {
  set_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_ = new ::std::string;
  }
  globalitemgot_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.globalItemGot)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_globalitemgot(const char* value) {
  set_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_ = new ::std::string;
  }
  globalitemgot_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.globalItemGot)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_globalitemgot(const char* value, size_t size) {
  set_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_ = new ::std::string;
  }
  globalitemgot_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.globalItemGot)
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::mutable_globalitemgot() {
  set_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    globalitemgot_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.globalItemGot)
  return globalitemgot_;
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::release_globalitemgot() {
  clear_has_globalitemgot();
  if (globalitemgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = globalitemgot_;
    globalitemgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_allocated_globalitemgot(::std::string* globalitemgot) {
  if (globalitemgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete globalitemgot_;
  }
  if (globalitemgot) {
    set_has_globalitemgot();
    globalitemgot_ = globalitemgot;
  } else {
    clear_has_globalitemgot();
    globalitemgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.globalItemGot)
}

// optional string passwordGot = 10;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_passwordgot() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_passwordgot() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_passwordgot() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_passwordgot() {
  if (passwordgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_->clear();
  }
  clear_has_passwordgot();
}
inline const ::std::string& LOBBY2DB_UpdateSupremeHotBox::passwordgot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.passwordGot)
  return *passwordgot_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_passwordgot(const ::std::string& value) {
  set_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_ = new ::std::string;
  }
  passwordgot_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.passwordGot)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_passwordgot(const char* value) {
  set_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_ = new ::std::string;
  }
  passwordgot_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.passwordGot)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_passwordgot(const char* value, size_t size) {
  set_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_ = new ::std::string;
  }
  passwordgot_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.passwordGot)
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::mutable_passwordgot() {
  set_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    passwordgot_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.passwordGot)
  return passwordgot_;
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::release_passwordgot() {
  clear_has_passwordgot();
  if (passwordgot_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = passwordgot_;
    passwordgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_allocated_passwordgot(::std::string* passwordgot) {
  if (passwordgot_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete passwordgot_;
  }
  if (passwordgot) {
    set_has_passwordgot();
    passwordgot_ = passwordgot;
  } else {
    clear_has_passwordgot();
    passwordgot_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.passwordGot)
}

// optional string sevenDayRank = 11;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_sevendayrank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_sevendayrank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_sevendayrank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_sevendayrank() {
  if (sevendayrank_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_->clear();
  }
  clear_has_sevendayrank();
}
inline const ::std::string& LOBBY2DB_UpdateSupremeHotBox::sevendayrank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.sevenDayRank)
  return *sevendayrank_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_sevendayrank(const ::std::string& value) {
  set_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_ = new ::std::string;
  }
  sevendayrank_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.sevenDayRank)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_sevendayrank(const char* value) {
  set_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_ = new ::std::string;
  }
  sevendayrank_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.sevenDayRank)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_sevendayrank(const char* value, size_t size) {
  set_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_ = new ::std::string;
  }
  sevendayrank_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.sevenDayRank)
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::mutable_sevendayrank() {
  set_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sevendayrank_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.sevenDayRank)
  return sevendayrank_;
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::release_sevendayrank() {
  clear_has_sevendayrank();
  if (sevendayrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sevendayrank_;
    sevendayrank_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_allocated_sevendayrank(::std::string* sevendayrank) {
  if (sevendayrank_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sevendayrank_;
  }
  if (sevendayrank) {
    set_has_sevendayrank();
    sevendayrank_ = sevendayrank;
  } else {
    clear_has_sevendayrank();
    sevendayrank_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.sevenDayRank)
}

// optional .TgsProtocol.OptGlobal opt = 12;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_opt() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_opt() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_opt() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_opt() {
  if (opt_ != NULL) opt_->::TgsProtocol::OptGlobal::Clear();
  clear_has_opt();
}
inline const ::TgsProtocol::OptGlobal& LOBBY2DB_UpdateSupremeHotBox::opt() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.opt)
  return opt_ != NULL ? *opt_ : *default_instance_->opt_;
}
inline ::TgsProtocol::OptGlobal* LOBBY2DB_UpdateSupremeHotBox::mutable_opt() {
  set_has_opt();
  if (opt_ == NULL) opt_ = new ::TgsProtocol::OptGlobal;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.opt)
  return opt_;
}
inline ::TgsProtocol::OptGlobal* LOBBY2DB_UpdateSupremeHotBox::release_opt() {
  clear_has_opt();
  ::TgsProtocol::OptGlobal* temp = opt_;
  opt_ = NULL;
  return temp;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_allocated_opt(::TgsProtocol::OptGlobal* opt) {
  delete opt_;
  opt_ = opt;
  if (opt) {
    set_has_opt();
  } else {
    clear_has_opt();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.opt)
}

// optional string boxdrop = 13;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_boxdrop() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_boxdrop() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_boxdrop() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_boxdrop() {
  if (boxdrop_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_->clear();
  }
  clear_has_boxdrop();
}
inline const ::std::string& LOBBY2DB_UpdateSupremeHotBox::boxdrop() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.boxdrop)
  return *boxdrop_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_boxdrop(const ::std::string& value) {
  set_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_ = new ::std::string;
  }
  boxdrop_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.boxdrop)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_boxdrop(const char* value) {
  set_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_ = new ::std::string;
  }
  boxdrop_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.boxdrop)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_boxdrop(const char* value, size_t size) {
  set_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_ = new ::std::string;
  }
  boxdrop_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.boxdrop)
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::mutable_boxdrop() {
  set_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    boxdrop_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.boxdrop)
  return boxdrop_;
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::release_boxdrop() {
  clear_has_boxdrop();
  if (boxdrop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = boxdrop_;
    boxdrop_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_allocated_boxdrop(::std::string* boxdrop) {
  if (boxdrop_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete boxdrop_;
  }
  if (boxdrop) {
    set_has_boxdrop();
    boxdrop_ = boxdrop;
  } else {
    clear_has_boxdrop();
    boxdrop_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.boxdrop)
}

// optional uint32 AstrologyCountry = 14;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_astrologycountry() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_astrologycountry() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_astrologycountry() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_astrologycountry() {
  astrologycountry_ = 0u;
  clear_has_astrologycountry();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::astrologycountry() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.AstrologyCountry)
  return astrologycountry_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_astrologycountry(::google::protobuf::uint32 value) {
  set_has_astrologycountry();
  astrologycountry_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.AstrologyCountry)
}

// optional uint32 AstrologyCountryNextTime = 15;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_astrologycountrynexttime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_astrologycountrynexttime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_astrologycountrynexttime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_astrologycountrynexttime() {
  astrologycountrynexttime_ = 0u;
  clear_has_astrologycountrynexttime();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::astrologycountrynexttime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.AstrologyCountryNextTime)
  return astrologycountrynexttime_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_astrologycountrynexttime(::google::protobuf::uint32 value) {
  set_has_astrologycountrynexttime();
  astrologycountrynexttime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.AstrologyCountryNextTime)
}

// optional uint32 rebateCount = 16;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_rebatecount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_rebatecount() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_rebatecount() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_rebatecount() {
  rebatecount_ = 0u;
  clear_has_rebatecount();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::rebatecount() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.rebateCount)
  return rebatecount_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_rebatecount(::google::protobuf::uint32 value) {
  set_has_rebatecount();
  rebatecount_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.rebateCount)
}

// optional uint32 heroChangedTime = 17;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_herochangedtime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_herochangedtime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_herochangedtime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_herochangedtime() {
  herochangedtime_ = 0u;
  clear_has_herochangedtime();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::herochangedtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.heroChangedTime)
  return herochangedtime_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_herochangedtime(::google::protobuf::uint32 value) {
  set_has_herochangedtime();
  herochangedtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.heroChangedTime)
}

// repeated uint32 chatpasswd = 18;
inline int LOBBY2DB_UpdateSupremeHotBox::chatpasswd_size() const {
  return chatpasswd_.size();
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_chatpasswd() {
  chatpasswd_.Clear();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::chatpasswd(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.chatpasswd)
  return chatpasswd_.Get(index);
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_chatpasswd(int index, ::google::protobuf::uint32 value) {
  chatpasswd_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.chatpasswd)
}
inline void LOBBY2DB_UpdateSupremeHotBox::add_chatpasswd(::google::protobuf::uint32 value) {
  chatpasswd_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.chatpasswd)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LOBBY2DB_UpdateSupremeHotBox::chatpasswd() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.chatpasswd)
  return chatpasswd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LOBBY2DB_UpdateSupremeHotBox::mutable_chatpasswd() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.chatpasswd)
  return &chatpasswd_;
}

// optional string monthcard = 19;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_monthcard() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_monthcard() {
  _has_bits_[0] |= 0x00040000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_monthcard() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_monthcard() {
  if (monthcard_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_->clear();
  }
  clear_has_monthcard();
}
inline const ::std::string& LOBBY2DB_UpdateSupremeHotBox::monthcard() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.monthcard)
  return *monthcard_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_monthcard(const ::std::string& value) {
  set_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_ = new ::std::string;
  }
  monthcard_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.monthcard)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_monthcard(const char* value) {
  set_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_ = new ::std::string;
  }
  monthcard_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.monthcard)
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_monthcard(const char* value, size_t size) {
  set_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_ = new ::std::string;
  }
  monthcard_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.monthcard)
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::mutable_monthcard() {
  set_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    monthcard_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.monthcard)
  return monthcard_;
}
inline ::std::string* LOBBY2DB_UpdateSupremeHotBox::release_monthcard() {
  clear_has_monthcard();
  if (monthcard_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = monthcard_;
    monthcard_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_allocated_monthcard(::std::string* monthcard) {
  if (monthcard_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete monthcard_;
  }
  if (monthcard) {
    set_has_monthcard();
    monthcard_ = monthcard;
  } else {
    clear_has_monthcard();
    monthcard_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.monthcard)
}

// optional uint32 heroQualityChangedTime = 20;
inline bool LOBBY2DB_UpdateSupremeHotBox::has_heroqualitychangedtime() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_has_heroqualitychangedtime() {
  _has_bits_[0] |= 0x00080000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_has_heroqualitychangedtime() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void LOBBY2DB_UpdateSupremeHotBox::clear_heroqualitychangedtime() {
  heroqualitychangedtime_ = 0u;
  clear_has_heroqualitychangedtime();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateSupremeHotBox::heroqualitychangedtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.heroQualityChangedTime)
  return heroqualitychangedtime_;
}
inline void LOBBY2DB_UpdateSupremeHotBox::set_heroqualitychangedtime(::google::protobuf::uint32 value) {
  set_has_heroqualitychangedtime();
  heroqualitychangedtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateSupremeHotBox.heroQualityChangedTime)
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateArenaRank

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATE_ARENA_RANK];
inline bool LOBBY2DB_UpdateArenaRank::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateArenaRank::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateArenaRank::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateArenaRank::clear_cmdid() {
  cmdid_ = 300012;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateArenaRank::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateArenaRank.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateArenaRank::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateArenaRank.cmdId)
}

// optional bytes arenaHeros = 2;
inline bool LOBBY2DB_UpdateArenaRank::has_arenaheros() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_UpdateArenaRank::set_has_arenaheros() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_UpdateArenaRank::clear_has_arenaheros() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_UpdateArenaRank::clear_arenaheros() {
  if (arenaheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_->clear();
  }
  clear_has_arenaheros();
}
inline const ::std::string& LOBBY2DB_UpdateArenaRank::arenaheros() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateArenaRank.arenaHeros)
  return *arenaheros_;
}
inline void LOBBY2DB_UpdateArenaRank::set_arenaheros(const ::std::string& value) {
  set_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_ = new ::std::string;
  }
  arenaheros_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateArenaRank.arenaHeros)
}
inline void LOBBY2DB_UpdateArenaRank::set_arenaheros(const char* value) {
  set_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_ = new ::std::string;
  }
  arenaheros_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_UpdateArenaRank.arenaHeros)
}
inline void LOBBY2DB_UpdateArenaRank::set_arenaheros(const void* value, size_t size) {
  set_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_ = new ::std::string;
  }
  arenaheros_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_UpdateArenaRank.arenaHeros)
}
inline ::std::string* LOBBY2DB_UpdateArenaRank::mutable_arenaheros() {
  set_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    arenaheros_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateArenaRank.arenaHeros)
  return arenaheros_;
}
inline ::std::string* LOBBY2DB_UpdateArenaRank::release_arenaheros() {
  clear_has_arenaheros();
  if (arenaheros_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = arenaheros_;
    arenaheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_UpdateArenaRank::set_allocated_arenaheros(::std::string* arenaheros) {
  if (arenaheros_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete arenaheros_;
  }
  if (arenaheros) {
    set_has_arenaheros();
    arenaheros_ = arenaheros;
  } else {
    clear_has_arenaheros();
    arenaheros_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateArenaRank.arenaHeros)
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateArenaLog

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATE_ARENA_LOG];
inline bool LOBBY2DB_UpdateArenaLog::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateArenaLog::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateArenaLog::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateArenaLog::clear_cmdid() {
  cmdid_ = 300013;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateArenaLog::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateArenaLog.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateArenaLog::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateArenaLog.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_UpdateArenaLog::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_UpdateArenaLog::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_UpdateArenaLog::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_UpdateArenaLog::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_UpdateArenaLog::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateArenaLog.charId)
  return charid_;
}
inline void LOBBY2DB_UpdateArenaLog::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateArenaLog.charId)
}

// required .TgsProtocol.DBArenaLog arenaLog = 3;
inline bool LOBBY2DB_UpdateArenaLog::has_arenalog() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_UpdateArenaLog::set_has_arenalog() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_UpdateArenaLog::clear_has_arenalog() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_UpdateArenaLog::clear_arenalog() {
  if (arenalog_ != NULL) arenalog_->::TgsProtocol::DBArenaLog::Clear();
  clear_has_arenalog();
}
inline const ::TgsProtocol::DBArenaLog& LOBBY2DB_UpdateArenaLog::arenalog() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateArenaLog.arenaLog)
  return arenalog_ != NULL ? *arenalog_ : *default_instance_->arenalog_;
}
inline ::TgsProtocol::DBArenaLog* LOBBY2DB_UpdateArenaLog::mutable_arenalog() {
  set_has_arenalog();
  if (arenalog_ == NULL) arenalog_ = new ::TgsProtocol::DBArenaLog;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateArenaLog.arenaLog)
  return arenalog_;
}
inline ::TgsProtocol::DBArenaLog* LOBBY2DB_UpdateArenaLog::release_arenalog() {
  clear_has_arenalog();
  ::TgsProtocol::DBArenaLog* temp = arenalog_;
  arenalog_ = NULL;
  return temp;
}
inline void LOBBY2DB_UpdateArenaLog::set_allocated_arenalog(::TgsProtocol::DBArenaLog* arenalog) {
  delete arenalog_;
  arenalog_ = arenalog;
  if (arenalog) {
    set_has_arenalog();
  } else {
    clear_has_arenalog();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateArenaLog.arenaLog)
}

// -------------------------------------------------------------------

// LOBBY2DB_OfflineMail

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_OFFLINE_MAIL];
inline bool LOBBY2DB_OfflineMail::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_OfflineMail::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_OfflineMail::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_OfflineMail::clear_cmdid() {
  cmdid_ = 300014;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_OfflineMail::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_OfflineMail.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_OfflineMail::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_OfflineMail.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_OfflineMail::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_OfflineMail::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_OfflineMail::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_OfflineMail::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_OfflineMail::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_OfflineMail.charId)
  return charid_;
}
inline void LOBBY2DB_OfflineMail::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_OfflineMail.charId)
}

// required .TgsProtocol.DBMailInfo mailinfo = 3;
inline bool LOBBY2DB_OfflineMail::has_mailinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_OfflineMail::set_has_mailinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_OfflineMail::clear_has_mailinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_OfflineMail::clear_mailinfo() {
  if (mailinfo_ != NULL) mailinfo_->::TgsProtocol::DBMailInfo::Clear();
  clear_has_mailinfo();
}
inline const ::TgsProtocol::DBMailInfo& LOBBY2DB_OfflineMail::mailinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_OfflineMail.mailinfo)
  return mailinfo_ != NULL ? *mailinfo_ : *default_instance_->mailinfo_;
}
inline ::TgsProtocol::DBMailInfo* LOBBY2DB_OfflineMail::mutable_mailinfo() {
  set_has_mailinfo();
  if (mailinfo_ == NULL) mailinfo_ = new ::TgsProtocol::DBMailInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_OfflineMail.mailinfo)
  return mailinfo_;
}
inline ::TgsProtocol::DBMailInfo* LOBBY2DB_OfflineMail::release_mailinfo() {
  clear_has_mailinfo();
  ::TgsProtocol::DBMailInfo* temp = mailinfo_;
  mailinfo_ = NULL;
  return temp;
}
inline void LOBBY2DB_OfflineMail::set_allocated_mailinfo(::TgsProtocol::DBMailInfo* mailinfo) {
  delete mailinfo_;
  mailinfo_ = mailinfo;
  if (mailinfo) {
    set_has_mailinfo();
  } else {
    clear_has_mailinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_OfflineMail.mailinfo)
}

// -------------------------------------------------------------------

// DB2LOBBY_LoadOfflineMail

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADOFFLINE_MAIL];
inline bool DB2LOBBY_LoadOfflineMail::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_LoadOfflineMail::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_LoadOfflineMail::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_LoadOfflineMail::clear_cmdid() {
  cmdid_ = 360007;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_LoadOfflineMail::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadOfflineMail.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_LoadOfflineMail::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadOfflineMail.cmdId)
}

// required uint64 charId = 2;
inline bool DB2LOBBY_LoadOfflineMail::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_LoadOfflineMail::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_LoadOfflineMail::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_LoadOfflineMail::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_LoadOfflineMail::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadOfflineMail.charId)
  return charid_;
}
inline void DB2LOBBY_LoadOfflineMail::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadOfflineMail.charId)
}

// repeated .TgsProtocol.DBMailInfo mailList = 3;
inline int DB2LOBBY_LoadOfflineMail::maillist_size() const {
  return maillist_.size();
}
inline void DB2LOBBY_LoadOfflineMail::clear_maillist() {
  maillist_.Clear();
}
inline const ::TgsProtocol::DBMailInfo& DB2LOBBY_LoadOfflineMail::maillist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadOfflineMail.mailList)
  return maillist_.Get(index);
}
inline ::TgsProtocol::DBMailInfo* DB2LOBBY_LoadOfflineMail::mutable_maillist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadOfflineMail.mailList)
  return maillist_.Mutable(index);
}
inline ::TgsProtocol::DBMailInfo* DB2LOBBY_LoadOfflineMail::add_maillist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadOfflineMail.mailList)
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >&
DB2LOBBY_LoadOfflineMail::maillist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadOfflineMail.mailList)
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBMailInfo >*
DB2LOBBY_LoadOfflineMail::mutable_maillist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadOfflineMail.mailList)
  return &maillist_;
}

// -------------------------------------------------------------------

// LOBBY2DB_LoadOfflineMail

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADOFFLINE_MAIL];
inline bool LOBBY2DB_LoadOfflineMail::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_LoadOfflineMail::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_LoadOfflineMail::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_LoadOfflineMail::clear_cmdid() {
  cmdid_ = 360006;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_LoadOfflineMail::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadOfflineMail.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_LoadOfflineMail::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadOfflineMail.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_LoadOfflineMail::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_LoadOfflineMail::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_LoadOfflineMail::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_LoadOfflineMail::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_LoadOfflineMail::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadOfflineMail.charId)
  return charid_;
}
inline void LOBBY2DB_LoadOfflineMail::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadOfflineMail.charId)
}

// -------------------------------------------------------------------

// LOBBY2DB_CheckTokenReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CHECKTOKEN_REQ];
inline bool LOBBY2DB_CheckTokenReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_CheckTokenReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_CheckTokenReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_CheckTokenReq::clear_cmdid() {
  cmdid_ = 300015;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_CheckTokenReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CheckTokenReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_CheckTokenReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CheckTokenReq.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DB_CheckTokenReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_CheckTokenReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_CheckTokenReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_CheckTokenReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_CheckTokenReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CheckTokenReq.charId)
  return charid_;
}
inline void LOBBY2DB_CheckTokenReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CheckTokenReq.charId)
}

// required bytes deviceName = 3;
inline bool LOBBY2DB_CheckTokenReq::has_devicename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_CheckTokenReq::set_has_devicename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_CheckTokenReq::clear_has_devicename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_CheckTokenReq::clear_devicename() {
  if (devicename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_->clear();
  }
  clear_has_devicename();
}
inline const ::std::string& LOBBY2DB_CheckTokenReq::devicename() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceName)
  return *devicename_;
}
inline void LOBBY2DB_CheckTokenReq::set_devicename(const ::std::string& value) {
  set_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_ = new ::std::string;
  }
  devicename_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceName)
}
inline void LOBBY2DB_CheckTokenReq::set_devicename(const char* value) {
  set_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_ = new ::std::string;
  }
  devicename_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceName)
}
inline void LOBBY2DB_CheckTokenReq::set_devicename(const void* value, size_t size) {
  set_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_ = new ::std::string;
  }
  devicename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceName)
}
inline ::std::string* LOBBY2DB_CheckTokenReq::mutable_devicename() {
  set_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceName)
  return devicename_;
}
inline ::std::string* LOBBY2DB_CheckTokenReq::release_devicename() {
  clear_has_devicename();
  if (devicename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devicename_;
    devicename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_CheckTokenReq::set_allocated_devicename(::std::string* devicename) {
  if (devicename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devicename_;
  }
  if (devicename) {
    set_has_devicename();
    devicename_ = devicename;
  } else {
    clear_has_devicename();
    devicename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceName)
}

// required bytes deviceType = 4;
inline bool LOBBY2DB_CheckTokenReq::has_devicetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_CheckTokenReq::set_has_devicetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_CheckTokenReq::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_CheckTokenReq::clear_devicetype() {
  if (devicetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_->clear();
  }
  clear_has_devicetype();
}
inline const ::std::string& LOBBY2DB_CheckTokenReq::devicetype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceType)
  return *devicetype_;
}
inline void LOBBY2DB_CheckTokenReq::set_devicetype(const ::std::string& value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceType)
}
inline void LOBBY2DB_CheckTokenReq::set_devicetype(const char* value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceType)
}
inline void LOBBY2DB_CheckTokenReq::set_devicetype(const void* value, size_t size) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceType)
}
inline ::std::string* LOBBY2DB_CheckTokenReq::mutable_devicetype() {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicetype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceType)
  return devicetype_;
}
inline ::std::string* LOBBY2DB_CheckTokenReq::release_devicetype() {
  clear_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devicetype_;
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_CheckTokenReq::set_allocated_devicetype(::std::string* devicetype) {
  if (devicetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devicetype_;
  }
  if (devicetype) {
    set_has_devicetype();
    devicetype_ = devicetype;
  } else {
    clear_has_devicetype();
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceType)
}

// required bytes deviceUid = 5;
inline bool LOBBY2DB_CheckTokenReq::has_deviceuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DB_CheckTokenReq::set_has_deviceuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DB_CheckTokenReq::clear_has_deviceuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DB_CheckTokenReq::clear_deviceuid() {
  if (deviceuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_->clear();
  }
  clear_has_deviceuid();
}
inline const ::std::string& LOBBY2DB_CheckTokenReq::deviceuid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceUid)
  return *deviceuid_;
}
inline void LOBBY2DB_CheckTokenReq::set_deviceuid(const ::std::string& value) {
  set_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_ = new ::std::string;
  }
  deviceuid_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceUid)
}
inline void LOBBY2DB_CheckTokenReq::set_deviceuid(const char* value) {
  set_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_ = new ::std::string;
  }
  deviceuid_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceUid)
}
inline void LOBBY2DB_CheckTokenReq::set_deviceuid(const void* value, size_t size) {
  set_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_ = new ::std::string;
  }
  deviceuid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceUid)
}
inline ::std::string* LOBBY2DB_CheckTokenReq::mutable_deviceuid() {
  set_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deviceuid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceUid)
  return deviceuid_;
}
inline ::std::string* LOBBY2DB_CheckTokenReq::release_deviceuid() {
  clear_has_deviceuid();
  if (deviceuid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = deviceuid_;
    deviceuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_CheckTokenReq::set_allocated_deviceuid(::std::string* deviceuid) {
  if (deviceuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete deviceuid_;
  }
  if (deviceuid) {
    set_has_deviceuid();
    deviceuid_ = deviceuid;
  } else {
    clear_has_deviceuid();
    deviceuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_CheckTokenReq.deviceUid)
}

// -------------------------------------------------------------------

// LOBBY2DB_Server

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SERVER];
inline bool LOBBY2DB_Server::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_Server::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_Server::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_Server::clear_cmdid() {
  cmdid_ = 300016;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_Server::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_Server::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.cmdId)
}

// required uint32 serverId = 2;
inline bool LOBBY2DB_Server::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_Server::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_Server::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_Server::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::serverid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.serverId)
  return serverid_;
}
inline void LOBBY2DB_Server::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.serverId)
}

// required bytes localIp = 3;
inline bool LOBBY2DB_Server::has_localip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_Server::set_has_localip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_Server::clear_has_localip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_Server::clear_localip() {
  if (localip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    localip_->clear();
  }
  clear_has_localip();
}
inline const ::std::string& LOBBY2DB_Server::localip() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.localIp)
  return *localip_;
}
inline void LOBBY2DB_Server::set_localip(const ::std::string& value) {
  set_has_localip();
  if (localip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    localip_ = new ::std::string;
  }
  localip_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.localIp)
}
inline void LOBBY2DB_Server::set_localip(const char* value) {
  set_has_localip();
  if (localip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    localip_ = new ::std::string;
  }
  localip_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_Server.localIp)
}
inline void LOBBY2DB_Server::set_localip(const void* value, size_t size) {
  set_has_localip();
  if (localip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    localip_ = new ::std::string;
  }
  localip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_Server.localIp)
}
inline ::std::string* LOBBY2DB_Server::mutable_localip() {
  set_has_localip();
  if (localip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    localip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_Server.localIp)
  return localip_;
}
inline ::std::string* LOBBY2DB_Server::release_localip() {
  clear_has_localip();
  if (localip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = localip_;
    localip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_Server::set_allocated_localip(::std::string* localip) {
  if (localip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete localip_;
  }
  if (localip) {
    set_has_localip();
    localip_ = localip;
  } else {
    clear_has_localip();
    localip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_Server.localIp)
}

// optional uint32 port = 4;
inline bool LOBBY2DB_Server::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_Server::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_Server::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_Server::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::port() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.port)
  return port_;
}
inline void LOBBY2DB_Server::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.port)
}

// optional uint32 onlineNum = 5;
inline bool LOBBY2DB_Server::has_onlinenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DB_Server::set_has_onlinenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DB_Server::clear_has_onlinenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DB_Server::clear_onlinenum() {
  onlinenum_ = 0u;
  clear_has_onlinenum();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::onlinenum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.onlineNum)
  return onlinenum_;
}
inline void LOBBY2DB_Server::set_onlinenum(::google::protobuf::uint32 value) {
  set_has_onlinenum();
  onlinenum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.onlineNum)
}

// optional bytes version = 6;
inline bool LOBBY2DB_Server::has_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LOBBY2DB_Server::set_has_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LOBBY2DB_Server::clear_has_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LOBBY2DB_Server::clear_version() {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& LOBBY2DB_Server::version() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.version)
  return *version_;
}
inline void LOBBY2DB_Server::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.version)
}
inline void LOBBY2DB_Server::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_Server.version)
}
inline void LOBBY2DB_Server::set_version(const void* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_Server.version)
}
inline ::std::string* LOBBY2DB_Server::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_Server.version)
  return version_;
}
inline ::std::string* LOBBY2DB_Server::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_Server::set_allocated_version(::std::string* version) {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_;
  }
  if (version) {
    set_has_version();
    version_ = version;
  } else {
    clear_has_version();
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_Server.version)
}

// optional string name = 7;
inline bool LOBBY2DB_Server::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LOBBY2DB_Server::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LOBBY2DB_Server::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LOBBY2DB_Server::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LOBBY2DB_Server::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.name)
  return *name_;
}
inline void LOBBY2DB_Server::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.name)
}
inline void LOBBY2DB_Server::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_Server.name)
}
inline void LOBBY2DB_Server::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_Server.name)
}
inline ::std::string* LOBBY2DB_Server::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_Server.name)
  return name_;
}
inline ::std::string* LOBBY2DB_Server::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_Server::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_Server.name)
}

// optional string sourceIp = 8;
inline bool LOBBY2DB_Server::has_sourceip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LOBBY2DB_Server::set_has_sourceip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LOBBY2DB_Server::clear_has_sourceip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LOBBY2DB_Server::clear_sourceip() {
  if (sourceip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceip_->clear();
  }
  clear_has_sourceip();
}
inline const ::std::string& LOBBY2DB_Server::sourceip() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.sourceIp)
  return *sourceip_;
}
inline void LOBBY2DB_Server::set_sourceip(const ::std::string& value) {
  set_has_sourceip();
  if (sourceip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceip_ = new ::std::string;
  }
  sourceip_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.sourceIp)
}
inline void LOBBY2DB_Server::set_sourceip(const char* value) {
  set_has_sourceip();
  if (sourceip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceip_ = new ::std::string;
  }
  sourceip_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_Server.sourceIp)
}
inline void LOBBY2DB_Server::set_sourceip(const char* value, size_t size) {
  set_has_sourceip();
  if (sourceip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceip_ = new ::std::string;
  }
  sourceip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_Server.sourceIp)
}
inline ::std::string* LOBBY2DB_Server::mutable_sourceip() {
  set_has_sourceip();
  if (sourceip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_Server.sourceIp)
  return sourceip_;
}
inline ::std::string* LOBBY2DB_Server::release_sourceip() {
  clear_has_sourceip();
  if (sourceip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sourceip_;
    sourceip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_Server::set_allocated_sourceip(::std::string* sourceip) {
  if (sourceip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sourceip_;
  }
  if (sourceip) {
    set_has_sourceip();
    sourceip_ = sourceip;
  } else {
    clear_has_sourceip();
    sourceip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_Server.sourceIp)
}

// optional string sourceDir = 9;
inline bool LOBBY2DB_Server::has_sourcedir() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LOBBY2DB_Server::set_has_sourcedir() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LOBBY2DB_Server::clear_has_sourcedir() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LOBBY2DB_Server::clear_sourcedir() {
  if (sourcedir_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourcedir_->clear();
  }
  clear_has_sourcedir();
}
inline const ::std::string& LOBBY2DB_Server::sourcedir() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.sourceDir)
  return *sourcedir_;
}
inline void LOBBY2DB_Server::set_sourcedir(const ::std::string& value) {
  set_has_sourcedir();
  if (sourcedir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourcedir_ = new ::std::string;
  }
  sourcedir_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.sourceDir)
}
inline void LOBBY2DB_Server::set_sourcedir(const char* value) {
  set_has_sourcedir();
  if (sourcedir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourcedir_ = new ::std::string;
  }
  sourcedir_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_Server.sourceDir)
}
inline void LOBBY2DB_Server::set_sourcedir(const char* value, size_t size) {
  set_has_sourcedir();
  if (sourcedir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourcedir_ = new ::std::string;
  }
  sourcedir_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_Server.sourceDir)
}
inline ::std::string* LOBBY2DB_Server::mutable_sourcedir() {
  set_has_sourcedir();
  if (sourcedir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourcedir_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_Server.sourceDir)
  return sourcedir_;
}
inline ::std::string* LOBBY2DB_Server::release_sourcedir() {
  clear_has_sourcedir();
  if (sourcedir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sourcedir_;
    sourcedir_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_Server::set_allocated_sourcedir(::std::string* sourcedir) {
  if (sourcedir_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sourcedir_;
  }
  if (sourcedir) {
    set_has_sourcedir();
    sourcedir_ = sourcedir;
  } else {
    clear_has_sourcedir();
    sourcedir_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_Server.sourceDir)
}

// optional uint32 canlogin = 10;
inline bool LOBBY2DB_Server::has_canlogin() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LOBBY2DB_Server::set_has_canlogin() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LOBBY2DB_Server::clear_has_canlogin() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LOBBY2DB_Server::clear_canlogin() {
  canlogin_ = 0u;
  clear_has_canlogin();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::canlogin() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.canlogin)
  return canlogin_;
}
inline void LOBBY2DB_Server::set_canlogin(::google::protobuf::uint32 value) {
  set_has_canlogin();
  canlogin_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.canlogin)
}

// optional uint32 status = 11;
inline bool LOBBY2DB_Server::has_status() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LOBBY2DB_Server::set_has_status() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LOBBY2DB_Server::clear_has_status() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LOBBY2DB_Server::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::status() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.status)
  return status_;
}
inline void LOBBY2DB_Server::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.status)
}

// optional string sourceVersion = 12;
inline bool LOBBY2DB_Server::has_sourceversion() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LOBBY2DB_Server::set_has_sourceversion() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LOBBY2DB_Server::clear_has_sourceversion() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LOBBY2DB_Server::clear_sourceversion() {
  if (sourceversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceversion_->clear();
  }
  clear_has_sourceversion();
}
inline const ::std::string& LOBBY2DB_Server::sourceversion() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.sourceVersion)
  return *sourceversion_;
}
inline void LOBBY2DB_Server::set_sourceversion(const ::std::string& value) {
  set_has_sourceversion();
  if (sourceversion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceversion_ = new ::std::string;
  }
  sourceversion_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.sourceVersion)
}
inline void LOBBY2DB_Server::set_sourceversion(const char* value) {
  set_has_sourceversion();
  if (sourceversion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceversion_ = new ::std::string;
  }
  sourceversion_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_Server.sourceVersion)
}
inline void LOBBY2DB_Server::set_sourceversion(const char* value, size_t size) {
  set_has_sourceversion();
  if (sourceversion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceversion_ = new ::std::string;
  }
  sourceversion_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_Server.sourceVersion)
}
inline ::std::string* LOBBY2DB_Server::mutable_sourceversion() {
  set_has_sourceversion();
  if (sourceversion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sourceversion_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_Server.sourceVersion)
  return sourceversion_;
}
inline ::std::string* LOBBY2DB_Server::release_sourceversion() {
  clear_has_sourceversion();
  if (sourceversion_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sourceversion_;
    sourceversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_Server::set_allocated_sourceversion(::std::string* sourceversion) {
  if (sourceversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sourceversion_;
  }
  if (sourceversion) {
    set_has_sourceversion();
    sourceversion_ = sourceversion;
  } else {
    clear_has_sourceversion();
    sourceversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_Server.sourceVersion)
}

// optional uint32 loginStrategyId = 13;
inline bool LOBBY2DB_Server::has_loginstrategyid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LOBBY2DB_Server::set_has_loginstrategyid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LOBBY2DB_Server::clear_has_loginstrategyid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LOBBY2DB_Server::clear_loginstrategyid() {
  loginstrategyid_ = 0u;
  clear_has_loginstrategyid();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::loginstrategyid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.loginStrategyId)
  return loginstrategyid_;
}
inline void LOBBY2DB_Server::set_loginstrategyid(::google::protobuf::uint32 value) {
  set_has_loginstrategyid();
  loginstrategyid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.loginStrategyId)
}

// optional bytes ip = 14;
inline bool LOBBY2DB_Server::has_ip() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LOBBY2DB_Server::set_has_ip() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LOBBY2DB_Server::clear_has_ip() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LOBBY2DB_Server::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& LOBBY2DB_Server::ip() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.ip)
  return *ip_;
}
inline void LOBBY2DB_Server::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.ip)
}
inline void LOBBY2DB_Server::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_Server.ip)
}
inline void LOBBY2DB_Server::set_ip(const void* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_Server.ip)
}
inline ::std::string* LOBBY2DB_Server::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_Server.ip)
  return ip_;
}
inline ::std::string* LOBBY2DB_Server::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_Server::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_Server.ip)
}

// optional uint32 canRegister = 15;
inline bool LOBBY2DB_Server::has_canregister() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LOBBY2DB_Server::set_has_canregister() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LOBBY2DB_Server::clear_has_canregister() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LOBBY2DB_Server::clear_canregister() {
  canregister_ = 0u;
  clear_has_canregister();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::canregister() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.canRegister)
  return canregister_;
}
inline void LOBBY2DB_Server::set_canregister(::google::protobuf::uint32 value) {
  set_has_canregister();
  canregister_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.canRegister)
}

// optional uint32 mergeTimes = 16;
inline bool LOBBY2DB_Server::has_mergetimes() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LOBBY2DB_Server::set_has_mergetimes() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LOBBY2DB_Server::clear_has_mergetimes() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LOBBY2DB_Server::clear_mergetimes() {
  mergetimes_ = 0u;
  clear_has_mergetimes();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::mergetimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.mergeTimes)
  return mergetimes_;
}
inline void LOBBY2DB_Server::set_mergetimes(::google::protobuf::uint32 value) {
  set_has_mergetimes();
  mergetimes_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.mergeTimes)
}

// optional uint32 lastMergetime = 17;
inline bool LOBBY2DB_Server::has_lastmergetime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void LOBBY2DB_Server::set_has_lastmergetime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void LOBBY2DB_Server::clear_has_lastmergetime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void LOBBY2DB_Server::clear_lastmergetime() {
  lastmergetime_ = 0u;
  clear_has_lastmergetime();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::lastmergetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.lastMergetime)
  return lastmergetime_;
}
inline void LOBBY2DB_Server::set_lastmergetime(::google::protobuf::uint32 value) {
  set_has_lastmergetime();
  lastmergetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.lastMergetime)
}

// optional uint32 centerPort = 18;
inline bool LOBBY2DB_Server::has_centerport() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void LOBBY2DB_Server::set_has_centerport() {
  _has_bits_[0] |= 0x00020000u;
}
inline void LOBBY2DB_Server::clear_has_centerport() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void LOBBY2DB_Server::clear_centerport() {
  centerport_ = 0u;
  clear_has_centerport();
}
inline ::google::protobuf::uint32 LOBBY2DB_Server::centerport() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_Server.centerPort)
  return centerport_;
}
inline void LOBBY2DB_Server::set_centerport(::google::protobuf::uint32 value) {
  set_has_centerport();
  centerport_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_Server.centerPort)
}

// -------------------------------------------------------------------

// LOBBY2DB_ApplyFriend

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_APPLY_FRIEND];
inline bool LOBBY2DB_ApplyFriend::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_ApplyFriend::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_ApplyFriend::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_ApplyFriend::clear_cmdid() {
  cmdid_ = 300017;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_ApplyFriend::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ApplyFriend.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_ApplyFriend::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ApplyFriend.cmdId)
}

// optional .TgsProtocol.DBFriendInfo charInfo = 2;
inline bool LOBBY2DB_ApplyFriend::has_charinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_ApplyFriend::set_has_charinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_ApplyFriend::clear_has_charinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_ApplyFriend::clear_charinfo() {
  if (charinfo_ != NULL) charinfo_->::TgsProtocol::DBFriendInfo::Clear();
  clear_has_charinfo();
}
inline const ::TgsProtocol::DBFriendInfo& LOBBY2DB_ApplyFriend::charinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ApplyFriend.charInfo)
  return charinfo_ != NULL ? *charinfo_ : *default_instance_->charinfo_;
}
inline ::TgsProtocol::DBFriendInfo* LOBBY2DB_ApplyFriend::mutable_charinfo() {
  set_has_charinfo();
  if (charinfo_ == NULL) charinfo_ = new ::TgsProtocol::DBFriendInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_ApplyFriend.charInfo)
  return charinfo_;
}
inline ::TgsProtocol::DBFriendInfo* LOBBY2DB_ApplyFriend::release_charinfo() {
  clear_has_charinfo();
  ::TgsProtocol::DBFriendInfo* temp = charinfo_;
  charinfo_ = NULL;
  return temp;
}
inline void LOBBY2DB_ApplyFriend::set_allocated_charinfo(::TgsProtocol::DBFriendInfo* charinfo) {
  delete charinfo_;
  charinfo_ = charinfo;
  if (charinfo) {
    set_has_charinfo();
  } else {
    clear_has_charinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_ApplyFriend.charInfo)
}

// required uint64 dstCharId = 3;
inline bool LOBBY2DB_ApplyFriend::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_ApplyFriend::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_ApplyFriend::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_ApplyFriend::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_ApplyFriend::dstcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ApplyFriend.dstCharId)
  return dstcharid_;
}
inline void LOBBY2DB_ApplyFriend::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ApplyFriend.dstCharId)
}

// -------------------------------------------------------------------

// DB2LOBBY_ApplyFriend

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_APPLY_FRIEND];
inline bool DB2LOBBY_ApplyFriend::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_ApplyFriend::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_ApplyFriend::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_ApplyFriend::clear_cmdid() {
  cmdid_ = 350012;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_ApplyFriend::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_ApplyFriend.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_ApplyFriend::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_ApplyFriend.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_ApplyFriend::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_ApplyFriend::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_ApplyFriend::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_ApplyFriend::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_ApplyFriend::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_ApplyFriend.ret)
  return ret_;
}
inline void DB2LOBBY_ApplyFriend::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_ApplyFriend.ret)
}

// required uint64 charId = 3;
inline bool DB2LOBBY_ApplyFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_ApplyFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_ApplyFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_ApplyFriend::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_ApplyFriend::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_ApplyFriend.charId)
  return charid_;
}
inline void DB2LOBBY_ApplyFriend::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_ApplyFriend.charId)
}

// -------------------------------------------------------------------

// LOBBY2DB_AddFriend

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_ADD_FRIEND];
inline bool LOBBY2DB_AddFriend::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_AddFriend::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_AddFriend::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_AddFriend::clear_cmdid() {
  cmdid_ = 300018;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_AddFriend::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_AddFriend.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_AddFriend::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_AddFriend.cmdId)
}

// required uint64 myCharId = 2;
inline bool LOBBY2DB_AddFriend::has_mycharid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_AddFriend::set_has_mycharid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_AddFriend::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_AddFriend::clear_mycharid() {
  mycharid_ = GOOGLE_ULONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_AddFriend::mycharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_AddFriend.myCharId)
  return mycharid_;
}
inline void LOBBY2DB_AddFriend::set_mycharid(::google::protobuf::uint64 value) {
  set_has_mycharid();
  mycharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_AddFriend.myCharId)
}

// required uint64 dstCharId = 3;
inline bool LOBBY2DB_AddFriend::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_AddFriend::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_AddFriend::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_AddFriend::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_AddFriend::dstcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_AddFriend.dstCharId)
  return dstcharid_;
}
inline void LOBBY2DB_AddFriend::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_AddFriend.dstCharId)
}

// optional .TgsProtocol.DBFriendInfo charInfo = 4;
inline bool LOBBY2DB_AddFriend::has_charinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_AddFriend::set_has_charinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_AddFriend::clear_has_charinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_AddFriend::clear_charinfo() {
  if (charinfo_ != NULL) charinfo_->::TgsProtocol::DBFriendInfo::Clear();
  clear_has_charinfo();
}
inline const ::TgsProtocol::DBFriendInfo& LOBBY2DB_AddFriend::charinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_AddFriend.charInfo)
  return charinfo_ != NULL ? *charinfo_ : *default_instance_->charinfo_;
}
inline ::TgsProtocol::DBFriendInfo* LOBBY2DB_AddFriend::mutable_charinfo() {
  set_has_charinfo();
  if (charinfo_ == NULL) charinfo_ = new ::TgsProtocol::DBFriendInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_AddFriend.charInfo)
  return charinfo_;
}
inline ::TgsProtocol::DBFriendInfo* LOBBY2DB_AddFriend::release_charinfo() {
  clear_has_charinfo();
  ::TgsProtocol::DBFriendInfo* temp = charinfo_;
  charinfo_ = NULL;
  return temp;
}
inline void LOBBY2DB_AddFriend::set_allocated_charinfo(::TgsProtocol::DBFriendInfo* charinfo) {
  delete charinfo_;
  charinfo_ = charinfo;
  if (charinfo) {
    set_has_charinfo();
  } else {
    clear_has_charinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_AddFriend.charInfo)
}

// required bool bAgree = 5;
inline bool LOBBY2DB_AddFriend::has_bagree() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DB_AddFriend::set_has_bagree() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DB_AddFriend::clear_has_bagree() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DB_AddFriend::clear_bagree() {
  bagree_ = false;
  clear_has_bagree();
}
inline bool LOBBY2DB_AddFriend::bagree() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_AddFriend.bAgree)
  return bagree_;
}
inline void LOBBY2DB_AddFriend::set_bagree(bool value) {
  set_has_bagree();
  bagree_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_AddFriend.bAgree)
}

// -------------------------------------------------------------------

// DB2LOBBY_AddFriend

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_ADD_FRIEND];
inline bool DB2LOBBY_AddFriend::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_AddFriend::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_AddFriend::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_AddFriend::clear_cmdid() {
  cmdid_ = 350013;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_AddFriend::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_AddFriend.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_AddFriend::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_AddFriend.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_AddFriend::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_AddFriend::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_AddFriend::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_AddFriend::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_AddFriend::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_AddFriend.ret)
  return ret_;
}
inline void DB2LOBBY_AddFriend::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_AddFriend.ret)
}

// required uint64 myCharId = 3;
inline bool DB2LOBBY_AddFriend::has_mycharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_AddFriend::set_has_mycharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_AddFriend::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_AddFriend::clear_mycharid() {
  mycharid_ = GOOGLE_ULONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::uint64 DB2LOBBY_AddFriend::mycharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_AddFriend.myCharId)
  return mycharid_;
}
inline void DB2LOBBY_AddFriend::set_mycharid(::google::protobuf::uint64 value) {
  set_has_mycharid();
  mycharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_AddFriend.myCharId)
}

// required uint64 dstCharId = 4;
inline bool DB2LOBBY_AddFriend::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBY_AddFriend::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBY_AddFriend::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBY_AddFriend::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 DB2LOBBY_AddFriend::dstcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_AddFriend.dstCharId)
  return dstcharid_;
}
inline void DB2LOBBY_AddFriend::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_AddFriend.dstCharId)
}

// required bool bAgree = 5;
inline bool DB2LOBBY_AddFriend::has_bagree() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBY_AddFriend::set_has_bagree() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBY_AddFriend::clear_has_bagree() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBY_AddFriend::clear_bagree() {
  bagree_ = false;
  clear_has_bagree();
}
inline bool DB2LOBBY_AddFriend::bagree() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_AddFriend.bAgree)
  return bagree_;
}
inline void DB2LOBBY_AddFriend::set_bagree(bool value) {
  set_has_bagree();
  bagree_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_AddFriend.bAgree)
}

// -------------------------------------------------------------------

// LOBBY2DB_DelFriend

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_DEL_FRIEND];
inline bool LOBBY2DB_DelFriend::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_DelFriend::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_DelFriend::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_DelFriend::clear_cmdid() {
  cmdid_ = 300019;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_DelFriend::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_DelFriend.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_DelFriend::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_DelFriend.cmdId)
}

// required uint64 myCharId = 2;
inline bool LOBBY2DB_DelFriend::has_mycharid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_DelFriend::set_has_mycharid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_DelFriend::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_DelFriend::clear_mycharid() {
  mycharid_ = GOOGLE_ULONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_DelFriend::mycharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_DelFriend.myCharId)
  return mycharid_;
}
inline void LOBBY2DB_DelFriend::set_mycharid(::google::protobuf::uint64 value) {
  set_has_mycharid();
  mycharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_DelFriend.myCharId)
}

// required uint64 dstCharId = 3;
inline bool LOBBY2DB_DelFriend::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_DelFriend::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_DelFriend::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_DelFriend::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_DelFriend::dstcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_DelFriend.dstCharId)
  return dstcharid_;
}
inline void LOBBY2DB_DelFriend::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_DelFriend.dstCharId)
}

// -------------------------------------------------------------------

// DB2LOBBY_DelFriend

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_DEL_FRIEND];
inline bool DB2LOBBY_DelFriend::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_DelFriend::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_DelFriend::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_DelFriend::clear_cmdid() {
  cmdid_ = 350014;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_DelFriend::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_DelFriend.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_DelFriend::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_DelFriend.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_DelFriend::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_DelFriend::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_DelFriend::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_DelFriend::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_DelFriend::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_DelFriend.ret)
  return ret_;
}
inline void DB2LOBBY_DelFriend::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_DelFriend.ret)
}

// required uint64 myCharId = 3;
inline bool DB2LOBBY_DelFriend::has_mycharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_DelFriend::set_has_mycharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_DelFriend::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_DelFriend::clear_mycharid() {
  mycharid_ = GOOGLE_ULONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::uint64 DB2LOBBY_DelFriend::mycharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_DelFriend.myCharId)
  return mycharid_;
}
inline void DB2LOBBY_DelFriend::set_mycharid(::google::protobuf::uint64 value) {
  set_has_mycharid();
  mycharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_DelFriend.myCharId)
}

// required uint64 dstCharId = 4;
inline bool DB2LOBBY_DelFriend::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBY_DelFriend::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBY_DelFriend::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBY_DelFriend::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 DB2LOBBY_DelFriend::dstcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_DelFriend.dstCharId)
  return dstcharid_;
}
inline void DB2LOBBY_DelFriend::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_DelFriend.dstCharId)
}

// -------------------------------------------------------------------

// LOBBY2DB_SendEnergy

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SENDENERGY];
inline bool LOBBY2DB_SendEnergy::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_SendEnergy::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_SendEnergy::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_SendEnergy::clear_cmdid() {
  cmdid_ = 300020;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_SendEnergy::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SendEnergy.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_SendEnergy::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SendEnergy.cmdId)
}

// required uint64 dstCharId = 2;
inline bool LOBBY2DB_SendEnergy::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_SendEnergy::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_SendEnergy::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_SendEnergy::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_SendEnergy::dstcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SendEnergy.dstCharId)
  return dstcharid_;
}
inline void LOBBY2DB_SendEnergy::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SendEnergy.dstCharId)
}

// required uint64 myCharId = 3;
inline bool LOBBY2DB_SendEnergy::has_mycharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_SendEnergy::set_has_mycharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_SendEnergy::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_SendEnergy::clear_mycharid() {
  mycharid_ = GOOGLE_ULONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_SendEnergy::mycharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_SendEnergy.myCharId)
  return mycharid_;
}
inline void LOBBY2DB_SendEnergy::set_mycharid(::google::protobuf::uint64 value) {
  set_has_mycharid();
  mycharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_SendEnergy.myCharId)
}

// -------------------------------------------------------------------

// LOBBY2DB_PurchaseInfo

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_PURCHASEINFO];
inline bool LOBBY2DB_PurchaseInfo::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_PurchaseInfo::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_PurchaseInfo::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_PurchaseInfo::clear_cmdid() {
  cmdid_ = 300021;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_PurchaseInfo::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_PurchaseInfo.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_PurchaseInfo::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_PurchaseInfo.cmdId)
}

// required uint64 myCharId = 2;
inline bool LOBBY2DB_PurchaseInfo::has_mycharid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_PurchaseInfo::set_has_mycharid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_PurchaseInfo::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_PurchaseInfo::clear_mycharid() {
  mycharid_ = GOOGLE_ULONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_PurchaseInfo::mycharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_PurchaseInfo.myCharId)
  return mycharid_;
}
inline void LOBBY2DB_PurchaseInfo::set_mycharid(::google::protobuf::uint64 value) {
  set_has_mycharid();
  mycharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_PurchaseInfo.myCharId)
}

// required uint32 goodsId = 3;
inline bool LOBBY2DB_PurchaseInfo::has_goodsid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_PurchaseInfo::set_has_goodsid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_PurchaseInfo::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_PurchaseInfo::clear_goodsid() {
  goodsid_ = 0u;
  clear_has_goodsid();
}
inline ::google::protobuf::uint32 LOBBY2DB_PurchaseInfo::goodsid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_PurchaseInfo.goodsId)
  return goodsid_;
}
inline void LOBBY2DB_PurchaseInfo::set_goodsid(::google::protobuf::uint32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_PurchaseInfo.goodsId)
}

// required uint32 goodsQuantity = 4;
inline bool LOBBY2DB_PurchaseInfo::has_goodsquantity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_PurchaseInfo::set_has_goodsquantity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_PurchaseInfo::clear_has_goodsquantity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_PurchaseInfo::clear_goodsquantity() {
  goodsquantity_ = 0u;
  clear_has_goodsquantity();
}
inline ::google::protobuf::uint32 LOBBY2DB_PurchaseInfo::goodsquantity() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_PurchaseInfo.goodsQuantity)
  return goodsquantity_;
}
inline void LOBBY2DB_PurchaseInfo::set_goodsquantity(::google::protobuf::uint32 value) {
  set_has_goodsquantity();
  goodsquantity_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_PurchaseInfo.goodsQuantity)
}

// required uint32 value = 5;
inline bool LOBBY2DB_PurchaseInfo::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DB_PurchaseInfo::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DB_PurchaseInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DB_PurchaseInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 LOBBY2DB_PurchaseInfo::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_PurchaseInfo.value)
  return value_;
}
inline void LOBBY2DB_PurchaseInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_PurchaseInfo.value)
}

// required uint32 diamondPaidUse = 6;
inline bool LOBBY2DB_PurchaseInfo::has_diamondpaiduse() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LOBBY2DB_PurchaseInfo::set_has_diamondpaiduse() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LOBBY2DB_PurchaseInfo::clear_has_diamondpaiduse() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LOBBY2DB_PurchaseInfo::clear_diamondpaiduse() {
  diamondpaiduse_ = 0u;
  clear_has_diamondpaiduse();
}
inline ::google::protobuf::uint32 LOBBY2DB_PurchaseInfo::diamondpaiduse() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_PurchaseInfo.diamondPaidUse)
  return diamondpaiduse_;
}
inline void LOBBY2DB_PurchaseInfo::set_diamondpaiduse(::google::protobuf::uint32 value) {
  set_has_diamondpaiduse();
  diamondpaiduse_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_PurchaseInfo.diamondPaidUse)
}

// required uint32 time = 7;
inline bool LOBBY2DB_PurchaseInfo::has_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LOBBY2DB_PurchaseInfo::set_has_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LOBBY2DB_PurchaseInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LOBBY2DB_PurchaseInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 LOBBY2DB_PurchaseInfo::time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_PurchaseInfo.time)
  return time_;
}
inline void LOBBY2DB_PurchaseInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_PurchaseInfo.time)
}

// -------------------------------------------------------------------

// DB2LOBBY_Shop

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SHOP];
inline bool DB2LOBBY_Shop::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_Shop::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_Shop::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_Shop::clear_cmdid() {
  cmdid_ = 350015;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_Shop::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_Shop.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_Shop::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_Shop.cmdId)
}

// repeated .TgsProtocol.ShopInfo shopItem = 2;
inline int DB2LOBBY_Shop::shopitem_size() const {
  return shopitem_.size();
}
inline void DB2LOBBY_Shop::clear_shopitem() {
  shopitem_.Clear();
}
inline const ::TgsProtocol::ShopInfo& DB2LOBBY_Shop::shopitem(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_Shop.shopItem)
  return shopitem_.Get(index);
}
inline ::TgsProtocol::ShopInfo* DB2LOBBY_Shop::mutable_shopitem(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_Shop.shopItem)
  return shopitem_.Mutable(index);
}
inline ::TgsProtocol::ShopInfo* DB2LOBBY_Shop::add_shopitem() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_Shop.shopItem)
  return shopitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ShopInfo >&
DB2LOBBY_Shop::shopitem() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_Shop.shopItem)
  return shopitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ShopInfo >*
DB2LOBBY_Shop::mutable_shopitem() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_Shop.shopItem)
  return &shopitem_;
}

// -------------------------------------------------------------------

// LOBBY2DB_GetTargetFriendInfo

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_GET_TARGET_FRIENDINFO];
inline bool LOBBY2DB_GetTargetFriendInfo::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_GetTargetFriendInfo::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_GetTargetFriendInfo::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_GetTargetFriendInfo::clear_cmdid() {
  cmdid_ = 300022;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_GetTargetFriendInfo::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_GetTargetFriendInfo.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_GetTargetFriendInfo::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_GetTargetFriendInfo.cmdId)
}

// required uint64 myCharId = 2;
inline bool LOBBY2DB_GetTargetFriendInfo::has_mycharid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_GetTargetFriendInfo::set_has_mycharid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_GetTargetFriendInfo::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_GetTargetFriendInfo::clear_mycharid() {
  mycharid_ = GOOGLE_ULONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_GetTargetFriendInfo::mycharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_GetTargetFriendInfo.myCharId)
  return mycharid_;
}
inline void LOBBY2DB_GetTargetFriendInfo::set_mycharid(::google::protobuf::uint64 value) {
  set_has_mycharid();
  mycharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_GetTargetFriendInfo.myCharId)
}

// required uint64 dstCharId = 3;
inline bool LOBBY2DB_GetTargetFriendInfo::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_GetTargetFriendInfo::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_GetTargetFriendInfo::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_GetTargetFriendInfo::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 LOBBY2DB_GetTargetFriendInfo::dstcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_GetTargetFriendInfo.dstCharId)
  return dstcharid_;
}
inline void LOBBY2DB_GetTargetFriendInfo::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_GetTargetFriendInfo.dstCharId)
}

// -------------------------------------------------------------------

// DB2LOBBY_GetTargetFriendInfo

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GET_TARGET_FRIENDINFO_RET];
inline bool DB2LOBBY_GetTargetFriendInfo::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_cmdid() {
  cmdid_ = 350016;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_GetTargetFriendInfo::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_GetTargetFriendInfo::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_GetTargetFriendInfo::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_GetTargetFriendInfo::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.ret)
  return ret_;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.ret)
}

// required uint64 charid = 3;
inline bool DB2LOBBY_GetTargetFriendInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBY_GetTargetFriendInfo::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.charid)
  return charid_;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.charid)
}

// required bool bfriend = 4;
inline bool DB2LOBBY_GetTargetFriendInfo::has_bfriend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_has_bfriend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_has_bfriend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_bfriend() {
  bfriend_ = false;
  clear_has_bfriend();
}
inline bool DB2LOBBY_GetTargetFriendInfo::bfriend() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.bfriend)
  return bfriend_;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_bfriend(bool value) {
  set_has_bfriend();
  bfriend_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.bfriend)
}

// required bool black = 5;
inline bool DB2LOBBY_GetTargetFriendInfo::has_black() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_has_black() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_has_black() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_black() {
  black_ = false;
  clear_has_black();
}
inline bool DB2LOBBY_GetTargetFriendInfo::black() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.black)
  return black_;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_black(bool value) {
  set_has_black();
  black_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.black)
}

// required bool apply = 6;
inline bool DB2LOBBY_GetTargetFriendInfo::has_apply() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_has_apply() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_has_apply() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB2LOBBY_GetTargetFriendInfo::clear_apply() {
  apply_ = false;
  clear_has_apply();
}
inline bool DB2LOBBY_GetTargetFriendInfo::apply() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.apply)
  return apply_;
}
inline void DB2LOBBY_GetTargetFriendInfo::set_apply(bool value) {
  set_has_apply();
  apply_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GetTargetFriendInfo.apply)
}

// -------------------------------------------------------------------

// LOBBY2DBGetTargetUserinfoReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_GET_TARGET_USERINFO_REQ];
inline bool LOBBY2DBGetTargetUserinfoReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DBGetTargetUserinfoReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DBGetTargetUserinfoReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DBGetTargetUserinfoReq::clear_cmdid() {
  cmdid_ = 380000;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DBGetTargetUserinfoReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBGetTargetUserinfoReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DBGetTargetUserinfoReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBGetTargetUserinfoReq.cmdId)
}

// required uint32 cmd = 2;
inline bool LOBBY2DBGetTargetUserinfoReq::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DBGetTargetUserinfoReq::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DBGetTargetUserinfoReq::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DBGetTargetUserinfoReq::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 LOBBY2DBGetTargetUserinfoReq::cmd() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBGetTargetUserinfoReq.cmd)
  return cmd_;
}
inline void LOBBY2DBGetTargetUserinfoReq::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBGetTargetUserinfoReq.cmd)
}

// required uint64 myCharId = 3;
inline bool LOBBY2DBGetTargetUserinfoReq::has_mycharid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DBGetTargetUserinfoReq::set_has_mycharid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DBGetTargetUserinfoReq::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DBGetTargetUserinfoReq::clear_mycharid() {
  mycharid_ = GOOGLE_ULONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::uint64 LOBBY2DBGetTargetUserinfoReq::mycharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBGetTargetUserinfoReq.myCharId)
  return mycharid_;
}
inline void LOBBY2DBGetTargetUserinfoReq::set_mycharid(::google::protobuf::uint64 value) {
  set_has_mycharid();
  mycharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBGetTargetUserinfoReq.myCharId)
}

// required uint64 dstCharId = 4;
inline bool LOBBY2DBGetTargetUserinfoReq::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DBGetTargetUserinfoReq::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DBGetTargetUserinfoReq::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DBGetTargetUserinfoReq::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 LOBBY2DBGetTargetUserinfoReq::dstcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBGetTargetUserinfoReq.dstCharId)
  return dstcharid_;
}
inline void LOBBY2DBGetTargetUserinfoReq::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBGetTargetUserinfoReq.dstCharId)
}

// -------------------------------------------------------------------

// DB2LOBBYGetTargetUserinfoRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GET_TARGET_USERINFO_RET];
inline bool DB2LOBBYGetTargetUserinfoRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_cmdid() {
  cmdid_ = 380001;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBYGetTargetUserinfoRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBYGetTargetUserinfoRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBYGetTargetUserinfoRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBYGetTargetUserinfoRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.ret)
  return ret_;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.ret)
}

// required uint32 cmd = 3;
inline bool DB2LOBBYGetTargetUserinfoRet::has_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_has_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 DB2LOBBYGetTargetUserinfoRet::cmd() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.cmd)
  return cmd_;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.cmd)
}

// required uint64 myCharId = 4;
inline bool DB2LOBBYGetTargetUserinfoRet::has_mycharid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_has_mycharid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_has_mycharid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_mycharid() {
  mycharid_ = GOOGLE_ULONGLONG(0);
  clear_has_mycharid();
}
inline ::google::protobuf::uint64 DB2LOBBYGetTargetUserinfoRet::mycharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.myCharId)
  return mycharid_;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_mycharid(::google::protobuf::uint64 value) {
  set_has_mycharid();
  mycharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.myCharId)
}

// required uint64 dstCharId = 5;
inline bool DB2LOBBYGetTargetUserinfoRet::has_dstcharid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_has_dstcharid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_has_dstcharid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_dstcharid() {
  dstcharid_ = GOOGLE_ULONGLONG(0);
  clear_has_dstcharid();
}
inline ::google::protobuf::uint64 DB2LOBBYGetTargetUserinfoRet::dstcharid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.dstCharId)
  return dstcharid_;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_dstcharid(::google::protobuf::uint64 value) {
  set_has_dstcharid();
  dstcharid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.dstCharId)
}

// optional .TgsProtocol.OtherUserInfo other = 6;
inline bool DB2LOBBYGetTargetUserinfoRet::has_other() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_has_other() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_has_other() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB2LOBBYGetTargetUserinfoRet::clear_other() {
  if (other_ != NULL) other_->::TgsProtocol::OtherUserInfo::Clear();
  clear_has_other();
}
inline const ::TgsProtocol::OtherUserInfo& DB2LOBBYGetTargetUserinfoRet::other() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.other)
  return other_ != NULL ? *other_ : *default_instance_->other_;
}
inline ::TgsProtocol::OtherUserInfo* DB2LOBBYGetTargetUserinfoRet::mutable_other() {
  set_has_other();
  if (other_ == NULL) other_ = new ::TgsProtocol::OtherUserInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.other)
  return other_;
}
inline ::TgsProtocol::OtherUserInfo* DB2LOBBYGetTargetUserinfoRet::release_other() {
  clear_has_other();
  ::TgsProtocol::OtherUserInfo* temp = other_;
  other_ = NULL;
  return temp;
}
inline void DB2LOBBYGetTargetUserinfoRet::set_allocated_other(::TgsProtocol::OtherUserInfo* other) {
  delete other_;
  other_ = other;
  if (other) {
    set_has_other();
  } else {
    clear_has_other();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYGetTargetUserinfoRet.other)
}

// -------------------------------------------------------------------

// LOBBY2DBGetRecommandFriendReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_GET_RECOMMAND_FRIEND_REQ];
inline bool LOBBY2DBGetRecommandFriendReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DBGetRecommandFriendReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DBGetRecommandFriendReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DBGetRecommandFriendReq::clear_cmdid() {
  cmdid_ = 360000;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DBGetRecommandFriendReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBGetRecommandFriendReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DBGetRecommandFriendReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBGetRecommandFriendReq.cmdId)
}

// required uint64 charId = 2;
inline bool LOBBY2DBGetRecommandFriendReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DBGetRecommandFriendReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DBGetRecommandFriendReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DBGetRecommandFriendReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DBGetRecommandFriendReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBGetRecommandFriendReq.charId)
  return charid_;
}
inline void LOBBY2DBGetRecommandFriendReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBGetRecommandFriendReq.charId)
}

// required uint64 level = 3;
inline bool LOBBY2DBGetRecommandFriendReq::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DBGetRecommandFriendReq::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DBGetRecommandFriendReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DBGetRecommandFriendReq::clear_level() {
  level_ = GOOGLE_ULONGLONG(0);
  clear_has_level();
}
inline ::google::protobuf::uint64 LOBBY2DBGetRecommandFriendReq::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBGetRecommandFriendReq.level)
  return level_;
}
inline void LOBBY2DBGetRecommandFriendReq::set_level(::google::protobuf::uint64 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBGetRecommandFriendReq.level)
}

// -------------------------------------------------------------------

// DB2LOBBYGetRecommandFriendRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GET_RECOMMAND_FRIEND_RET];
inline bool DB2LOBBYGetRecommandFriendRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBYGetRecommandFriendRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBYGetRecommandFriendRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBYGetRecommandFriendRet::clear_cmdid() {
  cmdid_ = 360001;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBYGetRecommandFriendRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetRecommandFriendRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBYGetRecommandFriendRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYGetRecommandFriendRet.cmdId)
}

// required uint64 charId = 2;
inline bool DB2LOBBYGetRecommandFriendRet::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBYGetRecommandFriendRet::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBYGetRecommandFriendRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBYGetRecommandFriendRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBYGetRecommandFriendRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetRecommandFriendRet.charId)
  return charid_;
}
inline void DB2LOBBYGetRecommandFriendRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYGetRecommandFriendRet.charId)
}

// repeated .TgsProtocol.ClientFriendInfo recommandList = 3;
inline int DB2LOBBYGetRecommandFriendRet::recommandlist_size() const {
  return recommandlist_.size();
}
inline void DB2LOBBYGetRecommandFriendRet::clear_recommandlist() {
  recommandlist_.Clear();
}
inline const ::TgsProtocol::ClientFriendInfo& DB2LOBBYGetRecommandFriendRet::recommandlist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandList)
  return recommandlist_.Get(index);
}
inline ::TgsProtocol::ClientFriendInfo* DB2LOBBYGetRecommandFriendRet::mutable_recommandlist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandList)
  return recommandlist_.Mutable(index);
}
inline ::TgsProtocol::ClientFriendInfo* DB2LOBBYGetRecommandFriendRet::add_recommandlist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandList)
  return recommandlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo >&
DB2LOBBYGetRecommandFriendRet::recommandlist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandList)
  return recommandlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo >*
DB2LOBBYGetRecommandFriendRet::mutable_recommandlist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandList)
  return &recommandlist_;
}

// repeated .TgsProtocol.ClientFriendInfo recommandBigList = 4;
inline int DB2LOBBYGetRecommandFriendRet::recommandbiglist_size() const {
  return recommandbiglist_.size();
}
inline void DB2LOBBYGetRecommandFriendRet::clear_recommandbiglist() {
  recommandbiglist_.Clear();
}
inline const ::TgsProtocol::ClientFriendInfo& DB2LOBBYGetRecommandFriendRet::recommandbiglist(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandBigList)
  return recommandbiglist_.Get(index);
}
inline ::TgsProtocol::ClientFriendInfo* DB2LOBBYGetRecommandFriendRet::mutable_recommandbiglist(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandBigList)
  return recommandbiglist_.Mutable(index);
}
inline ::TgsProtocol::ClientFriendInfo* DB2LOBBYGetRecommandFriendRet::add_recommandbiglist() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandBigList)
  return recommandbiglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo >&
DB2LOBBYGetRecommandFriendRet::recommandbiglist() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandBigList)
  return recommandbiglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::ClientFriendInfo >*
DB2LOBBYGetRecommandFriendRet::mutable_recommandbiglist() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBYGetRecommandFriendRet.recommandBigList)
  return &recommandbiglist_;
}

// -------------------------------------------------------------------

// DbActivity

// required uint32 id = 1;
inline bool DbActivity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbActivity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbActivity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbActivity::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DbActivity::id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.id)
  return id_;
}
inline void DbActivity::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.id)
}

// optional uint32 closed = 2;
inline bool DbActivity::has_closed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbActivity::set_has_closed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbActivity::clear_has_closed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbActivity::clear_closed() {
  closed_ = 0u;
  clear_has_closed();
}
inline ::google::protobuf::uint32 DbActivity::closed() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.closed)
  return closed_;
}
inline void DbActivity::set_closed(::google::protobuf::uint32 value) {
  set_has_closed();
  closed_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.closed)
}

// optional uint32 opentype = 3;
inline bool DbActivity::has_opentype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbActivity::set_has_opentype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbActivity::clear_has_opentype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbActivity::clear_opentype() {
  opentype_ = 0u;
  clear_has_opentype();
}
inline ::google::protobuf::uint32 DbActivity::opentype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.opentype)
  return opentype_;
}
inline void DbActivity::set_opentype(::google::protobuf::uint32 value) {
  set_has_opentype();
  opentype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.opentype)
}

// optional uint32 actype = 4;
inline bool DbActivity::has_actype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbActivity::set_has_actype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbActivity::clear_has_actype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbActivity::clear_actype() {
  actype_ = 0u;
  clear_has_actype();
}
inline ::google::protobuf::uint32 DbActivity::actype() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.actype)
  return actype_;
}
inline void DbActivity::set_actype(::google::protobuf::uint32 value) {
  set_has_actype();
  actype_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.actype)
}

// optional uint32 showBeginTime = 5;
inline bool DbActivity::has_showbegintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbActivity::set_has_showbegintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbActivity::clear_has_showbegintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbActivity::clear_showbegintime() {
  showbegintime_ = 0u;
  clear_has_showbegintime();
}
inline ::google::protobuf::uint32 DbActivity::showbegintime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.showBeginTime)
  return showbegintime_;
}
inline void DbActivity::set_showbegintime(::google::protobuf::uint32 value) {
  set_has_showbegintime();
  showbegintime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.showBeginTime)
}

// optional uint32 showEndTime = 6;
inline bool DbActivity::has_showendtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DbActivity::set_has_showendtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DbActivity::clear_has_showendtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DbActivity::clear_showendtime() {
  showendtime_ = 0u;
  clear_has_showendtime();
}
inline ::google::protobuf::uint32 DbActivity::showendtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.showEndTime)
  return showendtime_;
}
inline void DbActivity::set_showendtime(::google::protobuf::uint32 value) {
  set_has_showendtime();
  showendtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.showEndTime)
}

// optional uint32 beginTime = 7;
inline bool DbActivity::has_begintime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DbActivity::set_has_begintime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DbActivity::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DbActivity::clear_begintime() {
  begintime_ = 0u;
  clear_has_begintime();
}
inline ::google::protobuf::uint32 DbActivity::begintime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.beginTime)
  return begintime_;
}
inline void DbActivity::set_begintime(::google::protobuf::uint32 value) {
  set_has_begintime();
  begintime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.beginTime)
}

// optional uint32 endTime = 8;
inline bool DbActivity::has_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DbActivity::set_has_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DbActivity::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DbActivity::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 DbActivity::endtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.endTime)
  return endtime_;
}
inline void DbActivity::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.endTime)
}

// optional uint32 playerLev = 9;
inline bool DbActivity::has_playerlev() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DbActivity::set_has_playerlev() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DbActivity::clear_has_playerlev() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DbActivity::clear_playerlev() {
  playerlev_ = 0u;
  clear_has_playerlev();
}
inline ::google::protobuf::uint32 DbActivity::playerlev() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.playerLev)
  return playerlev_;
}
inline void DbActivity::set_playerlev(::google::protobuf::uint32 value) {
  set_has_playerlev();
  playerlev_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.playerLev)
}

// optional bytes todayTimes = 10;
inline bool DbActivity::has_todaytimes() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DbActivity::set_has_todaytimes() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DbActivity::clear_has_todaytimes() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DbActivity::clear_todaytimes() {
  if (todaytimes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    todaytimes_->clear();
  }
  clear_has_todaytimes();
}
inline const ::std::string& DbActivity::todaytimes() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.todayTimes)
  return *todaytimes_;
}
inline void DbActivity::set_todaytimes(const ::std::string& value) {
  set_has_todaytimes();
  if (todaytimes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    todaytimes_ = new ::std::string;
  }
  todaytimes_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.todayTimes)
}
inline void DbActivity::set_todaytimes(const char* value) {
  set_has_todaytimes();
  if (todaytimes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    todaytimes_ = new ::std::string;
  }
  todaytimes_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbActivity.todayTimes)
}
inline void DbActivity::set_todaytimes(const void* value, size_t size) {
  set_has_todaytimes();
  if (todaytimes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    todaytimes_ = new ::std::string;
  }
  todaytimes_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbActivity.todayTimes)
}
inline ::std::string* DbActivity::mutable_todaytimes() {
  set_has_todaytimes();
  if (todaytimes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    todaytimes_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbActivity.todayTimes)
  return todaytimes_;
}
inline ::std::string* DbActivity::release_todaytimes() {
  clear_has_todaytimes();
  if (todaytimes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = todaytimes_;
    todaytimes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbActivity::set_allocated_todaytimes(::std::string* todaytimes) {
  if (todaytimes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete todaytimes_;
  }
  if (todaytimes) {
    set_has_todaytimes();
    todaytimes_ = todaytimes;
  } else {
    clear_has_todaytimes();
    todaytimes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbActivity.todayTimes)
}

// optional bytes values = 11;
inline bool DbActivity::has_values() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DbActivity::set_has_values() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DbActivity::clear_has_values() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DbActivity::clear_values() {
  if (values_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values_->clear();
  }
  clear_has_values();
}
inline const ::std::string& DbActivity::values() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.values)
  return *values_;
}
inline void DbActivity::set_values(const ::std::string& value) {
  set_has_values();
  if (values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values_ = new ::std::string;
  }
  values_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.values)
}
inline void DbActivity::set_values(const char* value) {
  set_has_values();
  if (values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values_ = new ::std::string;
  }
  values_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbActivity.values)
}
inline void DbActivity::set_values(const void* value, size_t size) {
  set_has_values();
  if (values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values_ = new ::std::string;
  }
  values_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbActivity.values)
}
inline ::std::string* DbActivity::mutable_values() {
  set_has_values();
  if (values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbActivity.values)
  return values_;
}
inline ::std::string* DbActivity::release_values() {
  clear_has_values();
  if (values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = values_;
    values_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbActivity::set_allocated_values(::std::string* values) {
  if (values_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete values_;
  }
  if (values) {
    set_has_values();
    values_ = values;
  } else {
    clear_has_values();
    values_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbActivity.values)
}

// optional bytes rewards = 12;
inline bool DbActivity::has_rewards() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DbActivity::set_has_rewards() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DbActivity::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DbActivity::clear_rewards() {
  if (rewards_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewards_->clear();
  }
  clear_has_rewards();
}
inline const ::std::string& DbActivity::rewards() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.rewards)
  return *rewards_;
}
inline void DbActivity::set_rewards(const ::std::string& value) {
  set_has_rewards();
  if (rewards_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewards_ = new ::std::string;
  }
  rewards_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.rewards)
}
inline void DbActivity::set_rewards(const char* value) {
  set_has_rewards();
  if (rewards_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewards_ = new ::std::string;
  }
  rewards_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbActivity.rewards)
}
inline void DbActivity::set_rewards(const void* value, size_t size) {
  set_has_rewards();
  if (rewards_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewards_ = new ::std::string;
  }
  rewards_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbActivity.rewards)
}
inline ::std::string* DbActivity::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rewards_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbActivity.rewards)
  return rewards_;
}
inline ::std::string* DbActivity::release_rewards() {
  clear_has_rewards();
  if (rewards_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rewards_;
    rewards_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbActivity::set_allocated_rewards(::std::string* rewards) {
  if (rewards_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rewards_;
  }
  if (rewards) {
    set_has_rewards();
    rewards_ = rewards;
  } else {
    clear_has_rewards();
    rewards_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbActivity.rewards)
}

// optional bytes name = 13;
inline bool DbActivity::has_name() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DbActivity::set_has_name() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DbActivity::clear_has_name() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DbActivity::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DbActivity::name() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.name)
  return *name_;
}
inline void DbActivity::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.name)
}
inline void DbActivity::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbActivity.name)
}
inline void DbActivity::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbActivity.name)
}
inline ::std::string* DbActivity::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbActivity.name)
  return name_;
}
inline ::std::string* DbActivity::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbActivity::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbActivity.name)
}

// optional bytes desc = 14;
inline bool DbActivity::has_desc() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DbActivity::set_has_desc() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DbActivity::clear_has_desc() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DbActivity::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& DbActivity::desc() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.desc)
  return *desc_;
}
inline void DbActivity::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.desc)
}
inline void DbActivity::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbActivity.desc)
}
inline void DbActivity::set_desc(const void* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbActivity.desc)
}
inline ::std::string* DbActivity::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbActivity.desc)
  return desc_;
}
inline ::std::string* DbActivity::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbActivity::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbActivity.desc)
}

// optional bytes childDesc = 15;
inline bool DbActivity::has_childdesc() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DbActivity::set_has_childdesc() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DbActivity::clear_has_childdesc() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DbActivity::clear_childdesc() {
  if (childdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    childdesc_->clear();
  }
  clear_has_childdesc();
}
inline const ::std::string& DbActivity::childdesc() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.childDesc)
  return *childdesc_;
}
inline void DbActivity::set_childdesc(const ::std::string& value) {
  set_has_childdesc();
  if (childdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    childdesc_ = new ::std::string;
  }
  childdesc_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.childDesc)
}
inline void DbActivity::set_childdesc(const char* value) {
  set_has_childdesc();
  if (childdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    childdesc_ = new ::std::string;
  }
  childdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbActivity.childDesc)
}
inline void DbActivity::set_childdesc(const void* value, size_t size) {
  set_has_childdesc();
  if (childdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    childdesc_ = new ::std::string;
  }
  childdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbActivity.childDesc)
}
inline ::std::string* DbActivity::mutable_childdesc() {
  set_has_childdesc();
  if (childdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    childdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbActivity.childDesc)
  return childdesc_;
}
inline ::std::string* DbActivity::release_childdesc() {
  clear_has_childdesc();
  if (childdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = childdesc_;
    childdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbActivity::set_allocated_childdesc(::std::string* childdesc) {
  if (childdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete childdesc_;
  }
  if (childdesc) {
    set_has_childdesc();
    childdesc_ = childdesc;
  } else {
    clear_has_childdesc();
    childdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbActivity.childDesc)
}

// optional bytes values2 = 16;
inline bool DbActivity::has_values2() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DbActivity::set_has_values2() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DbActivity::clear_has_values2() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DbActivity::clear_values2() {
  if (values2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values2_->clear();
  }
  clear_has_values2();
}
inline const ::std::string& DbActivity::values2() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.values2)
  return *values2_;
}
inline void DbActivity::set_values2(const ::std::string& value) {
  set_has_values2();
  if (values2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values2_ = new ::std::string;
  }
  values2_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.values2)
}
inline void DbActivity::set_values2(const char* value) {
  set_has_values2();
  if (values2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values2_ = new ::std::string;
  }
  values2_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbActivity.values2)
}
inline void DbActivity::set_values2(const void* value, size_t size) {
  set_has_values2();
  if (values2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values2_ = new ::std::string;
  }
  values2_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbActivity.values2)
}
inline ::std::string* DbActivity::mutable_values2() {
  set_has_values2();
  if (values2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    values2_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbActivity.values2)
  return values2_;
}
inline ::std::string* DbActivity::release_values2() {
  clear_has_values2();
  if (values2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = values2_;
    values2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbActivity::set_allocated_values2(::std::string* values2) {
  if (values2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete values2_;
  }
  if (values2) {
    set_has_values2();
    values2_ = values2;
  } else {
    clear_has_values2();
    values2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbActivity.values2)
}

// optional uint32 activetime = 17;
inline bool DbActivity::has_activetime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void DbActivity::set_has_activetime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void DbActivity::clear_has_activetime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void DbActivity::clear_activetime() {
  activetime_ = 0u;
  clear_has_activetime();
}
inline ::google::protobuf::uint32 DbActivity::activetime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.activetime)
  return activetime_;
}
inline void DbActivity::set_activetime(::google::protobuf::uint32 value) {
  set_has_activetime();
  activetime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.activetime)
}

// optional uint32 countdown = 18;
inline bool DbActivity::has_countdown() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DbActivity::set_has_countdown() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DbActivity::clear_has_countdown() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DbActivity::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 DbActivity::countdown() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbActivity.countdown)
  return countdown_;
}
inline void DbActivity::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbActivity.countdown)
}

// -------------------------------------------------------------------

// LOBBY2DB_LoadActivityReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADACTIVITYREQ];
inline bool LOBBY2DB_LoadActivityReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_LoadActivityReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_LoadActivityReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_LoadActivityReq::clear_cmdid() {
  cmdid_ = 300050;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_LoadActivityReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadActivityReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_LoadActivityReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadActivityReq.cmdId)
}

// -------------------------------------------------------------------

// DB2LOBBY_LoadActivityRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADACTIVITYRET];
inline bool DB2LOBBY_LoadActivityRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_LoadActivityRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_LoadActivityRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_LoadActivityRet::clear_cmdid() {
  cmdid_ = 350050;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_LoadActivityRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadActivityRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_LoadActivityRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadActivityRet.cmdId)
}

// repeated .TgsProtocol.DbActivity items = 2;
inline int DB2LOBBY_LoadActivityRet::items_size() const {
  return items_.size();
}
inline void DB2LOBBY_LoadActivityRet::clear_items() {
  items_.Clear();
}
inline const ::TgsProtocol::DbActivity& DB2LOBBY_LoadActivityRet::items(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadActivityRet.items)
  return items_.Get(index);
}
inline ::TgsProtocol::DbActivity* DB2LOBBY_LoadActivityRet::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadActivityRet.items)
  return items_.Mutable(index);
}
inline ::TgsProtocol::DbActivity* DB2LOBBY_LoadActivityRet::add_items() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadActivityRet.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity >&
DB2LOBBY_LoadActivityRet::items() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadActivityRet.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity >*
DB2LOBBY_LoadActivityRet::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadActivityRet.items)
  return &items_;
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateActivityReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEACTIVITYREQ];
inline bool LOBBY2DB_UpdateActivityReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateActivityReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateActivityReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateActivityReq::clear_cmdid() {
  cmdid_ = 300051;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateActivityReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateActivityReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateActivityReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateActivityReq.cmdId)
}

// required uint32 type = 2;
inline bool LOBBY2DB_UpdateActivityReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_UpdateActivityReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_UpdateActivityReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_UpdateActivityReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateActivityReq::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateActivityReq.type)
  return type_;
}
inline void LOBBY2DB_UpdateActivityReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateActivityReq.type)
}

// repeated .TgsProtocol.DbActivity item = 3;
inline int LOBBY2DB_UpdateActivityReq::item_size() const {
  return item_.size();
}
inline void LOBBY2DB_UpdateActivityReq::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::DbActivity& LOBBY2DB_UpdateActivityReq::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateActivityReq.item)
  return item_.Get(index);
}
inline ::TgsProtocol::DbActivity* LOBBY2DB_UpdateActivityReq::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateActivityReq.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::DbActivity* LOBBY2DB_UpdateActivityReq::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_UpdateActivityReq.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity >&
LOBBY2DB_UpdateActivityReq::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_UpdateActivityReq.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbActivity >*
LOBBY2DB_UpdateActivityReq::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_UpdateActivityReq.item)
  return &item_;
}

// -------------------------------------------------------------------

// DbRank

// required uint32 type = 1;
inline bool DbRank::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbRank::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbRank::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbRank::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 DbRank::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRank.type)
  return type_;
}
inline void DbRank::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRank.type)
}

// required uint64 charid = 3;
inline bool DbRank::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbRank::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbRank::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbRank::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DbRank::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRank.charid)
  return charid_;
}
inline void DbRank::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRank.charid)
}

// required uint64 value = 4;
inline bool DbRank::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbRank::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbRank::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbRank::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 DbRank::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRank.value)
  return value_;
}
inline void DbRank::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRank.value)
}

// optional uint32 templateId = 5;
inline bool DbRank::has_templateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbRank::set_has_templateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbRank::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbRank::clear_templateid() {
  templateid_ = 0u;
  clear_has_templateid();
}
inline ::google::protobuf::uint32 DbRank::templateid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRank.templateId)
  return templateid_;
}
inline void DbRank::set_templateid(::google::protobuf::uint32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRank.templateId)
}

// optional uint64 instanceId = 6;
inline bool DbRank::has_instanceid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbRank::set_has_instanceid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbRank::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbRank::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::uint64 DbRank::instanceid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRank.instanceId)
  return instanceid_;
}
inline void DbRank::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRank.instanceId)
}

// optional uint32 instanceValue = 7;
inline bool DbRank::has_instancevalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DbRank::set_has_instancevalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DbRank::clear_has_instancevalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DbRank::clear_instancevalue() {
  instancevalue_ = 0u;
  clear_has_instancevalue();
}
inline ::google::protobuf::uint32 DbRank::instancevalue() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbRank.instanceValue)
  return instancevalue_;
}
inline void DbRank::set_instancevalue(::google::protobuf::uint32 value) {
  set_has_instancevalue();
  instancevalue_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbRank.instanceValue)
}

// -------------------------------------------------------------------

// LOBBY2DB_LoadRankReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADRANKREQ];
inline bool LOBBY2DB_LoadRankReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_LoadRankReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_LoadRankReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_LoadRankReq::clear_cmdid() {
  cmdid_ = 300060;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_LoadRankReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadRankReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_LoadRankReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadRankReq.cmdId)
}

// -------------------------------------------------------------------

// DB2LOBBY_LoadRankRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADRANKRET];
inline bool DB2LOBBY_LoadRankRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_LoadRankRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_LoadRankRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_LoadRankRet::clear_cmdid() {
  cmdid_ = 350060;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_LoadRankRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadRankRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_LoadRankRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadRankRet.cmdId)
}

// repeated .TgsProtocol.DbRank items = 2;
inline int DB2LOBBY_LoadRankRet::items_size() const {
  return items_.size();
}
inline void DB2LOBBY_LoadRankRet::clear_items() {
  items_.Clear();
}
inline const ::TgsProtocol::DbRank& DB2LOBBY_LoadRankRet::items(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadRankRet.items)
  return items_.Get(index);
}
inline ::TgsProtocol::DbRank* DB2LOBBY_LoadRankRet::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadRankRet.items)
  return items_.Mutable(index);
}
inline ::TgsProtocol::DbRank* DB2LOBBY_LoadRankRet::add_items() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadRankRet.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank >&
DB2LOBBY_LoadRankRet::items() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadRankRet.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank >*
DB2LOBBY_LoadRankRet::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadRankRet.items)
  return &items_;
}

// optional int32 ret = 3;
inline bool DB2LOBBY_LoadRankRet::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_LoadRankRet::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_LoadRankRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_LoadRankRet::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DB2LOBBY_LoadRankRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadRankRet.ret)
  return ret_;
}
inline void DB2LOBBY_LoadRankRet::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadRankRet.ret)
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateRankReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATERANKREQ];
inline bool LOBBY2DB_UpdateRankReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateRankReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateRankReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateRankReq::clear_cmdid() {
  cmdid_ = 300061;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateRankReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateRankReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateRankReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateRankReq.cmdId)
}

// repeated .TgsProtocol.DbRank item = 2;
inline int LOBBY2DB_UpdateRankReq::item_size() const {
  return item_.size();
}
inline void LOBBY2DB_UpdateRankReq::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::DbRank& LOBBY2DB_UpdateRankReq::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateRankReq.item)
  return item_.Get(index);
}
inline ::TgsProtocol::DbRank* LOBBY2DB_UpdateRankReq::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateRankReq.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::DbRank* LOBBY2DB_UpdateRankReq::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_UpdateRankReq.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank >&
LOBBY2DB_UpdateRankReq::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_UpdateRankReq.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbRank >*
LOBBY2DB_UpdateRankReq::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_UpdateRankReq.item)
  return &item_;
}

// -------------------------------------------------------------------

// LOBBY2DB_ClearRankReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CLEARRANKREQ];
inline bool LOBBY2DB_ClearRankReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_ClearRankReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_ClearRankReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_ClearRankReq::clear_cmdid() {
  cmdid_ = 300062;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_ClearRankReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ClearRankReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_ClearRankReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ClearRankReq.cmdId)
}

// required uint32 type = 2;
inline bool LOBBY2DB_ClearRankReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_ClearRankReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_ClearRankReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_ClearRankReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 LOBBY2DB_ClearRankReq::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ClearRankReq.type)
  return type_;
}
inline void LOBBY2DB_ClearRankReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ClearRankReq.type)
}

// -------------------------------------------------------------------

// LOBBY2DB_ClearPlayerRank_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CLEARPLAYERRANK_REQ];
inline bool LOBBY2DB_ClearPlayerRank_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_ClearPlayerRank_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_ClearPlayerRank_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_ClearPlayerRank_Req::clear_cmdid() {
  cmdid_ = 300075;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_ClearPlayerRank_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ClearPlayerRank_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_ClearPlayerRank_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ClearPlayerRank_Req.cmdId)
}

// required uint64 charid = 2;
inline bool LOBBY2DB_ClearPlayerRank_Req::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_ClearPlayerRank_Req::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_ClearPlayerRank_Req::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_ClearPlayerRank_Req::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_ClearPlayerRank_Req::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ClearPlayerRank_Req.charid)
  return charid_;
}
inline void LOBBY2DB_ClearPlayerRank_Req::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ClearPlayerRank_Req.charid)
}

// -------------------------------------------------------------------

// DbArena

// required uint32 rank = 1;
inline bool DbArena::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbArena::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbArena::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbArena::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 DbArena::rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbArena.rank)
  return rank_;
}
inline void DbArena::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbArena.rank)
}

// required uint64 charid = 2;
inline bool DbArena::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbArena::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbArena::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbArena::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DbArena::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbArena.charid)
  return charid_;
}
inline void DbArena::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbArena.charid)
}

// required uint32 bestrank = 3;
inline bool DbArena::has_bestrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbArena::set_has_bestrank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbArena::clear_has_bestrank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbArena::clear_bestrank() {
  bestrank_ = 0u;
  clear_has_bestrank();
}
inline ::google::protobuf::uint32 DbArena::bestrank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbArena.bestrank)
  return bestrank_;
}
inline void DbArena::set_bestrank(::google::protobuf::uint32 value) {
  set_has_bestrank();
  bestrank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbArena.bestrank)
}

// required uint32 top3time = 4;
inline bool DbArena::has_top3time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbArena::set_has_top3time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbArena::clear_has_top3time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbArena::clear_top3time() {
  top3time_ = 0u;
  clear_has_top3time();
}
inline ::google::protobuf::uint32 DbArena::top3time() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbArena.top3time)
  return top3time_;
}
inline void DbArena::set_top3time(::google::protobuf::uint32 value) {
  set_has_top3time();
  top3time_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbArena.top3time)
}

// required uint64 winnum = 5;
inline bool DbArena::has_winnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbArena::set_has_winnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbArena::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbArena::clear_winnum() {
  winnum_ = GOOGLE_ULONGLONG(0);
  clear_has_winnum();
}
inline ::google::protobuf::uint64 DbArena::winnum() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbArena.winnum)
  return winnum_;
}
inline void DbArena::set_winnum(::google::protobuf::uint64 value) {
  set_has_winnum();
  winnum_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DbArena.winnum)
}

// required string enemysrank = 6;
inline bool DbArena::has_enemysrank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DbArena::set_has_enemysrank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DbArena::clear_has_enemysrank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DbArena::clear_enemysrank() {
  if (enemysrank_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemysrank_->clear();
  }
  clear_has_enemysrank();
}
inline const ::std::string& DbArena::enemysrank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DbArena.enemysrank)
  return *enemysrank_;
}
inline void DbArena::set_enemysrank(const ::std::string& value) {
  set_has_enemysrank();
  if (enemysrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemysrank_ = new ::std::string;
  }
  enemysrank_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DbArena.enemysrank)
}
inline void DbArena::set_enemysrank(const char* value) {
  set_has_enemysrank();
  if (enemysrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemysrank_ = new ::std::string;
  }
  enemysrank_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DbArena.enemysrank)
}
inline void DbArena::set_enemysrank(const char* value, size_t size) {
  set_has_enemysrank();
  if (enemysrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemysrank_ = new ::std::string;
  }
  enemysrank_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DbArena.enemysrank)
}
inline ::std::string* DbArena::mutable_enemysrank() {
  set_has_enemysrank();
  if (enemysrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    enemysrank_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DbArena.enemysrank)
  return enemysrank_;
}
inline ::std::string* DbArena::release_enemysrank() {
  clear_has_enemysrank();
  if (enemysrank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = enemysrank_;
    enemysrank_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DbArena::set_allocated_enemysrank(::std::string* enemysrank) {
  if (enemysrank_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete enemysrank_;
  }
  if (enemysrank) {
    set_has_enemysrank();
    enemysrank_ = enemysrank;
  } else {
    clear_has_enemysrank();
    enemysrank_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DbArena.enemysrank)
}

// -------------------------------------------------------------------

// LOBBY2DB_LoadArenaReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADARENAREQ];
inline bool LOBBY2DB_LoadArenaReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_LoadArenaReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_LoadArenaReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_LoadArenaReq::clear_cmdid() {
  cmdid_ = 300070;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_LoadArenaReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadArenaReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_LoadArenaReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadArenaReq.cmdId)
}

// -------------------------------------------------------------------

// DB2LOBBY_LoadArenaRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADARENARET];
inline bool DB2LOBBY_LoadArenaRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_LoadArenaRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_LoadArenaRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_LoadArenaRet::clear_cmdid() {
  cmdid_ = 350070;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_LoadArenaRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadArenaRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_LoadArenaRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadArenaRet.cmdId)
}

// repeated .TgsProtocol.DbArena items = 2;
inline int DB2LOBBY_LoadArenaRet::items_size() const {
  return items_.size();
}
inline void DB2LOBBY_LoadArenaRet::clear_items() {
  items_.Clear();
}
inline const ::TgsProtocol::DbArena& DB2LOBBY_LoadArenaRet::items(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadArenaRet.items)
  return items_.Get(index);
}
inline ::TgsProtocol::DbArena* DB2LOBBY_LoadArenaRet::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadArenaRet.items)
  return items_.Mutable(index);
}
inline ::TgsProtocol::DbArena* DB2LOBBY_LoadArenaRet::add_items() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadArenaRet.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena >&
DB2LOBBY_LoadArenaRet::items() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadArenaRet.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena >*
DB2LOBBY_LoadArenaRet::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadArenaRet.items)
  return &items_;
}

// optional int32 ret = 3;
inline bool DB2LOBBY_LoadArenaRet::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_LoadArenaRet::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_LoadArenaRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_LoadArenaRet::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DB2LOBBY_LoadArenaRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadArenaRet.ret)
  return ret_;
}
inline void DB2LOBBY_LoadArenaRet::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadArenaRet.ret)
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateArenaReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEARENAREQ];
inline bool LOBBY2DB_UpdateArenaReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateArenaReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateArenaReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateArenaReq::clear_cmdid() {
  cmdid_ = 300071;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateArenaReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateArenaReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateArenaReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateArenaReq.cmdId)
}

// repeated .TgsProtocol.DbArena item = 2;
inline int LOBBY2DB_UpdateArenaReq::item_size() const {
  return item_.size();
}
inline void LOBBY2DB_UpdateArenaReq::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::DbArena& LOBBY2DB_UpdateArenaReq::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateArenaReq.item)
  return item_.Get(index);
}
inline ::TgsProtocol::DbArena* LOBBY2DB_UpdateArenaReq::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateArenaReq.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::DbArena* LOBBY2DB_UpdateArenaReq::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_UpdateArenaReq.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena >&
LOBBY2DB_UpdateArenaReq::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_UpdateArenaReq.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbArena >*
LOBBY2DB_UpdateArenaReq::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_UpdateArenaReq.item)
  return &item_;
}

// -------------------------------------------------------------------

// DBServerCompare

// required uint32 rank = 1;
inline bool DBServerCompare::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBServerCompare::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBServerCompare::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBServerCompare::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 DBServerCompare::rank() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBServerCompare.rank)
  return rank_;
}
inline void DBServerCompare::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBServerCompare.rank)
}

// required .TgsProtocol.ServerCompareType type = 2;
inline bool DBServerCompare::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBServerCompare::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBServerCompare::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBServerCompare::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::ServerCompareType DBServerCompare::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBServerCompare.type)
  return static_cast< ::TgsProtocol::ServerCompareType >(type_);
}
inline void DBServerCompare::set_type(::TgsProtocol::ServerCompareType value) {
  assert(::TgsProtocol::ServerCompareType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBServerCompare.type)
}

// required uint64 charid = 3;
inline bool DBServerCompare::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBServerCompare::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBServerCompare::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBServerCompare::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DBServerCompare::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBServerCompare.charid)
  return charid_;
}
inline void DBServerCompare::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBServerCompare.charid)
}

// required uint64 value = 4;
inline bool DBServerCompare::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBServerCompare::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBServerCompare::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBServerCompare::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 DBServerCompare::value() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBServerCompare.value)
  return value_;
}
inline void DBServerCompare::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBServerCompare.value)
}

// -------------------------------------------------------------------

// LOBBY2DB_LoadServerCompare_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADSERVERCOMPARE_REQ];
inline bool LOBBY2DB_LoadServerCompare_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_LoadServerCompare_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_LoadServerCompare_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_LoadServerCompare_Req::clear_cmdid() {
  cmdid_ = 300072;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_LoadServerCompare_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadServerCompare_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_LoadServerCompare_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadServerCompare_Req.cmdId)
}

// -------------------------------------------------------------------

// DB2LOBBY_LoadServerCompare_Ret

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOADSERVERCOMPARE_RET];
inline bool DB2LOBBY_LoadServerCompare_Ret::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_LoadServerCompare_Ret::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_LoadServerCompare_Ret::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_LoadServerCompare_Ret::clear_cmdid() {
  cmdid_ = 350071;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_LoadServerCompare_Ret::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_LoadServerCompare_Ret::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBY_LoadServerCompare_Ret::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBY_LoadServerCompare_Ret::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBY_LoadServerCompare_Ret::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBY_LoadServerCompare_Ret::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBY_LoadServerCompare_Ret::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret.ret)
  return ret_;
}
inline void DB2LOBBY_LoadServerCompare_Ret::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret.ret)
}

// repeated .TgsProtocol.DBServerCompare compare_info = 3;
inline int DB2LOBBY_LoadServerCompare_Ret::compare_info_size() const {
  return compare_info_.size();
}
inline void DB2LOBBY_LoadServerCompare_Ret::clear_compare_info() {
  compare_info_.Clear();
}
inline const ::TgsProtocol::DBServerCompare& DB2LOBBY_LoadServerCompare_Ret::compare_info(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret.compare_info)
  return compare_info_.Get(index);
}
inline ::TgsProtocol::DBServerCompare* DB2LOBBY_LoadServerCompare_Ret::mutable_compare_info(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret.compare_info)
  return compare_info_.Mutable(index);
}
inline ::TgsProtocol::DBServerCompare* DB2LOBBY_LoadServerCompare_Ret::add_compare_info() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret.compare_info)
  return compare_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare >&
DB2LOBBY_LoadServerCompare_Ret::compare_info() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret.compare_info)
  return compare_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare >*
DB2LOBBY_LoadServerCompare_Ret::mutable_compare_info() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_LoadServerCompare_Ret.compare_info)
  return &compare_info_;
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateServerCompare_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATESERVERCOMPARE_REQ];
inline bool LOBBY2DB_UpdateServerCompare_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateServerCompare_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateServerCompare_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateServerCompare_Req::clear_cmdid() {
  cmdid_ = 300073;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateServerCompare_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateServerCompare_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateServerCompare_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateServerCompare_Req.cmdId)
}

// repeated .TgsProtocol.DBServerCompare compare_info = 2;
inline int LOBBY2DB_UpdateServerCompare_Req::compare_info_size() const {
  return compare_info_.size();
}
inline void LOBBY2DB_UpdateServerCompare_Req::clear_compare_info() {
  compare_info_.Clear();
}
inline const ::TgsProtocol::DBServerCompare& LOBBY2DB_UpdateServerCompare_Req::compare_info(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateServerCompare_Req.compare_info)
  return compare_info_.Get(index);
}
inline ::TgsProtocol::DBServerCompare* LOBBY2DB_UpdateServerCompare_Req::mutable_compare_info(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateServerCompare_Req.compare_info)
  return compare_info_.Mutable(index);
}
inline ::TgsProtocol::DBServerCompare* LOBBY2DB_UpdateServerCompare_Req::add_compare_info() {
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_UpdateServerCompare_Req.compare_info)
  return compare_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare >&
LOBBY2DB_UpdateServerCompare_Req::compare_info() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_UpdateServerCompare_Req.compare_info)
  return compare_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBServerCompare >*
LOBBY2DB_UpdateServerCompare_Req::mutable_compare_info() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_UpdateServerCompare_Req.compare_info)
  return &compare_info_;
}

// -------------------------------------------------------------------

// LOBBY2DB_ClearServerCompare_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CLEARSERVERCOMPARE_REQ];
inline bool LOBBY2DB_ClearServerCompare_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_ClearServerCompare_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_ClearServerCompare_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_ClearServerCompare_Req::clear_cmdid() {
  cmdid_ = 300074;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_ClearServerCompare_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ClearServerCompare_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_ClearServerCompare_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ClearServerCompare_Req.cmdId)
}

// required .TgsProtocol.ServerCompareType type = 2;
inline bool LOBBY2DB_ClearServerCompare_Req::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_ClearServerCompare_Req::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_ClearServerCompare_Req::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_ClearServerCompare_Req::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::TgsProtocol::ServerCompareType LOBBY2DB_ClearServerCompare_Req::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_ClearServerCompare_Req.type)
  return static_cast< ::TgsProtocol::ServerCompareType >(type_);
}
inline void LOBBY2DB_ClearServerCompare_Req::set_type(::TgsProtocol::ServerCompareType value) {
  assert(::TgsProtocol::ServerCompareType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_ClearServerCompare_Req.type)
}

// -------------------------------------------------------------------

// DBGuildPlayer

// required uint64 charid = 1;
inline bool DBGuildPlayer::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBGuildPlayer::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBGuildPlayer::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBGuildPlayer::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DBGuildPlayer::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.charid)
  return charid_;
}
inline void DBGuildPlayer::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.charid)
}

// required uint32 guildid = 2;
inline bool DBGuildPlayer::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBGuildPlayer::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBGuildPlayer::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBGuildPlayer::clear_guildid() {
  guildid_ = 0u;
  clear_has_guildid();
}
inline ::google::protobuf::uint32 DBGuildPlayer::guildid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.guildid)
  return guildid_;
}
inline void DBGuildPlayer::set_guildid(::google::protobuf::uint32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.guildid)
}

// required uint32 job = 3;
inline bool DBGuildPlayer::has_job() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBGuildPlayer::set_has_job() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBGuildPlayer::clear_has_job() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBGuildPlayer::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 DBGuildPlayer::job() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.job)
  return job_;
}
inline void DBGuildPlayer::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.job)
}

// required uint32 jointime = 4;
inline bool DBGuildPlayer::has_jointime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBGuildPlayer::set_has_jointime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBGuildPlayer::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBGuildPlayer::clear_jointime() {
  jointime_ = 0u;
  clear_has_jointime();
}
inline ::google::protobuf::uint32 DBGuildPlayer::jointime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.jointime)
  return jointime_;
}
inline void DBGuildPlayer::set_jointime(::google::protobuf::uint32 value) {
  set_has_jointime();
  jointime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.jointime)
}

// optional uint32 ritual = 5;
inline bool DBGuildPlayer::has_ritual() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBGuildPlayer::set_has_ritual() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBGuildPlayer::clear_has_ritual() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBGuildPlayer::clear_ritual() {
  ritual_ = 0u;
  clear_has_ritual();
}
inline ::google::protobuf::uint32 DBGuildPlayer::ritual() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.ritual)
  return ritual_;
}
inline void DBGuildPlayer::set_ritual(::google::protobuf::uint32 value) {
  set_has_ritual();
  ritual_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.ritual)
}

// optional uint32 days = 6;
inline bool DBGuildPlayer::has_days() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBGuildPlayer::set_has_days() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBGuildPlayer::clear_has_days() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBGuildPlayer::clear_days() {
  days_ = 0u;
  clear_has_days();
}
inline ::google::protobuf::uint32 DBGuildPlayer::days() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.days)
  return days_;
}
inline void DBGuildPlayer::set_days(::google::protobuf::uint32 value) {
  set_has_days();
  days_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.days)
}

// optional uint32 rewardgot = 7;
inline bool DBGuildPlayer::has_rewardgot() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBGuildPlayer::set_has_rewardgot() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBGuildPlayer::clear_has_rewardgot() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBGuildPlayer::clear_rewardgot() {
  rewardgot_ = 0u;
  clear_has_rewardgot();
}
inline ::google::protobuf::uint32 DBGuildPlayer::rewardgot() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.rewardgot)
  return rewardgot_;
}
inline void DBGuildPlayer::set_rewardgot(::google::protobuf::uint32 value) {
  set_has_rewardgot();
  rewardgot_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.rewardgot)
}

// optional uint32 ritualtime = 8;
inline bool DBGuildPlayer::has_ritualtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBGuildPlayer::set_has_ritualtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBGuildPlayer::clear_has_ritualtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBGuildPlayer::clear_ritualtime() {
  ritualtime_ = 0u;
  clear_has_ritualtime();
}
inline ::google::protobuf::uint32 DBGuildPlayer::ritualtime() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.ritualtime)
  return ritualtime_;
}
inline void DBGuildPlayer::set_ritualtime(::google::protobuf::uint32 value) {
  set_has_ritualtime();
  ritualtime_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.ritualtime)
}

// optional uint32 ratereward = 9;
inline bool DBGuildPlayer::has_ratereward() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBGuildPlayer::set_has_ratereward() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBGuildPlayer::clear_has_ratereward() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBGuildPlayer::clear_ratereward() {
  ratereward_ = 0u;
  clear_has_ratereward();
}
inline ::google::protobuf::uint32 DBGuildPlayer::ratereward() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.ratereward)
  return ratereward_;
}
inline void DBGuildPlayer::set_ratereward(::google::protobuf::uint32 value) {
  set_has_ratereward();
  ratereward_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.ratereward)
}

// optional bytes territory = 10;
inline bool DBGuildPlayer::has_territory() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DBGuildPlayer::set_has_territory() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DBGuildPlayer::clear_has_territory() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DBGuildPlayer::clear_territory() {
  if (territory_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_->clear();
  }
  clear_has_territory();
}
inline const ::std::string& DBGuildPlayer::territory() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.territory)
  return *territory_;
}
inline void DBGuildPlayer::set_territory(const ::std::string& value) {
  set_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_ = new ::std::string;
  }
  territory_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.territory)
}
inline void DBGuildPlayer::set_territory(const char* value) {
  set_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_ = new ::std::string;
  }
  territory_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBGuildPlayer.territory)
}
inline void DBGuildPlayer::set_territory(const void* value, size_t size) {
  set_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_ = new ::std::string;
  }
  territory_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBGuildPlayer.territory)
}
inline ::std::string* DBGuildPlayer::mutable_territory() {
  set_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBGuildPlayer.territory)
  return territory_;
}
inline ::std::string* DBGuildPlayer::release_territory() {
  clear_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = territory_;
    territory_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBGuildPlayer::set_allocated_territory(::std::string* territory) {
  if (territory_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete territory_;
  }
  if (territory) {
    set_has_territory();
    territory_ = territory;
  } else {
    clear_has_territory();
    territory_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBGuildPlayer.territory)
}

// optional string skill_level = 11;
inline bool DBGuildPlayer::has_skill_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DBGuildPlayer::set_has_skill_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DBGuildPlayer::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DBGuildPlayer::clear_skill_level() {
  if (skill_level_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skill_level_->clear();
  }
  clear_has_skill_level();
}
inline const ::std::string& DBGuildPlayer::skill_level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildPlayer.skill_level)
  return *skill_level_;
}
inline void DBGuildPlayer::set_skill_level(const ::std::string& value) {
  set_has_skill_level();
  if (skill_level_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skill_level_ = new ::std::string;
  }
  skill_level_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildPlayer.skill_level)
}
inline void DBGuildPlayer::set_skill_level(const char* value) {
  set_has_skill_level();
  if (skill_level_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skill_level_ = new ::std::string;
  }
  skill_level_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBGuildPlayer.skill_level)
}
inline void DBGuildPlayer::set_skill_level(const char* value, size_t size) {
  set_has_skill_level();
  if (skill_level_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skill_level_ = new ::std::string;
  }
  skill_level_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBGuildPlayer.skill_level)
}
inline ::std::string* DBGuildPlayer::mutable_skill_level() {
  set_has_skill_level();
  if (skill_level_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skill_level_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBGuildPlayer.skill_level)
  return skill_level_;
}
inline ::std::string* DBGuildPlayer::release_skill_level() {
  clear_has_skill_level();
  if (skill_level_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = skill_level_;
    skill_level_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBGuildPlayer::set_allocated_skill_level(::std::string* skill_level) {
  if (skill_level_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete skill_level_;
  }
  if (skill_level) {
    set_has_skill_level();
    skill_level_ = skill_level;
  } else {
    clear_has_skill_level();
    skill_level_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBGuildPlayer.skill_level)
}

// -------------------------------------------------------------------

// DBGuildApply

// required uint64 charid = 1;
inline bool DBGuildApply::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBGuildApply::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBGuildApply::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBGuildApply::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DBGuildApply::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildApply.charid)
  return charid_;
}
inline void DBGuildApply::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildApply.charid)
}

// repeated uint32 guildid = 2;
inline int DBGuildApply::guildid_size() const {
  return guildid_.size();
}
inline void DBGuildApply::clear_guildid() {
  guildid_.Clear();
}
inline ::google::protobuf::uint32 DBGuildApply::guildid(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildApply.guildid)
  return guildid_.Get(index);
}
inline void DBGuildApply::set_guildid(int index, ::google::protobuf::uint32 value) {
  guildid_.Set(index, value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildApply.guildid)
}
inline void DBGuildApply::add_guildid(::google::protobuf::uint32 value) {
  guildid_.Add(value);
  // @@protoc_insertion_point(field_add:TgsProtocol.DBGuildApply.guildid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DBGuildApply::guildid() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DBGuildApply.guildid)
  return guildid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DBGuildApply::mutable_guildid() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DBGuildApply.guildid)
  return &guildid_;
}

// -------------------------------------------------------------------

// DBGuildInfo

// required .TgsProtocol.GuildInfo info = 1;
inline bool DBGuildInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBGuildInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBGuildInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBGuildInfo::clear_info() {
  if (info_ != NULL) info_->::TgsProtocol::GuildInfo::Clear();
  clear_has_info();
}
inline const ::TgsProtocol::GuildInfo& DBGuildInfo::info() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildInfo.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::TgsProtocol::GuildInfo* DBGuildInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::TgsProtocol::GuildInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBGuildInfo.info)
  return info_;
}
inline ::TgsProtocol::GuildInfo* DBGuildInfo::release_info() {
  clear_has_info();
  ::TgsProtocol::GuildInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DBGuildInfo::set_allocated_info(::TgsProtocol::GuildInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBGuildInfo.info)
}

// optional bytes guild_map = 2;
inline bool DBGuildInfo::has_guild_map() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBGuildInfo::set_has_guild_map() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBGuildInfo::clear_has_guild_map() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBGuildInfo::clear_guild_map() {
  if (guild_map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_->clear();
  }
  clear_has_guild_map();
}
inline const ::std::string& DBGuildInfo::guild_map() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildInfo.guild_map)
  return *guild_map_;
}
inline void DBGuildInfo::set_guild_map(const ::std::string& value) {
  set_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_ = new ::std::string;
  }
  guild_map_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildInfo.guild_map)
}
inline void DBGuildInfo::set_guild_map(const char* value) {
  set_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_ = new ::std::string;
  }
  guild_map_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.DBGuildInfo.guild_map)
}
inline void DBGuildInfo::set_guild_map(const void* value, size_t size) {
  set_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_ = new ::std::string;
  }
  guild_map_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.DBGuildInfo.guild_map)
}
inline ::std::string* DBGuildInfo::mutable_guild_map() {
  set_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBGuildInfo.guild_map)
  return guild_map_;
}
inline ::std::string* DBGuildInfo::release_guild_map() {
  clear_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_map_;
    guild_map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBGuildInfo::set_allocated_guild_map(::std::string* guild_map) {
  if (guild_map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_map_;
  }
  if (guild_map) {
    set_has_guild_map();
    guild_map_ = guild_map;
  } else {
    clear_has_guild_map();
    guild_map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBGuildInfo.guild_map)
}

// optional uint32 passed_chapterid = 3;
inline bool DBGuildInfo::has_passed_chapterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBGuildInfo::set_has_passed_chapterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBGuildInfo::clear_has_passed_chapterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBGuildInfo::clear_passed_chapterid() {
  passed_chapterid_ = 0u;
  clear_has_passed_chapterid();
}
inline ::google::protobuf::uint32 DBGuildInfo::passed_chapterid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildInfo.passed_chapterid)
  return passed_chapterid_;
}
inline void DBGuildInfo::set_passed_chapterid(::google::protobuf::uint32 value) {
  set_has_passed_chapterid();
  passed_chapterid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DBGuildInfo.passed_chapterid)
}

// optional .TgsProtocol.GuildChapterInfo chapter = 4;
inline bool DBGuildInfo::has_chapter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBGuildInfo::set_has_chapter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBGuildInfo::clear_has_chapter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBGuildInfo::clear_chapter() {
  if (chapter_ != NULL) chapter_->::TgsProtocol::GuildChapterInfo::Clear();
  clear_has_chapter();
}
inline const ::TgsProtocol::GuildChapterInfo& DBGuildInfo::chapter() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DBGuildInfo.chapter)
  return chapter_ != NULL ? *chapter_ : *default_instance_->chapter_;
}
inline ::TgsProtocol::GuildChapterInfo* DBGuildInfo::mutable_chapter() {
  set_has_chapter();
  if (chapter_ == NULL) chapter_ = new ::TgsProtocol::GuildChapterInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DBGuildInfo.chapter)
  return chapter_;
}
inline ::TgsProtocol::GuildChapterInfo* DBGuildInfo::release_chapter() {
  clear_has_chapter();
  ::TgsProtocol::GuildChapterInfo* temp = chapter_;
  chapter_ = NULL;
  return temp;
}
inline void DBGuildInfo::set_allocated_chapter(::TgsProtocol::GuildChapterInfo* chapter) {
  delete chapter_;
  chapter_ = chapter;
  if (chapter) {
    set_has_chapter();
  } else {
    clear_has_chapter();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DBGuildInfo.chapter)
}

// -------------------------------------------------------------------

// LOBBY2DB_LoadGuild_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOADGUILD_REQ];
inline bool LOBBY2DB_LoadGuild_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_LoadGuild_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_LoadGuild_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_LoadGuild_Req::clear_cmdid() {
  cmdid_ = 350080;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_LoadGuild_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_LoadGuild_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_LoadGuild_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_LoadGuild_Req.cmdId)
}

// -------------------------------------------------------------------

// DB2LOBBY_GuildInfo_Ret

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GUILDINFO_RET];
inline bool DB2LOBBY_GuildInfo_Ret::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_GuildInfo_Ret::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_GuildInfo_Ret::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_GuildInfo_Ret::clear_cmdid() {
  cmdid_ = 350081;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_GuildInfo_Ret::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GuildInfo_Ret.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_GuildInfo_Ret::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GuildInfo_Ret.cmdId)
}

// repeated .TgsProtocol.DBGuildInfo item = 2;
inline int DB2LOBBY_GuildInfo_Ret::item_size() const {
  return item_.size();
}
inline void DB2LOBBY_GuildInfo_Ret::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::DBGuildInfo& DB2LOBBY_GuildInfo_Ret::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GuildInfo_Ret.item)
  return item_.Get(index);
}
inline ::TgsProtocol::DBGuildInfo* DB2LOBBY_GuildInfo_Ret::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_GuildInfo_Ret.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::DBGuildInfo* DB2LOBBY_GuildInfo_Ret::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_GuildInfo_Ret.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildInfo >&
DB2LOBBY_GuildInfo_Ret::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_GuildInfo_Ret.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildInfo >*
DB2LOBBY_GuildInfo_Ret::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_GuildInfo_Ret.item)
  return &item_;
}

// optional int32 ret = 3;
inline bool DB2LOBBY_GuildInfo_Ret::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_GuildInfo_Ret::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_GuildInfo_Ret::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_GuildInfo_Ret::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DB2LOBBY_GuildInfo_Ret::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GuildInfo_Ret.ret)
  return ret_;
}
inline void DB2LOBBY_GuildInfo_Ret::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GuildInfo_Ret.ret)
}

// -------------------------------------------------------------------

// DB2LOBBY_GuildPlayers_Ret

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GUILDPlAYERS_RET];
inline bool DB2LOBBY_GuildPlayers_Ret::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_GuildPlayers_Ret::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_GuildPlayers_Ret::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_GuildPlayers_Ret::clear_cmdid() {
  cmdid_ = 350082;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_GuildPlayers_Ret::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GuildPlayers_Ret.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_GuildPlayers_Ret::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GuildPlayers_Ret.cmdId)
}

// repeated .TgsProtocol.DBGuildPlayer item = 2;
inline int DB2LOBBY_GuildPlayers_Ret::item_size() const {
  return item_.size();
}
inline void DB2LOBBY_GuildPlayers_Ret::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::DBGuildPlayer& DB2LOBBY_GuildPlayers_Ret::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GuildPlayers_Ret.item)
  return item_.Get(index);
}
inline ::TgsProtocol::DBGuildPlayer* DB2LOBBY_GuildPlayers_Ret::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_GuildPlayers_Ret.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::DBGuildPlayer* DB2LOBBY_GuildPlayers_Ret::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_GuildPlayers_Ret.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer >&
DB2LOBBY_GuildPlayers_Ret::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_GuildPlayers_Ret.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer >*
DB2LOBBY_GuildPlayers_Ret::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_GuildPlayers_Ret.item)
  return &item_;
}

// optional int32 ret = 3;
inline bool DB2LOBBY_GuildPlayers_Ret::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_GuildPlayers_Ret::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_GuildPlayers_Ret::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_GuildPlayers_Ret::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DB2LOBBY_GuildPlayers_Ret::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GuildPlayers_Ret.ret)
  return ret_;
}
inline void DB2LOBBY_GuildPlayers_Ret::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GuildPlayers_Ret.ret)
}

// -------------------------------------------------------------------

// DB2LOBBY_GuildApplys_Ret

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_GUILDAPPLYS_RET];
inline bool DB2LOBBY_GuildApplys_Ret::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBY_GuildApplys_Ret::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBY_GuildApplys_Ret::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBY_GuildApplys_Ret::clear_cmdid() {
  cmdid_ = 350083;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBY_GuildApplys_Ret::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GuildApplys_Ret.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBY_GuildApplys_Ret::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GuildApplys_Ret.cmdId)
}

// repeated .TgsProtocol.DBGuildApply item = 2;
inline int DB2LOBBY_GuildApplys_Ret::item_size() const {
  return item_.size();
}
inline void DB2LOBBY_GuildApplys_Ret::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::DBGuildApply& DB2LOBBY_GuildApplys_Ret::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GuildApplys_Ret.item)
  return item_.Get(index);
}
inline ::TgsProtocol::DBGuildApply* DB2LOBBY_GuildApplys_Ret::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBY_GuildApplys_Ret.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::DBGuildApply* DB2LOBBY_GuildApplys_Ret::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBY_GuildApplys_Ret.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply >&
DB2LOBBY_GuildApplys_Ret::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBY_GuildApplys_Ret.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply >*
DB2LOBBY_GuildApplys_Ret::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBY_GuildApplys_Ret.item)
  return &item_;
}

// optional int32 ret = 3;
inline bool DB2LOBBY_GuildApplys_Ret::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBY_GuildApplys_Ret::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBY_GuildApplys_Ret::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBY_GuildApplys_Ret::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DB2LOBBY_GuildApplys_Ret::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBY_GuildApplys_Ret.ret)
  return ret_;
}
inline void DB2LOBBY_GuildApplys_Ret::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBY_GuildApplys_Ret.ret)
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateGuildInfo_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDINFO_REQ];
inline bool LOBBY2DB_UpdateGuildInfo_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_cmdid() {
  cmdid_ = 350085;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateGuildInfo_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.cmdId)
}

// required uint32 type = 2;
inline bool LOBBY2DB_UpdateGuildInfo_Req::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateGuildInfo_Req::type() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.type)
  return type_;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.type)
}

// required uint32 guild_id = 3;
inline bool LOBBY2DB_UpdateGuildInfo_Req::has_guild_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_has_guild_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateGuildInfo_Req::guild_id() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.guild_id)
  return guild_id_;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.guild_id)
}

// optional .TgsProtocol.GuildInfo item = 4;
inline bool LOBBY2DB_UpdateGuildInfo_Req::has_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_has_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_has_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_item() {
  if (item_ != NULL) item_->::TgsProtocol::GuildInfo::Clear();
  clear_has_item();
}
inline const ::TgsProtocol::GuildInfo& LOBBY2DB_UpdateGuildInfo_Req::item() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::TgsProtocol::GuildInfo* LOBBY2DB_UpdateGuildInfo_Req::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::TgsProtocol::GuildInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.item)
  return item_;
}
inline ::TgsProtocol::GuildInfo* LOBBY2DB_UpdateGuildInfo_Req::release_item() {
  clear_has_item();
  ::TgsProtocol::GuildInfo* temp = item_;
  item_ = NULL;
  return temp;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_allocated_item(::TgsProtocol::GuildInfo* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.item)
}

// optional bytes guild_map = 5;
inline bool LOBBY2DB_UpdateGuildInfo_Req::has_guild_map() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_has_guild_map() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_has_guild_map() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_guild_map() {
  if (guild_map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_->clear();
  }
  clear_has_guild_map();
}
inline const ::std::string& LOBBY2DB_UpdateGuildInfo_Req::guild_map() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.guild_map)
  return *guild_map_;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_guild_map(const ::std::string& value) {
  set_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_ = new ::std::string;
  }
  guild_map_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.guild_map)
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_guild_map(const char* value) {
  set_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_ = new ::std::string;
  }
  guild_map_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.guild_map)
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_guild_map(const void* value, size_t size) {
  set_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_ = new ::std::string;
  }
  guild_map_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.guild_map)
}
inline ::std::string* LOBBY2DB_UpdateGuildInfo_Req::mutable_guild_map() {
  set_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_map_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.guild_map)
  return guild_map_;
}
inline ::std::string* LOBBY2DB_UpdateGuildInfo_Req::release_guild_map() {
  clear_has_guild_map();
  if (guild_map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_map_;
    guild_map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_allocated_guild_map(::std::string* guild_map) {
  if (guild_map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_map_;
  }
  if (guild_map) {
    set_has_guild_map();
    guild_map_ = guild_map;
  } else {
    clear_has_guild_map();
    guild_map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.guild_map)
}

// optional uint32 passed_chapterid = 6;
inline bool LOBBY2DB_UpdateGuildInfo_Req::has_passed_chapterid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_has_passed_chapterid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_has_passed_chapterid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_passed_chapterid() {
  passed_chapterid_ = 0u;
  clear_has_passed_chapterid();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateGuildInfo_Req::passed_chapterid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.passed_chapterid)
  return passed_chapterid_;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_passed_chapterid(::google::protobuf::uint32 value) {
  set_has_passed_chapterid();
  passed_chapterid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.passed_chapterid)
}

// optional .TgsProtocol.GuildChapterInfo chapter = 7;
inline bool LOBBY2DB_UpdateGuildInfo_Req::has_chapter() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_has_chapter() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_has_chapter() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::clear_chapter() {
  if (chapter_ != NULL) chapter_->::TgsProtocol::GuildChapterInfo::Clear();
  clear_has_chapter();
}
inline const ::TgsProtocol::GuildChapterInfo& LOBBY2DB_UpdateGuildInfo_Req::chapter() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.chapter)
  return chapter_ != NULL ? *chapter_ : *default_instance_->chapter_;
}
inline ::TgsProtocol::GuildChapterInfo* LOBBY2DB_UpdateGuildInfo_Req::mutable_chapter() {
  set_has_chapter();
  if (chapter_ == NULL) chapter_ = new ::TgsProtocol::GuildChapterInfo;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.chapter)
  return chapter_;
}
inline ::TgsProtocol::GuildChapterInfo* LOBBY2DB_UpdateGuildInfo_Req::release_chapter() {
  clear_has_chapter();
  ::TgsProtocol::GuildChapterInfo* temp = chapter_;
  chapter_ = NULL;
  return temp;
}
inline void LOBBY2DB_UpdateGuildInfo_Req::set_allocated_chapter(::TgsProtocol::GuildChapterInfo* chapter) {
  delete chapter_;
  chapter_ = chapter;
  if (chapter) {
    set_has_chapter();
  } else {
    clear_has_chapter();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateGuildInfo_Req.chapter)
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateGuildPlayer_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDPLAYER_REQ];
inline bool LOBBY2DB_UpdateGuildPlayer_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::clear_cmdid() {
  cmdid_ = 350086;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateGuildPlayer_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.cmdId)
}

// repeated .TgsProtocol.DBGuildPlayer item = 2;
inline int LOBBY2DB_UpdateGuildPlayer_Req::item_size() const {
  return item_.size();
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::DBGuildPlayer& LOBBY2DB_UpdateGuildPlayer_Req::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.item)
  return item_.Get(index);
}
inline ::TgsProtocol::DBGuildPlayer* LOBBY2DB_UpdateGuildPlayer_Req::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::DBGuildPlayer* LOBBY2DB_UpdateGuildPlayer_Req::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer >&
LOBBY2DB_UpdateGuildPlayer_Req::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildPlayer >*
LOBBY2DB_UpdateGuildPlayer_Req::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.item)
  return &item_;
}

// optional bytes territory = 3;
inline bool LOBBY2DB_UpdateGuildPlayer_Req::has_territory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::set_has_territory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::clear_has_territory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::clear_territory() {
  if (territory_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_->clear();
  }
  clear_has_territory();
}
inline const ::std::string& LOBBY2DB_UpdateGuildPlayer_Req::territory() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.territory)
  return *territory_;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::set_territory(const ::std::string& value) {
  set_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_ = new ::std::string;
  }
  territory_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.territory)
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::set_territory(const char* value) {
  set_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_ = new ::std::string;
  }
  territory_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.territory)
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::set_territory(const void* value, size_t size) {
  set_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_ = new ::std::string;
  }
  territory_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.territory)
}
inline ::std::string* LOBBY2DB_UpdateGuildPlayer_Req::mutable_territory() {
  set_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    territory_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.territory)
  return territory_;
}
inline ::std::string* LOBBY2DB_UpdateGuildPlayer_Req::release_territory() {
  clear_has_territory();
  if (territory_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = territory_;
    territory_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::set_allocated_territory(::std::string* territory) {
  if (territory_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete territory_;
  }
  if (territory) {
    set_has_territory();
    territory_ = territory;
  } else {
    clear_has_territory();
    territory_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.territory)
}

// optional uint64 territory_charid = 4;
inline bool LOBBY2DB_UpdateGuildPlayer_Req::has_territory_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::set_has_territory_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::clear_has_territory_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::clear_territory_charid() {
  territory_charid_ = GOOGLE_ULONGLONG(0);
  clear_has_territory_charid();
}
inline ::google::protobuf::uint64 LOBBY2DB_UpdateGuildPlayer_Req::territory_charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.territory_charid)
  return territory_charid_;
}
inline void LOBBY2DB_UpdateGuildPlayer_Req::set_territory_charid(::google::protobuf::uint64 value) {
  set_has_territory_charid();
  territory_charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildPlayer_Req.territory_charid)
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateGuildApply_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDAPPLY_REQ];
inline bool LOBBY2DB_UpdateGuildApply_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateGuildApply_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateGuildApply_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateGuildApply_Req::clear_cmdid() {
  cmdid_ = 350087;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateGuildApply_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildApply_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateGuildApply_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildApply_Req.cmdId)
}

// repeated .TgsProtocol.DBGuildApply item = 2;
inline int LOBBY2DB_UpdateGuildApply_Req::item_size() const {
  return item_.size();
}
inline void LOBBY2DB_UpdateGuildApply_Req::clear_item() {
  item_.Clear();
}
inline const ::TgsProtocol::DBGuildApply& LOBBY2DB_UpdateGuildApply_Req::item(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildApply_Req.item)
  return item_.Get(index);
}
inline ::TgsProtocol::DBGuildApply* LOBBY2DB_UpdateGuildApply_Req::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DB_UpdateGuildApply_Req.item)
  return item_.Mutable(index);
}
inline ::TgsProtocol::DBGuildApply* LOBBY2DB_UpdateGuildApply_Req::add_item() {
  // @@protoc_insertion_point(field_add:TgsProtocol.LOBBY2DB_UpdateGuildApply_Req.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply >&
LOBBY2DB_UpdateGuildApply_Req::item() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.LOBBY2DB_UpdateGuildApply_Req.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DBGuildApply >*
LOBBY2DB_UpdateGuildApply_Req::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.LOBBY2DB_UpdateGuildApply_Req.item)
  return &item_;
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateGuildRitual_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDRITUAL_REQ];
inline bool LOBBY2DB_UpdateGuildRitual_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::clear_cmdid() {
  cmdid_ = 350088;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateGuildRitual_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildRitual_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateGuildRitual_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildRitual_Req.cmdId)
}

// required uint32 guildid = 2;
inline bool LOBBY2DB_UpdateGuildRitual_Req::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::clear_guildid() {
  guildid_ = 0u;
  clear_has_guildid();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateGuildRitual_Req::guildid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildRitual_Req.guildid)
  return guildid_;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::set_guildid(::google::protobuf::uint32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildRitual_Req.guildid)
}

// required uint32 rate = 3;
inline bool LOBBY2DB_UpdateGuildRitual_Req::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 LOBBY2DB_UpdateGuildRitual_Req::rate() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildRitual_Req.rate)
  return rate_;
}
inline void LOBBY2DB_UpdateGuildRitual_Req::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildRitual_Req.rate)
}

// -------------------------------------------------------------------

// LOBBY2DB_UpdateGuildNewDay_Req

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_UPDATEGUILDNEWDAY_REQ];
inline bool LOBBY2DB_UpdateGuildNewDay_Req::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DB_UpdateGuildNewDay_Req::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DB_UpdateGuildNewDay_Req::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DB_UpdateGuildNewDay_Req::clear_cmdid() {
  cmdid_ = 350089;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DB_UpdateGuildNewDay_Req::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DB_UpdateGuildNewDay_Req.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DB_UpdateGuildNewDay_Req::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DB_UpdateGuildNewDay_Req.cmdId)
}

// -------------------------------------------------------------------

// LOBBY2DBLoadTreasureReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_TREASURE_REQ];
inline bool LOBBY2DBLoadTreasureReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DBLoadTreasureReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DBLoadTreasureReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DBLoadTreasureReq::clear_cmdid() {
  cmdid_ = 360004;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DBLoadTreasureReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBLoadTreasureReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DBLoadTreasureReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBLoadTreasureReq.cmdId)
}

// required uint32 level = 2;
inline bool LOBBY2DBLoadTreasureReq::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DBLoadTreasureReq::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DBLoadTreasureReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DBLoadTreasureReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LOBBY2DBLoadTreasureReq::level() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBLoadTreasureReq.level)
  return level_;
}
inline void LOBBY2DBLoadTreasureReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBLoadTreasureReq.level)
}

// -------------------------------------------------------------------

// DB2LOBBYLoadTreasureRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_TREASURE_RET];
inline bool DB2LOBBYLoadTreasureRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBYLoadTreasureRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBYLoadTreasureRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBYLoadTreasureRet::clear_cmdid() {
  cmdid_ = 360005;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBYLoadTreasureRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadTreasureRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBYLoadTreasureRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadTreasureRet.cmdId)
}

// repeated .TgsProtocol.DbTreasureInfo player = 2;
inline int DB2LOBBYLoadTreasureRet::player_size() const {
  return player_.size();
}
inline void DB2LOBBYLoadTreasureRet::clear_player() {
  player_.Clear();
}
inline const ::TgsProtocol::DbTreasureInfo& DB2LOBBYLoadTreasureRet::player(int index) const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadTreasureRet.player)
  return player_.Get(index);
}
inline ::TgsProtocol::DbTreasureInfo* DB2LOBBYLoadTreasureRet::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadTreasureRet.player)
  return player_.Mutable(index);
}
inline ::TgsProtocol::DbTreasureInfo* DB2LOBBYLoadTreasureRet::add_player() {
  // @@protoc_insertion_point(field_add:TgsProtocol.DB2LOBBYLoadTreasureRet.player)
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbTreasureInfo >&
DB2LOBBYLoadTreasureRet::player() const {
  // @@protoc_insertion_point(field_list:TgsProtocol.DB2LOBBYLoadTreasureRet.player)
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::TgsProtocol::DbTreasureInfo >*
DB2LOBBYLoadTreasureRet::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:TgsProtocol.DB2LOBBYLoadTreasureRet.player)
  return &player_;
}

// optional uint32 ret = 3;
inline bool DB2LOBBYLoadTreasureRet::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBYLoadTreasureRet::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBYLoadTreasureRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBYLoadTreasureRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadTreasureRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadTreasureRet.ret)
  return ret_;
}
inline void DB2LOBBYLoadTreasureRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadTreasureRet.ret)
}

// -------------------------------------------------------------------

// LOBBY2DBLoadRobotReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_LOAD_ROBOT_REQ];
inline bool LOBBY2DBLoadRobotReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DBLoadRobotReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DBLoadRobotReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DBLoadRobotReq::clear_cmdid() {
  cmdid_ = 350092;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DBLoadRobotReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBLoadRobotReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DBLoadRobotReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBLoadRobotReq.cmdId)
}

// required uint64 CharId = 2;
inline bool LOBBY2DBLoadRobotReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DBLoadRobotReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DBLoadRobotReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DBLoadRobotReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DBLoadRobotReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBLoadRobotReq.CharId)
  return charid_;
}
inline void LOBBY2DBLoadRobotReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBLoadRobotReq.CharId)
}

// -------------------------------------------------------------------

// DB2LOBBYLoadRobotRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_LOAD_ROBOT_RET];
inline bool DB2LOBBYLoadRobotRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBYLoadRobotRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBYLoadRobotRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBYLoadRobotRet::clear_cmdid() {
  cmdid_ = 350093;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBYLoadRobotRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadRobotRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBYLoadRobotRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadRobotRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBYLoadRobotRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBYLoadRobotRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBYLoadRobotRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBYLoadRobotRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadRobotRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadRobotRet.ret)
  return ret_;
}
inline void DB2LOBBYLoadRobotRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadRobotRet.ret)
}

// required uint64 charId = 3;
inline bool DB2LOBBYLoadRobotRet::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBYLoadRobotRet::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBYLoadRobotRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBYLoadRobotRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBYLoadRobotRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadRobotRet.charId)
  return charid_;
}
inline void DB2LOBBYLoadRobotRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadRobotRet.charId)
}

// required .TgsProtocol.DB2LOBBY_LoadCharRet charInfo = 4;
inline bool DB2LOBBYLoadRobotRet::has_charinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBYLoadRobotRet::set_has_charinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBYLoadRobotRet::clear_has_charinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBYLoadRobotRet::clear_charinfo() {
  if (charinfo_ != NULL) charinfo_->::TgsProtocol::DB2LOBBY_LoadCharRet::Clear();
  clear_has_charinfo();
}
inline const ::TgsProtocol::DB2LOBBY_LoadCharRet& DB2LOBBYLoadRobotRet::charinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadRobotRet.charInfo)
  return charinfo_ != NULL ? *charinfo_ : *default_instance_->charinfo_;
}
inline ::TgsProtocol::DB2LOBBY_LoadCharRet* DB2LOBBYLoadRobotRet::mutable_charinfo() {
  set_has_charinfo();
  if (charinfo_ == NULL) charinfo_ = new ::TgsProtocol::DB2LOBBY_LoadCharRet;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.DB2LOBBYLoadRobotRet.charInfo)
  return charinfo_;
}
inline ::TgsProtocol::DB2LOBBY_LoadCharRet* DB2LOBBYLoadRobotRet::release_charinfo() {
  clear_has_charinfo();
  ::TgsProtocol::DB2LOBBY_LoadCharRet* temp = charinfo_;
  charinfo_ = NULL;
  return temp;
}
inline void DB2LOBBYLoadRobotRet::set_allocated_charinfo(::TgsProtocol::DB2LOBBY_LoadCharRet* charinfo) {
  delete charinfo_;
  charinfo_ = charinfo;
  if (charinfo) {
    set_has_charinfo();
  } else {
    clear_has_charinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.DB2LOBBYLoadRobotRet.charInfo)
}

// required uint32 index = 5;
inline bool DB2LOBBYLoadRobotRet::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBYLoadRobotRet::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBYLoadRobotRet::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBYLoadRobotRet::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadRobotRet::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadRobotRet.index)
  return index_;
}
inline void DB2LOBBYLoadRobotRet::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadRobotRet.index)
}

// required uint64 ownerId = 6;
inline bool DB2LOBBYLoadRobotRet::has_ownerid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DB2LOBBYLoadRobotRet::set_has_ownerid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DB2LOBBYLoadRobotRet::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DB2LOBBYLoadRobotRet::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 DB2LOBBYLoadRobotRet::ownerid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadRobotRet.ownerId)
  return ownerid_;
}
inline void DB2LOBBYLoadRobotRet::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadRobotRet.ownerId)
}

// required uint32 growupIndex = 7;
inline bool DB2LOBBYLoadRobotRet::has_growupindex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DB2LOBBYLoadRobotRet::set_has_growupindex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DB2LOBBYLoadRobotRet::clear_has_growupindex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DB2LOBBYLoadRobotRet::clear_growupindex() {
  growupindex_ = 0u;
  clear_has_growupindex();
}
inline ::google::protobuf::uint32 DB2LOBBYLoadRobotRet::growupindex() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYLoadRobotRet.growupIndex)
  return growupindex_;
}
inline void DB2LOBBYLoadRobotRet::set_growupindex(::google::protobuf::uint32 value) {
  set_has_growupindex();
  growupindex_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYLoadRobotRet.growupIndex)
}

// -------------------------------------------------------------------

// LOBBY2DBCreateRobotReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_CREATE_ROBOT_REQ];
inline bool LOBBY2DBCreateRobotReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DBCreateRobotReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DBCreateRobotReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DBCreateRobotReq::clear_cmdid() {
  cmdid_ = 350094;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DBCreateRobotReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBCreateRobotReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DBCreateRobotReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBCreateRobotReq.cmdId)
}

// required uint64 charid = 2;
inline bool LOBBY2DBCreateRobotReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DBCreateRobotReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DBCreateRobotReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DBCreateRobotReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DBCreateRobotReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBCreateRobotReq.charid)
  return charid_;
}
inline void LOBBY2DBCreateRobotReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBCreateRobotReq.charid)
}

// required string charName = 3;
inline bool LOBBY2DBCreateRobotReq::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DBCreateRobotReq::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DBCreateRobotReq::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DBCreateRobotReq::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& LOBBY2DBCreateRobotReq::charname() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBCreateRobotReq.charName)
  return *charname_;
}
inline void LOBBY2DBCreateRobotReq::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBCreateRobotReq.charName)
}
inline void LOBBY2DBCreateRobotReq::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TgsProtocol.LOBBY2DBCreateRobotReq.charName)
}
inline void LOBBY2DBCreateRobotReq::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TgsProtocol.LOBBY2DBCreateRobotReq.charName)
}
inline ::std::string* LOBBY2DBCreateRobotReq::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DBCreateRobotReq.charName)
  return charname_;
}
inline ::std::string* LOBBY2DBCreateRobotReq::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOBBY2DBCreateRobotReq::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DBCreateRobotReq.charName)
}

// required uint32 index = 4;
inline bool LOBBY2DBCreateRobotReq::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DBCreateRobotReq::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DBCreateRobotReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DBCreateRobotReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 LOBBY2DBCreateRobotReq::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBCreateRobotReq.index)
  return index_;
}
inline void LOBBY2DBCreateRobotReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBCreateRobotReq.index)
}

// required uint64 ownerId = 5;
inline bool LOBBY2DBCreateRobotReq::has_ownerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DBCreateRobotReq::set_has_ownerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DBCreateRobotReq::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DBCreateRobotReq::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 LOBBY2DBCreateRobotReq::ownerid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBCreateRobotReq.ownerId)
  return ownerid_;
}
inline void LOBBY2DBCreateRobotReq::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBCreateRobotReq.ownerId)
}

// -------------------------------------------------------------------

// DB2LOBBYCreateRobotRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_CREATE_ROBOT_RET];
inline bool DB2LOBBYCreateRobotRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBYCreateRobotRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBYCreateRobotRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBYCreateRobotRet::clear_cmdid() {
  cmdid_ = 350095;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBYCreateRobotRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYCreateRobotRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBYCreateRobotRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYCreateRobotRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBYCreateRobotRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBYCreateRobotRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBYCreateRobotRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBYCreateRobotRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBYCreateRobotRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYCreateRobotRet.ret)
  return ret_;
}
inline void DB2LOBBYCreateRobotRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYCreateRobotRet.ret)
}

// required uint64 charid = 3;
inline bool DB2LOBBYCreateRobotRet::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBYCreateRobotRet::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBYCreateRobotRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBYCreateRobotRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBYCreateRobotRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYCreateRobotRet.charid)
  return charid_;
}
inline void DB2LOBBYCreateRobotRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYCreateRobotRet.charid)
}

// required uint32 index = 4;
inline bool DB2LOBBYCreateRobotRet::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DB2LOBBYCreateRobotRet::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DB2LOBBYCreateRobotRet::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DB2LOBBYCreateRobotRet::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 DB2LOBBYCreateRobotRet::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYCreateRobotRet.index)
  return index_;
}
inline void DB2LOBBYCreateRobotRet::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYCreateRobotRet.index)
}

// required uint64 ownerId = 5;
inline bool DB2LOBBYCreateRobotRet::has_ownerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DB2LOBBYCreateRobotRet::set_has_ownerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DB2LOBBYCreateRobotRet::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DB2LOBBYCreateRobotRet::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 DB2LOBBYCreateRobotRet::ownerid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYCreateRobotRet.ownerId)
  return ownerid_;
}
inline void DB2LOBBYCreateRobotRet::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYCreateRobotRet.ownerId)
}

// -------------------------------------------------------------------

// LOBBY2DBSaveRobotReq

// optional .TgsProtocol.PacketDef cmdId = 1 [default = LOBBY2DB_SAVE_ROBOT_REQ];
inline bool LOBBY2DBSaveRobotReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOBBY2DBSaveRobotReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOBBY2DBSaveRobotReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOBBY2DBSaveRobotReq::clear_cmdid() {
  cmdid_ = 350096;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef LOBBY2DBSaveRobotReq::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBSaveRobotReq.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void LOBBY2DBSaveRobotReq::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBSaveRobotReq.cmdId)
}

// required uint64 CharId = 2;
inline bool LOBBY2DBSaveRobotReq::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOBBY2DBSaveRobotReq::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOBBY2DBSaveRobotReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOBBY2DBSaveRobotReq::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LOBBY2DBSaveRobotReq::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBSaveRobotReq.CharId)
  return charid_;
}
inline void LOBBY2DBSaveRobotReq::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBSaveRobotReq.CharId)
}

// required .TgsProtocol.LOBBY2DB_SaveCharReq charInfo = 3;
inline bool LOBBY2DBSaveRobotReq::has_charinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOBBY2DBSaveRobotReq::set_has_charinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOBBY2DBSaveRobotReq::clear_has_charinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOBBY2DBSaveRobotReq::clear_charinfo() {
  if (charinfo_ != NULL) charinfo_->::TgsProtocol::LOBBY2DB_SaveCharReq::Clear();
  clear_has_charinfo();
}
inline const ::TgsProtocol::LOBBY2DB_SaveCharReq& LOBBY2DBSaveRobotReq::charinfo() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBSaveRobotReq.charInfo)
  return charinfo_ != NULL ? *charinfo_ : *default_instance_->charinfo_;
}
inline ::TgsProtocol::LOBBY2DB_SaveCharReq* LOBBY2DBSaveRobotReq::mutable_charinfo() {
  set_has_charinfo();
  if (charinfo_ == NULL) charinfo_ = new ::TgsProtocol::LOBBY2DB_SaveCharReq;
  // @@protoc_insertion_point(field_mutable:TgsProtocol.LOBBY2DBSaveRobotReq.charInfo)
  return charinfo_;
}
inline ::TgsProtocol::LOBBY2DB_SaveCharReq* LOBBY2DBSaveRobotReq::release_charinfo() {
  clear_has_charinfo();
  ::TgsProtocol::LOBBY2DB_SaveCharReq* temp = charinfo_;
  charinfo_ = NULL;
  return temp;
}
inline void LOBBY2DBSaveRobotReq::set_allocated_charinfo(::TgsProtocol::LOBBY2DB_SaveCharReq* charinfo) {
  delete charinfo_;
  charinfo_ = charinfo;
  if (charinfo) {
    set_has_charinfo();
  } else {
    clear_has_charinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:TgsProtocol.LOBBY2DBSaveRobotReq.charInfo)
}

// required uint32 index = 4;
inline bool LOBBY2DBSaveRobotReq::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOBBY2DBSaveRobotReq::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOBBY2DBSaveRobotReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOBBY2DBSaveRobotReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 LOBBY2DBSaveRobotReq::index() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBSaveRobotReq.index)
  return index_;
}
inline void LOBBY2DBSaveRobotReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBSaveRobotReq.index)
}

// required uint64 ownerId = 5;
inline bool LOBBY2DBSaveRobotReq::has_ownerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOBBY2DBSaveRobotReq::set_has_ownerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOBBY2DBSaveRobotReq::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOBBY2DBSaveRobotReq::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::uint64 LOBBY2DBSaveRobotReq::ownerid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBSaveRobotReq.ownerId)
  return ownerid_;
}
inline void LOBBY2DBSaveRobotReq::set_ownerid(::google::protobuf::uint64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBSaveRobotReq.ownerId)
}

// required uint32 growupIndex = 6;
inline bool LOBBY2DBSaveRobotReq::has_growupindex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LOBBY2DBSaveRobotReq::set_has_growupindex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LOBBY2DBSaveRobotReq::clear_has_growupindex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LOBBY2DBSaveRobotReq::clear_growupindex() {
  growupindex_ = 0u;
  clear_has_growupindex();
}
inline ::google::protobuf::uint32 LOBBY2DBSaveRobotReq::growupindex() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.LOBBY2DBSaveRobotReq.growupIndex)
  return growupindex_;
}
inline void LOBBY2DBSaveRobotReq::set_growupindex(::google::protobuf::uint32 value) {
  set_has_growupindex();
  growupindex_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.LOBBY2DBSaveRobotReq.growupIndex)
}

// -------------------------------------------------------------------

// DB2LOBBYSaveRobotRet

// optional .TgsProtocol.PacketDef cmdId = 1 [default = DB2LOBBY_SAVE_ROBOT_RET];
inline bool DB2LOBBYSaveRobotRet::has_cmdid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DB2LOBBYSaveRobotRet::set_has_cmdid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DB2LOBBYSaveRobotRet::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DB2LOBBYSaveRobotRet::clear_cmdid() {
  cmdid_ = 350097;
  clear_has_cmdid();
}
inline ::TgsProtocol::PacketDef DB2LOBBYSaveRobotRet::cmdid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYSaveRobotRet.cmdId)
  return static_cast< ::TgsProtocol::PacketDef >(cmdid_);
}
inline void DB2LOBBYSaveRobotRet::set_cmdid(::TgsProtocol::PacketDef value) {
  assert(::TgsProtocol::PacketDef_IsValid(value));
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYSaveRobotRet.cmdId)
}

// required uint32 ret = 2;
inline bool DB2LOBBYSaveRobotRet::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DB2LOBBYSaveRobotRet::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DB2LOBBYSaveRobotRet::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DB2LOBBYSaveRobotRet::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 DB2LOBBYSaveRobotRet::ret() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYSaveRobotRet.ret)
  return ret_;
}
inline void DB2LOBBYSaveRobotRet::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYSaveRobotRet.ret)
}

// required uint64 charId = 3;
inline bool DB2LOBBYSaveRobotRet::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DB2LOBBYSaveRobotRet::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DB2LOBBYSaveRobotRet::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DB2LOBBYSaveRobotRet::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 DB2LOBBYSaveRobotRet::charid() const {
  // @@protoc_insertion_point(field_get:TgsProtocol.DB2LOBBYSaveRobotRet.charId)
  return charid_;
}
inline void DB2LOBBYSaveRobotRet::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:TgsProtocol.DB2LOBBYSaveRobotRet.charId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace TgsProtocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_5flobby_5fdb_2eproto__INCLUDED
